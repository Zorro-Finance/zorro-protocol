{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCbf819bAade4a424CCB336467B51993944b177D4",
    "txHash": "0x8ec023115acca81383b1f2e13b716d2b5bf8a64fa16d1fc001b802df17715ea8"
  },
  "proxies": [
    {
      "address": "0xB60f75D3f1F75ed12c8Ad0CAB9c9bdF6DF1FAaaD",
      "txHash": "0x2c79603c0f4c2abbc447852fc7b820f7d5604aafdf12c613c2e26e13d2337a2c",
      "kind": "transparent"
    },
    {
      "address": "0x1259C1e7F881B57bc0a182d04DcF840004a6A4F4",
      "txHash": "0x36937a595d6d1fc79b529a7e191daa9bc69f0befe24757c876d79b9181e5d2bc",
      "kind": "transparent"
    },
    {
      "address": "0x1e0b1980375176DcF364D49cf923deF3dD134D26",
      "txHash": "0x7c31b67537f4a3e078f39506cbc5a42fb55321f760f9a60747875349e4d1827b",
      "kind": "transparent"
    },
    {
      "address": "0xDBf2001b13B7e73e573de9ACD916b7b51D05DB72",
      "txHash": "0xe76cff37054cf9b1be11a1eaddfdfc66e0e7183a47c834588dff4db9ac02a729",
      "kind": "transparent"
    },
    {
      "address": "0x8085dE7fBa8D0ec75E19031E08cAc0A07E039FdD",
      "txHash": "0x09e99365701303672f1e1f179211183a1baa7cffd50d1634f6be0294acb669c5",
      "kind": "transparent"
    },
    {
      "address": "0x8Dd99F322425eF4B9E689E5101A64b7Ac1f3ec2c",
      "txHash": "0xbbcfcd9ce34d3ab728cb58377a5a51f5cadab71e84d04fd71f44d926fa1f4638",
      "kind": "transparent"
    },
    {
      "address": "0xA7f67d2f07068F622b40F8E2319F060de1c8aF7d",
      "txHash": "0x41b668bb239f8c2643ca1daa99532cea961ee5d2cf01bf1e16ad8e21bf6451f0",
      "kind": "transparent"
    },
    {
      "address": "0x2a9621e67E145ab6d2606C881152BCD71d490895",
      "txHash": "0xe4986851a2ed1a11e236753741ef01bfd463aa6263148dce830b8548f1b089b1",
      "kind": "transparent"
    },
    {
      "address": "0x05e4Ea96253C9d0B8aaA74Cc624E11232fCfD703",
      "txHash": "0xbec587732e0661d199715cad30a0920b28f465951f56343ca04846e4d6944255",
      "kind": "transparent"
    },
    {
      "address": "0x1cd2dC3eb3E9a1D00a7D3ca584a2Ce95F772894B",
      "txHash": "0x9ff723444e59e924fbb74a0a3f0ff9147f05668717c144abf5afae32f18ac93c",
      "kind": "transparent"
    },
    {
      "address": "0xf2106cc520b7E47CAD3622Af24Aa928692a44B5C",
      "txHash": "0x293cf455b69ff371cee29706284db322ef161a784efc1a6eb1169f13d393faac",
      "kind": "transparent"
    },
    {
      "address": "0xD632b8FBaE6BB48bC9b3e4541A13a6ea13199bB1",
      "txHash": "0xe4e321ee01b9e65453bff825f049bce65ba4b46ad5822c3c04274ae79b1bd095",
      "kind": "transparent"
    },
    {
      "address": "0xebB58D72b3f8b5e3A3C23492D85E3CD35c78c320",
      "txHash": "0x6789a6a64eee8a06a46b12201003c334285dae8eb24cfc5cdf74cf013b8e2533",
      "kind": "transparent"
    },
    {
      "address": "0x9252d66d09D5260d841124b077DeC229e4031B03",
      "txHash": "0xe274200cde3a9bd2b8556b6a9ef225b1038f5b8fc580b4b903cbad3b2b273a0f",
      "kind": "transparent"
    },
    {
      "address": "0x373045F06FD92B0f2b346C6Cc1D5c712001bABA6",
      "txHash": "0x2308aac2d6ad070b19ec71240c7a1d6202c7bc2f395f5cb92eb0c6fa18543439",
      "kind": "transparent"
    },
    {
      "address": "0x0f88264dd8f93aD776775254aeB41525FdF4EA73",
      "txHash": "0x27fae7704b395e6015ac5f21e74504be94266ef37647bd783f2a1b660a154504",
      "kind": "transparent"
    },
    {
      "address": "0xaB94f21F7271D36dCBaB5041fA20743eef8ef885",
      "txHash": "0x76827ee79001200ef7bc8bbefec7659782c630d9ac8c14b0696bc058ab8e4159",
      "kind": "transparent"
    },
    {
      "address": "0x375DfBeF5a37Cce98626bDdeC6d18449a2851303",
      "txHash": "0x2dfbede43257bc3e4bc1f402d3ed1f609e91a3481218fa3176e4cf405e36a3a3",
      "kind": "transparent"
    },
    {
      "address": "0xd148fbB38EB8e4B45a6FF21Dd87a38966cF89694",
      "txHash": "0xb896eb058db7dcc69b77d79bc6c980cbb97ac2995807954ab592d034943eb03b",
      "kind": "transparent"
    },
    {
      "address": "0x953de9DF1085094C29956Bd73911843ab39e192C",
      "txHash": "0x469e1dc9865f3dedc8455bcd3d76cefed5eff3d6fc0e8a4fdb02391a90205676",
      "kind": "transparent"
    },
    {
      "address": "0x6449A37d6e00b4b14303a6D1f560f8A2096E1388",
      "txHash": "0x8beae21292d87f6d76a0bc9fdcaee9bd0e063c7c60dbcb3670268b60622449da",
      "kind": "transparent"
    },
    {
      "address": "0x9bEA004d96735C110c4c19e8c1D4E0237BA9808b",
      "txHash": "0xbaeb203b6e0defe21f0447c4d6cd7499740d0fef69b9a436aeb2fba787f59ea8",
      "kind": "transparent"
    },
    {
      "address": "0xc893167e8595EBDC0D8e59faf1da75821E5716Bb",
      "txHash": "0x500297597320f7b487f6203667551298ea0c992cce7d2169d8d3758c7c9c59b0",
      "kind": "transparent"
    },
    {
      "address": "0x62d0fB2bBD1C4874E70dc9CFBC10E9c4D4251888",
      "txHash": "0x0c1531b0d40321c79b618bdc1389da713767ddeba138f71e3cc752e270611026",
      "kind": "transparent"
    },
    {
      "address": "0x4050e32aAB152bB813C2d98660C55fC39ffcc05f",
      "txHash": "0x93133f1f02482964d8cd24c19b1353fe00775c927df269590f3a32dcdb37d6df",
      "kind": "transparent"
    },
    {
      "address": "0x910E1747ee5110b9ccE65392F2Cae90F0359A64b",
      "txHash": "0x5b993487e3a1640a7c3062a6d213ecfc5a14c0ea214ce7c758d8ebab9843b920",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1124360a54e411a34a11077ce99be80548e06fb1ed029d548d14f6596f665834": {
      "address": "0x9b5bD77D2B43B31ae9E249837427a1F1E77FD9f4",
      "txHash": "0x860e68feacef44bc093b75144d5b754d4b8435b74038458091f418e594330cb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4d4d9e0c69b1889f4b8678472ec9e481a9482efd42885b0cbe82a612c2efa9a": {
      "address": "0x7105BAbEe4159A43596a2412bC8ab69dCDDa8310",
      "txHash": "0x350f1bc89768f02c07420550e1199351f3eb3f3ace03be6ebb3a3d9f96f13ee6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:52"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:53"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:54"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:55"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:56"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:58"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "blocksPerDay",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:59"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORROPerBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:60"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "targetTVLCaptureBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:61"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMin",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:62"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMax",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:63"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainMultiplier",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:64"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "baseRewardRateBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:65"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:66"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsMinted",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:67"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsSlashed",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:68"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:70"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:71"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:72"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultInfo",
            "type": "t_array(t_struct(VaultInfo)15017_storage)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:75"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "trancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15003_storage)dyn_storage))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:77"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "foreignTrancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:79"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroControllerOracle",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:82"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:84"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "isTimeMultiplierActive",
            "type": "t_bool",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:30"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "zorroXChainEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:32"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(VaultInfo)15017_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.VaultInfo[]"
          },
          "t_struct(VaultInfo)15017_storage": {
            "label": "struct IZorroControllerBase.VaultInfo",
            "members": [
              {
                "label": "want",
                "type": "t_contract(IERC20Upgradeable)2635"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accZORRORewards",
                "type": "t_uint256"
              },
              {
                "label": "totalTrancheContributions",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2635": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15003_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo[]))"
          },
          "t_mapping(t_address,t_array(t_struct(TrancheInfo)15003_storage)dyn_storage)": {
            "label": "mapping(address => struct IZorroControllerBase.TrancheInfo[])"
          },
          "t_array(t_struct(TrancheInfo)15003_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo[]"
          },
          "t_struct(TrancheInfo)15003_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo",
            "members": [
              {
                "label": "contribution",
                "type": "t_uint256"
              },
              {
                "label": "timeMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "durationCommittedInWeeks",
                "type": "t_uint256"
              },
              {
                "label": "enteredVaultAt",
                "type": "t_uint256"
              },
              {
                "label": "exitedVaultAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(uint256 => mapping(bytes => mapping(uint256 => address)))"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes => mapping(uint256 => address))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5d4359a4167809ff5766fa907333bdcc1bbce86a34c5a012de1c9fb3b7767e5": {
      "address": "0x918E1826f90A4d6039847Eb21BcEd7d038B00712",
      "txHash": "0x7a14e029cf1d1a7fb298d5794249e37c0c0c129383bc43669fea4bc96566b234",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:50"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:51"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "214407c51a1ac79514e83da44955800809914188bd5a78f12c372f507cc358d6": {
      "address": "0xdE9ddBFa954d1D83204e73b6560C9635c03F1aC1",
      "txHash": "0x88fe5bedafcd0ea254f95c88544b8477b6ba8a5e13d1075fd5cdffae98d4b85f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:31"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateSwapPoolId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:32"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateDestPoolIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:33"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:34"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerContractsMap",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:36"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZorroChainToLZMap",
            "type": "t_mapping(t_uint256,t_uint16)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:37"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "LZChainToZorroMap",
            "type": "t_mapping(t_uint16,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:38"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainTypes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:39"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:41"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:42"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:44"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "currentChainController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:45"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:46"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:47"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:49"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:50"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:52"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:51"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:53"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:54"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:56"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroLPPoolOtherTokenPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:57"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedZOR",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:59"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedLPPoolOtherToken",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:60"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedStablecoin",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:61"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "accumulatedSlashedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f1d19ce05a3ba9a3fb2a7dc3e3b3cf94c99a205ea666fce0c9d0053ff0c4500": {
      "address": "0x3Dd8fF199B0Ea6Ec6CF5AE494d2049329C8DFA45",
      "txHash": "0x61afc9d0f492ffe6e8f7ea087a48dca0ce7df4280259f7c8803e9d89a7f7ab8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65982d831dc8fb370bcc392a74e27f8a4ff6042d811af430f7499352aa94fb07": {
      "address": "0x8E3F92dFd09f2FB013aA813E1E156FCf25593B0d",
      "txHash": "0x739791c2ea0fe1eaa3390e7a577a53286816c59237a584ad68d6a756026e5c2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1da25d052f83f3bc19c9c8f7f38e07eff1e723f0834cc0d18132996d2dbc385b": {
      "address": "0xF9005cdec920B9a990919e8C9dbf931f7d6d0D1B",
      "txHash": "0x350e47d1c544310284597746883b5879d3df783209f53af4329c456d502ff6a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76486d4bde138c22aa6638dbc183aacb3d478f73b22bd5031731278fab80bf27": {
      "address": "0x889B951217187Dd96A0727F0775ab8430b24A075",
      "txHash": "0x2713bb0b0303b0ff2458f7b2888335ceb1567441284c9b70225434986124a597",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PoolTreasury",
            "label": "vestingWallet",
            "type": "t_address_payable",
            "src": "../project:/contracts/finance/PoolTreasury.sol:36"
          },
          {
            "contract": "PoolTreasury",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/finance/PoolTreasury.sol:37"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d54ef262e6daf6f9f183a556017b529d52cbf252779088d3336031efae89be03": {
      "address": "0xc830b67e2845E9adC07A81DCACcC19F13DAb6268",
      "txHash": "0x564f85e2f5e824d8006a4070d62ece38240e86a3f0658c1ee057f46f875ebe3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ead5ef7cd5afae3c8afc7769c00817304c20707b2c8b2ead67d2239eb71ea060": {
      "address": "0x110035b72E6a470542c24B4BdAD27356fFAeF5e0",
      "txHash": "0xe6e0e2200f97aaaaab696836ad847445fb5212d1fa9a7840cfdb9e3b09eca815",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:130"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:131"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:133"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:136"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:139"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:145"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:152"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:155"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:160"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:169"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:171"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:180"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:47"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimitHysteresis",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:48"
          },
          {
            "contract": "VaultLending",
            "label": "comptrollerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:49"
          },
          {
            "contract": "VaultLending",
            "label": "lendingToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:50"
          },
          {
            "contract": "VaultLending",
            "label": "supplyBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:51"
          },
          {
            "contract": "VaultLending",
            "label": "borrowBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:52"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7df1a48711e96c4f9c6f1d8c2e6396cf75cc590fc47d0edc99d291182bd7051b": {
      "address": "0x9A7dc6f1f8e47Ef29D5fDBe7c0C08737B35daD3C",
      "txHash": "0xb2df0afd976cf3192e90deb2f12ab2f261817140995462d6e1750e7f5240f786",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aa7d05478557cfb4ad5a8d2863a1a6e6ff9bee8b5b725e9706481ba1fb48b70d": {
      "address": "0xEe8AA94D0990De3bE0915950de2F307E32Eb28A5",
      "txHash": "0x3532099468b61069050ec4ace283d49426cdf067ba8064b293f56486b80f4dc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:130"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:131"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:133"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:136"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:139"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:145"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:152"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:155"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:160"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:169"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:171"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:180"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:55"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakingPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:56"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "lpToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:57"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeTokenPriceFeed",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:58"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "isLPFarmable",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d42c3c7f088362a991dee3d60b693944ec0d54f58b30d914986bbd36c1a07f3": {
      "address": "0xb20f9B7D6a6883efFa084103AaeDF6806d4D9BAA",
      "txHash": "0xeb5955680a02c97ce6297c20437de71fc7799f2641c905d6b572b64f57e1495a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:130"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:131"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:133"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:136"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:139"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:145"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:152"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:155"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:160"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:169"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:171"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:180"
          },
          {
            "contract": "VaultStargate",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/vaults/VaultStargate.sol:43"
          },
          {
            "contract": "VaultStargate",
            "label": "stargatePoolId",
            "type": "t_uint16",
            "src": "../project:/contracts/vaults/VaultStargate.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
