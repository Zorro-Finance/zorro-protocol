{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2A7FF62cCbf0117E611636bB18cfBCBedBfa4202",
    "txHash": "0x9a3a52777b6d87c9f6b026ba617c71ca603efd2ef2e194b9c81f1b415bd5e00e"
  },
  "proxies": [
    {
      "address": "0xa0947EFcb4e25E4CD9C9170B15Ce3aD5b2ee5C00",
      "txHash": "0xc09c23bc2cde683187109225e651b6561182c0be55ac346e9eb6682f51c07dab",
      "kind": "transparent"
    },
    {
      "address": "0x8b756ae4dB816AD91eDD3a0E5050Dd2a35413781",
      "txHash": "0x54ed3c12ecc3a4695f4f59a8829236ccbb6c8f39ff813b9a0eaf820a06a3b0ca",
      "kind": "transparent"
    },
    {
      "address": "0x6AAB042Eeec240Ef31F51f5f43F49Bf182BCdD06",
      "txHash": "0xd24ba1f5516e55a395dfe923d4505fc52a0893dbf6e84c99e690b5884a187691",
      "kind": "transparent"
    },
    {
      "address": "0xd904f34cb6bb12902C7FaFc3917fC866ee0C46c8",
      "txHash": "0xf94dea5eed716da38ceae50e24405820bd24034959f4fda2b471227e509a30e2",
      "kind": "transparent"
    },
    {
      "address": "0x3C95B10adAAa1E5b008489B13F2A736d9d469f68",
      "txHash": "0x954810e06b2703ad9a968fd3d05249f01b7aaa8e5b257229db157fb3f6934d1f",
      "kind": "transparent"
    },
    {
      "address": "0x2Dea5c11A2C93c4c3DdFE0bc44965C61333e339F",
      "txHash": "0xce07ebb82cf449f3a2ca8517d89cf64a885144bb9545612379a43262c05deaac",
      "kind": "transparent"
    },
    {
      "address": "0x81e1F5deB885DcB8a492725888e4D1a6C0aA8cA0",
      "txHash": "0xc4515e74640c385b50ed1f993dc3fb83601efab96aa8d47ce02661de0dd988f4",
      "kind": "transparent"
    },
    {
      "address": "0x45319473b6f8Fed5D0827504501995CFd66A63d7",
      "txHash": "0xc3a10469c826891aa1435d9d6b8f84c7230990fbbcae61a3c68305d792701200",
      "kind": "transparent"
    },
    {
      "address": "0x8B4B979702B5878E8bCCD2EbfdCF165C1Ec14DE8",
      "txHash": "0xcd0847745496d22e81b5ab0f12f5a155d752e3a4ebd847450a7e72d394592307",
      "kind": "transparent"
    },
    {
      "address": "0x60388AAB849186c2f1650523D282A13459138021",
      "txHash": "0xee5dbb98805632b58251a84a7a0b1050c5b8f0ab045681a36670cac6c016c41b",
      "kind": "transparent"
    },
    {
      "address": "0xfc5971DabDda40725Cc312fFbdFF039f00863FcA",
      "txHash": "0x5f2daac91dde2ba0050d2335fc8920269260c8eed810aaffe7ed6ea06d1ee587",
      "kind": "transparent"
    },
    {
      "address": "0x07637a08CFbd7DE012bE5062905327aa0796cc2f",
      "txHash": "0x47aaac2c5dddb015d854946de441a132648a1077af64fa7c7cff5ab2c483f2a8",
      "kind": "transparent"
    },
    {
      "address": "0x0e7d866B43982Ee2FcDF77d5aC4ba927A1aa0e87",
      "txHash": "0xaf5529aadaa378dfe53e74f14a582626cf9d9360b01040a11ee9b9a2a2ec3ead",
      "kind": "transparent"
    },
    {
      "address": "0x14fD74bDF374A10a084EF5767a4af42d7da2C35F",
      "txHash": "0x9f03211a370236bbaddcd32472ce1bcb62037812c8718ffd003ea6e5e3b23cf5",
      "kind": "transparent"
    },
    {
      "address": "0xb917b2Fd60f5c5d6A1EAc3E5d8d681E058f366c6",
      "txHash": "0x9bbf8220efd640950cd842e79f64b870f1ae253fd0845fe329776b85ec257131",
      "kind": "transparent"
    },
    {
      "address": "0x976982862c201A5B60780bce37c7B204EaDcea5C",
      "txHash": "0x41e0a12521d36fbeb64ecd000b65271f188cc6f65feb2880823bc2a4fc89d672",
      "kind": "transparent"
    },
    {
      "address": "0xc0f70e71DfE8e7A990473368cf2662395852AC8F",
      "txHash": "0xfea159861f0812440cf67633f5610217fce3f18b0de37b4fa910bf25c05654d2",
      "kind": "transparent"
    },
    {
      "address": "0x91Eddc433792bF91724e2701555b42966562f326",
      "txHash": "0xc664f818de1ac6b412a41df37471dbd6fcb792fe4b470fd7d2f0a2f25f98f1a5",
      "kind": "transparent"
    },
    {
      "address": "0x28A857f696c07B424067159d1Feb96E06080DF2b",
      "txHash": "0xe7afe331372defd765581443a34e10873b70a974f30077b6eae4f6c97ee9374c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5331bb7513669a6aa7ce8f7755918dd14dce1e3ff987e10c811e982a345aa368": {
      "address": "0xd42B10b78e2bfa5853ADb5E79f84982435F4aFB2",
      "txHash": "0x7e7e5086e3db0877ae25374055eb36279bee2a7afb06edcd21ed0759de9e7468",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "router",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:14"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:15"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:16"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "version",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:17"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_rid",
            "type": "t_uint80",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:18"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_startedAt",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:19"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_updatedAt",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:20"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_answeredInRound",
            "type": "t_uint80",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:21"
          },
          {
            "contract": "ZORPriceFeed",
            "label": "zorToken",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/ZORPriceFeed.sol:13"
          },
          {
            "contract": "ZORPriceFeed",
            "label": "zorLPOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/ZORPriceFeed.sol:14"
          },
          {
            "contract": "ZORPriceFeed",
            "label": "usdcToken",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/ZORPriceFeed.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1124360a54e411a34a11077ce99be80548e06fb1ed029d548d14f6596f665834": {
      "address": "0x7260209a075160ACb38a2ce0a2A65680B87d50bd",
      "txHash": "0x017bf4a3371f11b609292c544fd243faebc3c87e8ce8026c228f465575f0d48d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4d4d9e0c69b1889f4b8678472ec9e481a9482efd42885b0cbe82a612c2efa9a": {
      "address": "0xd4CB7CBD6DddcB6eFd0Ae977a2fd521BF4Cdb385",
      "txHash": "0xf0c337640b97a9dff1a2b0007280876d8807cdc6b4ded2ab558f19348f83a74b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:52"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:53"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:54"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:55"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:56"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:58"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "blocksPerDay",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:59"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORROPerBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:60"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "targetTVLCaptureBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:61"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMin",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:62"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMax",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:63"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainMultiplier",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:64"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "baseRewardRateBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:65"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:66"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsMinted",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:67"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsSlashed",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:68"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:70"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:71"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:72"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultInfo",
            "type": "t_array(t_struct(VaultInfo)15319_storage)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:75"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "trancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15305_storage)dyn_storage))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:77"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "foreignTrancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:79"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroControllerOracle",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:82"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:84"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "isTimeMultiplierActive",
            "type": "t_bool",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:30"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "zorroXChainEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:32"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(VaultInfo)15319_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.VaultInfo[]"
          },
          "t_struct(VaultInfo)15319_storage": {
            "label": "struct IZorroControllerBase.VaultInfo",
            "members": [
              {
                "label": "want",
                "type": "t_contract(IERC20Upgradeable)2635"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accZORRORewards",
                "type": "t_uint256"
              },
              {
                "label": "totalTrancheContributions",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2635": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15305_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo[]))"
          },
          "t_mapping(t_address,t_array(t_struct(TrancheInfo)15305_storage)dyn_storage)": {
            "label": "mapping(address => struct IZorroControllerBase.TrancheInfo[])"
          },
          "t_array(t_struct(TrancheInfo)15305_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo[]"
          },
          "t_struct(TrancheInfo)15305_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo",
            "members": [
              {
                "label": "contribution",
                "type": "t_uint256"
              },
              {
                "label": "timeMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "durationCommittedInWeeks",
                "type": "t_uint256"
              },
              {
                "label": "enteredVaultAt",
                "type": "t_uint256"
              },
              {
                "label": "exitedVaultAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(uint256 => mapping(bytes => mapping(uint256 => address)))"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes => mapping(uint256 => address))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "64f8cacea30cadf3da93bd3b377de7ca33d8b59f8fa713c2de747d09a5b2721d": {
      "address": "0x99b13899866975E866d9CF12A181d1c75115af88",
      "txHash": "0x11a0c24c596ffb4b22d613845cb5d13495bbea9d783333cc012c19322bf05791",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:50"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:51"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a54583827dba98f07804a2ba5be4a6d13301bd56f9ef6c0404587e9dbef7447": {
      "address": "0x4FB3B04772c426B51Ab9906ABe695E2110dD8efB",
      "txHash": "0xcb773e2ab85bf95355c1f4fc918cea0f4dee777f0e887f105e0f368917f5ce48",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:31"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateSwapPoolId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:32"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateDestPoolIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:33"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:34"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerContractsMap",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:36"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZorroChainToLZMap",
            "type": "t_mapping(t_uint256,t_uint16)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:37"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "LZChainToZorroMap",
            "type": "t_mapping(t_uint16,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:38"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainTypes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:39"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:41"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:42"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:44"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "currentChainController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:45"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:46"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:47"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:49"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:50"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:52"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:51"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:53"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:54"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:56"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroLPPoolOtherTokenPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:57"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedZOR",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:59"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedLPPoolOtherToken",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:60"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedStablecoin",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:61"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "accumulatedSlashedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f1d19ce05a3ba9a3fb2a7dc3e3b3cf94c99a205ea666fce0c9d0053ff0c4500": {
      "address": "0x7d89fFC3759Ee25Fbf5039706Fcb2f156c38A815",
      "txHash": "0x17c4bf3a394d3865c6374433230080384e8cbaadb0bb4a468070fbc6a79cb6da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65982d831dc8fb370bcc392a74e27f8a4ff6042d811af430f7499352aa94fb07": {
      "address": "0x9A860b1550a1559E526Ac7F9599756eDB8ae55cF",
      "txHash": "0x78baca4af1ea3fdd57a4daa4e9acf6d6b3104b2d14f707bf4548ca71567d74e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1da25d052f83f3bc19c9c8f7f38e07eff1e723f0834cc0d18132996d2dbc385b": {
      "address": "0xe95ebd746B00cb2147035527D03cf6B52Ac22B20",
      "txHash": "0x69b879983d6a3e7882ff22abbf2932f0e03108a5acd71a45a0f3cfff3a7dbcdf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76486d4bde138c22aa6638dbc183aacb3d478f73b22bd5031731278fab80bf27": {
      "address": "0x2e70c810241FF4CA2138AF24378899f8269EdD38",
      "txHash": "0x031b6c5c59d6c5d152a339c1d5bc98e43c7ee4b0fce1306452d6afe69e8ee19a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PoolTreasury",
            "label": "vestingWallet",
            "type": "t_address_payable",
            "src": "../project:/contracts/finance/PoolTreasury.sol:36"
          },
          {
            "contract": "PoolTreasury",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/finance/PoolTreasury.sol:37"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ef90e95068e0d8f40fc2e26ce12fad722a9ba60bba5e591221021f555576d080": {
      "address": "0xcCa7341Ad67C2B6b8549D996544Df2FE79D94e1a",
      "txHash": "0x2d016faa0a1547680cb2d521e134ed701bbebc5da0d7cbd02e1fdf7521365bee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "32157b41c8360caadf84b18766de86e9f4e876855257fbaf1f4810a4a5afd4d7": {
      "address": "0x0C11F8206798734251759689EE60a581975fD190",
      "txHash": "0x1455b1240b2f86d1db31c2efb543e8795d8b8f097142c42e4d5523a851778dc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:47"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimitHysteresis",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:48"
          },
          {
            "contract": "VaultLending",
            "label": "comptrollerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:49"
          },
          {
            "contract": "VaultLending",
            "label": "lendingToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:50"
          },
          {
            "contract": "VaultLending",
            "label": "supplyBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:51"
          },
          {
            "contract": "VaultLending",
            "label": "borrowBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:52"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d3441c0ca3ef1c55cd2c713966162f7d9f6060dc93412815fedbd49f9cea6098": {
      "address": "0x5d303F1fBFD2F54048A35eAD326b0b095dC62A17",
      "txHash": "0x48f7bf1cf0ff29867855c58b30be0cd7c425ab4f75841709d157e5f16c618009",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "35fa0b4c324b53274b7f5693b247761199216ffd390fc09028b54306c61bd579": {
      "address": "0x16A35703CC95Da68525e244b31213E2CB34dD2d6",
      "txHash": "0xc43df492cfb999b10a0eedad75a999b85b0f4a3fa4f88706850d61c0f79c0c7b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:55"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakingPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:56"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "lpToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:57"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeTokenPriceFeed",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:58"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "isLPFarmable",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1f3121cc8eeb44f33f2c16d180664beb089d2425479a32cd5f8f3c67489c5948": {
      "address": "0x8Ef16311358616103895a098f202b269c713817A",
      "txHash": "0x009bc5cb7ea9a972dbb5cf8a184cef8ee851263b9258580b6c368883eab43e06",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "130827ddd74b7fdbc460188145c0f28c61458f4923076b77e1358d4ed9800aed": {
      "address": "0x3fE48Fa5f8C0fE19A49d84b6c6A3faA1f3df0d54",
      "txHash": "0x95b1bcc8131830582636a2107705ff550ac486234be7bb7f4dd40d8a665562aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultStandardAMM",
            "label": "isLPFarmable",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultStandardAMM.sol:40"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "254805fb4d814d47557fee763557b69176abc501c2f9ed4f9e173c9dd63b59e6": {
      "address": "0xE18855a91690d5b7659faaa9510D34BD2B7A37Ed",
      "txHash": "0x1461f03087260c97d6535939cb35faecd3494dfae3740de28c7e4c7187e47222",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9d6c729d523e09506b71a568d609e93d82717bc249d3432276dd6735ac4e3799": {
      "address": "0xd748dF741411A912956F53cCa10Dd99Ca7299dC9",
      "txHash": "0x350b614c8b43858ce5b3c10b2995fdc1f62599981c750246b9ddb7c70df3364d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "router",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:14"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "decimals",
            "type": "t_uint8",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:15"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:16"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "version",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:17"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_rid",
            "type": "t_uint80",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:18"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_startedAt",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:19"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_updatedAt",
            "type": "t_uint256",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:20"
          },
          {
            "contract": "PriceFeedAggBase",
            "label": "_answeredInRound",
            "type": "t_uint80",
            "src": "../project:/contracts/pricefeeds/_PriceFeedAggBase.sol:21"
          },
          {
            "contract": "STGPriceFeed",
            "label": "stgToken",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/STGPriceFeed.sol:13"
          },
          {
            "contract": "STGPriceFeed",
            "label": "usdToken",
            "type": "t_address",
            "src": "../project:/contracts/pricefeeds/STGPriceFeed.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bc1a0976718f3a0c665256a259c84605ccafc876d5f73c30dddc3fb049e8335d": {
      "address": "0x377F7C7A9413d1Fb9942A0Abd2d8D9f7699C377C",
      "txHash": "0xaaf42ed6a73d5b08b9040de524f86ef4f48dc16ff7bd8ec10c1e605791c65434",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultStargate",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/vaults/VaultStargate.sol:43"
          },
          {
            "contract": "VaultStargate",
            "label": "stargatePoolId",
            "type": "t_uint16",
            "src": "../project:/contracts/vaults/VaultStargate.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
