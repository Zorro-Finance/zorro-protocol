{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2Ca7Ee6DF3833595012C1bBe214b2cce38DFa469",
    "txHash": "0x6be39a2eb421821ab1c0b37bffdf1b5ae24dbd097c85627362a8e3c189393d61"
  },
  "proxies": [
    {
      "address": "0xcd36B5e1f42F93CED89aa0448d2f610139035AAb",
      "txHash": "0x80ca3d473ffaf461b1a1838636b420a2823d8b2611f6ddb4c0d1abdae2adf51c",
      "kind": "transparent"
    },
    {
      "address": "0x41943D82Dd44fe901aE55D7e7FD1B58A6fdB54C7",
      "txHash": "0xaafdbec3fe6d8e34ec93f00a540800c807e496fea88c34d373e013b34d20f302",
      "kind": "transparent"
    },
    {
      "address": "0x647084628a02b3a6e95668Ad2aBd5E1f60A03335",
      "txHash": "0xd2182e617c3ca92c47f145176ed9e1191781a704ca1f495acba8a932e93edd2d",
      "kind": "transparent"
    },
    {
      "address": "0xCA31B3f701046dC0729A5738Db1D07a6CE86edbf",
      "txHash": "0xf0b8ef5808ebc122fce10fa10162d56418554a513275454782f8da08a4753ab8",
      "kind": "transparent"
    },
    {
      "address": "0xC15e6B5b4D2ae3C95451a71Adb96cd6CbEF93d07",
      "txHash": "0xf4acb89fe579698693dd191ec0eb5375f82cc1a2927b9f080066298020c4061f",
      "kind": "transparent"
    },
    {
      "address": "0xe60043E431cc36314bAEad1007afD4d9fD6136b9",
      "txHash": "0x868d243d57031e6855917058ecdb130218bf3af7d5ca7ba88323ee7615786cc0",
      "kind": "transparent"
    },
    {
      "address": "0xb99dCc2Fb82aBe0994E209Fb5236D9e0e7EF47c8",
      "txHash": "0x9d7bd5c7526032e05b496dad346c3feb80ec090a70d7d9fd1b0dc118509e1c99",
      "kind": "transparent"
    },
    {
      "address": "0x1960cdF09D381e402c19F7582e9a2F7289c2A60c",
      "txHash": "0x0b4efe526cf963884bfb653b1b97a85dd6059ddbcf9df7102c46e4ed56ff6809",
      "kind": "transparent"
    },
    {
      "address": "0xc50074Db366014AC7BcA054214E386178FD41DC7",
      "txHash": "0x52a0abf855ebf4fba79e28c2742b1f2cc761bc2e5d7d3e3605687682b19b8ed7",
      "kind": "transparent"
    },
    {
      "address": "0x17DABE542a152c5F6d57173EB8e275d5a5779cd7",
      "txHash": "0x224dc80d7c503247a9835f142fa5226f87de6748d23c4d19549d9bf043e3d794",
      "kind": "transparent"
    },
    {
      "address": "0x7FcB5891a28008024134D7C0205dE7797CCBEF19",
      "txHash": "0x714a19563027ba85558abf8a871db40f81791adc934b0c12720068286296ae18",
      "kind": "transparent"
    },
    {
      "address": "0xB9Fab8D32AE127391D774dDb3400dbE8c0c0C480",
      "txHash": "0xb0d4cc28c949cc8e895631c4657481b05f20d13a24a6a1c785aa84c0b663225e",
      "kind": "transparent"
    },
    {
      "address": "0x35851348CFE826890f733c28f500fA78E2167Fb4",
      "txHash": "0x0a6ccde4884edf4562b4c1b1bd49b632dcca08cafffd22f325c1c3e37fe7379e",
      "kind": "transparent"
    },
    {
      "address": "0xc4f77E224E4112B5bA3A8C6d9E71d83EC13a5E45",
      "txHash": "0xeedd38d08f4c9629a4743048b1c5011f03a0f16a1b8a715551e2450bf5762e3f",
      "kind": "transparent"
    },
    {
      "address": "0x2Ab64c01e56B97e7002c47ffd4E3ABCFFfc97A4E",
      "txHash": "0xa26b70c0dfa958c54e3e6c9a572f95a16a564139343db162743ed07499340ef3",
      "kind": "transparent"
    },
    {
      "address": "0xdd0A475Ce847E3395024b2029911654E6a2fd130",
      "txHash": "0xfdd62f5396cc243c48bffb21a1ddea8f450b29a4a43a34e832cec1108fba7118",
      "kind": "transparent"
    },
    {
      "address": "0x9Cf8cF399a073EFB66950d8C98F7b013CfA2A103",
      "txHash": "0x3c969845184dc6a293dde06b89064fa7c780a79effedf05995240b869d003be5",
      "kind": "transparent"
    },
    {
      "address": "0x2fEE4f2Aa354290E619edd6b76a27D4c0b1f13cd",
      "txHash": "0x724ffa6358f1b056c461994f3214adb29b2ecaabbd85bf51686414bcdd05cae4",
      "kind": "transparent"
    },
    {
      "address": "0x90CcaF42e149b1F2E851D1bd5250478613dF8C66",
      "txHash": "0x5180f921bc40d675d307ecd389099ba3098d8dd69b230e64a653a34378497bb2",
      "kind": "transparent"
    },
    {
      "address": "0x5aC13Ca05F8D4d3E4F15E3f1F6a74694a70fE35f",
      "txHash": "0x41c31e55b6ecd68dd498b91a951cf35eab8251d15464075864aacecf924e33f1",
      "kind": "transparent"
    },
    {
      "address": "0xDF5A8a3f52781E6A9c30e18154E0450B1b9a3Ecc",
      "txHash": "0xba0e1388c20572b144118b604fa60661766c8f7949097e3be0f4d2cdc3a1584d",
      "kind": "transparent"
    },
    {
      "address": "0xeB8a838FcA6dBD3ED5C53D76737ED306A87E7A74",
      "txHash": "0x6c94cd3b94dc005fdedcc0ca41d6ce6822dd6631e05d0c03948dd186d9fcb79d",
      "kind": "transparent"
    },
    {
      "address": "0x50d6B6FFca8685aA47dC102ae47a0E3a1409D313",
      "txHash": "0x9be8d9de2ad4c8bc9648bde491843eee93225a9db03fc0e6bbef7c493a92c490",
      "kind": "transparent"
    },
    {
      "address": "0x4f5e18988eAc7992f00dab58766289eaA466AD77",
      "txHash": "0xa30953bc5bd4480bc2621c2fe1f6c3716cd38eaeea2b891e978f9f1038616e6b",
      "kind": "transparent"
    },
    {
      "address": "0x8D22915E988726259127EBd78495B51d99dB6A73",
      "txHash": "0x0e9e0a978e14320c45a09869121667bb14f6c5e3c8116d8a4be9d95562ca7d95",
      "kind": "transparent"
    },
    {
      "address": "0x981CDD166d741F1d49c03c37638248eb03339f8f",
      "txHash": "0xa41c97a8536c80521169059279869a9a8df75071cb6a5d3ce35915777ec89858",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1124360a54e411a34a11077ce99be80548e06fb1ed029d548d14f6596f665834": {
      "address": "0x0DD1b9a944dd31fFd8C1910Df6e2aECAfbC45446",
      "txHash": "0xc83e824fe808dac93c66bcd6ab52a7c398379c729f92873df88876939187c7ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4d4d9e0c69b1889f4b8678472ec9e481a9482efd42885b0cbe82a612c2efa9a": {
      "address": "0x09dC9963E945Cd57F1293531e78eb82ab9d1E35B",
      "txHash": "0xb49c062054ff08308e406be05d779ebb8ecd1029feda99b8c8002e451406ef8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:52"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:53"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:54"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:55"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:56"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:58"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "blocksPerDay",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:59"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORROPerBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:60"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "targetTVLCaptureBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:61"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMin",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:62"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "ZORRODailyDistributionFactorBasisPointsMax",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:63"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainMultiplier",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:64"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "baseRewardRateBasisPoints",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:65"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:66"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsMinted",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:67"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "accSynthRewardsSlashed",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:68"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:70"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:71"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:72"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultInfo",
            "type": "t_array(t_struct(VaultInfo)15080_storage)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:74"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "vaultMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:75"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "trancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15066_storage)dyn_storage))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:77"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "foreignTrancheInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:79"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "zorroControllerOracle",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:82"
          },
          {
            "contract": "ZorroControllerBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerBase.sol:84"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "isTimeMultiplierActive",
            "type": "t_bool",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:30"
          },
          {
            "contract": "ZorroControllerInvestment",
            "label": "zorroXChainEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerInvestment.sol:32"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(VaultInfo)15080_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.VaultInfo[]"
          },
          "t_struct(VaultInfo)15080_storage": {
            "label": "struct IZorroControllerBase.VaultInfo",
            "members": [
              {
                "label": "want",
                "type": "t_contract(IERC20Upgradeable)2635"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accZORRORewards",
                "type": "t_uint256"
              },
              {
                "label": "totalTrancheContributions",
                "type": "t_uint256"
              },
              {
                "label": "vault",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)2635": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(TrancheInfo)15066_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo[]))"
          },
          "t_mapping(t_address,t_array(t_struct(TrancheInfo)15066_storage)dyn_storage)": {
            "label": "mapping(address => struct IZorroControllerBase.TrancheInfo[])"
          },
          "t_array(t_struct(TrancheInfo)15066_storage)dyn_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo[]"
          },
          "t_struct(TrancheInfo)15066_storage": {
            "label": "struct IZorroControllerBase.TrancheInfo",
            "members": [
              {
                "label": "contribution",
                "type": "t_uint256"
              },
              {
                "label": "timeMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "durationCommittedInWeeks",
                "type": "t_uint256"
              },
              {
                "label": "enteredVaultAt",
                "type": "t_uint256"
              },
              {
                "label": "exitedVaultAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(uint256 => mapping(bytes => mapping(uint256 => address)))"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint256,t_address))": {
            "label": "mapping(bytes => mapping(uint256 => address))"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "64f8cacea30cadf3da93bd3b377de7ca33d8b59f8fa713c2de747d09a5b2721d": {
      "address": "0x252fF2F920DFc177879F7aFA34451d38956D2788",
      "txHash": "0xaa528e900c210b129da6c08069dee240651f23962caa4fe70c56bfa11ed0e456",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:50"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:51"
          },
          {
            "contract": "ZorroControllerXChainActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/actions/ZorroControllerXChainActions.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a54583827dba98f07804a2ba5be4a6d13301bd56f9ef6c0404587e9dbef7447": {
      "address": "0xc1Bbf07d35D33779f58b49e9EA17686847df966B",
      "txHash": "0x0ca28d71b38017f016ae23f166a049bbcb21ea2ae1b7a417f513e3d6e384fae4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:31"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateSwapPoolId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:32"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "stargateDestPoolIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:33"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "layerZeroEndpoint",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:34"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerContractsMap",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:36"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZorroChainToLZMap",
            "type": "t_mapping(t_uint256,t_uint16)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:37"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "LZChainToZorroMap",
            "type": "t_mapping(t_uint16,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:38"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainTypes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:39"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:41"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:42"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainZorroController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:44"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "currentChainController",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:45"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "publicPool",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:46"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "controllerActions",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:47"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "chainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:49"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "homeChainId",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:50"
          },
          {
            "contract": "ZorroControllerXChainBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainBase.sol:52"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:51"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:53"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:54"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:56"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "stablecoinToZorroLPPoolOtherTokenPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:57"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedZOR",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:59"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedLPPoolOtherToken",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:60"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "priceFeedStablecoin",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:61"
          },
          {
            "contract": "ZorroControllerXChainEarn",
            "label": "accumulatedSlashedRewards",
            "type": "t_uint256",
            "src": "../project:/contracts/controllers/_ZorroControllerXChainEarn.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_uint256,t_uint16)": {
            "label": "mapping(uint256 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f1d19ce05a3ba9a3fb2a7dc3e3b3cf94c99a205ea666fce0c9d0053ff0c4500": {
      "address": "0x1Ac44b383c30AcB955Ff4f6E0a3f1878006F7c66",
      "txHash": "0x47780a73b08c4e22050f83158c09b80531cbde9a725efc6d5bcb4cf1a0c40bec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65982d831dc8fb370bcc392a74e27f8a4ff6042d811af430f7499352aa94fb07": {
      "address": "0xA280A2F66dd4f26904b351180738c91bfCA831a1",
      "txHash": "0xd276e247035f7673724f811e8bc92042cc0f2ec6ba01ccabe600c1896d0108da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1da25d052f83f3bc19c9c8f7f38e07eff1e723f0834cc0d18132996d2dbc385b": {
      "address": "0xC47e2F860F8C56A6f4fd34B07b67015C1eeF7222",
      "txHash": "0xb6083469402dbbff1bb161945263cf1bd2d83c839562bebe188a930f35f42b7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:30"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:31"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:368"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76486d4bde138c22aa6638dbc183aacb3d478f73b22bd5031731278fab80bf27": {
      "address": "0x83D4d7260d6a14629EDCB453D9DD29f54014f4c4",
      "txHash": "0x938e7c1b4bf5d704d5381273e712d47be81edb869168266fd3e1e31d64460d88",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PoolTreasury",
            "label": "vestingWallet",
            "type": "t_address_payable",
            "src": "../project:/contracts/finance/PoolTreasury.sol:36"
          },
          {
            "contract": "PoolTreasury",
            "label": "ZORRO",
            "type": "t_address",
            "src": "../project:/contracts/finance/PoolTreasury.sol:37"
          }
        ],
        "types": {
          "t_address_payable": {
            "label": "address payable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d54ef262e6daf6f9f183a556017b529d52cbf252779088d3336031efae89be03": {
      "address": "0x26B724670dDfcAc257D0A14Aa42Ecd3bDd0D0c37",
      "txHash": "0x6da1cc977857551161fbbf212eccfff95a84b3c3fe8aa05d6bbc3e606be2b827",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "28bb3666149658fb26e43d980286e4c12b0cc83ab50a682e7261c177ee376ff9": {
      "address": "0x57fD17eE121d3d410E2558b8422635d526D558Dc",
      "txHash": "0x2f9b791b95ac0b80a3167e24517a2a8daa1b291ccb3cc2f5db11ee27cb5e758d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:47"
          },
          {
            "contract": "VaultLending",
            "label": "targetBorrowLimitHysteresis",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:48"
          },
          {
            "contract": "VaultLending",
            "label": "comptrollerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:49"
          },
          {
            "contract": "VaultLending",
            "label": "lendingToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultLending.sol:50"
          },
          {
            "contract": "VaultLending",
            "label": "supplyBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:51"
          },
          {
            "contract": "VaultLending",
            "label": "borrowBal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultLending.sol:52"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7df1a48711e96c4f9c6f1d8c2e6396cf75cc590fc47d0edc99d291182bd7051b": {
      "address": "0xfC99aAda60e92cFA2cada719225CAF6520F132d6",
      "txHash": "0x0f60f44bf32084af2bab00575c2f9e3e5d1e85839897872fad22e201b5ef8f1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VaultActions",
            "label": "uniRouterAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:45"
          },
          {
            "contract": "VaultActions",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/actions/_VaultActions.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a5df6272c2d28492dba8bc2a975578db22817ea4b9c34df7e77f735447690209": {
      "address": "0x7BB1a3CD640b3d4e06888c7dFf109A4568893929",
      "txHash": "0x83f193d9c39cda1d26527224717c5fdcf18dbb6b6669350e939abd56dc6ee3b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:55"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakingPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:56"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "lpToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:57"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "liquidStakeTokenPriceFeed",
            "type": "t_contract(AggregatorV3Interface)45",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:58"
          },
          {
            "contract": "VaultBaseLiqStakeLP",
            "label": "isLPFarmable",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBaseLiqStakeLP.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4cc19347ee796b7af5ba33189ea0d5ab8fdac6fa89bbbaa97fba25fe7d0506e": {
      "address": "0x2cD9E3Cc3c75B23dB7f8cca59dF197591E86c680",
      "txHash": "0x02d473713520947bda9447d6b6d8888e61e7645520d8581d41d3ee503b63e672",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultBase",
            "label": "isHomeChain",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:134"
          },
          {
            "contract": "VaultBase",
            "label": "pid",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:135"
          },
          {
            "contract": "VaultBase",
            "label": "govAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:137"
          },
          {
            "contract": "VaultBase",
            "label": "onlyGov",
            "type": "t_bool",
            "src": "../project:/contracts/vaults/_VaultBase.sol:138"
          },
          {
            "contract": "VaultBase",
            "label": "zorroControllerAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:140"
          },
          {
            "contract": "VaultBase",
            "label": "zorroXChainController",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:141"
          },
          {
            "contract": "VaultBase",
            "label": "ZORROAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:142"
          },
          {
            "contract": "VaultBase",
            "label": "zorroStakingVault",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:143"
          },
          {
            "contract": "VaultBase",
            "label": "vaultActions",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:144"
          },
          {
            "contract": "VaultBase",
            "label": "wantAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:146"
          },
          {
            "contract": "VaultBase",
            "label": "token0Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:147"
          },
          {
            "contract": "VaultBase",
            "label": "token1Address",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:148"
          },
          {
            "contract": "VaultBase",
            "label": "earnedAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:149"
          },
          {
            "contract": "VaultBase",
            "label": "farmContractAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:150"
          },
          {
            "contract": "VaultBase",
            "label": "defaultStablecoin",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:151"
          },
          {
            "contract": "VaultBase",
            "label": "burnAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:153"
          },
          {
            "contract": "VaultBase",
            "label": "treasury",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:154"
          },
          {
            "contract": "VaultBase",
            "label": "poolAddress",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:156"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPool",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:158"
          },
          {
            "contract": "VaultBase",
            "label": "zorroLPPoolOtherToken",
            "type": "t_address",
            "src": "../project:/contracts/vaults/_VaultBase.sol:159"
          },
          {
            "contract": "VaultBase",
            "label": "controllerFee",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:162"
          },
          {
            "contract": "VaultBase",
            "label": "buyBackRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:164"
          },
          {
            "contract": "VaultBase",
            "label": "revShareRate",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:166"
          },
          {
            "contract": "VaultBase",
            "label": "entranceFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:168"
          },
          {
            "contract": "VaultBase",
            "label": "withdrawFeeFactor",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:170"
          },
          {
            "contract": "VaultBase",
            "label": "lastEarnBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:172"
          },
          {
            "contract": "VaultBase",
            "label": "principalDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:173"
          },
          {
            "contract": "VaultBase",
            "label": "profitDebt",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:174"
          },
          {
            "contract": "VaultBase",
            "label": "sharesTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:175"
          },
          {
            "contract": "VaultBase",
            "label": "swapPaths",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:177"
          },
          {
            "contract": "VaultBase",
            "label": "swapPathLength",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint16))",
            "src": "../project:/contracts/vaults/_VaultBase.sol:178"
          },
          {
            "contract": "VaultBase",
            "label": "priceFeeds",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "src": "../project:/contracts/vaults/_VaultBase.sol:181"
          },
          {
            "contract": "VaultBase",
            "label": "maxMarketMovementAllowed",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:184"
          },
          {
            "contract": "VaultBase",
            "label": "dstGasForEarningsCall",
            "type": "t_uint256",
            "src": "../project:/contracts/vaults/_VaultBase.sol:185"
          },
          {
            "contract": "VaultStargate",
            "label": "stargateRouter",
            "type": "t_address",
            "src": "../project:/contracts/vaults/VaultStargate.sol:43"
          },
          {
            "contract": "VaultStargate",
            "label": "stargatePoolId",
            "type": "t_uint16",
            "src": "../project:/contracts/vaults/VaultStargate.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(address => address[]))"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint16))": {
            "label": "mapping(address => mapping(address => uint16))"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
