{
  "contractName": "MockBenqiUnitroller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQied",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "rewardType",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardType\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQied\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockBenqiLending.sol\":\"MockBenqiUnitroller\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol\":{\"keccak256\":\"0xda9dd25da2670def30beb473d7aa28c93203046142c6febf550da390cbe6de61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f89b4bad141dca9e584ca0c2269c2a5ad35512f91eb367b1496c69bd8e0377c5\",\"dweb:/ipfs/QmXPVgB7P8RSGRYVWTf5qzLZbBArjhp6mPj2KLDNC39xgC\"]},\"project:/contracts/interfaces/Benqi/IUnitroller.sol\":{\"keccak256\":\"0x3abbfdaf5b897c1b17aaffd370f9777a8471dce408ef394fecc9c899feb08e2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36da0f0f95ef9ec6abb5ae37e115ee861ab54ca8988e5a6533ff237e844ce02\",\"dweb:/ipfs/QmZ9Wd1ut5t4AQMpzQk2CDvB24BtsAPYEe8ks72ZwwGMD9\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xd668e8741a79ce8c9531641d439b3e8dc1bd48eb83062137932713788571bd84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37353c74f6188187fb1b7c1227e82517da2c1eed515f6f93ea6cc58ac8c03bb7\",\"dweb:/ipfs/QmdhSX16g4sfTCBwx3PpP4bw5z9dMYRWnjmavnXLU9ZcEX\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Lending/ILendingToken.sol\":{\"keccak256\":\"0x45ad85de2b54a72284762da24cadd5a695f3a143d109acae569c8e9ae55a3a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a631c9ffc0e03017028becd66998715a8c02bc83c62ae2f9ee40df72b578b3\",\"dweb:/ipfs/QmR48bzWJhZTp7pvUvQPA4h7hFmnDujr7HiKxcARDpVwvt\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol\":{\"keccak256\":\"0x816005771e6f06fc6a18a41af8671d7ebe99681d8cb2c9babbf26bb32200c4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd5cee78aa86e75195e8e268b4025720e04472d5339b6482ee517a9f6328caf\",\"dweb:/ipfs/QmTMDQxGE2Sh4nnpPjwweupjA88i6JTxsctxNjTRj7pU4Z\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActionsLending.sol\":{\"keccak256\":\"0xced369bff3af5be835f9b560ecd02b754f3f4d5a49e1f2b6d56eb6888196d061\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d99c37b9a1a22b5fbd4ea48cc25da30aa95a0ad0feef9fa79d57373562de2a4e\",\"dweb:/ipfs/QmUhFRM4ZgLJjuvfRcciFfLuQzXm4vzbq91kJhv6qGKKBD\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0x0bc3689c3a876f7e4e1122f5a8b027eff52dfcde0688b98af0ea028035c71957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e21014d909a88bec34483b063a8b7575a67f12ba507267f3646e067d97213529\",\"dweb:/ipfs/QmcEkvaYLpsGzbqr8jLmKbtSyPAzAAaTQgkufpq2B3N32d\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVaultLending.sol\":{\"keccak256\":\"0x99d1333bacbd74574830dca8a9471f1daaa880c1ffe746d7c31e1150e73cf974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80256a1b967a7690980d996fd3a1b180e4cbfb7e65b8fb585d33979ad535a9d6\",\"dweb:/ipfs/QmUJCo9nGmJrMr9dUcysgu4vT7HQLkqZM553Vm7rSdniC9\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0xbc01335b64576076e0a43c0be771c89ccb5363b426521ce379f560e9d30cfe94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03d5bf8cb030a15ef51faf151654a2ffb2dabfeef04d56079a04289acc139317\",\"dweb:/ipfs/QmYGZw4JJPM4nxcWQzZKsrq8SuDW29Ye4c7enTaEsX1rpi\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x32cac346245d108670fd526a8d05a98c826fc16481b5e1a5f3342ef4bffe8692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b9abe0286f0afa0793191ce077c9e821ee7b0f6f3cf1c60a6c2691262e5970\",\"dweb:/ipfs/QmYqaL5S8TPMmLgxZGM4g7J3DrPASVi9WDNdyLWBqThd34\"]},\"project:/contracts/vaults/VaultBenqiLending.sol\":{\"keccak256\":\"0x40be202c45cc41588229eb4ea024ad8fab441479c1dd2b772b4af38e4b3c8b21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f9ff5badf880dd11c783336d0ead527d1174da99dd1f00ac3bb0d549e4ac95\",\"dweb:/ipfs/QmYyPGrwVtbr3gzcRnwvAdFgsZZGcrsSw795yqkfaeN1zk\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x403cc4459b157312633259260b8046a20c6eda5e26f49a82ac438f11b41cd9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79b8bdb83c3734f34550f3c329bc1fdb820c4a00b4c8385f6255829943df32b\",\"dweb:/ipfs/Qmbo46g48H9rXxdrxE4Coeykb9VzoseTRHJx8jH1XE8eBL\"]},\"project:/contracts/vaults/_VaultLending.sol\":{\"keccak256\":\"0xe54a1c98e4b101523f2e0d8e64a27efbfef9ca745ec61411fbb3179550e4d1bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fa228082570881d2eacd6a0e01f01b63cab79155771076eb124201325eec40b\",\"dweb:/ipfs/QmXcDeiBaneELL93BkkrWdqmkLsA5QbyALa8zpN39p5qyt\"]},\"project:/contracts/vaults/actions/VaultActionsBenqiLending.sol\":{\"keccak256\":\"0xa12f51b7626d6a7fbe681eb5b08981fa2bcb945b381287412ff561c5ac54359a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9b1f0be3128e4547a7a96eb3dc645cc20f83d331fc56c37eb27633cc542a87\",\"dweb:/ipfs/Qmdi4RffGDMmXhx3PR9MkYUVhwsq5JrphLLx5RoXgUKpkg\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0x60ab40ba3ff39e1a0117cb2821b6b05fb8e6abdf022ceeef1c43768ce7884da2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://539d6d0bf1827d7521137310bd2fdbc11cf115dee8aa6ea329f06560fc03d418\",\"dweb:/ipfs/QmPFKw1ktFPQ2vZoQ43m89ozZv1jYxLf91ZK55MKUE2bkY\"]},\"project:/contracts/vaults/actions/_VaultActionsLending.sol\":{\"keccak256\":\"0x8dbb7dfe92b8b57362b3245fb94b82d42d332be06f4868e9a35e7a7ac285480f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481f7875ea24b04c49cd0c6f90335ca6ae73474ca67d1ac10ce06af58e044864\",\"dweb:/ipfs/QmQwXpYRMPw539Wt7Lm1njwRcwvfgifTGSaLBx6cdD6h7w\"]},\"project:/contracts/vaults/mocks/MockBenqiLending.sol\":{\"keccak256\":\"0x553320901cf62d2bc79a6f4d21643ebc08da45271a79898b06fb0f685bfbb476\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459fca6ef482dda873b172091a79ed0f2888670b1ca7ec86a1014d7aa8d3fb6c\",\"dweb:/ipfs/QmUKyHzQ3CKP8sZQGTYSWB8cYqMqdw3Wkf9Rk8ARCWoe3p\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610164806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504630952c56381146100575780638e8f294b1461006b575b600080fd5b6100696100653660046100cb565b5050565b005b61008361007936600461010a565b5060009081908190565b604080519315158452602084019290925215159082015260600160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff811681146100c857600080fd5b50565b600080604083850312156100de57600080fd5b823560ff811681146100ef57600080fd5b915060208301356100ff816100a6565b809150509250929050565b60006020828403121561011c57600080fd5b8135610127816100a6565b939250505056fea264697066735822122099edd5b5c5de06d33a3c9806564cb5b5a40a7d83e6dc1ab6b14a470bc8e674ad64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504630952c56381146100575780638e8f294b1461006b575b600080fd5b6100696100653660046100cb565b5050565b005b61008361007936600461010a565b5060009081908190565b604080519315158452602084019290925215159082015260600160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff811681146100c857600080fd5b50565b600080604083850312156100de57600080fd5b823560ff811681146100ef57600080fd5b915060208301356100ff816100a6565b809150509250929050565b60006020828403121561011c57600080fd5b8135610127816100a6565b939250505056fea264697066735822122099edd5b5c5de06d33a3c9806564cb5b5a40a7d83e6dc1ab6b14a470bc8e674ad64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1213:137",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:137",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:109:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "163:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "166:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:137"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "108:42:137",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:54:137"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:65:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:73:137"
                  },
                  "nodeType": "YulIf",
                  "src": "77:93:137"
                }
              ]
            },
            "name": "validator_revert_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:137",
                "type": ""
              }
            ],
            "src": "14:162:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:333:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:137",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "429:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "438:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "441:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "431:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "431:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "431:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "403:5:137"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "414:5:137"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "421:4:137",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "410:3:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "410:16:137"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "400:2:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:27:137"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "393:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:35:137"
                  },
                  "nodeType": "YulIf",
                  "src": "390:55:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "454:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "464:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "454:6:137"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "478:47:137",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "521:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:18:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "493:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:137"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "482:7:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "567:7:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "534:32:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:41:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "534:41:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:17:137",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "594:7:137"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "263:6:137",
                "type": ""
              }
            ],
            "src": "181:426:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "682:185:137",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "728:16:137",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "737:1:137",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "740:1:137",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "730:6:137"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "730:12:137"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "730:12:137"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "703:7:137"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "712:9:137"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "699:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "699:23:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "724:2:137",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "695:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "695:32:137"
                  },
                  "nodeType": "YulIf",
                  "src": "692:52:137"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "753:36:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:137"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "766:12:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:23:137"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "757:5:137",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "831:5:137"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "798:32:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:39:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "798:39:137"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:15:137",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "856:5:137"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:137"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "648:9:137",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "659:7:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "671:6:137",
                "type": ""
              }
            ],
            "src": "612:255:137"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1017:194:137",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1027:26:137",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1039:9:137"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:2:137",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1035:3:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:18:137"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1027:4:137"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1069:9:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1094:6:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1087:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1087:14:137"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1080:6:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1080:22:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1062:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:41:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1062:41:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1123:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1134:2:137",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1119:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1119:18:137"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1139:6:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:34:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1112:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1166:9:137"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1177:2:137",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1162:3:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:18:137"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "1196:6:137"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1189:6:137"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1189:14:137"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1182:6:137"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1182:22:137"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:137"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:50:137"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1155:50:137"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "970:9:137",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "981:6:137",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "989:6:137",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "997:6:137",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1008:4:137",
                "type": ""
              }
            ],
            "src": "872:339:137"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n}",
      "id": 137,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "454:266:128:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "454:266:128:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:80;;;;;;:::i;:::-;;;;;;509:123;;;;;;:::i;:::-;-1:-1:-1;562:13:128;;;;;;509:123;;;;;1087:14:137;;1080:22;1062:41;;1134:2;1119:18;;1112:34;;;;1189:14;1182:22;1162:18;;;1155:50;1050:2;1035:18;509:123:128;;;;;;;14:162:137;108:42;101:5;97:54;90:5;87:65;77:93;;166:1;163;156:12;77:93;14:162;:::o;181:426::-;255:6;263;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;371:9;358:23;421:4;414:5;410:16;403:5;400:27;390:55;;441:1;438;431:12;390:55;464:5;-1:-1:-1;521:2:137;506:18;;493:32;534:41;493:32;534:41;:::i;:::-;594:7;584:17;;;181:426;;;;;:::o;612:255::-;671:6;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;779:9;766:23;798:39;831:5;798:39;:::i;:::-;856:5;612:255;-1:-1:-1;;;612:255:137:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultBenqiLending.sol\";\n\nimport \"../../interfaces/Benqi/IQiTokenSaleDistributor.sol\";\n\nimport \"../../interfaces/Benqi/IUnitroller.sol\";\n\ncontract MockVaultBenqiLending is VaultBenqiLending {\n    // TODO: Fill in with necessary functions\n}\n\n// TODO: Fill in remaining here: \n\ncontract MockBenqiTokenSaleDistributor is IQiTokenSaleDistributor {\n    function claim() external {\n\n    }\n}\n\ncontract MockBenqiUnitroller is IUnitrollerBenqi {\n    function markets ( address ) external view returns ( bool isListed, uint256 collateralFactorMantissa, bool isQied) {\n\n    }\n\n    function claimReward(uint8 rewardType, address payable holder) external {\n\n    }\n}\n\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockBenqiLending.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockBenqiLending.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13106
      ],
      "IAMMRouter02": [
        13194
      ],
      "IAlpacaVault": [
        12542
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12507
      ],
      "ILayerZeroReceiver": [
        14274
      ],
      "ILendingToken": [
        14486
      ],
      "IQiTokenSaleDistributor": [
        12689
      ],
      "IStargateReceiver": [
        14521
      ],
      "IUnitrollerBenqi": [
        12738
      ],
      "IVault": [
        15944
      ],
      "IVaultActions": [
        15486
      ],
      "IVaultActionsLending": [
        15577
      ],
      "IVaultLending": [
        16002
      ],
      "IZorroControllerXChain": [
        14115
      ],
      "IZorroControllerXChainBase": [
        13934
      ],
      "IZorroControllerXChainDeposit": [
        13968
      ],
      "IZorroControllerXChainEarn": [
        14038
      ],
      "IZorroControllerXChainReceiver": [
        14103
      ],
      "IZorroControllerXChainWithdraw": [
        14091
      ],
      "Initializable": [
        1774
      ],
      "MockBenqiTokenSaleDistributor": [
        24643
      ],
      "MockBenqiUnitroller": [
        24666
      ],
      "MockVaultBenqiLending": [
        24636
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        16186
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeSwapUni": [
        16392
      ],
      "VaultActions": [
        23358
      ],
      "VaultActionsBenqiLending": [
        21566
      ],
      "VaultActionsLending": [
        23874
      ],
      "VaultBase": [
        20183
      ],
      "VaultBenqiLending": [
        18370
      ],
      "VaultBenqiLendingAVAX": [
        18373
      ],
      "VaultLending": [
        20989
      ]
    },
    "id": 24667,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24630,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:128"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultBenqiLending.sol",
        "file": "../VaultBenqiLending.sol",
        "id": 24631,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24667,
        "sourceUnit": 18374,
        "src": "58:34:128",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol",
        "file": "../../interfaces/Benqi/IQiTokenSaleDistributor.sol",
        "id": 24632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24667,
        "sourceUnit": 12690,
        "src": "94:60:128",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Benqi/IUnitroller.sol",
        "file": "../../interfaces/Benqi/IUnitroller.sol",
        "id": 24633,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24667,
        "sourceUnit": 12739,
        "src": "156:48:128",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24634,
              "name": "VaultBenqiLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18370,
              "src": "240:17:128"
            },
            "id": 24635,
            "nodeType": "InheritanceSpecifier",
            "src": "240:17:128"
          }
        ],
        "canonicalName": "MockVaultBenqiLending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24636,
        "linearizedBaseContracts": [
          24636,
          18370,
          20989,
          20183,
          1885,
          1944,
          571,
          3169,
          1774,
          16002,
          15944
        ],
        "name": "MockVaultBenqiLending",
        "nameLocation": "215:21:128",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 24667,
        "src": "206:101:128",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24637,
              "name": "IQiTokenSaleDistributor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12689,
              "src": "386:23:128"
            },
            "id": 24638,
            "nodeType": "InheritanceSpecifier",
            "src": "386:23:128"
          }
        ],
        "canonicalName": "MockBenqiTokenSaleDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24643,
        "linearizedBaseContracts": [
          24643,
          12689
        ],
        "name": "MockBenqiTokenSaleDistributor",
        "nameLocation": "353:29:128",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12688
            ],
            "body": {
              "id": 24641,
              "nodeType": "Block",
              "src": "442:8:128",
              "statements": []
            },
            "functionSelector": "4e71d92d",
            "id": 24642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "425:5:128",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:128"
            },
            "returnParameters": {
              "id": 24640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:128"
            },
            "scope": 24643,
            "src": "416:34:128",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24667,
        "src": "344:108:128",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24644,
              "name": "IUnitrollerBenqi",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12738,
              "src": "486:16:128"
            },
            "id": 24645,
            "nodeType": "InheritanceSpecifier",
            "src": "486:16:128"
          }
        ],
        "canonicalName": "MockBenqiUnitroller",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24666,
        "linearizedBaseContracts": [
          24666,
          12738
        ],
        "name": "MockBenqiUnitroller",
        "nameLocation": "463:19:128",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12730
            ],
            "body": {
              "id": 24656,
              "nodeType": "Block",
              "src": "624:8:128",
              "statements": []
            },
            "functionSelector": "8e8f294b",
            "id": 24657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markets",
            "nameLocation": "518:7:128",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24657,
                  "src": "528:7:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:128",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "526:11:128"
            },
            "returnParameters": {
              "id": 24655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24650,
                  "mutability": "mutable",
                  "name": "isListed",
                  "nameLocation": "567:8:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 24657,
                  "src": "562:13:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24649,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:4:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24652,
                  "mutability": "mutable",
                  "name": "collateralFactorMantissa",
                  "nameLocation": "585:24:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 24657,
                  "src": "577:32:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24654,
                  "mutability": "mutable",
                  "name": "isQied",
                  "nameLocation": "616:6:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 24657,
                  "src": "611:11:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24653,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:4:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:63:128"
            },
            "scope": 24666,
            "src": "509:123:128",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12737
            ],
            "body": {
              "id": 24664,
              "nodeType": "Block",
              "src": "710:8:128",
              "statements": []
            },
            "functionSelector": "0952c563",
            "id": 24665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "647:11:128",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24659,
                  "mutability": "mutable",
                  "name": "rewardType",
                  "nameLocation": "665:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 24665,
                  "src": "659:16:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24658,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:5:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24661,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "693:6:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 24665,
                  "src": "677:22:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:15:128",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:42:128"
            },
            "returnParameters": {
              "id": 24663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:128"
            },
            "scope": 24666,
            "src": "638:80:128",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24667,
        "src": "454:266:128",
        "usedErrors": []
      }
    ],
    "src": "33:689:128"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-12T21:56:16.743Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}