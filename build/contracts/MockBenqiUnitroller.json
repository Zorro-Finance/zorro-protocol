{
  "contractName": "MockBenqiUnitroller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQied",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "rewardType",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardType\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQied\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockBenqiLending.sol\":\"MockBenqiUnitroller\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol\":{\"keccak256\":\"0xda9dd25da2670def30beb473d7aa28c93203046142c6febf550da390cbe6de61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f89b4bad141dca9e584ca0c2269c2a5ad35512f91eb367b1496c69bd8e0377c5\",\"dweb:/ipfs/QmXPVgB7P8RSGRYVWTf5qzLZbBArjhp6mPj2KLDNC39xgC\"]},\"project:/contracts/interfaces/Benqi/IUnitroller.sol\":{\"keccak256\":\"0x3abbfdaf5b897c1b17aaffd370f9777a8471dce408ef394fecc9c899feb08e2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36da0f0f95ef9ec6abb5ae37e115ee861ab54ca8988e5a6533ff237e844ce02\",\"dweb:/ipfs/QmZ9Wd1ut5t4AQMpzQk2CDvB24BtsAPYEe8ks72ZwwGMD9\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0x7ff4c7c52d444ba42bf3285e76be4cba43d56e588ac985decb37d5b5847c7884\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1daa92ff8fd5b86e8a9f66d55f71ad3aa92e08289885fcc50665c04d0ad1efb9\",\"dweb:/ipfs/Qmc3av7Q7xVeoftAKAoXQp5aMmDmAFxq7AneYZbS9PDocB\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Lending/ILendingToken.sol\":{\"keccak256\":\"0x45ad85de2b54a72284762da24cadd5a695f3a143d109acae569c8e9ae55a3a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a631c9ffc0e03017028becd66998715a8c02bc83c62ae2f9ee40df72b578b3\",\"dweb:/ipfs/QmR48bzWJhZTp7pvUvQPA4h7hFmnDujr7HiKxcARDpVwvt\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]},\"project:/contracts/vaults/VaultBenqiLending.sol\":{\"keccak256\":\"0x68d05d18f63059223a98459c7dac7d8fcbf103e33b5dfd82ed05d8454610d146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5f4a15ee6218df798f438b630eaa36a17748a5d9ff6712e7907bacd1712f04\",\"dweb:/ipfs/QmTD8GH614qvXD3M9yYnJFmhZLscQr7jgNeN1mmiSXg73g\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0xfd19f00b52477433e2c355e8ae78ef7aeba97af6e33209029515a3625862abbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6784f31cf7e461f731d052ae1b1bf2165f895b516d4632d0016f04017d1febd\",\"dweb:/ipfs/QmPs7Uiav3Ex5oqQ4xMcNsZwEREPTSWnoPxRgocBuW2zXT\"]},\"project:/contracts/vaults/_VaultLending.sol\":{\"keccak256\":\"0x8687b4ce226bb2256c8dc2868b5301c2789c33c6a78b069dd221668383d2747f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d584f6d1c51033c1bd8b996120c19bf66c791aede5adc473b4883c30d445b3a2\",\"dweb:/ipfs/QmZP9jgKWBaKrkSRPVuBinFKyEwmyiX6SyCU7mcr4nd3u7\"]},\"project:/contracts/vaults/actions/VaultActionsBenqiLending.sol\":{\"keccak256\":\"0xa12f51b7626d6a7fbe681eb5b08981fa2bcb945b381287412ff561c5ac54359a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9b1f0be3128e4547a7a96eb3dc645cc20f83d331fc56c37eb27633cc542a87\",\"dweb:/ipfs/Qmdi4RffGDMmXhx3PR9MkYUVhwsq5JrphLLx5RoXgUKpkg\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0xd06c45d939cdf6488e49be6ad9beef8f5e835ab1407c96a149acf4deb2c00eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c27ae3c9a1ef76ba3c3c41680f557a8055e614a74602ad0a3c8bd90bc9b13172\",\"dweb:/ipfs/QmU9Rvp5gbBBRsxmKFxprsUpQeNgY2XouSBTWs8DmEFFK2\"]},\"project:/contracts/vaults/actions/_VaultActionsLending.sol\":{\"keccak256\":\"0x108382375c83caae344f932cbd9093db3bbda9fe30cf74424c0ef5dee7f4b92b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e0554e9bb7d33b5ed10bc78dcf735da622df82ce0cf2f75dfb644df8354a6d\",\"dweb:/ipfs/QmfWTHojfbE2Bnxow71qznzUwbBBqmK5ixAWHpf7G1HE8S\"]},\"project:/contracts/vaults/mocks/MockBenqiLending.sol\":{\"keccak256\":\"0x553320901cf62d2bc79a6f4d21643ebc08da45271a79898b06fb0f685bfbb476\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://459fca6ef482dda873b172091a79ed0f2888670b1ca7ec86a1014d7aa8d3fb6c\",\"dweb:/ipfs/QmUKyHzQ3CKP8sZQGTYSWB8cYqMqdw3Wkf9Rk8ARCWoe3p\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610164806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504630952c56381146100575780638e8f294b1461006b575b600080fd5b6100696100653660046100cb565b5050565b005b61008361007936600461010a565b5060009081908190565b604080519315158452602084019290925215159082015260600160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff811681146100c857600080fd5b50565b600080604083850312156100de57600080fd5b823560ff811681146100ef57600080fd5b915060208301356100ff816100a6565b809150509250929050565b60006020828403121561011c57600080fd5b8135610127816100a6565b939250505056fea2646970667358221220fd516f63ddf9e8c6064b90a1943774287f78cd85dce3160aa3baa910f25799fd64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610052577c010000000000000000000000000000000000000000000000000000000060003504630952c56381146100575780638e8f294b1461006b575b600080fd5b6100696100653660046100cb565b5050565b005b61008361007936600461010a565b5060009081908190565b604080519315158452602084019290925215159082015260600160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff811681146100c857600080fd5b50565b600080604083850312156100de57600080fd5b823560ff811681146100ef57600080fd5b915060208301356100ff816100a6565b809150509250929050565b60006020828403121561011c57600080fd5b8135610127816100a6565b939250505056fea2646970667358221220fd516f63ddf9e8c6064b90a1943774287f78cd85dce3160aa3baa910f25799fd64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1213:121",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:121",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:109:121",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "154:16:121",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "163:1:121",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "166:1:121",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:121"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:121"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:121"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:121"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:121"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "108:42:121",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:121"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:54:121"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:65:121"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:73:121"
                  },
                  "nodeType": "YulIf",
                  "src": "77:93:121"
                }
              ]
            },
            "name": "validator_revert_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:121",
                "type": ""
              }
            ],
            "src": "14:162:121"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:333:121",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:121",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:121",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:121",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:121"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:121"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:121"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:121"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:121"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:121"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:121",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:121"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:121"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:121",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:121"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:121"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:121",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "429:16:121",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "438:1:121",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "441:1:121",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "431:6:121"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "431:12:121"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "431:12:121"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "403:5:121"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "414:5:121"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "421:4:121",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "410:3:121"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "410:16:121"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "400:2:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:27:121"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "393:6:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:35:121"
                  },
                  "nodeType": "YulIf",
                  "src": "390:55:121"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "454:15:121",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "464:5:121"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "454:6:121"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "478:47:121",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:121"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "521:2:121",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:18:121"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "493:12:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:121"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "482:7:121",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "567:7:121"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "534:32:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:41:121"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "534:41:121"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:17:121",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "594:7:121"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:121"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:121",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:121",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:121",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "263:6:121",
                "type": ""
              }
            ],
            "src": "181:426:121"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "682:185:121",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "728:16:121",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "737:1:121",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "740:1:121",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "730:6:121"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "730:12:121"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "730:12:121"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "703:7:121"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "712:9:121"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "699:3:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "699:23:121"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "724:2:121",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "695:3:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "695:32:121"
                  },
                  "nodeType": "YulIf",
                  "src": "692:52:121"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "753:36:121",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:121"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "766:12:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:23:121"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "757:5:121",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "831:5:121"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "798:32:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:39:121"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "798:39:121"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:15:121",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "856:5:121"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:121"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "648:9:121",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "659:7:121",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "671:6:121",
                "type": ""
              }
            ],
            "src": "612:255:121"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1017:194:121",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1027:26:121",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1039:9:121"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:2:121",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1035:3:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:18:121"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1027:4:121"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1069:9:121"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1094:6:121"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1087:6:121"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1087:14:121"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1080:6:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1080:22:121"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1062:6:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:41:121"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1062:41:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1123:9:121"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1134:2:121",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1119:3:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1119:18:121"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1139:6:121"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1112:34:121"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1112:34:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1166:9:121"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1177:2:121",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1162:3:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:18:121"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "1196:6:121"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1189:6:121"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1189:14:121"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1182:6:121"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1182:22:121"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:121"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:50:121"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1155:50:121"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "970:9:121",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "981:6:121",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "989:6:121",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "997:6:121",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1008:4:121",
                "type": ""
              }
            ],
            "src": "872:339:121"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_bool__to_t_bool_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n}",
      "id": 121,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "454:266:112:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "454:266:112:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:80;;;;;;:::i;:::-;;;;;;509:123;;;;;;:::i;:::-;-1:-1:-1;562:13:112;;;;;;509:123;;;;;1087:14:121;;1080:22;1062:41;;1134:2;1119:18;;1112:34;;;;1189:14;1182:22;1162:18;;;1155:50;1050:2;1035:18;509:123:112;;;;;;;14:162:121;108:42;101:5;97:54;90:5;87:65;77:93;;166:1;163;156:12;77:93;14:162;:::o;181:426::-;255:6;263;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;371:9;358:23;421:4;414:5;410:16;403:5;400:27;390:55;;441:1;438;431:12;390:55;464:5;-1:-1:-1;521:2:121;506:18;;493:32;534:41;493:32;534:41;:::i;:::-;594:7;584:17;;;181:426;;;;;:::o;612:255::-;671:6;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;779:9;766:23;798:39;831:5;798:39;:::i;:::-;856:5;612:255;-1:-1:-1;;;612:255:121:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultBenqiLending.sol\";\n\nimport \"../../interfaces/Benqi/IQiTokenSaleDistributor.sol\";\n\nimport \"../../interfaces/Benqi/IUnitroller.sol\";\n\ncontract MockVaultBenqiLending is VaultBenqiLending {\n    // TODO: Fill in with necessary functions\n}\n\n// TODO: Fill in remaining here: \n\ncontract MockBenqiTokenSaleDistributor is IQiTokenSaleDistributor {\n    function claim() external {\n\n    }\n}\n\ncontract MockBenqiUnitroller is IUnitrollerBenqi {\n    function markets ( address ) external view returns ( bool isListed, uint256 collateralFactorMantissa, bool isQied) {\n\n    }\n\n    function claimReward(uint8 rewardType, address payable holder) external {\n\n    }\n}\n\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockBenqiLending.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockBenqiLending.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13580
      ],
      "IAMMRouter02": [
        13668
      ],
      "IAlpacaVault": [
        13016
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12981
      ],
      "ILayerZeroReceiver": [
        14806
      ],
      "ILendingToken": [
        15018
      ],
      "IQiTokenSaleDistributor": [
        13163
      ],
      "IStargateReceiver": [
        15053
      ],
      "IUnitrollerBenqi": [
        13212
      ],
      "IVault": [
        14041
      ],
      "IZorroControllerXChain": [
        14647
      ],
      "IZorroControllerXChainBase": [
        14426
      ],
      "IZorroControllerXChainDeposit": [
        14479
      ],
      "IZorroControllerXChainEarn": [
        14550
      ],
      "IZorroControllerXChainReceiver": [
        14635
      ],
      "IZorroControllerXChainWithdraw": [
        14623
      ],
      "Initializable": [
        1774
      ],
      "MockBenqiTokenSaleDistributor": [
        28089
      ],
      "MockBenqiUnitroller": [
        28112
      ],
      "MockVaultBenqiLending": [
        28082
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15676
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15893
      ],
      "SafeSwapUni": [
        15875
      ],
      "VaultActions": [
        27144
      ],
      "VaultActionsBenqiLending": [
        25375
      ],
      "VaultActionsLending": [
        27652
      ],
      "VaultBase": [
        22979
      ],
      "VaultBenqiLending": [
        19123
      ],
      "VaultBenqiLendingAVAX": [
        19126
      ],
      "VaultLending": [
        24899
      ]
    },
    "id": 28113,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28076,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:112"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultBenqiLending.sol",
        "file": "../VaultBenqiLending.sol",
        "id": 28077,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28113,
        "sourceUnit": 19127,
        "src": "58:34:112",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol",
        "file": "../../interfaces/Benqi/IQiTokenSaleDistributor.sol",
        "id": 28078,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28113,
        "sourceUnit": 13164,
        "src": "94:60:112",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Benqi/IUnitroller.sol",
        "file": "../../interfaces/Benqi/IUnitroller.sol",
        "id": 28079,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28113,
        "sourceUnit": 13213,
        "src": "156:48:112",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28080,
              "name": "VaultBenqiLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19123,
              "src": "240:17:112"
            },
            "id": 28081,
            "nodeType": "InheritanceSpecifier",
            "src": "240:17:112"
          }
        ],
        "canonicalName": "MockVaultBenqiLending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28082,
        "linearizedBaseContracts": [
          28082,
          19123,
          24899,
          22979,
          1885,
          1944,
          571,
          3169,
          1774,
          14041
        ],
        "name": "MockVaultBenqiLending",
        "nameLocation": "215:21:112",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28113,
        "src": "206:101:112",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28083,
              "name": "IQiTokenSaleDistributor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13163,
              "src": "386:23:112"
            },
            "id": 28084,
            "nodeType": "InheritanceSpecifier",
            "src": "386:23:112"
          }
        ],
        "canonicalName": "MockBenqiTokenSaleDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28089,
        "linearizedBaseContracts": [
          28089,
          13163
        ],
        "name": "MockBenqiTokenSaleDistributor",
        "nameLocation": "353:29:112",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              13162
            ],
            "body": {
              "id": 28087,
              "nodeType": "Block",
              "src": "442:8:112",
              "statements": []
            },
            "functionSelector": "4e71d92d",
            "id": 28088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "425:5:112",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:112"
            },
            "returnParameters": {
              "id": 28086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:112"
            },
            "scope": 28089,
            "src": "416:34:112",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28113,
        "src": "344:108:112",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28090,
              "name": "IUnitrollerBenqi",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13212,
              "src": "486:16:112"
            },
            "id": 28091,
            "nodeType": "InheritanceSpecifier",
            "src": "486:16:112"
          }
        ],
        "canonicalName": "MockBenqiUnitroller",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28112,
        "linearizedBaseContracts": [
          28112,
          13212
        ],
        "name": "MockBenqiUnitroller",
        "nameLocation": "463:19:112",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              13204
            ],
            "body": {
              "id": 28102,
              "nodeType": "Block",
              "src": "624:8:112",
              "statements": []
            },
            "functionSelector": "8e8f294b",
            "id": 28103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markets",
            "nameLocation": "518:7:112",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28093,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28103,
                  "src": "528:7:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "526:11:112"
            },
            "returnParameters": {
              "id": 28101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28096,
                  "mutability": "mutable",
                  "name": "isListed",
                  "nameLocation": "567:8:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 28103,
                  "src": "562:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28098,
                  "mutability": "mutable",
                  "name": "collateralFactorMantissa",
                  "nameLocation": "585:24:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 28103,
                  "src": "577:32:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28100,
                  "mutability": "mutable",
                  "name": "isQied",
                  "nameLocation": "616:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 28103,
                  "src": "611:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "560:63:112"
            },
            "scope": 28112,
            "src": "509:123:112",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13211
            ],
            "body": {
              "id": 28110,
              "nodeType": "Block",
              "src": "710:8:112",
              "statements": []
            },
            "functionSelector": "0952c563",
            "id": 28111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "647:11:112",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28105,
                  "mutability": "mutable",
                  "name": "rewardType",
                  "nameLocation": "665:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 28111,
                  "src": "659:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 28104,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:5:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28107,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "693:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 28111,
                  "src": "677:22:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 28106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:15:112",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:42:112"
            },
            "returnParameters": {
              "id": 28109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:112"
            },
            "scope": 28112,
            "src": "638:80:112",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28113,
        "src": "454:266:112",
        "usedErrors": []
      }
    ],
    "src": "33:689:112"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-20T20:57:39.165Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}