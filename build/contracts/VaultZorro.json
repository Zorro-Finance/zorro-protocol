{
  "contractName": "VaultZorro",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Buyback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RevShare",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "SetGov",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_onlyGov",
          "type": "bool"
        }
      ],
      "name": "SetOnlyGov",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_rewardsAddress",
          "type": "address"
        }
      ],
      "name": "SetRewardsAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_entranceFeeFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_controllerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_buyBackRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_revShareRate",
          "type": "uint256"
        }
      ],
      "name": "SetSettings",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_uniRouterAddress",
          "type": "address"
        }
      ],
      "name": "SetUniRouterAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackRateMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackRateUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerFeeMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerFeeUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnTokenPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToStablecoinPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToToken0Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToToken1Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToZORLPPoolOtherTokenPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "earnedToZORROPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entranceFeeFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entranceFeeFactorLL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entranceFeeFactorMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFarmable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isHomeChain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEarnBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpPoolOtherTokenPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMarketMovementAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onlyGov",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revShareRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revShareRateMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revShareRateUL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setDefaultStablecoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_earnedAddress",
          "type": "address"
        }
      ],
      "name": "setEarnedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_farmContractAddress",
          "type": "address"
        }
      ],
      "name": "setFarmContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_entranceFeeFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawFeeFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_controllerFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buyBackRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_revShareRate",
          "type": "uint256"
        }
      ],
      "name": "setFeeSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isFarmable",
          "type": "bool"
        }
      ],
      "name": "setIsFarmable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slippageNumerator",
          "type": "uint256"
        }
      ],
      "name": "setMaxMarketMovementAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_onlyGov",
          "type": "bool"
        }
      ],
      "name": "setOnlyGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "setPid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "setPoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_idx",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsAddress",
          "type": "address"
        }
      ],
      "name": "setRewardsAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_idx",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "setSwapPaths",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0Address",
          "type": "address"
        }
      ],
      "name": "setToken0Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token1Address",
          "type": "address"
        }
      ],
      "name": "setToken1Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniRouterAddress",
          "type": "address"
        }
      ],
      "name": "setUniRouterAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wantAddress",
          "type": "address"
        }
      ],
      "name": "setWantAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORROAddress",
          "type": "address"
        }
      ],
      "name": "setZORROAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerAddress",
          "type": "address"
        }
      ],
      "name": "setZorroControllerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "setZorroLPPoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otherToken",
          "type": "address"
        }
      ],
      "name": "setZorroLPPoolOtherToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroStakingVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroXChainController",
          "type": "address"
        }
      ],
      "name": "setZorroXChainControllerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharesTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoinPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stablecoinToToken0Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stablecoinToToken1Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token0ToStablecoinPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token1ToStablecoinPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantLockedTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorLL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFeeFactorMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPoolOtherToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelockOwner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "govAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zorroControllerAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zorroXChainController",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ZORROAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zorroStakingVault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "wantAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "earnedAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "farmContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardsAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uniRouterAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zorroLPPool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zorroLPPoolOtherToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "defaultStablecoin",
                  "type": "address"
                }
              ],
              "internalType": "struct VaultActions.VaultAddresses",
              "name": "keyAddresses",
              "type": "tuple"
            },
            {
              "internalType": "address[]",
              "name": "stablecoinToToken0Path",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "controllerFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyBackRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revShareRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "entranceFeeFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawFeeFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VaultActions.VaultFees",
              "name": "fees",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token0PriceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1PriceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "earnTokenPriceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ZORPriceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "lpPoolOtherTokenPriceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "stablecoinPriceFeed",
                  "type": "address"
                }
              ],
              "internalType": "struct VaultActions.VaultPriceFeeds",
              "name": "priceFeeds",
              "type": "tuple"
            }
          ],
          "internalType": "struct VaultZorro.VaultZorroInit",
          "name": "_initValue",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelockOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "depositWantToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovementAllowed",
          "type": "uint256"
        }
      ],
      "name": "exchangeUSDForWantToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "withdrawWantToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovementAllowed",
          "type": "uint256"
        }
      ],
      "name": "exchangeWantTokenForUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxMarketMovementAllowed",
          "type": "uint256"
        }
      ],
      "name": "earn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Buyback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RevShare\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"name\":\"SetGov\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_onlyGov\",\"type\":\"bool\"}],\"name\":\"SetOnlyGov\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rewardsAddress\",\"type\":\"address\"}],\"name\":\"SetRewardsAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_entranceFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawFeeFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_controllerFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyBackRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_revShareRate\",\"type\":\"uint256\"}],\"name\":\"SetSettings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniRouterAddress\",\"type\":\"address\"}],\"name\":\"SetUniRouterAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRateMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRateUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFeeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerFeeUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"depositWantToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovementAllowed\",\"type\":\"uint256\"}],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnTokenPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToStablecoinPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToToken0Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToToken1Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToZORLPPoolOtherTokenPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earnedToZORROPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactorLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFeeFactorMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovementAllowed\",\"type\":\"uint256\"}],\"name\":\"exchangeUSDForWantToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovementAllowed\",\"type\":\"uint256\"}],\"name\":\"exchangeWantTokenForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelockOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"govAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zorroControllerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zorroXChainController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ZORROAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zorroStakingVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wantAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earnedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"farmContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zorroLPPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"zorroLPPoolOtherToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultStablecoin\",\"type\":\"address\"}],\"internalType\":\"struct VaultActions.VaultAddresses\",\"name\":\"keyAddresses\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"stablecoinToToken0Path\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"controllerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyBackRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revShareRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entranceFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawFeeFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct VaultActions.VaultFees\",\"name\":\"fees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token0PriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1PriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earnTokenPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ZORPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpPoolOtherTokenPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stablecoinPriceFeed\",\"type\":\"address\"}],\"internalType\":\"struct VaultActions.VaultPriceFeeds\",\"name\":\"priceFeeds\",\"type\":\"tuple\"}],\"internalType\":\"struct VaultZorro.VaultZorroInit\",\"name\":\"_initValue\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelockOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFarmable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isHomeChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEarnBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpPoolOtherTokenPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMarketMovementAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyGov\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revShareRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revShareRateMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revShareRateUL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setDefaultStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_earnedAddress\",\"type\":\"address\"}],\"name\":\"setEarnedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmContractAddress\",\"type\":\"address\"}],\"name\":\"setFarmContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entranceFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawFeeFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_controllerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyBackRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revShareRate\",\"type\":\"uint256\"}],\"name\":\"setFeeSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isFarmable\",\"type\":\"bool\"}],\"name\":\"setIsFarmable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippageNumerator\",\"type\":\"uint256\"}],\"name\":\"setMaxMarketMovementAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_onlyGov\",\"type\":\"bool\"}],\"name\":\"setOnlyGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"setPid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"setPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_idx\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsAddress\",\"type\":\"address\"}],\"name\":\"setRewardsAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_idx\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"setSwapPaths\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0Address\",\"type\":\"address\"}],\"name\":\"setToken0Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1Address\",\"type\":\"address\"}],\"name\":\"setToken1Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniRouterAddress\",\"type\":\"address\"}],\"name\":\"setUniRouterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wantAddress\",\"type\":\"address\"}],\"name\":\"setWantAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORROAddress\",\"type\":\"address\"}],\"name\":\"setZORROAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerAddress\",\"type\":\"address\"}],\"name\":\"setZorroControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"setZorroLPPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otherToken\",\"type\":\"address\"}],\"name\":\"setZorroLPPoolOtherToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingVault\",\"type\":\"address\"}],\"name\":\"setZorroStakingVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroXChainController\",\"type\":\"address\"}],\"name\":\"setZorroXChainControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoinPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stablecoinToToken0Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stablecoinToToken1Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"token0ToStablecoinPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"token1ToStablecoinPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantLockedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeeFactorMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"withdrawWantToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPoolOtherToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Only to be deployed on the home of the ZOR token\",\"kind\":\"dev\",\"methods\":{\"depositWantToken(uint256)\":{\"params\":{\"_wantAmt\":\"amount of Want token to deposit/stake\"},\"returns\":{\"_0\":\"uint256 Number of shares added\"}},\"earn(uint256)\":{\"params\":{\"_maxMarketMovementAllowed\":\"The max slippage allowed. (included here just to implement interface; otherwise unused)\"}},\"exchangeUSDForWantToken(uint256,uint256)\":{\"params\":{\"_amountUSD\":\"The USD quantity to exchange\",\"_maxMarketMovementAllowed\":\"The max slippage allowed. 1000 = 0 %, 995 = 0.5%, etc.\"},\"returns\":{\"_0\":\"uint256 Amount of Want token obtained\"}},\"exchangeWantTokenForUSD(uint256,uint256)\":{\"params\":{\"_amount\":\"The Want token quantity to exchange\",\"_maxMarketMovementAllowed\":\"The max slippage allowed for swaps. (included here just to implement interface; otherwise unused)\"},\"returns\":{\"_0\":\"uint256 Amount of  token obtained\"}},\"inCaseTokensGetStuck(address,uint256,address)\":{\"params\":{\"_amount\":\"The amount of the tokens to transfer\",\"_to\":\"The address to transfer tokens to\",\"_token\":\"Address of the ERC20 token to transfer\"}},\"initialize(address,(uint256,(address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address),address[],(uint256,uint256,uint256,uint256,uint256),(address,address,address,address,address,address)))\":{\"details\":\"NOTE: Only to be deployed on home chain!\",\"params\":{\"_initValue\":\"A VaultZorroInit struct that contains all constructor args\",\"_timelockOwner\":\"The designated timelock controller address to act as owner\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFeeSettings(uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_buyBackRate\":\"Buy back rate fee numerator\",\"_controllerFee\":\"Controller fee numerator\",\"_entranceFeeFactor\":\"Entrance fee numerator (higher means smaller percentage)\",\"_revShareRate\":\"Rev share rate fee numerator\",\"_withdrawFeeFactor\":\"Withdrawal fee numerator (higher means smaller percentage)\"}},\"setGov(address)\":{\"params\":{\"_govAddress\":\"The new gov address\"}},\"setOnlyGov(bool)\":{\"params\":{\"_onlyGov\":\"whether onlyGov should be enforced\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawWantToken(uint256)\":{\"params\":{\"_wantAmt\":\"The amount of Want token to withdraw\"},\"returns\":{\"_0\":\"uint256 the number of shares removed\"}}},\"title\":\"VaultZorro. The Vault for staking the Zorro token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositWantToken(uint256)\":{\"notice\":\"Receives new deposits from user\"},\"earn(uint256)\":{\"notice\":\"The main compounding (earn) function. Reinvests profits since the last earn event.\"},\"exchangeUSDForWantToken(uint256,uint256)\":{\"notice\":\"Performs necessary operations to convert USD into Want token\"},\"exchangeWantTokenForUSD(uint256,uint256)\":{\"notice\":\"Converts Want token back into USD to be ready for withdrawal\"},\"farm()\":{\"notice\":\"Public function for farming Want token.\"},\"inCaseTokensGetStuck(address,uint256,address)\":{\"notice\":\"Safely transfer ERC20 tokens stuck in this contract to a specified address\"},\"initialize(address,(uint256,(address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address),address[],(uint256,uint256,uint256,uint256,uint256),(address,address,address,address,address,address)))\":{\"notice\":\"Upgradeable constructor\"},\"pause()\":{\"notice\":\"Pause contract\"},\"setFeeSettings(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Configure key fee parameters\"},\"setGov(address)\":{\"notice\":\"Set governor address\"},\"setOnlyGov(bool)\":{\"notice\":\"Set onlyGov property\"},\"unpause()\":{\"notice\":\"Unpause contract\"},\"withdrawWantToken(uint256)\":{\"notice\":\"Withdraw Want tokens from the Farm contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/VaultZorro.sol\":\"VaultZorro\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xa1a158e676f2b6a24680fbed4f1aec74d08c69719d9bc39a8efeaaa063b15974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://500d6fcba8e6476a539b9351797e2e4646c4e7e3fa72694f7628b871cd669102\",\"dweb:/ipfs/QmeW3gYAh58ebumDgiX1Fa8NDK9ghSCDMG5tNnQjyKG3Hs\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]},\"project:/contracts/vaults/VaultZorro.sol\":{\"keccak256\":\"0x9237cc37d96ecde5557723ba767d394e54e47cec5cf0debc3d3a72865ccde064\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5b966c61ecdba8906edf88bce71eba8d9a7cefd2ca5e9a3bbaa7b1b0619aba2\",\"dweb:/ipfs/QmPgdsPskyX4D6aAFJdCVJahTsCDjkijqJgWRpSUA6tzca\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x29689c796abdd63dcfc82fd3955afb475274843faa5d62911dc7f6bea0547226\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4422b41d9cd91c7a8bf37a0eb8374d8dd41e9d299a736315ad3ae2dcb4cd12e\",\"dweb:/ipfs/QmRJsNB7H1HAgpoFJwJJNvywJZzWDY77Xs6t9M6xS3UBrt\"]},\"project:/contracts/vaults/actions/VaultActionsZorro.sol\":{\"keccak256\":\"0x975293d41906a180030b8b686b08842518fbf24cd45c8089d3db1cc5dbbf0eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6675bb2021cfa04504abb18424a01d4ee2a47fbf74f7fdf88be606b4f0231f0a\",\"dweb:/ipfs/QmdfvzkZC4Cmx3bdWuN9xP1gHFkKo4h3228rn89f3fN2yp\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0x0901df17397296f0799eb88cef219660c7cab12739b513d8e7c385773647145c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4aa53a3b877ba11bed6f5fc2b5c2d40cc6165338ebf733558b59450000740b8\",\"dweb:/ipfs/QmQikiDKDDFCCiajG918rKT1Yu3pY2zeMybWdYhv7UEQEe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061384b806100206000396000f3fe608060405234801561001057600080fd5b50600436106105295760003560e060020a900480637bf604d8116102b3578063c0973eed11610176578063e7a03679116100dd578063f106845411610096578063f106845414610adf578063f25342bf14610ae8578063f2fde38b14610afb578063f5046a2914610b0e578063fbf5683f14610b21578063ff29b39514610b3457600080fd5b8063e7a0367914610a8c578063e9e15b4f14610a9f578063ebfba7c414610ab2578063edf5e58514610ac5578063ee50dc3414610643578063f05c09b314610ad257600080fd5b8063cfad57a21161012f578063cfad57a214610a1a578063d7cb416f14610a2d578063de84199114610a40578063e502a88d14610a53578063e65a011714610a66578063e719847414610a7957600080fd5b8063c0973eed146109bb578063c302a4d014610897578063c4d66de8146109ce578063c524a056146109e1578063c8479cd6146109f4578063c8e3d18b14610a0757600080fd5b80639fc33a9f1161021a578063ae53e58a116101d3578063ae53e58a1461095c578063b1414dbb1461096f578063b3545c0114610543578063b61bb80a14610982578063b73cba2a14610995578063bf3a7d40146109a857600080fd5b80639fc33a9f146108ea578063a0495391146108fd578063a4d2b08314610910578063aabf190b14610923578063aada5bf614610936578063ab196def1461094957600080fd5b806385f02dd61161026c57806385f02dd61461088e578063866b2018146108975780638906758d146108a05780638da5cb5b146108b3578063959334f4146108c457806396e9aff8146108d757600080fd5b80637bf604d8146108275780637ccfe8bc1461083a5780637ff36fbe1461084d578063833eeab91461086057806383f01939146108735780638456cb591461088657600080fd5b80634b0e7216116103fb5780636392ab1211610362578063693a090b1161031b578063693a090b146107c05780636ca8bd65146107d35780636f96f6fa146107e657806370d5ae05146107f9578063715018a61461080c5780637153ef861461081457600080fd5b80636392ab121461076b578063648794a41461077e57806367057b6c1461064357806367206d4014610791578063677379e5146107a457806368f54162146107b757600080fd5b8063583bda3b116103b4578063583bda3b146107015780635c975abb146107145780635da79d631461071f5780635fc77d43146107325780636183e8041461074557806361b5bf9f1461075857600080fd5b80634b0e7216146106a25780634bf71bb8146106b55780634c5b09da146106c85780634d9f7bb21461064357806355ebedec146106db578063567e07c9146106ee57600080fd5b80631e85b3ad1161049f57806336e9332d1161045857806336e9332d146106685780633f4ba83a1461067057806342da4eb31461067857806343788cd21461064357806344a3955e1461068157806346008a071461068a57600080fd5b80631e85b3ad1461061d578063211019d7146105435780632209b59e146106305780632717eff314610643578063320d47cc1461064c5780633214471f1461065f57600080fd5b80630daef321116104f15780630daef321146105a65780630fa4e01e146105dc5780631334903f146105e55780631755ff21146105ee578063178a8d07146106015780631b0d8aab1461060a57600080fd5b806305828d3e1461052e578063061c7d48146105435780630761a1721461055f5780630b6bb30b146105685780630bbd6cd61461057b575b600080fd5b61054161053c366004612d50565b610b47565b005b61054c6103e881565b6040519081526020015b60405180910390f35b61054c60f45481565b610541610576366004612d7b565b610b9f565b61058e610589366004612d98565b610c4d565b604051600160a060020a039091168152602001610556565b60cb546105cc907501000000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610556565b61054c60e25481565b61054c60e05481565b60d95461058e90600160a060020a031681565b61054c60de5481565b610541610618366004612d98565b610c77565b61058e61062b366004612d98565b610ca9565b61054c61063e366004612d98565b610cb9565b61054c61271081565b61054161065a366004612d98565b610ea1565b61054c60df5481565b610541610ed3565b610541610f00565b61054c60e35481565b61054c60e45481565b60cb5461058e906101009004600160a060020a031681565b6105416106b0366004612d50565b610f3c565b61058e6106c3366004612d98565b610f8b565b6105416106d6366004612d50565b610f9b565b61054c6106e9366004612d98565b610fea565b6105416106fc366004612d50565b6111e3565b61054161070f366004612d50565b611232565b60975460ff166105cc565b61054161072d366004612d50565b611281565b60cd5461058e90600160a060020a031681565b610541610753366004612d50565b6112d0565b610541610766366004612d50565b61131f565b61058e610779366004612d98565b61136e565b61054c61078c366004612db1565b61137e565b61054161079f366004612dd3565b6114e8565b60d05461058e90600160a060020a031681565b61054c60e15481565b60da5461058e90600160a060020a031681565b6105416107e1366004612d50565b6115f5565b60f05461058e90600160a060020a031681565b60d75461058e90600160a060020a031681565b610541611644565b610541610822366004612e15565b61167b565b60db5461058e90600160a060020a031681565b61054161084836600461308f565b61196f565b60d25461058e90600160a060020a031681565b61058e61086e366004612d98565b611c32565b610541610881366004612d7b565b611c42565b610541611c82565b61054c60dd5481565b61054c61232881565b6105416108ae366004612d50565b611cbc565b603354600160a060020a031661058e565b6105416108d2366004612d50565b611d0b565b61058e6108e5366004612d98565b611d5a565b60d55461058e90600160a060020a031681565b61058e61090b366004612d98565b611d6a565b60cf5461058e90600160a060020a031681565b60f15461058e90600160a060020a031681565b60f35461058e90600160a060020a031681565b60f25461058e90600160a060020a031681565b60ef5461058e90600160a060020a031681565b60cc5461058e90600160a060020a031681565b60d65461058e90600160a060020a031681565b6105416109a3366004612d50565b611d7a565b6105416109b6366004612d50565b611dc9565b60d85461058e90600160a060020a031681565b6105416109dc366004612d50565b611e18565b6105416109ef366004612d50565b611eb3565b610541610a02366004612d50565b611f02565b61058e610a15366004612d98565b611f51565b610541610a28366004612d50565b611f61565b60d35461058e90600160a060020a031681565b610541610a4e366004613298565b611ff6565b61054c610a61366004612db1565b612178565b610541610a74366004612d98565b6122bc565b60d45461058e90600160a060020a031681565b60d15461058e90600160a060020a031681565b610541610aad366004612d50565b6123f7565b60dc5461058e90600160a060020a031681565b60c9546105cc9060ff1681565b60cb546105cc9060ff1681565b61054c60ca5481565b60ee5461058e90600160a060020a031681565b610541610b09366004612d50565b612446565b60ce5461058e90600160a060020a031681565b61058e610b2f366004612d98565b6124fe565b610541610b423660046132cf565b61250e565b603354600160a060020a03163314610b7d5760405160e560020a62461bcd028152600401610b7490613354565b60405180910390fd5b60d38054600160a060020a031916600160a060020a0392909216919091179055565b60cb546101009004600160a060020a03163314610bd15760405160e560020a62461bcd028152600401610b7490613389565b60cb805482151575010000000000000000000000000000000000000000000275ff000000000000000000000000000000000000000000199091161790556040517f125177ac7b8930dac1e59c2b30b1b6b9191b30af40cf6bbb5d20fec4d44be60f90610c4290831515815260200190565b60405180910390a150565b60e78181548110610c5d57600080fd5b600091825260209091200154600160a060020a0316905081565b603354600160a060020a03163314610ca45760405160e560020a62461bcd028152600401610b7490613354565b60ca55565b60e68181548110610c5d57600080fd5b60cc54600090600160a060020a031633600160a060020a031614610cf25760405160e560020a62461bcd028152600401610b74906133c0565b60026065541415610d185760405160e560020a62461bcd028152600401610b74906133f7565b600260655560975460ff1615610d435760405160e560020a62461bcd028152600401610b749061342e565b60008211610d965760405160e560020a62461bcd02815260206004820152601e60248201527f57616e7420746f6b656e206465706f736974206d757374206265203e203000006044820152606401610b74565b60d154610dae90600160a060020a0316333085612615565b60e354829015801590610dc35750600060e454115b15610dfe57610dfb612710610df560e354610df560e054610def60e4548a6126c690919063ffffffff16565b906126c6565b906126d2565b90505b60e454610e0b90826126de565b60e45560d2546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e939190613465565b60e355600160655592915050565b603354600160a060020a03163314610ece5760405160e560020a62461bcd028152600401610b7490613354565b60f455565b60026065541415610ef95760405160e560020a62461bcd028152600401610b74906133f7565b6001606555565b60cb546101009004600160a060020a03163314610f325760405160e560020a62461bcd028152600401610b7490613389565b610f3a6126ea565b565b603354600160a060020a03163314610f695760405160e560020a62461bcd028152600401610b7490613354565b60d78054600160a060020a031916600160a060020a0392909216919091179055565b60ed8181548110610c5d57600080fd5b603354600160a060020a03163314610fc85760405160e560020a62461bcd028152600401610b7490613354565b60d58054600160a060020a031916600160a060020a0392909216919091179055565b60cc54600090600160a060020a031633600160a060020a0316146110235760405160e560020a62461bcd028152600401610b74906133c0565b600260655414156110495760405160e560020a62461bcd028152600401610b74906133f7565b60026065558161109e5760405160e560020a62461bcd02815260206004820152600760248201527f6e656757616e74000000000000000000000000000000000000000000000000006044820152606401610b74565b60006110bb60e354610df560e454866126c690919063ffffffff16565b905060e4548111156110cc575060e4545b60e4546110d99082612789565b60e45560e154612710111561110657611103612710610df560e154866126c690919063ffffffff16565b92505b60d1546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa158015611168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118c9190613465565b90508084111561119a578093505b8360e35410156111aa5760e35493505b60e3546111b79085612789565b60e35560cc5460d1546111d791600160a060020a03918216911686612795565b50600160655592915050565b603354600160a060020a031633146112105760405160e560020a62461bcd028152600401610b7490613354565b60cd8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a0316331461125f5760405160e560020a62461bcd028152600401610b7490613354565b60ce8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146112ae5760405160e560020a62461bcd028152600401610b7490613354565b60da8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146112fd5760405160e560020a62461bcd028152600401610b7490613354565b60d18054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a0316331461134c5760405160e560020a62461bcd028152600401610b7490613354565b60db8054600160a060020a031916600160a060020a0392909216919091179055565b60eb8181548110610c5d57600080fd5b60cc54600090600160a060020a031633600160a060020a0316146113b75760405160e560020a62461bcd028152600401610b74906133c0565b60d05460d1546113d491600160a060020a039182169116856127de565b60d0546040805160a08101825260d654600160a060020a03908116825260d254811660208084019190915260ee5482168385015260f3548216606084015260e780548551818402810184019096528086529290951694632faf47b294899493608085019391929183018282801561147457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611456575b5050505050815250856040518463ffffffff1660e060020a02815260040161149e93929190613506565b6020604051808303816000875af11580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190613465565b9392505050565b60cb546101009004600160a060020a0316331461151a5760405160e560020a62461bcd028152600401610b7490613389565b60d454600160a060020a038481169116141561157b5760405160e560020a62461bcd02815260206004820152600560248201527f21736166650000000000000000000000000000000000000000000000000000006044820152606401610b74565b60d154600160a060020a03848116911614156115dc5760405160e560020a62461bcd02815260206004820152600560248201527f21736166650000000000000000000000000000000000000000000000000000006044820152606401610b74565b6115f0600160a060020a0384168284612795565b505050565b603354600160a060020a031633146116225760405160e560020a62461bcd028152600401610b7490613354565b60cf8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116715760405160e560020a62461bcd028152600401610b7490613354565b610f3a60006128c2565b60cb546101009004600160a060020a031633146116ad5760405160e560020a62461bcd028152600401610b7490613389565b6123288510156117025760405160e560020a62461bcd02815260206004820152601a60248201527f5f656e7472616e6365466565466163746f7220746f6f206c6f770000000000006044820152606401610b74565b6127108511156117575760405160e560020a62461bcd02815260206004820152601b60248201527f5f656e7472616e6365466565466163746f7220746f6f206869676800000000006044820152606401610b74565b60e08590556123288410156117b15760405160e560020a62461bcd02815260206004820152601a60248201527f5f7769746864726177466565466163746f7220746f6f206c6f770000000000006044820152606401610b74565b6127108411156118065760405160e560020a62461bcd02815260206004820152601b60248201527f5f7769746864726177466565466163746f7220746f6f206869676800000000006044820152606401610b74565b60e18490556103e88311156118605760405160e560020a62461bcd02815260206004820152601760248201527f5f636f6e74726f6c6c657246656520746f6f20686967680000000000000000006044820152606401610b74565b60dd8390556103e88211156118ba5760405160e560020a62461bcd02815260206004820152601560248201527f5f6275794261636b5261746520746f6f206869676800000000000000000000006044820152606401610b74565b60de8290556103e88111156119145760405160e560020a62461bcd02815260206004820152601660248201527f5f72657653686172655261746520746f6f2068696768000000000000000000006044820152606401610b74565b60df819055604080518681526020810186905290810184905260608101839052608081018290527fc67e0b149a57a70fa44a531a46c2c6d8e0b242fa12f459f250012c3a5987d29a9060a00160405180910390a15050505050565b600054610100900460ff1661198a5760005460ff161561198e565b303b155b6119ad5760405160e560020a62461bcd028152600401610b749061352f565b600054610100900460ff161580156119cf576000805461ffff19166101011790555b815160ca5560c98054600160ff19909116179055602080830151805160cb8054750100000000000000000000000000000000000000000075ffffffffffffffffffffffffffffffffffffffffff0019909116610100600160a060020a039485160275ff0000000000000000000000000000000000000000001916171790558183015160cc8054600160a060020a031990811692841692909217905560408084015160cd8054841691851691909117905560608085015160ce8054851691861691909117905560a085015160d18054851691861691909117905560c085015160d28054851691861691909117905561014085015160d88054851691861691909117905561018085015160da805485169186169190911790556101e09094015160d68054909316931692909217905581850151805160dd558084015160de558082015160df559182015160e05560809091015160e1558301518051611b369260e5920190612c5e565b5060d0546040517f8b4c5aee000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690638b4c5aee90611b819060e59060040161358c565b600060405180830381865afa158015611b9e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bc691908101906135dc565b8051611bda9160e791602090910190612c5e565b506080820151805160ee8054600160a060020a0319908116600160a060020a039384161790915560a09092015160f380549093169116179055611c1c83611e18565b80156115f0576000805461ff0019169055505050565b60e58181548110610c5d57600080fd5b603354600160a060020a03163314611c6f5760405160e560020a62461bcd028152600401610b7490613354565b60cb805460ff1916911515919091179055565b60cb546101009004600160a060020a03163314611cb45760405160e560020a62461bcd028152600401610b7490613389565b610f3a612914565b603354600160a060020a03163314611ce95760405160e560020a62461bcd028152600401610b7490613354565b60d88054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611d385760405160e560020a62461bcd028152600401610b7490613354565b60dc8054600160a060020a031916600160a060020a0392909216919091179055565b60ea8181548110610c5d57600080fd5b60e88181548110610c5d57600080fd5b603354600160a060020a03163314611da75760405160e560020a62461bcd028152600401610b7490613354565b60d48054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611df65760405160e560020a62461bcd028152600401610b7490613354565b60cc8054600160a060020a031916600160a060020a0392909216919091179055565b600054610100900460ff16611e335760005460ff1615611e37565b303b155b611e565760405160e560020a62461bcd028152600401610b749061352f565b600054610100900460ff16158015611e78576000805461ffff19166101011790555b611e8061296f565b611e8982612446565b60d78054600160a060020a03191661dead1790558015611eaf576000805461ff00191690555b5050565b603354600160a060020a03163314611ee05760405160e560020a62461bcd028152600401610b7490613354565b60d68054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611f2f5760405160e560020a62461bcd028152600401610b7490613354565b60d28054600160a060020a031916600160a060020a0392909216919091179055565b60e98181548110610c5d57600080fd5b60cb546101009004600160a060020a03163314611f935760405160e560020a62461bcd028152600401610b7490613389565b60cb805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a038416908102919091179091556040519081527f91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd5490602001610c42565b603354600160a060020a031633146120235760405160e560020a62461bcd028152600401610b7490613354565b60ff821661204c5760ee8054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600114156120795760ef8054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600214156120a65760f08054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600314156120d35760f28054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600414156121005760f18054600160a060020a038316600160a060020a03199091161790555050565b8160ff166005141561212d5760f38054600160a060020a038316600160a060020a03199091161790555050565b60405160e560020a62461bcd02815260206004820152601460248201527f756e737570706f727465642066656564206964780000000000000000000000006044820152606401610b74565b60cc54600090600160a060020a031633600160a060020a0316146121b15760405160e560020a62461bcd028152600401610b74906133c0565b60975460ff16156121d75760405160e560020a62461bcd028152600401610b749061342e565b60d05460d6546121f491600160a060020a039182169116856127de565b60d0546040805160a08101825260d654600160a060020a03908116825260d254811660208084019190915260ee5482168385015260f3548216606084015260e580548551818402810184019096528086529290951694633f3dc02494899493608085019391929183018282801561147457602002820191906000526020600020908154600160a060020a03168152600190910190602001808311611456575050505050815250856040518463ffffffff1660e060020a02815260040161149e93929190613506565b600260655414156122e25760405160e560020a62461bcd028152600401610b74906133f7565b600260655560975460ff161561230d5760405160e560020a62461bcd028152600401610b749061342e565b60cb547501000000000000000000000000000000000000000000900460ff16156123635760cb546101009004600160a060020a031633146123635760405160e560020a62461bcd028152600401610b7490613389565b4360e25560d2546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa1580156123c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ec9190613465565b60e355506001606555565b603354600160a060020a031633146124245760405160e560020a62461bcd028152600401610b7490613354565b60d98054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146124735760405160e560020a62461bcd028152600401610b7490613354565b600160a060020a0381166124f25760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b74565b6124fb816128c2565b50565b60ec8181548110610c5d57600080fd5b603354600160a060020a0316331461253b5760405160e560020a62461bcd028152600401610b7490613354565b60ff83166125555761254f60e58383612cc3565b50505050565b8260ff166001141561256d5761254f60e68383612cc3565b8260ff16600214156125855761254f60e78383612cc3565b8260ff166003141561259d5761254f60e88383612cc3565b8260ff16600414156125b55761254f60e98383612cc3565b8260ff16600514156125cd5761254f60ea8383612cc3565b8260ff16600614156125e55761254f60eb8383612cc3565b8260ff16600714156125fd5761254f60ec8383612cc3565b8260ff166008141561212d5761254f60ed8383612cc3565b604051600160a060020a038085166024830152831660448201526064810182905261254f9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526129a1565b60006114e18284613697565b60006114e182846136b6565b60006114e182846136f1565b60975460ff1661273f5760405160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610b74565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b60006114e18284613709565b604051600160a060020a0383166024820152604481018290526115f09084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612662565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286c9190613465565b61287691906136f1565b604051600160a060020a03851660248201526044810182905290915061254f9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401612662565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff161561293a5760405160e560020a62461bcd028152600401610b749061342e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861276c3390565b600054610100900460ff166129995760405160e560020a62461bcd028152600401610b7490613720565b610f3a612a89565b60006129f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612abc9092919063ffffffff16565b8051909150156115f05780806020019051810190612a14919061377d565b6115f05760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b74565b600054610100900460ff16612ab35760405160e560020a62461bcd028152600401610b7490613720565b610f3a336128c2565b6060612acb8484600085612ad3565b949350505050565b60603031831115612b4f5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b74565b600160a060020a0385163b612ba95760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b74565b60008086600160a060020a03168587604051612bc591906137c6565b60006040518083038185875af1925050503d8060008114612c02576040519150601f19603f3d011682016040523d82523d6000602084013e612c07565b606091505b5091509150612c17828286612c22565b979650505050505050565b60608315612c315750816114e1565b825115612c415782518084602001fd5b8160405160e560020a62461bcd028152600401610b7491906137e2565b828054828255906000526020600020908101928215612cb3579160200282015b82811115612cb35782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190612c7e565b50612cbf929150612d16565b5090565b828054828255906000526020600020908101928215612cb3579160200282015b82811115612cb3578154600160a060020a031916600160a060020a03843516178255602090920191600190910190612ce3565b5b80821115612cbf5760008155600101612d17565b600160a060020a03811681146124fb57600080fd5b8035612d4b81612d2b565b919050565b600060208284031215612d6257600080fd5b81356114e181612d2b565b80151581146124fb57600080fd5b600060208284031215612d8d57600080fd5b81356114e181612d6d565b600060208284031215612daa57600080fd5b5035919050565b60008060408385031215612dc457600080fd5b50508035926020909101359150565b600080600060608486031215612de857600080fd5b8335612df381612d2b565b9250602084013591506040840135612e0a81612d2b565b809150509250925092565b600080600080600060a08688031215612e2d57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612ea257612ea2612e50565b60405290565b604051610200810167ffffffffffffffff81118282101715612ea257612ea2612e50565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ef557612ef5612e50565b604052919050565b600067ffffffffffffffff821115612f1757612f17612e50565b5060209081020190565b600082601f830112612f3257600080fd5b81356020612f47612f4283612efd565b612ecc565b82815291810284018101918181019086841115612f6357600080fd5b8286015b84811015612f87578035612f7a81612d2b565b8352918301918301612f67565b509695505050505050565b600060a08284031215612fa457600080fd5b612fac612e7f565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b600060c08284031215612ff257600080fd5b60405160c0810181811067ffffffffffffffff8211171561301557613015612e50565b604052905080823561302681612d2b565b8152602083013561303681612d2b565b6020820152604083013561304981612d2b565b6040820152606083013561305c81612d2b565b6060820152608083013561306f81612d2b565b608082015260a083013561308281612d2b565b60a0919091015292915050565b600080604083850312156130a257600080fd5b82356130ad81612d2b565b9150602083013567ffffffffffffffff808211156130ca57600080fd5b908401908186036103a08112156130e057600080fd5b6130e8612e7f565b8335815261020080601f198401121561310057600080fd5b613108612ea8565b925061311660208601612d40565b835261312460408601612d40565b602084015261313560608601612d40565b604084015261314660808601612d40565b606084015261315760a08601612d40565b608084015261316860c08601612d40565b60a084015261317960e08601612d40565b60c084015261010061318c818701612d40565b60e085015261012061319f818801612d40565b8286015261014091506131b3828801612d40565b908501526101606131c5878201612d40565b8286015261018091506131d9828801612d40565b908501526101a06131eb878201612d40565b828601526101c091506131ff828801612d40565b908501526101e0613211878201612d40565b82860152613220838801612d40565b8186015250505081602082015261022084013591508282111561324257600080fd5b61324e88838601612f21565b6040820152613261886102408601612f92565b6060820152613274886102e08601612fe0565b6080820152809450505050509250929050565b803560ff81168114612d4b57600080fd5b600080604083850312156132ab57600080fd5b6132b483613287565b915060208301356132c481612d2b565b809150509250929050565b6000806000604084860312156132e457600080fd5b6132ed84613287565b9250602084013567ffffffffffffffff8082111561330a57600080fd5b818601915086601f83011261331e57600080fd5b81358181111561332d57600080fd5b876020808302850101111561334157600080fd5b6020830194508093505050509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526004908201527f21676f7600000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f217a6f72726f436f6e74726f6c6c657200000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60006020828403121561347757600080fd5b5051919050565b600060a08301600160a060020a03808451168552602081818601511681870152816040860151166040870152816060860151166060870152608085015160a0608088015283815180865260c0890191508383019550600092505b808310156134fa578551851682529483019460019290920191908301906134d8565b50979650505050505050565b83815260606020820152600061351f606083018561347e565b9050826040830152949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b6020808252825482820181905260008481528281209092916040850190845b818110156135d0578354600160a060020a0316835260019384019392850192016135ab565b50909695505050505050565b600060208083850312156135ef57600080fd5b825167ffffffffffffffff81111561360657600080fd5b8301601f8101851361361757600080fd5b8051613625612f4282612efd565b8181529083028201830190838101908783111561364157600080fd5b928401925b82841015612c1757835161365981612d2b565b82529284019290840190613646565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160001904831182151516156136b1576136b1613668565b500290565b6000826136ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561370457613704613668565b500190565b60008282101561371b5761371b613668565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201527f6e697469616c697a696e67000000000000000000000000000000000000000000606082015260800190565b60006020828403121561378f57600080fd5b81516114e181612d6d565b60005b838110156137b557818101518382015260200161379d565b8381111561254f5750506000910152565b600082516137d881846020870161379a565b9190910192915050565b602081526000825180602084015261380181604085016020870161379a565b601f01601f1916919091016040019291505056fea264697066735822122046795c9cb6fb623dfc0eb64d2d16b5c1f80d7a187b7a1a2bcfdaf836e91f38c164736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106105295760003560e060020a900480637bf604d8116102b3578063c0973eed11610176578063e7a03679116100dd578063f106845411610096578063f106845414610adf578063f25342bf14610ae8578063f2fde38b14610afb578063f5046a2914610b0e578063fbf5683f14610b21578063ff29b39514610b3457600080fd5b8063e7a0367914610a8c578063e9e15b4f14610a9f578063ebfba7c414610ab2578063edf5e58514610ac5578063ee50dc3414610643578063f05c09b314610ad257600080fd5b8063cfad57a21161012f578063cfad57a214610a1a578063d7cb416f14610a2d578063de84199114610a40578063e502a88d14610a53578063e65a011714610a66578063e719847414610a7957600080fd5b8063c0973eed146109bb578063c302a4d014610897578063c4d66de8146109ce578063c524a056146109e1578063c8479cd6146109f4578063c8e3d18b14610a0757600080fd5b80639fc33a9f1161021a578063ae53e58a116101d3578063ae53e58a1461095c578063b1414dbb1461096f578063b3545c0114610543578063b61bb80a14610982578063b73cba2a14610995578063bf3a7d40146109a857600080fd5b80639fc33a9f146108ea578063a0495391146108fd578063a4d2b08314610910578063aabf190b14610923578063aada5bf614610936578063ab196def1461094957600080fd5b806385f02dd61161026c57806385f02dd61461088e578063866b2018146108975780638906758d146108a05780638da5cb5b146108b3578063959334f4146108c457806396e9aff8146108d757600080fd5b80637bf604d8146108275780637ccfe8bc1461083a5780637ff36fbe1461084d578063833eeab91461086057806383f01939146108735780638456cb591461088657600080fd5b80634b0e7216116103fb5780636392ab1211610362578063693a090b1161031b578063693a090b146107c05780636ca8bd65146107d35780636f96f6fa146107e657806370d5ae05146107f9578063715018a61461080c5780637153ef861461081457600080fd5b80636392ab121461076b578063648794a41461077e57806367057b6c1461064357806367206d4014610791578063677379e5146107a457806368f54162146107b757600080fd5b8063583bda3b116103b4578063583bda3b146107015780635c975abb146107145780635da79d631461071f5780635fc77d43146107325780636183e8041461074557806361b5bf9f1461075857600080fd5b80634b0e7216146106a25780634bf71bb8146106b55780634c5b09da146106c85780634d9f7bb21461064357806355ebedec146106db578063567e07c9146106ee57600080fd5b80631e85b3ad1161049f57806336e9332d1161045857806336e9332d146106685780633f4ba83a1461067057806342da4eb31461067857806343788cd21461064357806344a3955e1461068157806346008a071461068a57600080fd5b80631e85b3ad1461061d578063211019d7146105435780632209b59e146106305780632717eff314610643578063320d47cc1461064c5780633214471f1461065f57600080fd5b80630daef321116104f15780630daef321146105a65780630fa4e01e146105dc5780631334903f146105e55780631755ff21146105ee578063178a8d07146106015780631b0d8aab1461060a57600080fd5b806305828d3e1461052e578063061c7d48146105435780630761a1721461055f5780630b6bb30b146105685780630bbd6cd61461057b575b600080fd5b61054161053c366004612d50565b610b47565b005b61054c6103e881565b6040519081526020015b60405180910390f35b61054c60f45481565b610541610576366004612d7b565b610b9f565b61058e610589366004612d98565b610c4d565b604051600160a060020a039091168152602001610556565b60cb546105cc907501000000000000000000000000000000000000000000900460ff1681565b6040519015158152602001610556565b61054c60e25481565b61054c60e05481565b60d95461058e90600160a060020a031681565b61054c60de5481565b610541610618366004612d98565b610c77565b61058e61062b366004612d98565b610ca9565b61054c61063e366004612d98565b610cb9565b61054c61271081565b61054161065a366004612d98565b610ea1565b61054c60df5481565b610541610ed3565b610541610f00565b61054c60e35481565b61054c60e45481565b60cb5461058e906101009004600160a060020a031681565b6105416106b0366004612d50565b610f3c565b61058e6106c3366004612d98565b610f8b565b6105416106d6366004612d50565b610f9b565b61054c6106e9366004612d98565b610fea565b6105416106fc366004612d50565b6111e3565b61054161070f366004612d50565b611232565b60975460ff166105cc565b61054161072d366004612d50565b611281565b60cd5461058e90600160a060020a031681565b610541610753366004612d50565b6112d0565b610541610766366004612d50565b61131f565b61058e610779366004612d98565b61136e565b61054c61078c366004612db1565b61137e565b61054161079f366004612dd3565b6114e8565b60d05461058e90600160a060020a031681565b61054c60e15481565b60da5461058e90600160a060020a031681565b6105416107e1366004612d50565b6115f5565b60f05461058e90600160a060020a031681565b60d75461058e90600160a060020a031681565b610541611644565b610541610822366004612e15565b61167b565b60db5461058e90600160a060020a031681565b61054161084836600461308f565b61196f565b60d25461058e90600160a060020a031681565b61058e61086e366004612d98565b611c32565b610541610881366004612d7b565b611c42565b610541611c82565b61054c60dd5481565b61054c61232881565b6105416108ae366004612d50565b611cbc565b603354600160a060020a031661058e565b6105416108d2366004612d50565b611d0b565b61058e6108e5366004612d98565b611d5a565b60d55461058e90600160a060020a031681565b61058e61090b366004612d98565b611d6a565b60cf5461058e90600160a060020a031681565b60f15461058e90600160a060020a031681565b60f35461058e90600160a060020a031681565b60f25461058e90600160a060020a031681565b60ef5461058e90600160a060020a031681565b60cc5461058e90600160a060020a031681565b60d65461058e90600160a060020a031681565b6105416109a3366004612d50565b611d7a565b6105416109b6366004612d50565b611dc9565b60d85461058e90600160a060020a031681565b6105416109dc366004612d50565b611e18565b6105416109ef366004612d50565b611eb3565b610541610a02366004612d50565b611f02565b61058e610a15366004612d98565b611f51565b610541610a28366004612d50565b611f61565b60d35461058e90600160a060020a031681565b610541610a4e366004613298565b611ff6565b61054c610a61366004612db1565b612178565b610541610a74366004612d98565b6122bc565b60d45461058e90600160a060020a031681565b60d15461058e90600160a060020a031681565b610541610aad366004612d50565b6123f7565b60dc5461058e90600160a060020a031681565b60c9546105cc9060ff1681565b60cb546105cc9060ff1681565b61054c60ca5481565b60ee5461058e90600160a060020a031681565b610541610b09366004612d50565b612446565b60ce5461058e90600160a060020a031681565b61058e610b2f366004612d98565b6124fe565b610541610b423660046132cf565b61250e565b603354600160a060020a03163314610b7d5760405160e560020a62461bcd028152600401610b7490613354565b60405180910390fd5b60d38054600160a060020a031916600160a060020a0392909216919091179055565b60cb546101009004600160a060020a03163314610bd15760405160e560020a62461bcd028152600401610b7490613389565b60cb805482151575010000000000000000000000000000000000000000000275ff000000000000000000000000000000000000000000199091161790556040517f125177ac7b8930dac1e59c2b30b1b6b9191b30af40cf6bbb5d20fec4d44be60f90610c4290831515815260200190565b60405180910390a150565b60e78181548110610c5d57600080fd5b600091825260209091200154600160a060020a0316905081565b603354600160a060020a03163314610ca45760405160e560020a62461bcd028152600401610b7490613354565b60ca55565b60e68181548110610c5d57600080fd5b60cc54600090600160a060020a031633600160a060020a031614610cf25760405160e560020a62461bcd028152600401610b74906133c0565b60026065541415610d185760405160e560020a62461bcd028152600401610b74906133f7565b600260655560975460ff1615610d435760405160e560020a62461bcd028152600401610b749061342e565b60008211610d965760405160e560020a62461bcd02815260206004820152601e60248201527f57616e7420746f6b656e206465706f736974206d757374206265203e203000006044820152606401610b74565b60d154610dae90600160a060020a0316333085612615565b60e354829015801590610dc35750600060e454115b15610dfe57610dfb612710610df560e354610df560e054610def60e4548a6126c690919063ffffffff16565b906126c6565b906126d2565b90505b60e454610e0b90826126de565b60e45560d2546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e939190613465565b60e355600160655592915050565b603354600160a060020a03163314610ece5760405160e560020a62461bcd028152600401610b7490613354565b60f455565b60026065541415610ef95760405160e560020a62461bcd028152600401610b74906133f7565b6001606555565b60cb546101009004600160a060020a03163314610f325760405160e560020a62461bcd028152600401610b7490613389565b610f3a6126ea565b565b603354600160a060020a03163314610f695760405160e560020a62461bcd028152600401610b7490613354565b60d78054600160a060020a031916600160a060020a0392909216919091179055565b60ed8181548110610c5d57600080fd5b603354600160a060020a03163314610fc85760405160e560020a62461bcd028152600401610b7490613354565b60d58054600160a060020a031916600160a060020a0392909216919091179055565b60cc54600090600160a060020a031633600160a060020a0316146110235760405160e560020a62461bcd028152600401610b74906133c0565b600260655414156110495760405160e560020a62461bcd028152600401610b74906133f7565b60026065558161109e5760405160e560020a62461bcd02815260206004820152600760248201527f6e656757616e74000000000000000000000000000000000000000000000000006044820152606401610b74565b60006110bb60e354610df560e454866126c690919063ffffffff16565b905060e4548111156110cc575060e4545b60e4546110d99082612789565b60e45560e154612710111561110657611103612710610df560e154866126c690919063ffffffff16565b92505b60d1546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa158015611168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118c9190613465565b90508084111561119a578093505b8360e35410156111aa5760e35493505b60e3546111b79085612789565b60e35560cc5460d1546111d791600160a060020a03918216911686612795565b50600160655592915050565b603354600160a060020a031633146112105760405160e560020a62461bcd028152600401610b7490613354565b60cd8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a0316331461125f5760405160e560020a62461bcd028152600401610b7490613354565b60ce8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146112ae5760405160e560020a62461bcd028152600401610b7490613354565b60da8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146112fd5760405160e560020a62461bcd028152600401610b7490613354565b60d18054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a0316331461134c5760405160e560020a62461bcd028152600401610b7490613354565b60db8054600160a060020a031916600160a060020a0392909216919091179055565b60eb8181548110610c5d57600080fd5b60cc54600090600160a060020a031633600160a060020a0316146113b75760405160e560020a62461bcd028152600401610b74906133c0565b60d05460d1546113d491600160a060020a039182169116856127de565b60d0546040805160a08101825260d654600160a060020a03908116825260d254811660208084019190915260ee5482168385015260f3548216606084015260e780548551818402810184019096528086529290951694632faf47b294899493608085019391929183018282801561147457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611456575b5050505050815250856040518463ffffffff1660e060020a02815260040161149e93929190613506565b6020604051808303816000875af11580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190613465565b9392505050565b60cb546101009004600160a060020a0316331461151a5760405160e560020a62461bcd028152600401610b7490613389565b60d454600160a060020a038481169116141561157b5760405160e560020a62461bcd02815260206004820152600560248201527f21736166650000000000000000000000000000000000000000000000000000006044820152606401610b74565b60d154600160a060020a03848116911614156115dc5760405160e560020a62461bcd02815260206004820152600560248201527f21736166650000000000000000000000000000000000000000000000000000006044820152606401610b74565b6115f0600160a060020a0384168284612795565b505050565b603354600160a060020a031633146116225760405160e560020a62461bcd028152600401610b7490613354565b60cf8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116715760405160e560020a62461bcd028152600401610b7490613354565b610f3a60006128c2565b60cb546101009004600160a060020a031633146116ad5760405160e560020a62461bcd028152600401610b7490613389565b6123288510156117025760405160e560020a62461bcd02815260206004820152601a60248201527f5f656e7472616e6365466565466163746f7220746f6f206c6f770000000000006044820152606401610b74565b6127108511156117575760405160e560020a62461bcd02815260206004820152601b60248201527f5f656e7472616e6365466565466163746f7220746f6f206869676800000000006044820152606401610b74565b60e08590556123288410156117b15760405160e560020a62461bcd02815260206004820152601a60248201527f5f7769746864726177466565466163746f7220746f6f206c6f770000000000006044820152606401610b74565b6127108411156118065760405160e560020a62461bcd02815260206004820152601b60248201527f5f7769746864726177466565466163746f7220746f6f206869676800000000006044820152606401610b74565b60e18490556103e88311156118605760405160e560020a62461bcd02815260206004820152601760248201527f5f636f6e74726f6c6c657246656520746f6f20686967680000000000000000006044820152606401610b74565b60dd8390556103e88211156118ba5760405160e560020a62461bcd02815260206004820152601560248201527f5f6275794261636b5261746520746f6f206869676800000000000000000000006044820152606401610b74565b60de8290556103e88111156119145760405160e560020a62461bcd02815260206004820152601660248201527f5f72657653686172655261746520746f6f2068696768000000000000000000006044820152606401610b74565b60df819055604080518681526020810186905290810184905260608101839052608081018290527fc67e0b149a57a70fa44a531a46c2c6d8e0b242fa12f459f250012c3a5987d29a9060a00160405180910390a15050505050565b600054610100900460ff1661198a5760005460ff161561198e565b303b155b6119ad5760405160e560020a62461bcd028152600401610b749061352f565b600054610100900460ff161580156119cf576000805461ffff19166101011790555b815160ca5560c98054600160ff19909116179055602080830151805160cb8054750100000000000000000000000000000000000000000075ffffffffffffffffffffffffffffffffffffffffff0019909116610100600160a060020a039485160275ff0000000000000000000000000000000000000000001916171790558183015160cc8054600160a060020a031990811692841692909217905560408084015160cd8054841691851691909117905560608085015160ce8054851691861691909117905560a085015160d18054851691861691909117905560c085015160d28054851691861691909117905561014085015160d88054851691861691909117905561018085015160da805485169186169190911790556101e09094015160d68054909316931692909217905581850151805160dd558084015160de558082015160df559182015160e05560809091015160e1558301518051611b369260e5920190612c5e565b5060d0546040517f8b4c5aee000000000000000000000000000000000000000000000000000000008152600160a060020a0390911690638b4c5aee90611b819060e59060040161358c565b600060405180830381865afa158015611b9e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bc691908101906135dc565b8051611bda9160e791602090910190612c5e565b506080820151805160ee8054600160a060020a0319908116600160a060020a039384161790915560a09092015160f380549093169116179055611c1c83611e18565b80156115f0576000805461ff0019169055505050565b60e58181548110610c5d57600080fd5b603354600160a060020a03163314611c6f5760405160e560020a62461bcd028152600401610b7490613354565b60cb805460ff1916911515919091179055565b60cb546101009004600160a060020a03163314611cb45760405160e560020a62461bcd028152600401610b7490613389565b610f3a612914565b603354600160a060020a03163314611ce95760405160e560020a62461bcd028152600401610b7490613354565b60d88054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611d385760405160e560020a62461bcd028152600401610b7490613354565b60dc8054600160a060020a031916600160a060020a0392909216919091179055565b60ea8181548110610c5d57600080fd5b60e88181548110610c5d57600080fd5b603354600160a060020a03163314611da75760405160e560020a62461bcd028152600401610b7490613354565b60d48054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611df65760405160e560020a62461bcd028152600401610b7490613354565b60cc8054600160a060020a031916600160a060020a0392909216919091179055565b600054610100900460ff16611e335760005460ff1615611e37565b303b155b611e565760405160e560020a62461bcd028152600401610b749061352f565b600054610100900460ff16158015611e78576000805461ffff19166101011790555b611e8061296f565b611e8982612446565b60d78054600160a060020a03191661dead1790558015611eaf576000805461ff00191690555b5050565b603354600160a060020a03163314611ee05760405160e560020a62461bcd028152600401610b7490613354565b60d68054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314611f2f5760405160e560020a62461bcd028152600401610b7490613354565b60d28054600160a060020a031916600160a060020a0392909216919091179055565b60e98181548110610c5d57600080fd5b60cb546101009004600160a060020a03163314611f935760405160e560020a62461bcd028152600401610b7490613389565b60cb805474ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a038416908102919091179091556040519081527f91a8c1cc2d4a3bb60738481947a00cbb9899c822916694cf8bb1d68172fdcd5490602001610c42565b603354600160a060020a031633146120235760405160e560020a62461bcd028152600401610b7490613354565b60ff821661204c5760ee8054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600114156120795760ef8054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600214156120a65760f08054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600314156120d35760f28054600160a060020a038316600160a060020a03199091161790555050565b8160ff16600414156121005760f18054600160a060020a038316600160a060020a03199091161790555050565b8160ff166005141561212d5760f38054600160a060020a038316600160a060020a03199091161790555050565b60405160e560020a62461bcd02815260206004820152601460248201527f756e737570706f727465642066656564206964780000000000000000000000006044820152606401610b74565b60cc54600090600160a060020a031633600160a060020a0316146121b15760405160e560020a62461bcd028152600401610b74906133c0565b60975460ff16156121d75760405160e560020a62461bcd028152600401610b749061342e565b60d05460d6546121f491600160a060020a039182169116856127de565b60d0546040805160a08101825260d654600160a060020a03908116825260d254811660208084019190915260ee5482168385015260f3548216606084015260e580548551818402810184019096528086529290951694633f3dc02494899493608085019391929183018282801561147457602002820191906000526020600020908154600160a060020a03168152600190910190602001808311611456575050505050815250856040518463ffffffff1660e060020a02815260040161149e93929190613506565b600260655414156122e25760405160e560020a62461bcd028152600401610b74906133f7565b600260655560975460ff161561230d5760405160e560020a62461bcd028152600401610b749061342e565b60cb547501000000000000000000000000000000000000000000900460ff16156123635760cb546101009004600160a060020a031633146123635760405160e560020a62461bcd028152600401610b7490613389565b4360e25560d2546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa1580156123c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ec9190613465565b60e355506001606555565b603354600160a060020a031633146124245760405160e560020a62461bcd028152600401610b7490613354565b60d98054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146124735760405160e560020a62461bcd028152600401610b7490613354565b600160a060020a0381166124f25760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b74565b6124fb816128c2565b50565b60ec8181548110610c5d57600080fd5b603354600160a060020a0316331461253b5760405160e560020a62461bcd028152600401610b7490613354565b60ff83166125555761254f60e58383612cc3565b50505050565b8260ff166001141561256d5761254f60e68383612cc3565b8260ff16600214156125855761254f60e78383612cc3565b8260ff166003141561259d5761254f60e88383612cc3565b8260ff16600414156125b55761254f60e98383612cc3565b8260ff16600514156125cd5761254f60ea8383612cc3565b8260ff16600614156125e55761254f60eb8383612cc3565b8260ff16600714156125fd5761254f60ec8383612cc3565b8260ff166008141561212d5761254f60ed8383612cc3565b604051600160a060020a038085166024830152831660448201526064810182905261254f9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526129a1565b60006114e18284613697565b60006114e182846136b6565b60006114e182846136f1565b60975460ff1661273f5760405160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610b74565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b60006114e18284613709565b604051600160a060020a0383166024820152604481018290526115f09084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612662565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286c9190613465565b61287691906136f1565b604051600160a060020a03851660248201526044810182905290915061254f9085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401612662565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff161561293a5760405160e560020a62461bcd028152600401610b749061342e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861276c3390565b600054610100900460ff166129995760405160e560020a62461bcd028152600401610b7490613720565b610f3a612a89565b60006129f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612abc9092919063ffffffff16565b8051909150156115f05780806020019051810190612a14919061377d565b6115f05760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b74565b600054610100900460ff16612ab35760405160e560020a62461bcd028152600401610b7490613720565b610f3a336128c2565b6060612acb8484600085612ad3565b949350505050565b60603031831115612b4f5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b74565b600160a060020a0385163b612ba95760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b74565b60008086600160a060020a03168587604051612bc591906137c6565b60006040518083038185875af1925050503d8060008114612c02576040519150601f19603f3d011682016040523d82523d6000602084013e612c07565b606091505b5091509150612c17828286612c22565b979650505050505050565b60608315612c315750816114e1565b825115612c415782518084602001fd5b8160405160e560020a62461bcd028152600401610b7491906137e2565b828054828255906000526020600020908101928215612cb3579160200282015b82811115612cb35782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190612c7e565b50612cbf929150612d16565b5090565b828054828255906000526020600020908101928215612cb3579160200282015b82811115612cb3578154600160a060020a031916600160a060020a03843516178255602090920191600190910190612ce3565b5b80821115612cbf5760008155600101612d17565b600160a060020a03811681146124fb57600080fd5b8035612d4b81612d2b565b919050565b600060208284031215612d6257600080fd5b81356114e181612d2b565b80151581146124fb57600080fd5b600060208284031215612d8d57600080fd5b81356114e181612d6d565b600060208284031215612daa57600080fd5b5035919050565b60008060408385031215612dc457600080fd5b50508035926020909101359150565b600080600060608486031215612de857600080fd5b8335612df381612d2b565b9250602084013591506040840135612e0a81612d2b565b809150509250925092565b600080600080600060a08688031215612e2d57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612ea257612ea2612e50565b60405290565b604051610200810167ffffffffffffffff81118282101715612ea257612ea2612e50565b604051601f8201601f1916810167ffffffffffffffff81118282101715612ef557612ef5612e50565b604052919050565b600067ffffffffffffffff821115612f1757612f17612e50565b5060209081020190565b600082601f830112612f3257600080fd5b81356020612f47612f4283612efd565b612ecc565b82815291810284018101918181019086841115612f6357600080fd5b8286015b84811015612f87578035612f7a81612d2b565b8352918301918301612f67565b509695505050505050565b600060a08284031215612fa457600080fd5b612fac612e7f565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b600060c08284031215612ff257600080fd5b60405160c0810181811067ffffffffffffffff8211171561301557613015612e50565b604052905080823561302681612d2b565b8152602083013561303681612d2b565b6020820152604083013561304981612d2b565b6040820152606083013561305c81612d2b565b6060820152608083013561306f81612d2b565b608082015260a083013561308281612d2b565b60a0919091015292915050565b600080604083850312156130a257600080fd5b82356130ad81612d2b565b9150602083013567ffffffffffffffff808211156130ca57600080fd5b908401908186036103a08112156130e057600080fd5b6130e8612e7f565b8335815261020080601f198401121561310057600080fd5b613108612ea8565b925061311660208601612d40565b835261312460408601612d40565b602084015261313560608601612d40565b604084015261314660808601612d40565b606084015261315760a08601612d40565b608084015261316860c08601612d40565b60a084015261317960e08601612d40565b60c084015261010061318c818701612d40565b60e085015261012061319f818801612d40565b8286015261014091506131b3828801612d40565b908501526101606131c5878201612d40565b8286015261018091506131d9828801612d40565b908501526101a06131eb878201612d40565b828601526101c091506131ff828801612d40565b908501526101e0613211878201612d40565b82860152613220838801612d40565b8186015250505081602082015261022084013591508282111561324257600080fd5b61324e88838601612f21565b6040820152613261886102408601612f92565b6060820152613274886102e08601612fe0565b6080820152809450505050509250929050565b803560ff81168114612d4b57600080fd5b600080604083850312156132ab57600080fd5b6132b483613287565b915060208301356132c481612d2b565b809150509250929050565b6000806000604084860312156132e457600080fd5b6132ed84613287565b9250602084013567ffffffffffffffff8082111561330a57600080fd5b818601915086601f83011261331e57600080fd5b81358181111561332d57600080fd5b876020808302850101111561334157600080fd5b6020830194508093505050509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526004908201527f21676f7600000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526010908201527f217a6f72726f436f6e74726f6c6c657200000000000000000000000000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60006020828403121561347757600080fd5b5051919050565b600060a08301600160a060020a03808451168552602081818601511681870152816040860151166040870152816060860151166060870152608085015160a0608088015283815180865260c0890191508383019550600092505b808310156134fa578551851682529483019460019290920191908301906134d8565b50979650505050505050565b83815260606020820152600061351f606083018561347e565b9050826040830152949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b6020808252825482820181905260008481528281209092916040850190845b818110156135d0578354600160a060020a0316835260019384019392850192016135ab565b50909695505050505050565b600060208083850312156135ef57600080fd5b825167ffffffffffffffff81111561360657600080fd5b8301601f8101851361361757600080fd5b8051613625612f4282612efd565b8181529083028201830190838101908783111561364157600080fd5b928401925b82841015612c1757835161365981612d2b565b82529284019290840190613646565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160001904831182151516156136b1576136b1613668565b500290565b6000826136ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000821982111561370457613704613668565b500190565b60008282101561371b5761371b613668565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201527f6e697469616c697a696e67000000000000000000000000000000000000000000606082015260800190565b60006020828403121561378f57600080fd5b81516114e181612d6d565b60005b838110156137b557818101518382015260200161379d565b8381111561254f5750506000910152565b600082516137d881846020870161379a565b9190910192915050565b602081526000825180602084015261380181604085016020870161379a565b601f01601f1916919091016040019291505056fea264697066735822122046795c9cb6fb623dfc0eb64d2d16b5c1f80d7a187b7a1a2bcfdaf836e91f38c164736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:26045:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:109:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "155:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "158:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "148:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "148:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "148:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "100:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "69:93:123"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:123",
                "type": ""
              }
            ],
            "src": "14:154:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "222:85:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "232:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "254:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "232:5:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "270:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:31:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "270:31:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "201:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "212:5:123",
                "type": ""
              }
            ],
            "src": "173:134:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "382:177:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "403:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "412:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "399:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "399:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "424:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "395:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "392:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "453:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "479:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "466:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "457:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "523:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "498:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:31:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "498:31:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "538:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "548:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "538:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "348:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "359:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "371:6:123",
                "type": ""
              }
            ],
            "src": "312:247:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "687:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "698:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "683:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "675:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "717:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "728:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "710:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "710:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "634:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "645:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "656:4:123",
                "type": ""
              }
            ],
            "src": "564:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "788:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "842:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "851:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "854:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "844:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "844:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "844:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "811:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "832:5:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:6:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "825:13:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "818:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "818:21:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "808:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "808:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:40:123"
                  },
                  "nodeType": "YulIf",
                  "src": "798:60:123"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "777:5:123",
                "type": ""
              }
            ],
            "src": "746:118:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "936:174:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "991:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "994:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "957:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "949:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "946:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1033:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1020:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1020:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1011:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1074:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1052:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1052:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1089:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1099:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1089:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "902:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "913:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "925:6:123",
                "type": ""
              }
            ],
            "src": "869:241:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1185:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1231:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1240:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1243:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1233:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1233:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1233:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1206:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1215:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1202:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1202:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1198:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1195:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1256:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1279:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1266:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1151:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1162:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1174:6:123",
                "type": ""
              }
            ],
            "src": "1115:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1401:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1411:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1423:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1419:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1411:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1468:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1476:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1446:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1446:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1381:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1392:4:123",
                "type": ""
              }
            ],
            "src": "1300:226:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1626:92:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1636:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1648:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1659:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1644:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1636:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1678:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1703:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1696:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1696:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1689:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1689:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:41:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1595:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1606:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1617:4:123",
                "type": ""
              }
            ],
            "src": "1531:187:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1810:161:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1856:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1865:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1868:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1858:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1858:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1858:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1831:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1840:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1827:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1827:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1852:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1823:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1823:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1820:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1881:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1904:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1891:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1891:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1881:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1950:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1961:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1946:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1946:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1933:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1933:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1923:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1768:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1779:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1791:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1799:6:123",
                "type": ""
              }
            ],
            "src": "1723:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:352:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2126:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2135:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2128:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2128:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2101:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2110:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2097:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2097:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2122:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2093:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2090:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2151:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2177:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2164:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2155:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2221:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2196:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:31:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2196:31:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2236:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2246:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2236:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2287:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2298:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2283:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2283:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2270:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2311:47:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2343:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2354:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2339:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2326:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:32:123"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2315:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2392:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2367:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:33:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2409:17:123",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2419:7:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2030:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2041:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2053:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2061:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2069:6:123",
                "type": ""
              }
            ],
            "src": "1976:456:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2566:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2576:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2588:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2599:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2584:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2576:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2618:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2633:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2641:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2629:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2629:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2611:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2611:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2611:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2535:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2546:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2557:4:123",
                "type": ""
              }
            ],
            "src": "2437:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2834:316:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2881:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2890:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2893:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2883:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2883:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2883:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2855:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2864:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2851:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2851:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2876:3:123",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2847:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2847:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2844:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2906:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2929:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2916:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2906:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2948:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2975:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2986:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2971:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2971:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2958:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2958:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2948:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2999:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3026:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3037:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3022:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3022:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3009:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2999:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3050:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3077:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3088:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3073:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3073:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3060:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3101:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3128:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3139:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3111:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3111:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3101:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2768:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2779:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2791:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2799:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2807:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2815:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2823:6:123",
                "type": ""
              }
            ],
            "src": "2696:454:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3187:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3204:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3207:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3197:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3197:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3301:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:4:123",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3294:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3294:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3294:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3325:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3328:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3318:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3318:15:123"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3155:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3390:207:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3400:19:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3416:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3410:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3410:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3400:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3428:35:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3450:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3458:4:123",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3446:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3446:17:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3432:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3538:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3540:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3540:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3540:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3481:10:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3493:18:123",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3478:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3478:34:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3517:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3529:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3514:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3514:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3475:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:62:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3472:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3576:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3580:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3569:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3569:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3569:22:123"
                }
              ]
            },
            "name": "allocate_memory_3858",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3379:6:123",
                "type": ""
              }
            ],
            "src": "3344:253:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3648:209:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3658:19:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3674:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3668:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3658:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3686:37:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3708:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3716:6:123",
                        "type": "",
                        "value": "0x0200"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3704:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:19:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3690:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3798:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3800:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3800:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3800:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3741:10:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3753:18:123",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3738:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:34:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3777:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3789:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3774:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3774:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3735:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3735:62:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3732:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3836:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3840:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3829:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3829:22:123"
                }
              ]
            },
            "name": "allocate_memory_3863",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3637:6:123",
                "type": ""
              }
            ],
            "src": "3602:255:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3907:230:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:19:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3933:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3927:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3917:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3945:58:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3967:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "3983:4:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3989:2:123",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3979:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3979:13:123"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3998:2:123",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3994:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3994:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3975:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3975:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3963:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:40:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3949:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4078:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4080:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4080:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4080:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4021:10:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4033:18:123",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4018:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:34:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4057:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4069:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4054:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4054:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4015:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4015:62:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4012:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4116:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4120:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:22:123"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3887:4:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3896:6:123",
                "type": ""
              }
            ],
            "src": "3862:275:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4211:117:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4255:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4257:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4257:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4257:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4227:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4235:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4224:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4221:56:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4286:36:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4302:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4310:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:17:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4317:4:123",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:28:123"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "4286:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_array_address_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4191:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4202:4:123",
                "type": ""
              }
            ],
            "src": "4142:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4397:674:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4446:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4455:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4458:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4448:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4448:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4448:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4425:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4433:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4421:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4421:17:123"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4440:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4417:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4417:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4410:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4407:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4471:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4494:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4481:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4481:20:123"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4475:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4510:14:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4520:4:123",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4514:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4533:71:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4600:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "4560:39:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4560:43:123"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4544:15:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4544:60:123"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "4537:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4613:16:123",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "4626:3:123"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "4617:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "4645:3:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4650:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4638:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4638:15:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4662:19:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "4673:3:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4678:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4669:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4669:12:123"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "4662:3:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4690:47:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4712:6:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4724:2:123"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4728:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "4720:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4720:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4708:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4708:24:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4734:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4704:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:33:123"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "4694:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4765:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4774:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4777:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4767:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4767:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4767:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4752:6:123"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4760:3:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4749:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:15:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4746:35:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4790:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4805:6:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4813:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4801:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4801:15:123"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "4794:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4881:161:123",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4895:30:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "4921:3:123"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "4908:12:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4908:17:123"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4899:5:123",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4963:5:123"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "4938:24:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4938:31:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4938:31:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "4989:3:123"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4994:5:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4982:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4982:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4982:18:123"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5013:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "5024:3:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "5029:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5020:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5020:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "5013:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4836:3:123"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4841:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4833:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4833:15:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4849:23:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4851:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "4862:3:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "4867:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4858:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4858:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "4851:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4829:3:123",
                    "statements": []
                  },
                  "src": "4825:217:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5051:14:123",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "5060:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5051:5:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_address_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4371:6:123",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4379:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "4387:5:123",
                "type": ""
              }
            ],
            "src": "4333:738:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5142:415:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5186:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5195:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5198:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5188:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5188:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5188:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5163:3:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5168:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5159:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5159:19:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5180:4:123",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5155:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5155:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5152:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5211:31:123",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3858",
                      "nodeType": "YulIdentifier",
                      "src": "5220:20:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:22:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5211:5:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5258:5:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5278:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5265:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5265:23:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5251:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5251:38:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5251:38:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5309:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5316:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5305:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5305:14:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5338:9:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5349:2:123",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5334:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5334:18:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5321:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5321:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5298:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5298:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5298:56:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5374:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5381:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5370:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5370:14:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5403:9:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5414:2:123",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5399:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5399:18:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5386:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5386:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5363:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5363:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5363:56:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5439:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5446:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5435:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5435:14:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5468:9:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5479:2:123",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5464:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5464:18:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5451:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5451:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5428:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5428:56:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5504:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5511:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5500:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5500:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5534:9:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5545:3:123",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5530:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5530:19:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "5517:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5517:33:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5493:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5493:58:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5493:58:123"
                }
              ]
            },
            "name": "abi_decode_struct_VaultFees",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5113:9:123",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5124:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5132:5:123",
                "type": ""
              }
            ],
            "src": "5076:481:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5634:1114:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5678:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5687:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5690:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5680:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5680:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5680:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5655:3:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5660:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5651:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:19:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5672:4:123",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5647:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5647:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5644:50:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5703:23:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5717:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5717:9:123"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "5707:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5735:35:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5757:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5765:4:123",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5753:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5753:17:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5739:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5845:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5847:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5847:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5847:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5788:10:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5800:18:123",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5785:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5785:34:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5824:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5836:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5821:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5782:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:62:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5779:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5883:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5887:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5876:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5876:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5876:22:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5907:15:123",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "5916:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5907:5:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5931:38:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5959:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5946:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:23:123"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5935:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6003:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5978:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5978:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6027:6:123"
                      },
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6035:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6020:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:23:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6020:23:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6052:47:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6084:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6095:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6080:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6080:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6067:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:32:123"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "6056:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "6133:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6108:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6108:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6108:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6161:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6169:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6157:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6157:15:123"
                      },
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "6174:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6150:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6150:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6150:32:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6191:47:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6223:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6234:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6219:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6219:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6206:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6206:32:123"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "6195:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "6272:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6247:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6247:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6300:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6308:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6296:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6296:15:123"
                      },
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "6313:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6289:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6289:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6289:32:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6330:47:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6362:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6373:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6358:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6358:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6345:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6345:32:123"
                  },
                  "variables": [
                    {
                      "name": "value_4",
                      "nodeType": "YulTypedName",
                      "src": "6334:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "6411:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6386:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6386:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6386:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6439:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6447:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6435:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6435:15:123"
                      },
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "6452:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6428:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6428:32:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6469:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6501:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6512:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6497:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6497:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6484:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:33:123"
                  },
                  "variables": [
                    {
                      "name": "value_5",
                      "nodeType": "YulTypedName",
                      "src": "6473:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_5",
                        "nodeType": "YulIdentifier",
                        "src": "6551:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6526:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6526:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6579:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6587:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6575:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6575:16:123"
                      },
                      {
                        "name": "value_5",
                        "nodeType": "YulIdentifier",
                        "src": "6593:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6568:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6568:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6568:33:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6610:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6642:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6653:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6638:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6625:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6625:33:123"
                  },
                  "variables": [
                    {
                      "name": "value_6",
                      "nodeType": "YulTypedName",
                      "src": "6614:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_6",
                        "nodeType": "YulIdentifier",
                        "src": "6692:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6667:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6667:33:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6720:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6728:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6716:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6716:16:123"
                      },
                      {
                        "name": "value_6",
                        "nodeType": "YulIdentifier",
                        "src": "6734:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6709:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6709:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6709:33:123"
                }
              ]
            },
            "name": "abi_decode_struct_VaultPriceFeeds",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5605:9:123",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5616:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5624:5:123",
                "type": ""
              }
            ],
            "src": "5562:1186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6873:2319:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6919:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6928:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6931:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6921:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6921:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6921:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6894:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6903:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6915:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6886:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6886:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6883:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6944:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6970:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6957:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6957:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6948:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7014:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6989:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6989:31:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6989:31:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7029:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7039:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7029:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7053:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7084:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7095:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7080:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7080:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7067:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "7057:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7108:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7118:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7112:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7163:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7172:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7175:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7165:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7165:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7165:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7151:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7159:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7148:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7148:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7145:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7188:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7202:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7213:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7198:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7198:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "7192:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7229:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "7243:7:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "7252:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7239:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7239:16:123"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "7233:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7283:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7292:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7295:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7285:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7285:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7285:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7271:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7275:6:123",
                        "type": "",
                        "value": "0x03a0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7267:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7267:15:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7264:35:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7308:37:123",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3858",
                      "nodeType": "YulIdentifier",
                      "src": "7323:20:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7323:22:123"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "7312:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7361:7:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7383:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7370:12:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7370:16:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:33:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7396:16:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7406:6:123",
                    "type": "",
                    "value": "0x0200"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "7400:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7450:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7459:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7462:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7452:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7452:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7452:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "7432:2:123"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7440:2:123",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7436:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7436:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7428:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7428:16:123"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "7446:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7424:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7424:25:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7421:45:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7475:37:123",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_3863",
                      "nodeType": "YulIdentifier",
                      "src": "7490:20:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7490:22:123"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "7479:7:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "7528:7:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7560:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7564:2:123",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7556:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7556:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7537:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7537:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7521:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7521:48:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7521:48:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7589:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7598:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7585:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7585:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7626:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7630:2:123",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7622:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7622:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7603:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7603:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7578:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7578:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7578:57:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7655:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7664:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7651:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7651:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7692:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7696:2:123",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7688:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7688:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7669:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7669:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7644:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7644:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7644:57:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7721:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7730:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7717:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7717:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7758:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7762:3:123",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7754:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7754:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7735:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7735:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7710:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7710:58:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7710:58:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7788:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7797:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7784:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7784:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7826:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7830:4:123",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7822:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7822:13:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7803:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7803:33:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7777:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7777:60:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7777:60:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7857:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7866:4:123",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7853:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7853:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7896:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7900:3:123",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7892:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7892:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7873:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7873:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7846:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7846:60:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7846:60:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "7926:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7935:3:123",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7922:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7964:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7968:3:123",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7960:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7960:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "7941:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7941:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7915:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7915:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7915:59:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7983:13:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7993:3:123",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "7987:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8016:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8025:3:123",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8012:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8012:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8054:2:123"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "8058:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8050:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8050:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8031:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8031:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8005:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8005:58:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8005:58:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8072:13:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8082:3:123",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_6",
                      "nodeType": "YulTypedName",
                      "src": "8076:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8105:7:123"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "8114:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8101:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8101:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8142:2:123"
                              },
                              {
                                "name": "_6",
                                "nodeType": "YulIdentifier",
                                "src": "8146:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8138:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8138:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8119:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8119:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8094:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8094:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8094:57:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8160:13:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8170:3:123",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_7",
                      "nodeType": "YulTypedName",
                      "src": "8164:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8193:7:123"
                          },
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "8202:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8189:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8189:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8230:2:123"
                              },
                              {
                                "name": "_7",
                                "nodeType": "YulIdentifier",
                                "src": "8234:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8226:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8226:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8207:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8207:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8182:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8182:57:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8248:13:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8258:3:123",
                    "type": "",
                    "value": "352"
                  },
                  "variables": [
                    {
                      "name": "_8",
                      "nodeType": "YulTypedName",
                      "src": "8252:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8281:7:123"
                          },
                          {
                            "name": "_7",
                            "nodeType": "YulIdentifier",
                            "src": "8290:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8277:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8277:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8318:2:123"
                              },
                              {
                                "name": "_8",
                                "nodeType": "YulIdentifier",
                                "src": "8322:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8314:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8314:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8295:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8295:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8270:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8270:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8270:57:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8336:13:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8346:3:123",
                    "type": "",
                    "value": "384"
                  },
                  "variables": [
                    {
                      "name": "_9",
                      "nodeType": "YulTypedName",
                      "src": "8340:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8369:7:123"
                          },
                          {
                            "name": "_8",
                            "nodeType": "YulIdentifier",
                            "src": "8378:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8365:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8365:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8406:2:123"
                              },
                              {
                                "name": "_9",
                                "nodeType": "YulIdentifier",
                                "src": "8410:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8402:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8402:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8383:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8358:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8358:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8358:57:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8424:14:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8435:3:123",
                    "type": "",
                    "value": "416"
                  },
                  "variables": [
                    {
                      "name": "_10",
                      "nodeType": "YulTypedName",
                      "src": "8428:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8458:7:123"
                          },
                          {
                            "name": "_9",
                            "nodeType": "YulIdentifier",
                            "src": "8467:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8454:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8454:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8495:2:123"
                              },
                              {
                                "name": "_10",
                                "nodeType": "YulIdentifier",
                                "src": "8499:3:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8491:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8491:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8472:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8472:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8447:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8447:58:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8447:58:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8514:14:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8525:3:123",
                    "type": "",
                    "value": "448"
                  },
                  "variables": [
                    {
                      "name": "_11",
                      "nodeType": "YulTypedName",
                      "src": "8518:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8548:7:123"
                          },
                          {
                            "name": "_10",
                            "nodeType": "YulIdentifier",
                            "src": "8557:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8544:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8544:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8586:2:123"
                              },
                              {
                                "name": "_11",
                                "nodeType": "YulIdentifier",
                                "src": "8590:3:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8582:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8582:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8563:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8563:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8537:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8537:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8537:59:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8605:14:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8616:3:123",
                    "type": "",
                    "value": "480"
                  },
                  "variables": [
                    {
                      "name": "_12",
                      "nodeType": "YulTypedName",
                      "src": "8609:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8639:7:123"
                          },
                          {
                            "name": "_11",
                            "nodeType": "YulIdentifier",
                            "src": "8648:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8635:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8635:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8677:2:123"
                              },
                              {
                                "name": "_12",
                                "nodeType": "YulIdentifier",
                                "src": "8681:3:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8673:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8673:12:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8654:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8654:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8628:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8628:59:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "8707:7:123"
                          },
                          {
                            "name": "_12",
                            "nodeType": "YulIdentifier",
                            "src": "8716:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8703:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8703:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8745:2:123"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "8749:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8741:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8741:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "8722:18:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8722:31:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8696:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8696:58:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8696:58:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "8774:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8783:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8770:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8770:16:123"
                      },
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "8788:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8763:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8763:33:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8763:33:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8805:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8838:2:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8842:3:123",
                            "type": "",
                            "value": "544"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8834:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8834:12:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8821:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8821:26:123"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "8809:8:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8876:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8885:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8888:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8878:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8878:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8878:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "8862:8:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8872:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8859:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8859:16:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8856:36:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "8912:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8921:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8908:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8908:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8959:2:123"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "8963:8:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8955:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8955:17:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8974:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "8926:28:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8926:56:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8901:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8901:82:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8901:82:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "9003:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9012:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8999:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8999:16:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9049:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9053:3:123",
                                "type": "",
                                "value": "576"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9045:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9045:12:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9059:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_struct_VaultFees",
                          "nodeType": "YulIdentifier",
                          "src": "9017:27:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9017:50:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8992:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8992:76:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8992:76:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "9088:7:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9097:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9084:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9084:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9141:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9145:3:123",
                                "type": "",
                                "value": "736"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9137:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9137:12:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9151:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_struct_VaultPriceFeeds",
                          "nodeType": "YulIdentifier",
                          "src": "9103:33:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9103:56:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9077:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9077:83:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9077:83:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9169:17:123",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "9179:7:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9169:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_struct$_VaultZorroInit_$20472_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6831:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6842:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6854:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6862:6:123",
                "type": ""
              }
            ],
            "src": "6753:2439:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9244:109:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9254:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9276:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9263:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9263:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9254:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9331:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9340:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9343:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9333:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9333:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9333:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9305:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9316:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9323:4:123",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9312:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9312:16:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9302:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9302:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9295:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9295:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9292:55:123"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9223:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9234:5:123",
                "type": ""
              }
            ],
            "src": "9197:156:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9443:232:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9489:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9498:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9501:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9491:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9491:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9491:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9464:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9485:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9456:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9456:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9453:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9514:37:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9541:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "9524:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:27:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9514:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9560:45:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9590:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9601:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9586:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9586:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9573:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:32:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9564:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9639:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9614:24:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9614:31:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9614:31:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9654:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9664:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9654:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9401:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9412:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9424:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9432:6:123",
                "type": ""
              }
            ],
            "src": "9358:317:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9800:566:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9846:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9855:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9858:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9848:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9848:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9848:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9821:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9830:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9817:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9817:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9842:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9813:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9813:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9810:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9871:37:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9898:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "9881:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9881:27:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9871:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9917:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9948:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9959:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9944:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9944:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9931:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9931:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9921:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9972:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9982:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9976:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10027:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10036:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10039:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10029:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10029:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10029:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10015:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10023:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10012:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10012:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10009:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10052:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10066:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10077:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10062:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10062:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "10056:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10132:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10141:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10144:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10134:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10134:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10134:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10111:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10115:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10107:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10107:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10122:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10103:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10103:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10096:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10096:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10093:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10157:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10184:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10171:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10171:16:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10161:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10214:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10223:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10226:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10216:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10216:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10216:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10202:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10210:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10199:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10199:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10196:34:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10289:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10298:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10301:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10291:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10291:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10291:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10253:2:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10261:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10269:2:123",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10257:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10257:15:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10249:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10249:24:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10275:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10245:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10245:33:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10280:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10242:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10242:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10239:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10314:21:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10328:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10332:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10324:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10324:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10314:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10344:16:123",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10354:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10344:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9750:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9761:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9773:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9781:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9789:6:123",
                "type": ""
              }
            ],
            "src": "9680:686:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10545:182:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10562:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10573:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10555:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10555:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10555:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10596:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10607:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10592:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10592:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10612:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10585:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10585:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10585:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10635:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10646:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10631:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10631:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10651:34:123",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10624:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10624:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10624:62:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10695:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10707:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10718:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10703:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10703:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10695:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10522:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10536:4:123",
                "type": ""
              }
            ],
            "src": "10371:356:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10906:153:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10923:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10934:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10916:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10916:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10916:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10957:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10968:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10953:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10953:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10973:1:123",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10946:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10946:29:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10946:29:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10995:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11006:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10991:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10991:18:123"
                      },
                      {
                        "hexValue": "21676f76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11011:6:123",
                        "type": "",
                        "value": "!gov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10984:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10984:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10984:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11027:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11039:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11050:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11035:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11035:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11027:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b3654675894a95b1dc82f755299fd3027dd62a51a93db7a4df3c20f76d37c21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10883:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10897:4:123",
                "type": ""
              }
            ],
            "src": "10732:327:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11238:166:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11255:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11266:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11248:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11248:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11248:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11289:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11300:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11285:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11285:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11305:2:123",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11278:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11278:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11278:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11328:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11339:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11324:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11324:18:123"
                      },
                      {
                        "hexValue": "217a6f72726f436f6e74726f6c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11344:18:123",
                        "type": "",
                        "value": "!zorroController"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11317:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11317:46:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11317:46:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11372:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11384:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11395:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11380:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11380:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11372:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11215:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11229:4:123",
                "type": ""
              }
            ],
            "src": "11064:340:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11583:181:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11600:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11611:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11593:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11593:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11593:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11634:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11645:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11630:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11630:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11650:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11623:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11623:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11623:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11673:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11684:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11669:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11669:18:123"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11689:33:123",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11662:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11662:61:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11662:61:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11732:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11744:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11755:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11740:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11740:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11732:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11560:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11574:4:123",
                "type": ""
              }
            ],
            "src": "11409:355:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11943:166:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11960:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11971:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11953:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11953:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11953:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11994:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12005:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11990:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11990:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12010:2:123",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11983:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11983:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11983:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12033:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12044:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12029:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12029:18:123"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12049:18:123",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12022:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12022:46:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12022:46:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12077:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12089:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12100:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12085:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12085:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12077:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11920:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11934:4:123",
                "type": ""
              }
            ],
            "src": "11769:340:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12288:180:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12305:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12316:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12298:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12298:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12298:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12339:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12350:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12335:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12335:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12355:2:123",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12328:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12328:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12328:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12378:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12389:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12374:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12374:18:123"
                      },
                      {
                        "hexValue": "57616e7420746f6b656e206465706f736974206d757374206265203e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12394:32:123",
                        "type": "",
                        "value": "Want token deposit must be > 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12367:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12367:60:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12367:60:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12436:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12448:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12459:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12444:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12444:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12436:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ddbaa40fb58dd9462905dbdf9d6d43b0c0996510fa5dffc7bb00ec126d5b159__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12265:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12279:4:123",
                "type": ""
              }
            ],
            "src": "12114:354:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12554:103:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12600:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12609:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12612:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12602:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12602:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12602:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12575:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12584:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12571:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12571:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12596:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12567:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12567:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "12564:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12625:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12641:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12635:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12635:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12625:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12520:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12531:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12543:6:123",
                "type": ""
              }
            ],
            "src": "12473:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12836:156:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12853:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12864:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12846:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12846:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12846:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12887:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12898:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12883:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12883:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12903:1:123",
                        "type": "",
                        "value": "7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12876:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12876:29:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12876:29:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12925:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12936:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12921:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12921:18:123"
                      },
                      {
                        "hexValue": "6e656757616e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12941:9:123",
                        "type": "",
                        "value": "negWant"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12914:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12914:37:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12914:37:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12960:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12972:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12983:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12968:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12968:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12960:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_869a81434170bf1000300fd22bf6ea05da16d1d14b21ddcb3fa8ec273453ac05__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12813:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12827:4:123",
                "type": ""
              }
            ],
            "src": "12662:330:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13077:854:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13087:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13103:3:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13108:4:123",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13099:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13099:14:123"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "13091:4:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13122:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13132:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13126:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13190:3:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13205:5:123"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13199:5:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13199:12:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13213:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13195:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13195:21:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13183:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13183:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13183:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13226:14:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13236:4:123",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "13230:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13260:3:123"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "13265:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13256:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13256:12:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13284:5:123"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "13291:2:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13280:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13280:14:123"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13274:5:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13274:21:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13297:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13270:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13270:30:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13249:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13249:52:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13249:52:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13321:3:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13326:4:123",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13317:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13317:14:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13347:5:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13354:4:123",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13343:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13343:16:123"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13337:5:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13337:23:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13362:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13333:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13333:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13310:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13310:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13310:56:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13386:3:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13391:4:123",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13382:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13382:14:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13412:5:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13419:4:123",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13408:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13408:16:123"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13402:5:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13402:23:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13427:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13398:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13398:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13375:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13375:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13375:56:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13440:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13470:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13477:4:123",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13466:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13466:16:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13460:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13460:23:123"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "13444:12:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13503:3:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13508:4:123",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13499:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13499:14:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13515:4:123",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13492:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13492:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13492:28:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13529:17:123",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "13542:4:123"
                  },
                  "variables": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulTypedName",
                      "src": "13533:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13555:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13575:12:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13569:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13569:19:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13559:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13604:4:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13610:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13597:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13597:20:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13597:20:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13626:22:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13639:3:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13644:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13635:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13635:13:123"
                  },
                  "variableNames": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulIdentifier",
                      "src": "13626:5:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13657:35:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13675:12:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "13689:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13671:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13671:21:123"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "13661:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13701:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13710:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "13705:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13769:135:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "13790:5:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13807:6:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "13801:5:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13801:13:123"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "13816:2:123"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "13797:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13797:22:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13783:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13783:37:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13783:37:123"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13833:23:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "13846:5:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "13853:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13842:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13842:14:123"
                        },
                        "variableNames": [
                          {
                            "name": "pos_1",
                            "nodeType": "YulIdentifier",
                            "src": "13833:5:123"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13869:25:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13883:6:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "13891:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13879:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13879:15:123"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13869:6:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13731:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13734:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13728:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13728:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13742:18:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13744:14:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "13753:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13756:1:123",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13749:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13749:9:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "13744:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13724:3:123",
                    "statements": []
                  },
                  "src": "13720:184:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13913:12:123",
                  "value": {
                    "name": "pos_1",
                    "nodeType": "YulIdentifier",
                    "src": "13920:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13913:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_struct_ExchangeWantTokenForUSDParams",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13054:5:123",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13061:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13069:3:123",
                "type": ""
              }
            ],
            "src": "12997:934:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14189:215:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14206:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14217:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14199:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14199:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14199:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14244:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14255:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14240:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14240:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14260:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14233:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14233:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14233:30:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14272:83:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14328:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14340:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14351:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14336:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14336:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ExchangeWantTokenForUSDParams",
                      "nodeType": "YulIdentifier",
                      "src": "14280:47:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14280:75:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14272:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14375:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14386:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14371:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14371:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14391:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14364:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14364:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14364:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr_t_uint256__to_t_uint256_t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14142:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14153:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14161:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14169:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14180:4:123",
                "type": ""
              }
            ],
            "src": "13936:468:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14583:154:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14600:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14611:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14593:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14593:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14593:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14634:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14645:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14630:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14630:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14650:1:123",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14623:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14623:29:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14623:29:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14672:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14683:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14668:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14668:18:123"
                      },
                      {
                        "hexValue": "2173616665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14688:7:123",
                        "type": "",
                        "value": "!safe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14661:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14661:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14661:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14705:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14717:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14728:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14713:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14713:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14705:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0785b3f9f083d5fbb1ca2ae04ed033daaf1f4e01c9f5d7049f93e401b7497814__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14560:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14574:4:123",
                "type": ""
              }
            ],
            "src": "14409:328:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14916:176:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14933:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14944:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14926:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14926:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14926:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14967:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14978:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14963:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14963:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14983:2:123",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14956:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14956:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14956:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15006:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15017:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15002:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15002:18:123"
                      },
                      {
                        "hexValue": "5f656e7472616e6365466565466163746f7220746f6f206c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15022:28:123",
                        "type": "",
                        "value": "_entranceFeeFactor too low"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14995:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14995:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14995:56:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15060:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15072:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15083:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15068:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15068:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15060:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_14877205892bb71cb4a04df4c1b4673872d156dffce8af7a50fed73b69898a00__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14893:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14907:4:123",
                "type": ""
              }
            ],
            "src": "14742:350:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15271:177:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15288:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15299:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15281:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15281:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15281:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15322:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15333:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15318:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15318:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15338:2:123",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15311:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15311:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15311:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15361:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15372:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15357:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15357:18:123"
                      },
                      {
                        "hexValue": "5f656e7472616e6365466565466163746f7220746f6f2068696768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15377:29:123",
                        "type": "",
                        "value": "_entranceFeeFactor too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15350:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15350:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15350:57:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15416:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15428:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15439:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15424:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15424:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15416:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d88e732af1f3552494040247f227a52edc9059ab0e8aa67ae2fa27f0299a6e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15248:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15262:4:123",
                "type": ""
              }
            ],
            "src": "15097:351:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15627:176:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15644:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15655:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15637:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15637:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15637:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15678:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15689:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15674:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15674:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15694:2:123",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15667:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15667:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15667:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15717:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15728:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15713:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15713:18:123"
                      },
                      {
                        "hexValue": "5f7769746864726177466565466163746f7220746f6f206c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15733:28:123",
                        "type": "",
                        "value": "_withdrawFeeFactor too low"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15706:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15706:56:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15706:56:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15771:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15783:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15794:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15779:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15779:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15771:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f6e711f72e60324d85fdb072a1ef861f097d6c2516ee0360707437c208b8a18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15604:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15618:4:123",
                "type": ""
              }
            ],
            "src": "15453:350:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15982:177:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15999:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16010:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15992:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15992:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15992:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16033:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16044:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16029:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16029:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16049:2:123",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16022:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16022:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16022:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16072:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16083:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16068:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16068:18:123"
                      },
                      {
                        "hexValue": "5f7769746864726177466565466163746f7220746f6f2068696768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16088:29:123",
                        "type": "",
                        "value": "_withdrawFeeFactor too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16061:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16061:57:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16061:57:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16127:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16139:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16150:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16135:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16135:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16127:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_15c8994f6dcb1aa953de93206a8b12ac93520de76cca875617d444b5a0c90891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15959:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15973:4:123",
                "type": ""
              }
            ],
            "src": "15808:351:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16338:173:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16355:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16366:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16348:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16348:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16348:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16389:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16400:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16385:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16385:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16405:2:123",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16378:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16378:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16378:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16428:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16439:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16424:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16424:18:123"
                      },
                      {
                        "hexValue": "5f636f6e74726f6c6c657246656520746f6f2068696768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16444:25:123",
                        "type": "",
                        "value": "_controllerFee too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16417:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16417:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16417:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16479:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16491:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16502:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16487:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16487:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16479:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_72e914a094d93b04462d0c9d0804a0f513cb706413fa54c2f449da980ed4256e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16315:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16329:4:123",
                "type": ""
              }
            ],
            "src": "16164:347:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16690:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16707:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16718:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16700:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16700:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16700:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16741:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16752:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16737:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16737:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16757:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16730:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16730:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16730:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16780:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16791:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16776:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16776:18:123"
                      },
                      {
                        "hexValue": "5f6275794261636b5261746520746f6f2068696768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16796:23:123",
                        "type": "",
                        "value": "_buyBackRate too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16769:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16769:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16769:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16829:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16841:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16852:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16837:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16837:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16829:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_984db179b8d7795d008379d1993b81aee382c0564e91538f4ddb4af80d7ed423__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16667:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16681:4:123",
                "type": ""
              }
            ],
            "src": "16516:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17040:172:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17057:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17068:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17050:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17050:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17050:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17091:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17102:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17087:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17087:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17107:2:123",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17080:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17080:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17080:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17130:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17141:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17126:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17126:18:123"
                      },
                      {
                        "hexValue": "5f72657653686172655261746520746f6f2068696768",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17146:24:123",
                        "type": "",
                        "value": "_revShareRate too high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17119:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17119:52:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17119:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17180:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17192:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17203:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17188:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17188:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17180:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c6e7f045b4bad7758855dafda8984269cbeac6e4a1e5b5118b50bfe95692531f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17017:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17031:4:123",
                "type": ""
              }
            ],
            "src": "16866:346:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17430:250:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17440:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17452:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17463:3:123",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17448:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17448:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17440:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17483:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17494:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17476:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17476:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17476:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17521:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17532:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17517:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17517:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17537:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17510:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17510:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17510:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17564:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17575:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17560:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17560:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17580:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17553:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17553:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17553:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17607:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17618:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17603:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17603:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17623:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17596:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17596:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17596:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17650:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17661:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17646:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17646:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "17667:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17639:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17639:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17639:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17367:9:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "17378:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "17386:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "17394:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17402:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17410:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17421:4:123",
                "type": ""
              }
            ],
            "src": "17217:463:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17859:236:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17876:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17887:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17869:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17869:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17869:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17910:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17921:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17906:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17906:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17926:2:123",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17899:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17899:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17899:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17949:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17960:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17945:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17945:18:123"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17965:34:123",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17938:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17938:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17938:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18020:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18031:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18016:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18016:18:123"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18036:16:123",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18009:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18009:44:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18009:44:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18062:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18074:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18085:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18070:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18070:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18062:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17836:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17850:4:123",
                "type": ""
              }
            ],
            "src": "17685:410:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18248:556:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18258:12:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18268:2:123",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18262:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18279:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18297:9:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "18308:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18293:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18293:18:123"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "18283:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18327:9:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "18338:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18320:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18320:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18320:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18350:17:123",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "18361:6:123"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "18354:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18376:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18396:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "18390:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18390:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "18380:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "18419:6:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18427:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18412:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18412:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18412:22:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18443:25:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18454:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18465:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18450:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18450:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18443:3:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18484:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18487:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18477:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18477:17:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18477:17:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18503:30:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18527:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "18530:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "18517:9:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18517:16:123"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "18507:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18542:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18551:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "18546:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18610:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18631:3:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "18646:6:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nodeType": "YulIdentifier",
                                    "src": "18640:5:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18640:13:123"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18655:42:123",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "18636:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18636:62:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18624:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18624:75:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18624:75:123"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18712:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "18723:3:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "18728:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18719:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18719:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "18712:3:123"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "18744:24:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "18758:6:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18766:1:123",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18754:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18754:14:123"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18744:6:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18572:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18575:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18569:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18569:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "18583:18:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18585:14:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "18594:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18597:1:123",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18590:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18590:9:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "18585:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "18565:3:123",
                    "statements": []
                  },
                  "src": "18561:217:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18787:11:123",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "18795:3:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18787:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_storage__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18217:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18228:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18239:4:123",
                "type": ""
              }
            ],
            "src": "18100:704:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18915:851:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18925:12:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "18935:2:123",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18929:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18982:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18991:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18994:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18984:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18984:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18984:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18957:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18966:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18953:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18953:23:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "18978:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18949:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18949:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "18946:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19007:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19027:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19021:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19021:16:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "19011:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19080:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19089:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19092:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19082:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19082:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19082:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "19052:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19060:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19049:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19049:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19046:50:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19105:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19119:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "19130:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19115:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19115:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "19109:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19185:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19194:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19197:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19187:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19187:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19187:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "19164:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19168:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19160:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19160:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19175:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "19156:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19156:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19149:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19149:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19146:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19210:19:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "19226:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19220:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19220:9:123"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "19214:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19238:71:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "19305:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "19265:39:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19265:43:123"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "19249:15:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19249:60:123"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "19242:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19318:16:123",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "19331:3:123"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "19322:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "19350:3:123"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "19355:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19343:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19343:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19343:15:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19367:19:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "19378:3:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "19383:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19374:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19374:12:123"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "19367:3:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19395:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "19417:2:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "19425:2:123"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "19429:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "19421:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19421:11:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19413:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19413:20:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "19435:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19409:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19409:29:123"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "19399:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19470:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19479:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19482:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19472:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19472:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19472:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "19453:6:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "19461:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19450:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19450:19:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19447:39:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19495:22:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "19510:2:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "19514:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19506:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19506:11:123"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "19499:3:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19582:154:123",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "19596:23:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "19615:3:123"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "19609:5:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19609:10:123"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19600:5:123",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "19657:5:123"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "19632:24:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19632:31:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19632:31:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "19683:3:123"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "19688:5:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19676:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19676:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19676:18:123"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "19707:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "19718:3:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "19723:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "19714:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19714:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "19707:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "19537:3:123"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "19542:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "19534:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19534:15:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "19550:23:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "19552:19:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "19563:3:123"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "19568:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "19559:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19559:12:123"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "19552:3:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "19530:3:123",
                    "statements": []
                  },
                  "src": "19526:210:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19745:15:123",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "19755:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19745:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18881:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18892:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18904:6:123",
                "type": ""
              }
            ],
            "src": "18809:957:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19945:170:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19962:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19973:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19955:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19955:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19955:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19996:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20007:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19992:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19992:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20012:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19985:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19985:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19985:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20035:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20046:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20031:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20031:18:123"
                      },
                      {
                        "hexValue": "756e737570706f72746564206665656420696478",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20051:22:123",
                        "type": "",
                        "value": "unsupported feed idx"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20024:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20024:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20024:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20083:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20095:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20106:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20091:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20091:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20083:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f69ac36e2a1d1884fc7a3caf46ec22bb7071a0e6d36c8d6f89698dcaa2ac8f2e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19922:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19936:4:123",
                "type": ""
              }
            ],
            "src": "19771:344:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20363:215:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20380:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20391:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20373:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20373:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20373:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20418:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20429:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20414:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20414:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20434:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20407:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20407:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20407:30:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20446:83:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20502:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20514:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20525:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20510:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20510:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ExchangeWantTokenForUSDParams",
                      "nodeType": "YulIdentifier",
                      "src": "20454:47:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20454:75:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20446:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20549:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20560:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20545:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20545:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "20565:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20538:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20538:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20538:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr_t_uint256__to_t_uint256_t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20316:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "20327:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20335:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20343:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20354:4:123",
                "type": ""
              }
            ],
            "src": "20120:458:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20757:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20774:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20785:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20767:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20767:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20767:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20808:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20819:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20804:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20804:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20824:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20797:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20797:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20797:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20847:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20858:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20843:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20843:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20863:34:123",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20836:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20836:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20836:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20918:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20929:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20914:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20914:18:123"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20934:8:123",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20907:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20907:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20907:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20952:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20964:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20975:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20960:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20960:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20952:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20734:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20748:4:123",
                "type": ""
              }
            ],
            "src": "20583:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21147:241:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21157:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21169:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21180:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21165:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21165:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21157:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21192:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21202:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21196:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21260:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21275:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21283:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21271:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21271:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21253:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21253:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21253:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21307:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21318:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21303:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21303:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21327:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21335:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21323:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21323:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21296:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21296:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21296:43:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21359:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21370:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21355:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21355:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "21375:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21348:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21348:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21348:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21100:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "21111:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21119:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21127:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21138:4:123",
                "type": ""
              }
            ],
            "src": "20990:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21425:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21442:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21445:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21435:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21435:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21435:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21539:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21542:4:123",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21532:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21532:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21532:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21563:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21566:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21556:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21556:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21556:15:123"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "21393:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21634:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21693:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21695:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21695:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21695:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21665:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21658:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21658:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "21651:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21651:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "21673:1:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21684:1:123",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "21680:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21680:6:123"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21688:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "21676:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21676:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "21670:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21670:21:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21647:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21647:45:123"
                  },
                  "nodeType": "YulIf",
                  "src": "21644:71:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21724:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21739:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21742:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "21735:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21735:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "21724:7:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21613:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21616:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "21622:7:123",
                "type": ""
              }
            ],
            "src": "21582:168:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21801:228:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21832:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21853:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21856:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21846:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21846:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21846:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21954:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21957:4:123",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "21947:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21947:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21947:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21982:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21985:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "21975:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21975:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21975:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21821:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "21814:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21814:9:123"
                  },
                  "nodeType": "YulIf",
                  "src": "21811:189:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22009:14:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22018:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22021:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "22014:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22014:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "22009:1:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21786:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21789:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "21795:1:123",
                "type": ""
              }
            ],
            "src": "21755:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22082:80:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22109:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22111:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22111:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22111:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22098:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "22105:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22101:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22101:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22095:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22095:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "22092:39:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22140:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22151:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22154:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22147:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22147:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "22140:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22065:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22068:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "22074:3:123",
                "type": ""
              }
            ],
            "src": "22034:128:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22341:170:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22358:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22369:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22351:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22351:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22351:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22392:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22403:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22388:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22388:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22408:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22381:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22381:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22381:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22431:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22442:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22427:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22427:18:123"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22447:22:123",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22420:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22420:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22420:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22479:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22491:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22502:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22487:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22487:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22479:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22318:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22332:4:123",
                "type": ""
              }
            ],
            "src": "22167:344:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22565:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22587:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22589:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22589:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22589:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22581:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22584:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "22578:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22578:8:123"
                  },
                  "nodeType": "YulIf",
                  "src": "22575:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22618:17:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "22630:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22633:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "22626:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22626:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "22618:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22547:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22550:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "22556:4:123",
                "type": ""
              }
            ],
            "src": "22516:125:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22775:168:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22785:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22797:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22808:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22793:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22793:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22785:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22827:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22842:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22850:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "22838:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22838:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22820:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22820:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22820:74:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22914:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22925:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22910:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22910:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22930:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22903:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22903:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22903:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22736:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22747:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22755:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22766:4:123",
                "type": ""
              }
            ],
            "src": "22646:297:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23077:198:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23087:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23099:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23110:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23095:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23095:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23087:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23122:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "23132:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "23126:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23190:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "23205:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "23213:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "23201:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23201:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23183:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23183:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23183:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23237:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23248:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23233:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23233:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "23257:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "23265:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "23253:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23253:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23226:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23226:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23226:43:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23038:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23049:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23057:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23068:4:123",
                "type": ""
              }
            ],
            "src": "22948:327:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23454:233:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23471:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23482:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23464:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23464:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23464:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23505:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23516:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23501:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23501:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23521:2:123",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23494:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23494:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23494:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23544:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23555:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23540:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23540:18:123"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23560:34:123",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23533:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23533:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23533:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23615:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23626:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23611:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23611:18:123"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23631:13:123",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23604:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23604:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23604:41:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23654:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23666:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23677:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23662:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23662:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23654:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23431:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23445:4:123",
                "type": ""
              }
            ],
            "src": "23280:407:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23770:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23816:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23825:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23828:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23818:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23818:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23818:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "23791:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23800:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23787:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23787:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23812:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "23783:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23783:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "23780:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "23841:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23860:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "23854:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23854:16:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "23845:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23901:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "23879:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23879:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23879:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23916:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "23926:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "23916:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23736:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "23747:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23759:6:123",
                "type": ""
              }
            ],
            "src": "23692:245:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24116:232:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24133:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24144:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24126:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24126:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24126:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24167:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24178:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24163:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24163:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24183:2:123",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24156:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24156:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24156:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24206:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24217:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24202:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24202:18:123"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24222:34:123",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24195:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24195:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24195:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24277:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24288:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24273:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24273:18:123"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24293:12:123",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24266:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24266:40:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24266:40:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24315:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24327:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24338:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24323:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24323:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24315:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24093:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24107:4:123",
                "type": ""
              }
            ],
            "src": "23942:406:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24527:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24544:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24555:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24537:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24537:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24537:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24578:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24589:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24574:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24574:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24594:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24567:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24567:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24567:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24617:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24628:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24613:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24613:18:123"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24633:34:123",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24606:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24606:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24606:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24688:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24699:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24684:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24684:18:123"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24704:8:123",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24677:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24677:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24677:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24722:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24734:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24745:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24730:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24730:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24722:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24504:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24518:4:123",
                "type": ""
              }
            ],
            "src": "24353:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24934:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24951:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24962:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24944:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24944:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24944:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24985:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24996:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24981:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24981:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25001:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24974:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24974:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24974:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25024:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25035:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25020:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25020:18:123"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25040:31:123",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25013:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25013:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25013:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25081:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25093:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25104:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25089:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25089:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25081:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24911:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24925:4:123",
                "type": ""
              }
            ],
            "src": "24760:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25171:205:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25181:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "25190:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "25185:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25250:63:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "25275:3:123"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "25280:1:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "25271:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25271:11:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "25294:3:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "25299:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "25290:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "25290:11:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "25284:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25284:18:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "25264:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25264:39:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "25264:39:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "25211:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25214:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "25208:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25208:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "25222:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "25224:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "25233:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "25236:2:123",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "25229:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25229:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "25224:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "25204:3:123",
                    "statements": []
                  },
                  "src": "25200:113:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25339:31:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "25352:3:123"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "25357:6:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "25348:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25348:16:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "25366:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "25341:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25341:27:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "25341:27:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "25328:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25331:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "25325:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25325:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "25322:48:123"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "25149:3:123",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "25154:3:123",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "25159:6:123",
                "type": ""
              }
            ],
            "src": "25118:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25518:137:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25528:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25548:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "25542:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25542:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "25532:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "25590:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25598:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25586:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25586:17:123"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25605:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25610:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "25564:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25564:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25564:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25626:23:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25637:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25642:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25633:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25633:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25626:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25494:3:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "25499:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25510:3:123",
                "type": ""
              }
            ],
            "src": "25381:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25781:262:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25798:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25809:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25791:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25791:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25791:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25821:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25841:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "25835:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25835:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "25825:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25868:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25879:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25864:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25864:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25884:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25857:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25857:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25857:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "25926:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25934:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25922:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25922:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25943:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25954:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25939:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25939:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25959:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "25900:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25900:66:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25900:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25975:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25991:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "26010:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26018:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26006:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26006:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26027:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "26023:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26023:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "26002:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26002:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25987:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25987:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26034:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25983:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25983:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25975:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25750:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "25761:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25772:4:123",
                "type": ""
              }
            ],
            "src": "25660:383:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3858() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3863() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0200)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, mul(_1, _2)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_struct_VaultFees(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocate_memory_3858()\n        mstore(value, calldataload(headStart))\n        mstore(add(value, 32), calldataload(add(headStart, 32)))\n        mstore(add(value, 64), calldataload(add(headStart, 64)))\n        mstore(add(value, 96), calldataload(add(headStart, 96)))\n        mstore(add(value, 128), calldataload(add(headStart, 128)))\n    }\n    function abi_decode_struct_VaultPriceFeeds(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xc0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        let value_1 := calldataload(headStart)\n        validator_revert_address(value_1)\n        mstore(memPtr, value_1)\n        let value_2 := calldataload(add(headStart, 32))\n        validator_revert_address(value_2)\n        mstore(add(memPtr, 32), value_2)\n        let value_3 := calldataload(add(headStart, 64))\n        validator_revert_address(value_3)\n        mstore(add(memPtr, 64), value_3)\n        let value_4 := calldataload(add(headStart, 96))\n        validator_revert_address(value_4)\n        mstore(add(memPtr, 96), value_4)\n        let value_5 := calldataload(add(headStart, 128))\n        validator_revert_address(value_5)\n        mstore(add(memPtr, 128), value_5)\n        let value_6 := calldataload(add(headStart, 160))\n        validator_revert_address(value_6)\n        mstore(add(memPtr, 160), value_6)\n    }\n    function abi_decode_tuple_t_addresst_struct$_VaultZorroInit_$20472_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        let _3 := sub(dataEnd, _2)\n        if slt(_3, 0x03a0) { revert(0, 0) }\n        let value_1 := allocate_memory_3858()\n        mstore(value_1, calldataload(_2))\n        let _4 := 0x0200\n        if slt(add(_3, not(31)), _4) { revert(0, 0) }\n        let value_2 := allocate_memory_3863()\n        mstore(value_2, abi_decode_address(add(_2, 32)))\n        mstore(add(value_2, 32), abi_decode_address(add(_2, 64)))\n        mstore(add(value_2, 64), abi_decode_address(add(_2, 96)))\n        mstore(add(value_2, 96), abi_decode_address(add(_2, 128)))\n        mstore(add(value_2, 128), abi_decode_address(add(_2, 0xa0)))\n        mstore(add(value_2, 0xa0), abi_decode_address(add(_2, 192)))\n        mstore(add(value_2, 192), abi_decode_address(add(_2, 224)))\n        let _5 := 256\n        mstore(add(value_2, 224), abi_decode_address(add(_2, _5)))\n        let _6 := 288\n        mstore(add(value_2, _5), abi_decode_address(add(_2, _6)))\n        let _7 := 320\n        mstore(add(value_2, _6), abi_decode_address(add(_2, _7)))\n        let _8 := 352\n        mstore(add(value_2, _7), abi_decode_address(add(_2, _8)))\n        let _9 := 384\n        mstore(add(value_2, _8), abi_decode_address(add(_2, _9)))\n        let _10 := 416\n        mstore(add(value_2, _9), abi_decode_address(add(_2, _10)))\n        let _11 := 448\n        mstore(add(value_2, _10), abi_decode_address(add(_2, _11)))\n        let _12 := 480\n        mstore(add(value_2, _11), abi_decode_address(add(_2, _12)))\n        mstore(add(value_2, _12), abi_decode_address(add(_2, _4)))\n        mstore(add(value_1, 32), value_2)\n        let offset_1 := calldataload(add(_2, 544))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value_1, 64), abi_decode_array_address_dyn(add(_2, offset_1), dataEnd))\n        mstore(add(value_1, 96), abi_decode_struct_VaultFees(add(_2, 576), dataEnd))\n        mstore(add(value_1, 128), abi_decode_struct_VaultPriceFeeds(add(_2, 736), dataEnd))\n        value1 := value_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint8t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b3654675894a95b1dc82f755299fd3027dd62a51a93db7a4df3c20f76d37c21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"!gov\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_57d43b95868a53f5b51d0ccb14323b0b6fa8ac5bfb561e1a7874d6c14075d7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"!zorroController\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0ddbaa40fb58dd9462905dbdf9d6d43b0c0996510fa5dffc7bb00ec126d5b159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Want token deposit must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_869a81434170bf1000300fd22bf6ea05da16d1d14b21ddcb3fa8ec273453ac05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"negWant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_struct_ExchangeWantTokenForUSDParams(value, pos) -> end\n    {\n        let tail := add(pos, 0xa0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(pos, and(mload(value), _1))\n        let _2 := 0x20\n        mstore(add(pos, _2), and(mload(add(value, _2)), _1))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        let memberValue0 := mload(add(value, 0x80))\n        mstore(add(pos, 0x80), 0xa0)\n        let pos_1 := tail\n        let length := mload(memberValue0)\n        mstore(tail, length)\n        pos_1 := add(pos, 192)\n        let srcPtr := add(memberValue0, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr), _1))\n            pos_1 := add(pos_1, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        end := pos_1\n    }\n    function abi_encode_tuple_t_uint256_t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr_t_uint256__to_t_uint256_t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_struct_ExchangeWantTokenForUSDParams(value1, add(headStart, 96))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0785b3f9f083d5fbb1ca2ae04ed033daaf1f4e01c9f5d7049f93e401b7497814__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"!safe\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14877205892bb71cb4a04df4c1b4673872d156dffce8af7a50fed73b69898a00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"_entranceFeeFactor too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5d88e732af1f3552494040247f227a52edc9059ab0e8aa67ae2fa27f0299a6e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"_entranceFeeFactor too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f6e711f72e60324d85fdb072a1ef861f097d6c2516ee0360707437c208b8a18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"_withdrawFeeFactor too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_15c8994f6dcb1aa953de93206a8b12ac93520de76cca875617d444b5a0c90891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"_withdrawFeeFactor too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72e914a094d93b04462d0c9d0804a0f513cb706413fa54c2f449da980ed4256e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"_controllerFee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_984db179b8d7795d008379d1993b81aee382c0564e91538f4ddb4af80d7ed423__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_buyBackRate too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e7f045b4bad7758855dafda8984269cbeac6e4a1e5b5118b50bfe95692531f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"_revShareRate too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_storage__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := sload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        mstore(0, value0)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(sload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, mul(_3, _1)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_f69ac36e2a1d1884fc7a3caf46ec22bb7071a0e6d36c8d6f89698dcaa2ac8f2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"unsupported feed idx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr_t_uint256__to_t_uint256_t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_struct_ExchangeWantTokenForUSDParams(value1, add(headStart, 96))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "365:9135:99:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;1770:46;;1812:4;1770:46;;;;;710:25:123;;;698:2;683:18;1770:46:100;;;;;;;;6712:39;;;;;;11806:133;;;;;;:::i;:::-;;:::i;5853:39::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1464:55:123;;;1446:74;;1434:2;1419:18;5853:39:100;1300:226:123;3045:19:100;;;;;;;;;;;;;;;1696:14:123;;1689:22;1671:41;;1659:2;1644:18;3045:19:100;1531:187:123;5518:28:100;;;;;;5294:32;;;;;;4445:26;;;;;-1:-1:-1;;;;;4445:26:100;;;5020;;;;;;7599:74;;;;;;:::i;:::-;;:::i;5808:39::-;;;;;;:::i;:::-;;:::i;3015:1233:99:-;;;;;;:::i;:::-;;:::i;1677:48:100:-;;1720:5;1677:48;;13877:166;;;;;;:::i;:::-;;:::i;5158:27::-;;;;;;5460:38:99;;;:::i;14222:74:100:-;;;:::i;5595:30::-;;;;;;5681:26;;;;;;2982:25;;;;;;;;-1:-1:-1;;;;;2982:25:100;;;8568:106;;;;;;:::i;:::-;;:::i;6119:39::-;;;;;;:::i;:::-;;:::i;7784:158::-;;;;;;:::i;:::-;;:::i;5678:1734:99:-;;;;;;:::i;:::-;;:::i;9461:173:100:-;;;;;;:::i;:::-;;:::i;9766:110::-;;;;;;:::i;:::-;;:::i;1341:84:7:-;1411:7;;;;1341:84;;8792:126:100;;;;;;:::i;:::-;;:::i;3227:36::-;;;;;-1:-1:-1;;;;;3227:36:100;;;8680:106;;;;;;:::i;:::-;;:::i;9036:113::-;;;;;;:::i;:::-;;:::i;6025:34::-;;;;;;:::i;:::-;;:::i;7743:846:99:-;;;;;;:::i;:::-;;:::i;14595:303:100:-;;;;;;:::i;:::-;;:::i;3456:27::-;;;;;-1:-1:-1;;;;;3456:27:100;;;5424:32;;;;;;4528:31;;;;;-1:-1:-1;;;;;4528:31:100;;;9640:120;;;;;;:::i;:::-;;:::i;6326:47::-;;;;;-1:-1:-1;;;;;6326:47:100;;;4261:26;;;;;-1:-1:-1;;;;;4261:26:100;;;1908:101:3;;;:::i;12343:1528:100:-;;;;;;:::i;:::-;;:::i;4649:26::-;;;;;-1:-1:-1;;;;;4649:26:100;;;899:1670:99;;;;;;:::i;:::-;;:::i;3740:28:100:-;;;;;-1:-1:-1;;;;;3740:28:100;;;5763:39;;;;;;:::i;:::-;;:::i;7679:99::-;;;;;;:::i;:::-;;:::i;14113:70::-;;;:::i;4881:28::-;;;;;;2526:50;;2572:4;2526:50;;8444:118;;;;;;:::i;:::-;;:::i;1276:85:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;9155:124:100;;;;;;:::i;:::-;;:::i;5984:35::-;;;;;;:::i;:::-;;:::i;4047:34::-;;;;;-1:-1:-1;;;;;4047:34:100;;;5898:39;;;;;;:::i;:::-;;:::i;3379:32::-;;;;;-1:-1:-1;;;;;3379:32:100;;;6407:54;;;;;-1:-1:-1;;;;;6407:54:100;;;6598:48;;;;;-1:-1:-1;;;;;6598:48:100;;;6524:41;;;;;-1:-1:-1;;;;;6524:41:100;;;6255:44;;;;;-1:-1:-1;;;;;6255:44:100;;;3145:37;;;;;-1:-1:-1;;;;;3145:37:100;;;4170:32;;;;;-1:-1:-1;;;;;4170:32:100;;;8188:114;;;;;;:::i;:::-;;:::i;9285:170::-;;;;;;:::i;:::-;;:::i;4335:29::-;;;;;-1:-1:-1;;;;;4335:29:100;;;1336:271;;;;;;:::i;:::-;;:::i;8308:130::-;;;;;;:::i;:::-;;:::i;7948:114::-;;;;;;:::i;:::-;;:::i;5943:35::-;;;;;;:::i;:::-;;:::i;11564:140::-;;;;;;:::i;:::-;;:::i;3810:28::-;;;;;-1:-1:-1;;;;;3810:28:100;;;9882:738;;;;;;:::i;:::-;;:::i;4536:862:99:-;;;;;;:::i;:::-;;:::i;8823:675::-;;;;;;:::i;:::-;;:::i;3893:28:100:-;;;;;-1:-1:-1;;;;;3893:28:100;;;3598:26;;;;;-1:-1:-1;;;;;3598:26:100;;;8924:106;;;;;;:::i;:::-;;:::i;4714:36::-;;;;;-1:-1:-1;;;;;4714:36:100;;;2688:23;;;;;;;;;2844:22;;;;;;;;;2763:18;;;;;;6184:44;;;;;-1:-1:-1;;;;;6184:44:100;;;2158:198:3;;;;;;:::i;:::-;;:::i;3314:27:100:-;;;;;-1:-1:-1;;;;;3314:27:100;;;6065:48;;;;;;:::i;:::-;;:::i;10626:848::-;;;;;;:::i;:::-;;:::i;8068:114::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;;;;;;;;;8145:13:100::1;:30:::0;;-1:-1:-1;;;;;;8145:30:100::1;-1:-1:-1::0;;;;;8145:30:100;;;::::1;::::0;;;::::1;::::0;;8068:114::o;11806:133::-;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;11879:7:::1;:18:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;11879:18:100;;::::1;;::::0;;11912:20:::1;::::0;::::1;::::0;::::1;::::0;11889:8;1696:14:123;1689:22;1671:41;;1659:2;1644:18;;1531:187;11912:20:100::1;;;;;;;;11806:133:::0;:::o;5853:39::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5853:39:100;;-1:-1:-1;5853:39:100;:::o;7599:74::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7656:3:100::1;:10:::0;7599:74::o;5808:39::-;;;;;;;;;;;;3015:1233:99;7513:22:100;;3179:7:99;;-1:-1:-1;;;;;7513:22:100;929:10:14;-1:-1:-1;;;;;7497:38:100;;7489:67;;;;-1:-1:-1;;;;;7489:67:100;;;;;;;:::i;:::-;1815:1:8::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;;;2561:63:8::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;1411:7:7;;;;1654:9:::2;1646:38;;;;-1:-1:-1::0;;;;;1646:38:7::2;;;;;;;:::i;:::-;3249:1:99::3;3238:8;:12;3230:55;;;::::0;-1:-1:-1;;;;;3230:55:99;;12316:2:123;3230:55:99::3;::::0;::::3;12298:21:123::0;12355:2;12335:18;;;12328:30;12394:32;12374:18;;;12367:60;12444:18;;3230:55:99::3;12114:354:123::0;3230:55:99::3;3357:11;::::0;3339:130:::3;::::0;-1:-1:-1;;;;;3357:11:99::3;3400:10;3432:4;3451:8:::0;3339:47:::3;:130::i;:::-;3765:15;::::0;3564:8;;3765:19;;;;:38:::3;;;3802:1;3788:11;;:15;3765:38;3761:246;;;3833:163;2262:5:100;3833:120:99;3937:15;;3833:82;3897:17;;3833:42;3863:11;;3833:8;:29;;:42;;;;:::i;:::-;:63:::0;::::3;:82::i;:::-;:103:::0;::::3;:120::i;:163::-;3819:177;;3761:246;4062:11;::::0;:28:::3;::::0;4078:11;4062:15:::3;:28::i;:::-;4048:11;:42:::0;4173:13:::3;::::0;4155:57:::3;::::0;;;;4206:4:::3;4155:57;::::0;::::3;1446:74:123::0;-1:-1:-1;;;;;4173:13:99;;::::3;::::0;4155:42:::3;::::0;1419:18:123;;4155:57:99::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4137:15;:75:::0;1772:1:8::1;2872:7;:22:::0;4230:11:99;3015:1233;-1:-1:-1;;3015:1233:99:o;13877:166:100:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;13991:24:100::1;:45:::0;13877:166::o;5460:38:99:-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1772:1;2699:7;2872:22;5460:38:99:o;14222:74:100:-;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;14279:10:::1;:8;:10::i;:::-;14222:74::o:0;8568:106::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8641:11:100::1;:26:::0;;-1:-1:-1;;;;;;8641:26:100::1;-1:-1:-1::0;;;;;8641:26:100;;;::::1;::::0;;;::::1;::::0;;8568:106::o;6119:39::-;;;;;;;;;;;;7784:158;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7893:19:100::1;:42:::0;;-1:-1:-1;;;;;;7893:42:100::1;-1:-1:-1::0;;;;;7893:42:100;;;::::1;::::0;;;::::1;::::0;;7784:158::o;5678:1734:99:-;7513:22:100;;5821:7:99;;-1:-1:-1;;;;;7513:22:100;929:10:14;-1:-1:-1;;;;;7497:38:100;;7489:67;;;;-1:-1:-1;;;;;7489:67:100;;;;;;;:::i;:::-;1815:1:8::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;;;2561:63:8::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;5880:12:99;5872:32:::2;;;::::0;-1:-1:-1;;;;;5872:32:99;;12864:2:123;5872:32:99::2;::::0;::::2;12846:21:123::0;12903:1;12883:18;;;12876:29;12941:9;12921:18;;;12914:37;12968:18;;5872:32:99::2;12662:330:123::0;5872:32:99::2;6019:21;6043:46;6073:15;;6043:25;6056:11;;6043:8;:12;;:25;;;;:::i;:46::-;6019:70;;6183:11;;6167:13;:27;6163:85;;;-1:-1:-1::0;6226:11:99::2;::::0;6163:85:::2;6330:11;::::0;:30:::2;::::0;6346:13;6330:15:::2;:30::i;:::-;6316:11;:44:::0;6464:17:::2;::::0;2475:5:100::2;-1:-1:-1::0;6460:169:99::2;;;6531:87;2475:5:100;6531:31:99;6544:17;;6531:8;:12;;:31;;;;:::i;:87::-;6520:98;;6460:169;6777:11;::::0;6759:55:::2;::::0;;;;6808:4:::2;6759:55;::::0;::::2;1446:74:123::0;6740:16:99::2;::::0;-1:-1:-1;;;;;6777:11:99::2;::::0;6759:40:::2;::::0;1419:18:123;;6759:55:99::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6740:74;;6839:8;6828;:19;6824:69;;;6874:8;6863:19;;6824:69;7000:8;6982:15;;:26;6978:83;;;7035:15;;7024:26;;6978:83;7155:15;::::0;:29:::2;::::0;7175:8;7155:19:::2;:29::i;:::-;7137:15;:47:::0;7341:22:::2;::::0;7315:11:::2;::::0;7297:77:::2;::::0;-1:-1:-1;;;;;7315:11:99;;::::2;::::0;7341:22:::2;7365:8:::0;7297:43:::2;:77::i;:::-;-1:-1:-1::0;1772:1:8::1;2872:7;:22:::0;7392:13:99;5678:1734;-1:-1:-1;;5678:1734:99:o;9461:173:100:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9581:21:100::1;:46:::0;;-1:-1:-1;;;;;;9581:46:100::1;-1:-1:-1::0;;;;;9581:46:100;;;::::1;::::0;;;::::1;::::0;;9461:173::o;9766:110::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9841:12:100::1;:28:::0;;-1:-1:-1;;;;;;9841:28:100::1;-1:-1:-1::0;;;;;9841:28:100;;;::::1;::::0;;;::::1;::::0;;9766:110::o;8792:126::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8875:16:100::1;:36:::0;;-1:-1:-1;;;;;;8875:36:100::1;-1:-1:-1::0;;;;;8875:36:100;;;::::1;::::0;;;::::1;::::0;;8792:126::o;8680:106::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8753:11:100::1;:26:::0;;-1:-1:-1;;;;;;8753:26:100::1;-1:-1:-1::0;;;;;8753:26:100;;;::::1;::::0;;;::::1;::::0;;8680:106::o;9036:113::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9116:11:100::1;:26:::0;;-1:-1:-1;;;;;;9116:26:100::1;-1:-1:-1::0;;;;;9116:26:100;;;::::1;::::0;;;::::1;::::0;;9036:113::o;6025:34::-;;;;;;;;;;;;7743:846:99;7513:22:100;;7903:7:99;;-1:-1:-1;;;;;7513:22:100;929:10:14;-1:-1:-1;;;;;7497:38:100;;7489:67;;;;-1:-1:-1;;;;;7489:67:100;;;;;;;:::i;:::-;8001:12:99::1;::::0;7966:11:::1;::::0;7948:75:::1;::::0;-1:-1:-1;;;;;7966:11:99;;::::1;::::0;8001:12:::1;8015:7:::0;7948:52:::1;:75::i;:::-;8091:12;::::0;8171:354:::1;::::0;;::::1;::::0;::::1;::::0;;8307:17:::1;::::0;-1:-1:-1;;;;;8307:17:99;;::::1;8171:354:::0;;8260:13:::1;::::0;;::::1;8171:354;::::0;;::::1;::::0;;;;8362:15:::1;::::0;;::::1;8171:354:::0;;;;8420:19:::1;::::0;;::::1;8171:354:::0;;;;8484:22:::1;8171:354:::0;;;;;;::::1;::::0;;;;;;;;;;8091:12;;;::::1;::::0;8073:55:::1;::::0;8146:7;;8171:354;;;;;;;8484:22;8171:354;::::1;8484:22:::0;8171:354;;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;8171:354:99::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;::::0;8543:25:::1;8073:509;;;;;-1:-1:-1::0;;;8073:509:99::1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8054:528:::0;7743:846;-1:-1:-1;;;7743:846:99:o;14595:303:100:-;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;14757:13:::1;::::0;-1:-1:-1;;;;;14747:23:100;;::::1;14757:13:::0;::::1;14747:23;;14739:41;;;::::0;-1:-1:-1;;;;;14739:41:100;;14611:2:123;14739:41:100::1;::::0;::::1;14593:21:123::0;14650:1;14630:18;;;14623:29;14688:7;14668:18;;;14661:35;14713:18;;14739:41:100::1;14409:328:123::0;14739:41:100::1;14808:11;::::0;-1:-1:-1;;;;;14798:21:100;;::::1;14808:11:::0;::::1;14798:21;;14790:39;;;::::0;-1:-1:-1;;;;;14790:39:100;;14611:2:123;14790:39:100::1;::::0;::::1;14593:21:123::0;14650:1;14630:18;;;14623:29;14688:7;14668:18;;;14661:35;14713:18;;14790:39:100::1;14409:328:123::0;14790:39:100::1;14839:52;-1:-1:-1::0;;;;;14839:38:100;::::1;14878:3:::0;14883:7;14839:38:::1;:52::i;:::-;14595:303:::0;;;:::o;9640:120::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9720:17:100::1;:33:::0;;-1:-1:-1;;;;;;9720:33:100::1;-1:-1:-1::0;;;;;9720:33:100;;;::::1;::::0;;;::::1;::::0;;9640:120::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;12343:1528:100:-:0;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;2357:4:::1;12621:18;:41;;12600:114;;;::::0;-1:-1:-1;;;;;12600:114:100;;14944:2:123;12600:114:100::1;::::0;::::1;14926:21:123::0;14983:2;14963:18;;;14956:30;15022:28;15002:18;;;14995:56;15068:18;;12600:114:100::1;14742:350:123::0;12600:114:100::1;2262:5;12745:18;:42;;12724:116;;;::::0;-1:-1:-1;;;;;12724:116:100;;15299:2:123;12724:116:100::1;::::0;::::1;15281:21:123::0;15338:2;15318:18;;;15311:30;15377:29;15357:18;;;15350:57;15424:18;;12724:116:100::1;15097:351:123::0;12724:116:100::1;12850:17;:38:::0;;;2572:4:::1;12946:41:::0;::::1;;12925:114;;;::::0;-1:-1:-1;;;;;12925:114:100;;15655:2:123;12925:114:100::1;::::0;::::1;15637:21:123::0;15694:2;15674:18;;;15667:30;15733:28;15713:18;;;15706:56;15779:18;;12925:114:100::1;15453:350:123::0;12925:114:100::1;2475:5;13070:18;:42;;13049:116;;;::::0;-1:-1:-1;;;;;13049:116:100;;16010:2:123;13049:116:100::1;::::0;::::1;15992:21:123::0;16049:2;16029:18;;;16022:30;16088:29;16068:18;;;16061:57;16135:18;;13049:116:100::1;15808:351:123::0;13049:116:100::1;13175:17;:38:::0;;;1812:4:::1;13272:33:::0;::::1;;13264:69;;;::::0;-1:-1:-1;;;;;13264:69:100;;16366:2:123;13264:69:100::1;::::0;::::1;16348:21:123::0;16405:2;16385:18;;;16378:30;16444:25;16424:18;;;16417:53;16487:18;;13264:69:100::1;16164:347:123::0;13264:69:100::1;13343:13;:30:::0;;;1991:4:::1;13416:29:::0;::::1;;13408:63;;;::::0;-1:-1:-1;;;;;13408:63:100;;16718:2:123;13408:63:100::1;::::0;::::1;16700:21:123::0;16757:2;16737:18;;;16730:30;16796:23;16776:18;;;16769:51;16837:18;;13408:63:100::1;16516:345:123::0;13408:63:100::1;13481:11;:26:::0;;;2166:4:::1;13546:31:::0;::::1;;13538:66;;;::::0;-1:-1:-1;;;;;13538:66:100;;17068:2:123;13538:66:100::1;::::0;::::1;17050:21:123::0;17107:2;17087:18;;;17080:30;17146:24;17126:18;;;17119:52;17188:18;;13538:66:100::1;16866:346:123::0;13538:66:100::1;13614:12;:28:::0;;;13698:166:::1;::::0;;17476:25:123;;;17532:2;17517:18;;17510:34;;;17560:18;;;17553:34;;;17618:2;17603:18;;17596:34;;;17661:3;17646:19;;17639:35;;;13698:166:100::1;::::0;17463:3:123;17448:19;13698:166:100::1;;;;;;;12343:1528:::0;;;;;:::o;899:1670:99:-;2369:13:6;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:13;:23;2385:16:6;2361:107;;;;-1:-1:-1;;;;;2361:107:6;;;;;;;:::i;:::-;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:6;;;;;2525:98;1058:14:99;;1052:3:::1;:20:::0;1082:11:::1;:18:::0;;1096:4:::1;-1:-1:-1::0;;1082:18:99;;::::1;;::::0;;1145:23:::1;::::0;;::::1;::::0;:34;;1132:10:::1;:47:::0;;1189:14;-1:-1:-1;;1189:14:99;;;1082:18:::1;-1:-1:-1::0;;;;;1132:47:99;;::::1;;-1:-1:-1::0;;1189:14:99;;::::1;::::0;;1238:46;;::::1;::::0;1213:22:::1;:71:::0;;-1:-1:-1;;;;;;1213:71:99;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1318:45:::1;::::0;;::::1;::::0;1294:21:::1;:69:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1388:36:::1;::::0;;::::1;::::0;1373:12:::1;:51:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1448:35:::1;::::0;::::1;::::0;1434:11:::1;:49:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1509:37:::1;::::0;::::1;::::0;1493:13:::1;:53:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1573:38:::1;::::0;::::1;::::0;1556:14:::1;:55:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1640:40:::1;::::0;::::1;::::0;1621:16:::1;:59:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1710:41:::1;::::0;;::::1;::::0;1690:17:::1;:61:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;1794:15;;::::1;::::0;:29;;1778:13:::1;:45:::0;1847:27;;::::1;::::0;1833:11:::1;:41:::0;1899:28;;::::1;::::0;1884:12:::1;:43:::0;1957:33;;::::1;::::0;1937:17:::1;:53:::0;2020:33:::1;::::0;;::::1;::::0;2000:17:::1;:53:::0;2111:33;::::1;::::0;2086:58;;::::1;::::0;:22:::1;::::0;:58:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2192:12:99::1;::::0;2179:62:::1;::::0;;;;-1:-1:-1;;;;;2192:12:99;;::::1;::::0;2179:38:::1;::::0;:62:::1;::::0;2218:22:::1;::::0;2179:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2179:62:99::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2154:87:::0;;::::1;::::0;:22:::1;::::0;:87:::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2328:21:99::1;::::0;::::1;::::0;:37;;2275:15:::1;:100:::0;;-1:-1:-1;;;;;;2275:100:99;;::::1;-1:-1:-1::0;;;;;2275:100:99;;::::1;;::::0;;;2442:41:::1;::::0;;::::1;::::0;2385:19:::1;:108:::0;;;;::::1;::::0;::::1;;::::0;;2526:36:::1;2547:14:::0;2526:20:::1;:36::i;:::-;2649:14:6::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:6;;;2080:637;899:1670:99;;:::o;5763:39:100:-;;;;;;;;;;;;7679:99;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7747:10:100::1;:24:::0;;-1:-1:-1;;7747:24:100::1;::::0;::::1;;::::0;;;::::1;::::0;;7679:99::o;14113:70::-;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;14168:8:::1;:6;:8::i;8444:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8523:14:100::1;:32:::0;;-1:-1:-1;;;;;;8523:32:100::1;-1:-1:-1::0;;;;;8523:32:100;;;::::1;::::0;;;::::1;::::0;;8444:118::o;9155:124::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9237:21:100::1;:35:::0;;-1:-1:-1;;;;;;9237:35:100::1;-1:-1:-1::0;;;;;9237:35:100;;;::::1;::::0;;;::::1;::::0;;9155:124::o;5984:35::-;;;;;;;;;;;;5898:39;;;;;;;;;;;;8188:114;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8265:13:100::1;:30:::0;;-1:-1:-1;;;;;;8265:30:100::1;-1:-1:-1::0;;;;;8265:30:100;;;::::1;::::0;;;::::1;::::0;;8188:114::o;9285:170::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9400:22:100::1;:48:::0;;-1:-1:-1;;;;;;9400:48:100::1;-1:-1:-1::0;;;;;9400:48:100;;;::::1;::::0;;;::::1;::::0;;9285:170::o;1336:271::-;2369:13:6;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:13;:23;2385:16:6;2361:107;;;;-1:-1:-1;;;;;2361:107:6;;;;;;;:::i;:::-;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:6;;;;;2525:98;1428:16:100::1;:14;:16::i;:::-;1484:33;1502:14;1484:17;:33::i;:::-;1544:11;:56:::0;;-1:-1:-1;;;;;;1544:56:100::1;1558:42;1544:56;::::0;;2645:66:6;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:6;;;2645:66;2080:637;1336:271:100;:::o;8308:130::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8393:17:100::1;:38:::0;;-1:-1:-1;;;;;;8393:38:100::1;-1:-1:-1::0;;;;;8393:38:100;;;::::1;::::0;;;::::1;::::0;;8308:130::o;7948:114::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8025:13:100::1;:30:::0;;-1:-1:-1;;;;;;8025:30:100::1;-1:-1:-1::0;;;;;8025:30:100;;;::::1;::::0;;;::::1;::::0;;7948:114::o;5943:35::-;;;;;;;;;;;;11564:140;7405:10;;;;;-1:-1:-1;;;;;7405:10:100;7391;:24;7383:41;;;;-1:-1:-1;;;;;7383:41:100;;;;;;;:::i;:::-;11639:10:::1;:24:::0;;-1:-1:-1;;11639:24:100::1;;-1:-1:-1::0;;;;;11639:24:100;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;11678:19:::1;::::0;1446:74:123;;;11678:19:100::1;::::0;1434:2:123;1419:18;11678:19:100::1;1300:226:123::0;9882:738:100;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;9967:9:100::1;::::0;::::1;9963:651;;9992:15;:51:::0;;-1:-1:-1;;;;;9992:51:100;::::1;-1:-1:-1::0;;;;;;9992:51:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;9963:651::-:1;10064:4;:9;;10072:1;10064:9;10060:554;;;10089:15;:51:::0;;-1:-1:-1;;;;;10089:51:100;::::1;-1:-1:-1::0;;;;;;10089:51:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;10060:554::-:1;10161:4;:9;;10169:1;10161:9;10157:457;;;10186:18;:54:::0;;-1:-1:-1;;;;;10186:54:100;::::1;-1:-1:-1::0;;;;;;10186:54:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;10157:457::-:1;10261:4;:9;;10269:1;10261:9;10257:357;;;10286:12;:48:::0;;-1:-1:-1;;;;;10286:48:100;::::1;-1:-1:-1::0;;;;;;10286:48:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;10257:357::-:1;10355:4;:9;;10363:1;10355:9;10351:263;;;10380:25;:61:::0;;-1:-1:-1;;;;;10380:61:100;::::1;-1:-1:-1::0;;;;;;10380:61:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;10351:263::-:1;10462:4;:9;;10470:1;10462:9;10458:156;;;10487:19;:55:::0;;-1:-1:-1;;;;;10487:55:100;::::1;-1:-1:-1::0;;;;;;10487:55:100;;::::1;;::::0;;2080:637:6;1336:271:100;:::o;10458:156::-:1;10573:30;::::0;-1:-1:-1;;;;;10573:30:100;;19973:2:123;10573:30:100::1;::::0;::::1;19955:21:123::0;20012:2;19992:18;;;19985:30;20051:22;20031:18;;;20024:50;20091:18;;10573:30:100::1;19771:344:123::0;4536:862:99;7513:22:100;;4705:7:99;;-1:-1:-1;;;;;7513:22:100;929:10:14;-1:-1:-1;;;;;7497:38:100;;7489:67;;;;-1:-1:-1;;;;;7489:67:100;;;;;;;:::i;:::-;1411:7:7;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;;;1646:38:7::1;;;;;;;:::i;:::-;4809:12:99::2;::::0;4768:17:::2;::::0;4750:84:::2;::::0;-1:-1:-1;;;;;4768:17:99;;::::2;::::0;4809:12:::2;4823:10:::0;4750:58:::2;:84::i;:::-;4902:12;::::0;4985:349:::2;::::0;;::::2;::::0;::::2;::::0;;5062:17:::2;::::0;-1:-1:-1;;;;;5062:17:99;;::::2;4985:349:::0;;5120:13:::2;::::0;;::::2;4985:349;::::0;;::::2;::::0;;;;5171:15:::2;::::0;;::::2;4985:349:::0;;;;5229:19:::2;::::0;;::::2;4985:349:::0;;;;5293:22:::2;4985:349:::0;;;;;;::::2;::::0;;;;;;;;;;4902:12;;;::::2;::::0;4884:55:::2;::::0;4957:10;;4985:349;;;;;;;5293:22;4985:349;::::2;5293:22:::0;4985:349;;::::2;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;4985:349:99::2;::::0;;;;;::::2;::::0;::::2;;::::0;;::::2;;;;;;;;;;::::0;5352:25:::2;4884:507;;;;;-1:-1:-1::0;;;4884:507:99::2;;;;;;;;;;;:::i;8823:675::-:0;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;1411:7:7;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;;;1646:38:7::1;;;;;;;:::i;:::-;9174:7:99::2;::::0;;;::::2;;;9170:79;;;9219:10;::::0;::::2;::::0;::::2;-1:-1:-1::0;;;;;9219:10:99::2;9205;:24;9197:41;;;;-1:-1:-1::0;;;;;9197:41:99::2;;;;;;;:::i;:::-;9357:12;9341:13;:28:::0;9452:13:::2;::::0;9434:57:::2;::::0;;;;9485:4:::2;9434:57;::::0;::::2;1446:74:123::0;-1:-1:-1;;;;;9452:13:99;;::::2;::::0;9434:42:::2;::::0;1419:18:123;;9434:57:99::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9416:15;:75:::0;-1:-1:-1;1772:1:8;2872:7;:22;8823:675:99:o;8924:106:100:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;8997:11:100::1;:26:::0;;-1:-1:-1;;;;;;8997:26:100::1;-1:-1:-1::0;;;;;8997:26:100;;;::::1;::::0;;;::::1;::::0;;8924:106::o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;20785:2:123;2238:73:3::1;::::0;::::1;20767:21:123::0;20824:2;20804:18;;;20797:30;20863:34;20843:18;;;20836:62;20934:8;20914:18;;;20907:36;20960:19;;2238:73:3::1;20583:402:123::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;6065:48:100:-;;;;;;;;;;;;10626:848;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;10737:9:100::1;::::0;::::1;10733:735;;10762:30;:22;10787:5:::0;;10762:30:::1;:::i;:::-;;14595:303:::0;;;:::o;10733:735::-:1;10813:4;:9;;10821:1;10813:9;10809:659;;;10838:30;:22;10863:5:::0;;10838:30:::1;:::i;10809:659::-;10889:4;:9;;10897:1;10889:9;10885:583;;;10914:30;:22;10939:5:::0;;10914:30:::1;:::i;10885:583::-;10965:4;:9;;10973:1;10965:9;10961:507;;;10990:30;:22;11015:5:::0;;10990:30:::1;:::i;10961:507::-;11041:4;:9;;11049:1;11041:9;11037:431;;;11066:26;:18;11087:5:::0;;11066:26:::1;:::i;11037:431::-;11113:4;:9;;11121:1;11113:9;11109:359;;;11138:26;:18;11159:5:::0;;11138:26:::1;:::i;11109:359::-;11185:4;:9;;11193:1;11185:9;11181:287;;;11210:25;:17;11230:5:::0;;11210:25:::1;:::i;11181:287::-;11256:4;:9;;11264:1;11256:9;11252:216;;;11281:39;:31;11315:5:::0;;11281:39:::1;:::i;11252:216::-;11341:4;:9;;11349:1;11341:9;11337:131;;;11366:30;:22;11391:5:::0;;11366:30:::1;:::i;967:252:12:-:0;1143:68;;-1:-1:-1;;;;;21271:15:123;;;1143:68:12;;;21253:34:123;21323:15;;21303:18;;;21296:43;21355:18;;;21348:34;;;1116:96:12;;1136:5;;1166:27;;21165:18:123;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;3462::19:-;3520:7;3546:5;3550:1;3546;:5;:::i;3847:96::-;3905:7;3931:5;3935:1;3931;:5;:::i;2752:96::-;2810:7;2836:5;2840:1;2836;:5;:::i;2353:117:7:-;1411:7;;;;1912:41;;;;-1:-1:-1;;;;;1912:41:7;;22369:2:123;1912:41:7;;;22351:21:123;22408:2;22388:18;;;22381:30;22447:22;22427:18;;;22420:50;22487:18;;1912:41:7;22167:344:123;1912:41:7;2411:7:::1;:15:::0;;-1:-1:-1;;2411:15:7::1;::::0;;2441:22:::1;929:10:14::0;2450:12:7::1;2441:22;::::0;-1:-1:-1;;;;;1464:55:123;;;1446:74;;1434:2;1419:18;2441:22:7::1;;;;;;;2353:117::o:0;3119:96:19:-;3177:7;3203:5;3207:1;3203;:5;:::i;745:216:12:-;895:58;;-1:-1:-1;;;;;22838:55:123;;895:58:12;;;22820:74:123;22910:18;;;22903:34;;;868:86:12;;888:5;;918:23;;22793:18:123;;895:58:12;22646:297:123;2099:321:12;2259:39;;;;;2283:4;2259:39;;;23183:34:123;-1:-1:-1;;;;;23253:15:123;;;23233:18;;;23226:43;2236:20:12;;2301:5;;2259:15;;;;;23095:18:123;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;22838:55:123;;2343:69:12;;;22820:74:123;22910:18;;;22903:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;22793:18:123;;2343:69:12;22646:297:123;2510:187:3;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;2106:115:7:-;1411:7;;;;1654:9;1646:38;;;;-1:-1:-1;;;;;1646:38:7;;;;;;;:::i;:::-;2165:7:::1;:14:::0;;-1:-1:-1;;2165:14:7::1;2175:4;2165:14;::::0;;2194:20:::1;2201:12;929:10:14::0;;850:96;988:95:3;2952:13:6;;;;;;;2944:69;;;;-1:-1:-1;;;;;2944:69:6;;;;;;;:::i;:::-;1050:26:3::1;:24;:26::i;3306:717:12:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;24144:2:123;3921:85:12;;;24126:21:123;24183:2;24163:18;;;24156:30;24222:34;24202:18;;;24195:62;24293:12;24273:18;;;24266:40;24323:19;;3921:85:12;23942:406:123;1089:111:3;2952:13:6;;;;;;;2944:69;;;;-1:-1:-1;;;;;2944:69:6;;;;;;;:::i;:::-;1161:32:3::1;929:10:14::0;1161:18:3::1;:32::i;3872:223:13:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:13:o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;24555:2:123;5148:81:13;;;24537:21:123;24594:2;24574:18;;;24567:30;24633:34;24613:18;;;24606:62;24704:8;24684:18;;;24677:36;24730:19;;5148:81:13;24353:402:123;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;24962:2:123;5239:60:13;;;24944:21:123;25001:2;24981:18;;;24974:30;25040:31;25020:18;;;25013:59;25089:18;;5239:60:13;24760:353:123;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:154:123;-1:-1:-1;;;;;93:5:123;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;:::-;173:134;;;:::o;312:247::-;371:6;424:2;412:9;403:7;399:23;395:32;392:52;;;440:1;437;430:12;392:52;479:9;466:23;498:31;523:5;498:31;:::i;746:118::-;832:5;825:13;818:21;811:5;808:32;798:60;;854:1;851;844:12;869:241;925:6;978:2;966:9;957:7;953:23;949:32;946:52;;;994:1;991;984:12;946:52;1033:9;1020:23;1052:28;1074:5;1052:28;:::i;1115:180::-;1174:6;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;-1:-1:-1;1266:23:123;;1115:180;-1:-1:-1;1115:180:123:o;1723:248::-;1791:6;1799;1852:2;1840:9;1831:7;1827:23;1823:32;1820:52;;;1868:1;1865;1858:12;1820:52;-1:-1:-1;;1891:23:123;;;1961:2;1946:18;;;1933:32;;-1:-1:-1;1723:248:123:o;1976:456::-;2053:6;2061;2069;2122:2;2110:9;2101:7;2097:23;2093:32;2090:52;;;2138:1;2135;2128:12;2090:52;2177:9;2164:23;2196:31;2221:5;2196:31;:::i;:::-;2246:5;-1:-1:-1;2298:2:123;2283:18;;2270:32;;-1:-1:-1;2354:2:123;2339:18;;2326:32;2367:33;2326:32;2367:33;:::i;:::-;2419:7;2409:17;;;1976:456;;;;;:::o;2696:454::-;2791:6;2799;2807;2815;2823;2876:3;2864:9;2855:7;2851:23;2847:33;2844:53;;;2893:1;2890;2883:12;2844:53;-1:-1:-1;;2916:23:123;;;2986:2;2971:18;;2958:32;;-1:-1:-1;3037:2:123;3022:18;;3009:32;;3088:2;3073:18;;3060:32;;-1:-1:-1;3139:3:123;3124:19;3111:33;;-1:-1:-1;2696:454:123;-1:-1:-1;2696:454:123:o;3155:184::-;3207:77;3204:1;3197:88;3304:4;3301:1;3294:15;3328:4;3325:1;3318:15;3344:253;3416:2;3410:9;3458:4;3446:17;;3493:18;3478:34;;3514:22;;;3475:62;3472:88;;;3540:18;;:::i;:::-;3576:2;3569:22;3344:253;:::o;3602:255::-;3674:2;3668:9;3716:6;3704:19;;3753:18;3738:34;;3774:22;;;3735:62;3732:88;;;3800:18;;:::i;3862:275::-;3933:2;3927:9;3998:2;3979:13;;-1:-1:-1;;3975:27:123;3963:40;;4033:18;4018:34;;4054:22;;;4015:62;4012:88;;;4080:18;;:::i;:::-;4116:2;4109:22;3862:275;;-1:-1:-1;3862:275:123:o;4142:186::-;4202:4;4235:18;4227:6;4224:30;4221:56;;;4257:18;;:::i;:::-;-1:-1:-1;4317:4:123;4298:17;;;4294:28;;4142:186::o;4333:738::-;4387:5;4440:3;4433:4;4425:6;4421:17;4417:27;4407:55;;4458:1;4455;4448:12;4407:55;4494:6;4481:20;4520:4;4544:60;4560:43;4600:2;4560:43;:::i;:::-;4544:60;:::i;:::-;4638:15;;;4720:11;;;4708:24;;4704:33;;;4669:12;;;;4749:15;;;4746:35;;;4777:1;4774;4767:12;4746:35;4813:2;4805:6;4801:15;4825:217;4841:6;4836:3;4833:15;4825:217;;;4921:3;4908:17;4938:31;4963:5;4938:31;:::i;:::-;4982:18;;5020:12;;;;4858;;4825:217;;;-1:-1:-1;5060:5:123;4333:738;-1:-1:-1;;;;;;4333:738:123:o;5076:481::-;5132:5;5180:4;5168:9;5163:3;5159:19;5155:30;5152:50;;;5198:1;5195;5188:12;5152:50;5220:22;;:::i;:::-;5211:31;;5278:9;5265:23;5258:5;5251:38;5349:2;5338:9;5334:18;5321:32;5316:2;5309:5;5305:14;5298:56;5414:2;5403:9;5399:18;5386:32;5381:2;5374:5;5370:14;5363:56;5479:2;5468:9;5464:18;5451:32;5446:2;5439:5;5435:14;5428:56;5545:3;5534:9;5530:19;5517:33;5511:3;5504:5;5500:15;5493:58;5076:481;;;;:::o;5562:1186::-;5624:5;5672:4;5660:9;5655:3;5651:19;5647:30;5644:50;;;5690:1;5687;5680:12;5644:50;5723:2;5717:9;5765:4;5757:6;5753:17;5836:6;5824:10;5821:22;5800:18;5788:10;5785:34;5782:62;5779:88;;;5847:18;;:::i;:::-;5883:2;5876:22;5916:6;-1:-1:-1;5916:6:123;5946:23;;5978:33;5946:23;5978:33;:::i;:::-;6020:23;;6095:2;6080:18;;6067:32;6108:33;6067:32;6108:33;:::i;:::-;6169:2;6157:15;;6150:32;6234:2;6219:18;;6206:32;6247:33;6206:32;6247:33;:::i;:::-;6308:2;6296:15;;6289:32;6373:2;6358:18;;6345:32;6386:33;6345:32;6386:33;:::i;:::-;6447:2;6435:15;;6428:32;6512:3;6497:19;;6484:33;6526;6484;6526;:::i;:::-;6587:3;6575:16;;6568:33;6653:3;6638:19;;6625:33;6667;6625;6667;:::i;:::-;6728:3;6716:16;;;;6709:33;5562:1186;;-1:-1:-1;;5562:1186:123:o;6753:2439::-;6854:6;6862;6915:2;6903:9;6894:7;6890:23;6886:32;6883:52;;;6931:1;6928;6921:12;6883:52;6970:9;6957:23;6989:31;7014:5;6989:31;:::i;:::-;7039:5;-1:-1:-1;7095:2:123;7080:18;;7067:32;7118:18;7148:14;;;7145:34;;;7175:1;7172;7165:12;7145:34;7198:22;;;;7239:16;;;7275:6;7267:15;;7264:35;;;7295:1;7292;7285:12;7264:35;7323:22;;:::i;:::-;7383:2;7370:16;7361:7;7354:33;7406:6;7446:2;7440;7436:7;7432:2;7428:16;7424:25;7421:45;;;7462:1;7459;7452:12;7421:45;7490:22;;:::i;:::-;7475:37;;7537:31;7564:2;7560;7556:11;7537:31;:::i;:::-;7528:7;7521:48;7603:31;7630:2;7626;7622:11;7603:31;:::i;:::-;7598:2;7589:7;7585:16;7578:57;7669:31;7696:2;7692;7688:11;7669:31;:::i;:::-;7664:2;7655:7;7651:16;7644:57;7735:32;7762:3;7758:2;7754:12;7735:32;:::i;:::-;7730:2;7721:7;7717:16;7710:58;7803:33;7830:4;7826:2;7822:13;7803:33;:::i;:::-;7797:3;7788:7;7784:17;7777:60;7873:32;7900:3;7896:2;7892:12;7873:32;:::i;:::-;7866:4;7857:7;7853:18;7846:60;7941:32;7968:3;7964:2;7960:12;7941:32;:::i;:::-;7935:3;7926:7;7922:17;7915:59;7993:3;8031:31;8058:2;8054;8050:11;8031:31;:::i;:::-;8025:3;8016:7;8012:17;8005:58;8082:3;8119:31;8146:2;8142;8138:11;8119:31;:::i;:::-;8114:2;8105:7;8101:16;8094:57;8170:3;8160:13;;8207:31;8234:2;8230;8226:11;8207:31;:::i;:::-;8189:16;;;8182:57;8258:3;8295:31;8314:11;;;8295:31;:::i;:::-;8290:2;8281:7;8277:16;8270:57;8346:3;8336:13;;8383:31;8410:2;8406;8402:11;8383:31;:::i;:::-;8365:16;;;8358:57;8435:3;8472:32;8491:12;;;8472:32;:::i;:::-;8467:2;8458:7;8454:16;8447:58;8525:3;8514:14;;8563:32;8590:3;8586:2;8582:12;8563:32;:::i;:::-;8544:17;;;8537:59;8616:3;8654:32;8673:12;;;8654:32;:::i;:::-;8648:3;8639:7;8635:17;8628:59;8722:31;8749:2;8745;8741:11;8722:31;:::i;:::-;8716:3;8707:7;8703:17;8696:58;;;;8788:7;8783:2;8774:7;8770:16;8763:33;8842:3;8838:2;8834:12;8821:26;8805:42;;8872:2;8862:8;8859:16;8856:36;;;8888:1;8885;8878:12;8856:36;8926:56;8974:7;8963:8;8959:2;8955:17;8926:56;:::i;:::-;8921:2;8912:7;8908:16;8901:82;9017:50;9059:7;9053:3;9049:2;9045:12;9017:50;:::i;:::-;9012:2;9003:7;8999:16;8992:76;9103:56;9151:7;9145:3;9141:2;9137:12;9103:56;:::i;:::-;9097:3;9088:7;9084:17;9077:83;9179:7;9169:17;;;;;;6753:2439;;;;;:::o;9197:156::-;9263:20;;9323:4;9312:16;;9302:27;;9292:55;;9343:1;9340;9333:12;9358:317;9424:6;9432;9485:2;9473:9;9464:7;9460:23;9456:32;9453:52;;;9501:1;9498;9491:12;9453:52;9524:27;9541:9;9524:27;:::i;:::-;9514:37;;9601:2;9590:9;9586:18;9573:32;9614:31;9639:5;9614:31;:::i;:::-;9664:5;9654:15;;;9358:317;;;;;:::o;9680:686::-;9773:6;9781;9789;9842:2;9830:9;9821:7;9817:23;9813:32;9810:52;;;9858:1;9855;9848:12;9810:52;9881:27;9898:9;9881:27;:::i;:::-;9871:37;;9959:2;9948:9;9944:18;9931:32;9982:18;10023:2;10015:6;10012:14;10009:34;;;10039:1;10036;10029:12;10009:34;10077:6;10066:9;10062:22;10052:32;;10122:7;10115:4;10111:2;10107:13;10103:27;10093:55;;10144:1;10141;10134:12;10093:55;10184:2;10171:16;10210:2;10202:6;10199:14;10196:34;;;10226:1;10223;10216:12;10196:34;10280:7;10275:2;10269;10261:6;10257:15;10253:2;10249:24;10245:33;10242:46;10239:66;;;10301:1;10298;10291:12;10239:66;10332:2;10328;10324:11;10314:21;;10354:6;10344:16;;;;;9680:686;;;;;:::o;10371:356::-;10573:2;10555:21;;;10592:18;;;10585:30;10651:34;10646:2;10631:18;;10624:62;10718:2;10703:18;;10371:356::o;10732:327::-;10934:2;10916:21;;;10973:1;10953:18;;;10946:29;11011:6;11006:2;10991:18;;10984:34;11050:2;11035:18;;10732:327::o;11064:340::-;11266:2;11248:21;;;11305:2;11285:18;;;11278:30;11344:18;11339:2;11324:18;;11317:46;11395:2;11380:18;;11064:340::o;11409:355::-;11611:2;11593:21;;;11650:2;11630:18;;;11623:30;11689:33;11684:2;11669:18;;11662:61;11755:2;11740:18;;11409:355::o;11769:340::-;11971:2;11953:21;;;12010:2;11990:18;;;11983:30;12049:18;12044:2;12029:18;;12022:46;12100:2;12085:18;;11769:340::o;12473:184::-;12543:6;12596:2;12584:9;12575:7;12571:23;12567:32;12564:52;;;12612:1;12609;12602:12;12564:52;-1:-1:-1;12635:16:123;;12473:184;-1:-1:-1;12473:184:123:o;12997:934::-;13069:3;13108:4;13103:3;13099:14;-1:-1:-1;;;;;13213:2:123;13205:5;13199:12;13195:21;13190:3;13183:34;13236:4;13297:2;13291;13284:5;13280:14;13274:21;13270:30;13265:2;13260:3;13256:12;13249:52;13362:2;13354:4;13347:5;13343:16;13337:23;13333:32;13326:4;13321:3;13317:14;13310:56;13427:2;13419:4;13412:5;13408:16;13402:23;13398:32;13391:4;13386:3;13382:14;13375:56;13477:4;13470:5;13466:16;13460:23;13515:4;13508;13503:3;13499:14;13492:28;13542:4;13575:12;13569:19;13610:6;13604:4;13597:20;13644:3;13639;13635:13;13626:22;;13689:2;13675:12;13671:21;13657:35;;13710:1;13701:10;;13720:184;13734:6;13731:1;13728:13;13720:184;;;13801:13;;13797:22;;13783:37;;13879:15;;;;13756:1;13749:9;;;;;13842:14;;;;13720:184;;;-1:-1:-1;13920:5:123;12997:934;-1:-1:-1;;;;;;;12997:934:123:o;13936:468::-;14217:6;14206:9;14199:25;14260:2;14255;14244:9;14240:18;14233:30;14180:4;14280:75;14351:2;14340:9;14336:18;14328:6;14280:75;:::i;:::-;14272:83;;14391:6;14386:2;14375:9;14371:18;14364:34;13936:468;;;;;;:::o;17685:410::-;17887:2;17869:21;;;17926:2;17906:18;;;17899:30;17965:34;17960:2;17945:18;;17938:62;18036:16;18031:2;18016:18;;18009:44;18085:3;18070:19;;17685:410::o;18100:704::-;18268:2;18320:21;;;18390:13;;18293:18;;;18412:22;;;18239:4;18477:17;;;18517:16;;;18239:4;;18268:2;18465;18450:18;;;18239:4;18561:217;18575:6;18572:1;18569:13;18561:217;;;18640:13;;-1:-1:-1;;;;;18636:62:123;18624:75;;18766:1;18754:14;;;;18719:12;;;;18590:9;18561:217;;;-1:-1:-1;18795:3:123;;18100:704;-1:-1:-1;;;;;;18100:704:123:o;18809:957::-;18904:6;18935:2;18978;18966:9;18957:7;18953:23;18949:32;18946:52;;;18994:1;18991;18984:12;18946:52;19027:9;19021:16;19060:18;19052:6;19049:30;19046:50;;;19092:1;19089;19082:12;19046:50;19115:22;;19168:4;19160:13;;19156:27;-1:-1:-1;19146:55:123;;19197:1;19194;19187:12;19146:55;19226:2;19220:9;19249:60;19265:43;19305:2;19265:43;:::i;19249:60::-;19343:15;;;19421:11;;;19413:20;;19409:29;;;19374:12;;;;19450:19;;;19447:39;;;19482:1;19479;19472:12;19447:39;19506:11;;;;19526:210;19542:6;19537:3;19534:15;19526:210;;;19615:3;19609:10;19632:31;19657:5;19632:31;:::i;:::-;19676:18;;19559:12;;;;19714;;;;19526:210;;21393:184;21445:77;21442:1;21435:88;21542:4;21539:1;21532:15;21566:4;21563:1;21556:15;21582:168;21622:7;21688:1;21684;21680:6;21676:14;21673:1;21670:21;21665:1;21658:9;21651:17;21647:45;21644:71;;;21695:18;;:::i;:::-;-1:-1:-1;21735:9:123;;21582:168::o;21755:274::-;21795:1;21821;21811:189;;21856:77;21853:1;21846:88;21957:4;21954:1;21947:15;21985:4;21982:1;21975:15;21811:189;-1:-1:-1;22014:9:123;;21755:274::o;22034:128::-;22074:3;22105:1;22101:6;22098:1;22095:13;22092:39;;;22111:18;;:::i;:::-;-1:-1:-1;22147:9:123;;22034:128::o;22516:125::-;22556:4;22584:1;22581;22578:8;22575:34;;;22589:18;;:::i;:::-;-1:-1:-1;22626:9:123;;22516:125::o;23280:407::-;23482:2;23464:21;;;23521:2;23501:18;;;23494:30;23560:34;23555:2;23540:18;;23533:62;23631:13;23626:2;23611:18;;23604:41;23677:3;23662:19;;23280:407::o;23692:245::-;23759:6;23812:2;23800:9;23791:7;23787:23;23783:32;23780:52;;;23828:1;23825;23818:12;23780:52;23860:9;23854:16;23879:28;23901:5;23879:28;:::i;25118:258::-;25190:1;25200:113;25214:6;25211:1;25208:13;25200:113;;;25290:11;;;25284:18;25271:11;;;25264:39;25236:2;25229:10;25200:113;;;25331:6;25328:1;25325:13;25322:48;;;-1:-1:-1;;25366:1:123;25348:16;;25341:27;25118:258::o;25381:274::-;25510:3;25548:6;25542:13;25564:53;25610:6;25605:3;25598:4;25590:6;25586:17;25564:53;:::i;:::-;25633:16;;;;;25381:274;-1:-1:-1;;25381:274:123:o;25660:383::-;25809:2;25798:9;25791:21;25772:4;25841:6;25835:13;25884:6;25879:2;25868:9;25864:18;25857:34;25900:66;25959:6;25954:2;25943:9;25939:18;25934:2;25926:6;25922:15;25900:66;:::i;:::-;26027:2;26006:15;-1:-1:-1;;26002:29:123;25987:45;;;;26034:2;25983:54;;25660:383;-1:-1:-1;;25660:383:123:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./_VaultBase.sol\";\n\nimport \"../libraries/PriceFeed.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"./actions/VaultActionsZorro.sol\";\n\n/// @title VaultZorro. The Vault for staking the Zorro token\n/// @dev Only to be deployed on the home of the ZOR token\ncontract VaultZorro is VaultBase {\n    /* Libraries */\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n    using SafeSwapUni for IAMMRouter02;\n    using PriceFeed for AggregatorV3Interface;\n\n    /* Constructor */\n    /// @notice Upgradeable constructor\n    /// @dev NOTE: Only to be deployed on home chain!\n    /// @param _initValue A VaultZorroInit struct that contains all constructor args\n    /// @param _timelockOwner The designated timelock controller address to act as owner\n    function initialize(\n        address _timelockOwner,\n        VaultZorroInit memory _initValue\n    ) public initializer {\n        // Vault config\n        pid = _initValue.pid;\n        isHomeChain = true;\n\n        // Addresses\n        govAddress = _initValue.keyAddresses.govAddress;\n        onlyGov = true;\n        zorroControllerAddress = _initValue.keyAddresses.zorroControllerAddress;\n        zorroXChainController = _initValue.keyAddresses.zorroXChainController;\n        ZORROAddress = _initValue.keyAddresses.ZORROAddress;\n        wantAddress = _initValue.keyAddresses.wantAddress;\n        token0Address = _initValue.keyAddresses.token0Address;\n        rewardsAddress = _initValue.keyAddresses.rewardsAddress;\n        uniRouterAddress = _initValue.keyAddresses.uniRouterAddress;\n        defaultStablecoin = _initValue.keyAddresses.defaultStablecoin;\n\n        // Fees\n        controllerFee = _initValue.fees.controllerFee;\n        buyBackRate = _initValue.fees.buyBackRate;\n        revShareRate = _initValue.fees.revShareRate;\n        entranceFeeFactor = _initValue.fees.entranceFeeFactor;\n        withdrawFeeFactor = _initValue.fees.withdrawFeeFactor;\n\n        // Swap paths\n        stablecoinToToken0Path = _initValue.stablecoinToToken0Path;\n        token0ToStablecoinPath = VaultActions(vaultActions).reversePath(stablecoinToToken0Path);\n\n        // Price feeds\n        token0PriceFeed = AggregatorV3Interface(\n            _initValue.priceFeeds.token0PriceFeed\n        );\n        stablecoinPriceFeed = AggregatorV3Interface(\n            _initValue.priceFeeds.stablecoinPriceFeed\n        );\n\n        // Super call\n        VaultBase.initialize(_timelockOwner);\n    }\n\n    /* Structs */\n\n    struct VaultZorroInit {\n        uint256 pid;\n        VaultActions.VaultAddresses keyAddresses;\n        address[] stablecoinToToken0Path;\n        VaultActions.VaultFees fees;\n        VaultActions.VaultPriceFeeds priceFeeds;\n    }\n\n    /* Investment Actions */\n\n    /// @notice Receives new deposits from user\n    /// @param _wantAmt amount of Want token to deposit/stake\n    /// @return uint256 Number of shares added\n    function depositWantToken(uint256 _wantAmt)\n        public\n        override\n        onlyZorroController\n        nonReentrant\n        whenNotPaused\n        returns (uint256)\n    {\n        // Preflight checks\n        require(_wantAmt > 0, \"Want token deposit must be > 0\");\n\n        // Transfer Want token from sender\n        IERC20Upgradeable(wantAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Set sharesAdded to the Want token amount specified\n        uint256 sharesAdded = _wantAmt;\n        // If the total number of shares and want tokens locked both exceed 0, the shares added is the proportion of Want tokens locked,\n        // discounted by the entrance fee\n        if (wantLockedTotal > 0 && sharesTotal > 0) {\n            sharesAdded = _wantAmt\n                .mul(sharesTotal)\n                .mul(entranceFeeFactor)\n                .div(wantLockedTotal)\n                .div(entranceFeeFactorMax);\n        }\n        // Increment the shares\n        sharesTotal = sharesTotal.add(sharesAdded);\n\n        // Update want locked total\n        wantLockedTotal = IERC20Upgradeable(token0Address).balanceOf(address(this));\n\n        return sharesAdded;\n    }\n\n    /// @notice Performs necessary operations to convert USD into Want token\n    /// @param _amountUSD The USD quantity to exchange\n    /// @param _maxMarketMovementAllowed The max slippage allowed. 1000 = 0 %, 995 = 0.5%, etc.\n    /// @return uint256 Amount of Want token obtained\n    function exchangeUSDForWantToken(\n        uint256 _amountUSD,\n        uint256 _maxMarketMovementAllowed\n    ) public override onlyZorroController whenNotPaused returns (uint256) {\n        // Allow spending\n        IERC20Upgradeable(defaultStablecoin).safeIncreaseAllowance(vaultActions, _amountUSD);\n\n        // Exchange\n        return\n            VaultActionsZorro(vaultActions).exchangeUSDForWantToken(\n                _amountUSD,\n                VaultActionsZorro.ExchangeUSDForWantParams({\n                    stablecoin: defaultStablecoin,\n                    tokenZorroAddress: token0Address,\n                    zorroPriceFeed: token0PriceFeed,\n                    stablecoinPriceFeed: stablecoinPriceFeed,\n                    stablecoinToZorroPath: stablecoinToToken0Path\n                }),\n                _maxMarketMovementAllowed\n            );\n    }\n\n    /// @notice Public function for farming Want token.\n    function farm() public nonReentrant {}\n\n    /// @notice Withdraw Want tokens from the Farm contract\n    /// @param _wantAmt The amount of Want token to withdraw\n    /// @return uint256 the number of shares removed\n    function withdrawWantToken(uint256 _wantAmt)\n        public\n        override\n        onlyZorroController\n        nonReentrant\n        returns (uint256)\n    {\n        // Preflight checks\n        require(_wantAmt > 0, \"negWant\");\n\n        // Shares removed is proportional to the % of total Want tokens locked that _wantAmt represents\n        uint256 sharesRemoved = _wantAmt.mul(sharesTotal).div(wantLockedTotal);\n        // Safety: cap the shares to the total number of shares\n        if (sharesRemoved > sharesTotal) {\n            sharesRemoved = sharesTotal;\n        }\n        // Decrement the total shares by the sharesRemoved\n        sharesTotal = sharesTotal.sub(sharesRemoved);\n\n        // If a withdrawal fee is specified, discount the _wantAmt by the withdrawal fee\n        if (withdrawFeeFactor < withdrawFeeFactorMax) {\n            _wantAmt = _wantAmt.mul(withdrawFeeFactor).div(\n                withdrawFeeFactorMax\n            );\n        }\n\n        // Safety: Check balance of this contract's Want tokens held, and cap _wantAmt to that value\n        uint256 _wantBal = IERC20Upgradeable(wantAddress).balanceOf(address(this));\n        if (_wantAmt > _wantBal) {\n            _wantAmt = _wantBal;\n        }\n        // Safety: cap _wantAmt at the total quantity of Want tokens locked\n        if (wantLockedTotal < _wantAmt) {\n            _wantAmt = wantLockedTotal;\n        }\n\n        // Decrement the total Want locked tokens by the _wantAmt\n        wantLockedTotal = wantLockedTotal.sub(_wantAmt);\n\n        // Finally, transfer the want amount from this contract, back to the ZorroController contract\n        IERC20Upgradeable(wantAddress).safeTransfer(zorroControllerAddress, _wantAmt);\n\n        return sharesRemoved;\n    }\n\n    /// @notice Converts Want token back into USD to be ready for withdrawal\n    /// @param _amount The Want token quantity to exchange\n    /// @param _maxMarketMovementAllowed The max slippage allowed for swaps. (included here just to implement interface; otherwise unused)\n    /// @return uint256 Amount of  token obtained\n    function exchangeWantTokenForUSD(\n        uint256 _amount,\n        uint256 _maxMarketMovementAllowed\n    ) public virtual override onlyZorroController returns (uint256) {\n        // Allow spending\n        IERC20Upgradeable(wantAddress).safeIncreaseAllowance(vaultActions, _amount);\n\n        // Exchange\n        return\n            VaultActionsZorro(vaultActions).exchangeWantTokenForUSD(\n                _amount,\n                VaultActionsZorro.ExchangeWantTokenForUSDParams({\n                    tokenZorroAddress: token0Address,\n                    stablecoin: defaultStablecoin,\n                    zorroPriceFeed: token0PriceFeed,\n                    stablecoinPriceFeed: stablecoinPriceFeed,\n                    zorroToStablecoinPath: token0ToStablecoinPath\n                }),\n                _maxMarketMovementAllowed\n            );\n    }\n\n    /// @notice The main compounding (earn) function. Reinvests profits since the last earn event.\n    /// @param _maxMarketMovementAllowed The max slippage allowed. (included here just to implement interface; otherwise unused)\n    function earn(uint256 _maxMarketMovementAllowed)\n        public\n        override\n        nonReentrant\n        whenNotPaused\n    {\n        // Reqs\n        require(_maxMarketMovementAllowed >= 0); // Satisfy compiler warnings of unused var\n\n        // If onlyGov is set to true, only allow to proceed if the current caller is the govAddress\n        if (onlyGov) {\n            require(msg.sender == govAddress, \"!gov\");\n        }\n\n        // (No distribution of fees/buyback)\n\n        // Update last earned block\n        lastEarnBlock = block.number;\n\n        // Update want locked total\n        wantLockedTotal = IERC20Upgradeable(token0Address).balanceOf(address(this));\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/VaultZorro.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/VaultZorro.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13161
      ],
      "IAMMRouter02": [
        13249
      ],
      "IAlpacaVault": [
        12597
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12562
      ],
      "ILayerZeroReceiver": [
        14358
      ],
      "IStargateReceiver": [
        14605
      ],
      "IVault": [
        13622
      ],
      "IZorroControllerXChain": [
        14199
      ],
      "IZorroControllerXChainBase": [
        14040
      ],
      "IZorroControllerXChainDeposit": [
        14074
      ],
      "IZorroControllerXChainEarn": [
        14132
      ],
      "IZorroControllerXChainReceiver": [
        14187
      ],
      "IZorroControllerXChainWithdraw": [
        14175
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15228
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15445
      ],
      "SafeSwapUni": [
        15427
      ],
      "VaultActions": [
        26424
      ],
      "VaultActionsZorro": [
        25689
      ],
      "VaultBase": [
        21893
      ],
      "VaultZorro": [
        20799
      ]
    },
    "id": 20800,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20290,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:99"
      },
      {
        "absolutePath": "project:/contracts/vaults/_VaultBase.sol",
        "file": "./_VaultBase.sol",
        "id": 20291,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20800,
        "sourceUnit": 21894,
        "src": "57:26:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/PriceFeed.sol",
        "file": "../libraries/PriceFeed.sol",
        "id": 20292,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20800,
        "sourceUnit": 15229,
        "src": "85:36:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 20293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20800,
        "sourceUnit": 2558,
        "src": "123:78:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/vaults/actions/VaultActionsZorro.sol",
        "file": "./actions/VaultActionsZorro.sol",
        "id": 20294,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20800,
        "sourceUnit": 25690,
        "src": "203:41:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20296,
              "name": "VaultBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21893,
              "src": "388:9:99"
            },
            "id": 20297,
            "nodeType": "InheritanceSpecifier",
            "src": "388:9:99"
          }
        ],
        "canonicalName": "VaultZorro",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 20295,
          "nodeType": "StructuredDocumentation",
          "src": "246:119:99",
          "text": "@title VaultZorro. The Vault for staking the Zorro token\n @dev Only to be deployed on the home of the ZOR token"
        },
        "fullyImplemented": true,
        "id": 20799,
        "linearizedBaseContracts": [
          20799,
          21893,
          1885,
          1944,
          571,
          3169,
          1774,
          13622
        ],
        "name": "VaultZorro",
        "nameLocation": "374:10:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20301,
            "libraryName": {
              "id": 20298,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "430:20:99"
            },
            "nodeType": "UsingForDirective",
            "src": "424:49:99",
            "typeName": {
              "id": 20300,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20299,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "455:17:99"
              },
              "referencedDeclaration": 2635,
              "src": "455:17:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 20304,
            "libraryName": {
              "id": 20302,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3828,
              "src": "484:19:99"
            },
            "nodeType": "UsingForDirective",
            "src": "478:38:99",
            "typeName": {
              "id": 20303,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "508:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 20308,
            "libraryName": {
              "id": 20305,
              "name": "SafeSwapUni",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15427,
              "src": "527:11:99"
            },
            "nodeType": "UsingForDirective",
            "src": "521:35:99",
            "typeName": {
              "id": 20307,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20306,
                "name": "IAMMRouter02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13249,
                "src": "543:12:99"
              },
              "referencedDeclaration": 13249,
              "src": "543:12:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAMMRouter02_$13249",
                "typeString": "contract IAMMRouter02"
              }
            }
          },
          {
            "id": 20312,
            "libraryName": {
              "id": 20309,
              "name": "PriceFeed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15228,
              "src": "567:9:99"
            },
            "nodeType": "UsingForDirective",
            "src": "561:42:99",
            "typeName": {
              "id": 20311,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20310,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "581:21:99"
              },
              "referencedDeclaration": 45,
              "src": "581:21:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            }
          },
          {
            "body": {
              "id": 20456,
              "nodeType": "Block",
              "src": "1018:1551:99",
              "statements": [
                {
                  "expression": {
                    "id": 20326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20323,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20886,
                      "src": "1052:3:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 20324,
                        "name": "_initValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20318,
                        "src": "1058:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                          "typeString": "struct VaultZorro.VaultZorroInit memory"
                        }
                      },
                      "id": 20325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20459,
                      "src": "1058:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1052:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20327,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:20:99"
                },
                {
                  "expression": {
                    "id": 20330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20328,
                      "name": "isHomeChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20884,
                      "src": "1082:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 20329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1096:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1082:18:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20331,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:18:99"
                },
                {
                  "expression": {
                    "id": 20336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20332,
                      "name": "govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20890,
                      "src": "1132:10:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20333,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1145:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1145:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20335,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "govAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25716,
                      "src": "1145:34:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1132:47:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20337,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:47:99"
                },
                {
                  "expression": {
                    "id": 20340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20338,
                      "name": "onlyGov",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20892,
                      "src": "1189:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 20339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1199:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1189:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20341,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:14:99"
                },
                {
                  "expression": {
                    "id": 20346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20342,
                      "name": "zorroControllerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20894,
                      "src": "1213:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20343,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1238:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1238:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zorroControllerAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25718,
                      "src": "1238:46:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1213:71:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20347,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:71:99"
                },
                {
                  "expression": {
                    "id": 20352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20348,
                      "name": "zorroXChainController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20896,
                      "src": "1294:21:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20349,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1318:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20350,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1318:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zorroXChainController",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25720,
                      "src": "1318:45:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1294:69:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20353,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:69:99"
                },
                {
                  "expression": {
                    "id": 20358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20354,
                      "name": "ZORROAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20898,
                      "src": "1373:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20355,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1388:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20356,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1388:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ZORROAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25722,
                      "src": "1388:36:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1373:51:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20359,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:51:99"
                },
                {
                  "expression": {
                    "id": 20364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20360,
                      "name": "wantAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20904,
                      "src": "1434:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20361,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1448:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20362,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1448:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wantAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25726,
                      "src": "1448:35:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1434:49:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20365,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:49:99"
                },
                {
                  "expression": {
                    "id": 20370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20366,
                      "name": "token0Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20906,
                      "src": "1493:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20367,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1509:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1509:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0Address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25728,
                      "src": "1509:37:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1493:53:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20371,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:53:99"
                },
                {
                  "expression": {
                    "id": 20376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20372,
                      "name": "rewardsAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20918,
                      "src": "1556:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20373,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1573:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20374,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1573:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25736,
                      "src": "1573:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1556:55:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20377,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:55:99"
                },
                {
                  "expression": {
                    "id": 20382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20378,
                      "name": "uniRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20922,
                      "src": "1621:16:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20379,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1640:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20380,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1640:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20381,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "uniRouterAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25740,
                      "src": "1640:40:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1621:59:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20383,
                  "nodeType": "ExpressionStatement",
                  "src": "1621:59:99"
                },
                {
                  "expression": {
                    "id": 20388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20384,
                      "name": "defaultStablecoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20914,
                      "src": "1690:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20385,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1710:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyAddresses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20462,
                        "src": "1710:23:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultAddresses_$25747_memory_ptr",
                          "typeString": "struct VaultActions.VaultAddresses memory"
                        }
                      },
                      "id": 20387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "defaultStablecoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25746,
                      "src": "1710:41:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1690:61:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20389,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:61:99"
                },
                {
                  "expression": {
                    "id": 20394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20390,
                      "name": "controllerFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20928,
                      "src": "1778:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20391,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1794:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20392,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20468,
                        "src": "1794:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultFees_$25758_memory_ptr",
                          "typeString": "struct VaultActions.VaultFees memory"
                        }
                      },
                      "id": 20393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "controllerFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25749,
                      "src": "1794:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1778:45:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20395,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:45:99"
                },
                {
                  "expression": {
                    "id": 20400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20396,
                      "name": "buyBackRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20930,
                      "src": "1833:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20397,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1847:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20398,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20468,
                        "src": "1847:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultFees_$25758_memory_ptr",
                          "typeString": "struct VaultActions.VaultFees memory"
                        }
                      },
                      "id": 20399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buyBackRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25751,
                      "src": "1847:27:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1833:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20401,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:41:99"
                },
                {
                  "expression": {
                    "id": 20406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20402,
                      "name": "revShareRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20932,
                      "src": "1884:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20403,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1899:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20468,
                        "src": "1899:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultFees_$25758_memory_ptr",
                          "typeString": "struct VaultActions.VaultFees memory"
                        }
                      },
                      "id": 20405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "revShareRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25753,
                      "src": "1899:28:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1884:43:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20407,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:43:99"
                },
                {
                  "expression": {
                    "id": 20412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20408,
                      "name": "entranceFeeFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "1937:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20409,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "1957:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20410,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20468,
                        "src": "1957:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultFees_$25758_memory_ptr",
                          "typeString": "struct VaultActions.VaultFees memory"
                        }
                      },
                      "id": 20411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "entranceFeeFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25755,
                      "src": "1957:33:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1937:53:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20413,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:53:99"
                },
                {
                  "expression": {
                    "id": 20418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20414,
                      "name": "withdrawFeeFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "2000:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 20415,
                          "name": "_initValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20318,
                          "src": "2020:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                            "typeString": "struct VaultZorro.VaultZorroInit memory"
                          }
                        },
                        "id": 20416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20468,
                        "src": "2020:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultFees_$25758_memory_ptr",
                          "typeString": "struct VaultActions.VaultFees memory"
                        }
                      },
                      "id": 20417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawFeeFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25757,
                      "src": "2020:33:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2000:53:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20419,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:53:99"
                },
                {
                  "expression": {
                    "id": 20423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20420,
                      "name": "stablecoinToToken0Path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20945,
                      "src": "2086:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 20421,
                        "name": "_initValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20318,
                        "src": "2111:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                          "typeString": "struct VaultZorro.VaultZorroInit memory"
                        }
                      },
                      "id": 20422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stablecoinToToken0Path",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20465,
                      "src": "2111:33:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2086:58:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 20424,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:58:99"
                },
                {
                  "expression": {
                    "id": 20432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20425,
                      "name": "token0ToStablecoinPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20951,
                      "src": "2154:22:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20430,
                          "name": "stablecoinToToken0Path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20945,
                          "src": "2218:22:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 20427,
                              "name": "vaultActions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20902,
                              "src": "2192:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 20426,
                            "name": "VaultActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26424,
                            "src": "2179:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VaultActions_$26424_$",
                              "typeString": "type(contract VaultActions)"
                            }
                          },
                          "id": 20428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2179:26:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultActions_$26424",
                            "typeString": "contract VaultActions"
                          }
                        },
                        "id": 20429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "reversePath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26423,
                        "src": "2179:38:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (address[] memory) pure external returns (address[] memory)"
                        }
                      },
                      "id": 20431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2179:62:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2154:87:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 20433,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:87:99"
                },
                {
                  "expression": {
                    "id": 20440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20434,
                      "name": "token0PriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20972,
                      "src": "2275:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 20436,
                              "name": "_initValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20318,
                              "src": "2328:10:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                                "typeString": "struct VaultZorro.VaultZorroInit memory"
                              }
                            },
                            "id": 20437,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "priceFeeds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20471,
                            "src": "2328:21:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultPriceFeeds_$25771_memory_ptr",
                              "typeString": "struct VaultActions.VaultPriceFeeds memory"
                            }
                          },
                          "id": 20438,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token0PriceFeed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25760,
                          "src": "2328:37:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20435,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2293:21:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 20439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2293:82:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2275:100:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 20441,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:100:99"
                },
                {
                  "expression": {
                    "id": 20448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20442,
                      "name": "stablecoinPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20987,
                      "src": "2385:19:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 20444,
                              "name": "_initValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20318,
                              "src": "2442:10:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                                "typeString": "struct VaultZorro.VaultZorroInit memory"
                              }
                            },
                            "id": 20445,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "priceFeeds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20471,
                            "src": "2442:21:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultPriceFeeds_$25771_memory_ptr",
                              "typeString": "struct VaultActions.VaultPriceFeeds memory"
                            }
                          },
                          "id": 20446,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stablecoinPriceFeed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25770,
                          "src": "2442:41:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20443,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2407:21:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 20447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2407:86:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "2385:108:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 20449,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:108:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20453,
                        "name": "_timelockOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20315,
                        "src": "2547:14:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 20450,
                        "name": "VaultBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21893,
                        "src": "2526:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VaultBase_$21893_$",
                          "typeString": "type(contract VaultBase)"
                        }
                      },
                      "id": 20452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20852,
                      "src": "2526:20:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 20454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:36:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20455,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:36:99"
                }
              ]
            },
            "documentation": {
              "id": 20313,
              "nodeType": "StructuredDocumentation",
              "src": "631:263:99",
              "text": "@notice Upgradeable constructor\n @dev NOTE: Only to be deployed on home chain!\n @param _initValue A VaultZorroInit struct that contains all constructor args\n @param _timelockOwner The designated timelock controller address to act as owner"
            },
            "functionSelector": "7ccfe8bc",
            "id": 20457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20320,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1748,
                  "src": "1006:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "1006:11:99"
              }
            ],
            "name": "initialize",
            "nameLocation": "908:10:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20315,
                  "mutability": "mutable",
                  "name": "_timelockOwner",
                  "nameLocation": "936:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20457,
                  "src": "928:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20318,
                  "mutability": "mutable",
                  "name": "_initValue",
                  "nameLocation": "982:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20457,
                  "src": "960:32:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultZorroInit_$20472_memory_ptr",
                    "typeString": "struct VaultZorro.VaultZorroInit"
                  },
                  "typeName": {
                    "id": 20317,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20316,
                      "name": "VaultZorroInit",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20472,
                      "src": "960:14:99"
                    },
                    "referencedDeclaration": 20472,
                    "src": "960:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultZorroInit_$20472_storage_ptr",
                      "typeString": "struct VaultZorro.VaultZorroInit"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:80:99"
            },
            "returnParameters": {
              "id": 20322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:0:99"
            },
            "scope": 20799,
            "src": "899:1670:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "VaultZorro.VaultZorroInit",
            "id": 20472,
            "members": [
              {
                "constant": false,
                "id": 20459,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "2634:3:99",
                "nodeType": "VariableDeclaration",
                "scope": 20472,
                "src": "2626:11:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20458,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2626:7:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20462,
                "mutability": "mutable",
                "name": "keyAddresses",
                "nameLocation": "2675:12:99",
                "nodeType": "VariableDeclaration",
                "scope": 20472,
                "src": "2647:40:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VaultAddresses_$25747_storage_ptr",
                  "typeString": "struct VaultActions.VaultAddresses"
                },
                "typeName": {
                  "id": 20461,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 20460,
                    "name": "VaultActions.VaultAddresses",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25747,
                    "src": "2647:27:99"
                  },
                  "referencedDeclaration": 25747,
                  "src": "2647:27:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultAddresses_$25747_storage_ptr",
                    "typeString": "struct VaultActions.VaultAddresses"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20465,
                "mutability": "mutable",
                "name": "stablecoinToToken0Path",
                "nameLocation": "2707:22:99",
                "nodeType": "VariableDeclaration",
                "scope": 20472,
                "src": "2697:32:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 20463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20464,
                  "nodeType": "ArrayTypeName",
                  "src": "2697:9:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20468,
                "mutability": "mutable",
                "name": "fees",
                "nameLocation": "2762:4:99",
                "nodeType": "VariableDeclaration",
                "scope": 20472,
                "src": "2739:27:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VaultFees_$25758_storage_ptr",
                  "typeString": "struct VaultActions.VaultFees"
                },
                "typeName": {
                  "id": 20467,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 20466,
                    "name": "VaultActions.VaultFees",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25758,
                    "src": "2739:22:99"
                  },
                  "referencedDeclaration": 25758,
                  "src": "2739:22:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultFees_$25758_storage_ptr",
                    "typeString": "struct VaultActions.VaultFees"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20471,
                "mutability": "mutable",
                "name": "priceFeeds",
                "nameLocation": "2805:10:99",
                "nodeType": "VariableDeclaration",
                "scope": 20472,
                "src": "2776:39:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VaultPriceFeeds_$25771_storage_ptr",
                  "typeString": "struct VaultActions.VaultPriceFeeds"
                },
                "typeName": {
                  "id": 20470,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 20469,
                    "name": "VaultActions.VaultPriceFeeds",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25771,
                    "src": "2776:28:99"
                  },
                  "referencedDeclaration": 25771,
                  "src": "2776:28:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultPriceFeeds_$25771_storage_ptr",
                    "typeString": "struct VaultActions.VaultPriceFeeds"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VaultZorroInit",
            "nameLocation": "2601:14:99",
            "nodeType": "StructDefinition",
            "scope": 20799,
            "src": "2594:228:99",
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21871
            ],
            "body": {
              "id": 20557,
              "nodeType": "Block",
              "src": "3192:1056:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20488,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20475,
                          "src": "3238:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 20489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3249:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3238:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57616e7420746f6b656e206465706f736974206d757374206265203e2030",
                        "id": 20491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3252:32:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ddbaa40fb58dd9462905dbdf9d6d43b0c0996510fa5dffc7bb00ec126d5b159",
                          "typeString": "literal_string \"Want token deposit must be > 0\""
                        },
                        "value": "Want token deposit must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ddbaa40fb58dd9462905dbdf9d6d43b0c0996510fa5dffc7bb00ec126d5b159",
                          "typeString": "literal_string \"Want token deposit must be > 0\""
                        }
                      ],
                      "id": 20487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3230:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:55:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20493,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:55:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20498,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3400:3:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3400:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20502,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3432:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultZorro_$20799",
                              "typeString": "contract VaultZorro"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultZorro_$20799",
                              "typeString": "contract VaultZorro"
                            }
                          ],
                          "id": 20501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3424:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20500,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3424:7:99",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3424:13:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20504,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20475,
                        "src": "3451:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20495,
                            "name": "wantAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20904,
                            "src": "3357:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20494,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3339:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3339:30:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "3339:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:130:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20506,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:130:99"
                },
                {
                  "assignments": [
                    20508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20508,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "3550:11:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 20557,
                      "src": "3542:19:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3542:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20510,
                  "initialValue": {
                    "id": 20509,
                    "name": "_wantAmt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20475,
                    "src": "3564:8:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3542:30:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 20517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 20513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20511,
                        "name": "wantLockedTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20940,
                        "src": "3765:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 20512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3783:1:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3765:19:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 20516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20514,
                        "name": "sharesTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20942,
                        "src": "3788:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 20515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3788:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3765:38:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20535,
                  "nodeType": "IfStatement",
                  "src": "3761:246:99",
                  "trueBody": {
                    "id": 20534,
                    "nodeType": "Block",
                    "src": "3805:202:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 20532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20518,
                            "name": "sharesAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20508,
                            "src": "3819:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 20530,
                                "name": "entranceFeeFactorMax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20873,
                                "src": "3975:20:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 20527,
                                    "name": "wantLockedTotal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20940,
                                    "src": "3937:15:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 20524,
                                        "name": "entranceFeeFactor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20934,
                                        "src": "3897:17:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 20521,
                                            "name": "sharesTotal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 20942,
                                            "src": "3863:11:99",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 20519,
                                            "name": "_wantAmt",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 20475,
                                            "src": "3833:8:99",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 20520,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3722,
                                          "src": "3833:29:99",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 20522,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3833:42:99",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 20523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3722,
                                      "src": "3833:63:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 20525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3833:82:99",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 20526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3737,
                                  "src": "3833:103:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 20528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3833:120:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 20529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3737,
                              "src": "3833:141:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 20531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3833:163:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3819:177:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20533,
                        "nodeType": "ExpressionStatement",
                        "src": "3819:177:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 20541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20536,
                      "name": "sharesTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20942,
                      "src": "4048:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20539,
                          "name": "sharesAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20508,
                          "src": "4078:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 20537,
                          "name": "sharesTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20942,
                          "src": "4062:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3692,
                        "src": "4062:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 20540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4062:28:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4048:42:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20542,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:42:99"
                },
                {
                  "expression": {
                    "id": 20553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20543,
                      "name": "wantLockedTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "4137:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 20550,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4206:4:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultZorro_$20799",
                                "typeString": "contract VaultZorro"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultZorro_$20799",
                                "typeString": "contract VaultZorro"
                              }
                            ],
                            "id": 20549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4198:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 20548,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4198:7:99",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 20551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4198:13:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 20545,
                              "name": "token0Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20906,
                              "src": "4173:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 20544,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2635,
                            "src": "4155:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 20546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4155:32:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "id": 20547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2574,
                        "src": "4155:42:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 20552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4155:57:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4137:75:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20554,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:75:99"
                },
                {
                  "expression": {
                    "id": 20555,
                    "name": "sharesAdded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20508,
                    "src": "4230:11:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20486,
                  "id": 20556,
                  "nodeType": "Return",
                  "src": "4223:18:99"
                }
              ]
            },
            "documentation": {
              "id": 20473,
              "nodeType": "StructuredDocumentation",
              "src": "2858:152:99",
              "text": "@notice Receives new deposits from user\n @param _wantAmt amount of Want token to deposit/stake\n @return uint256 Number of shares added"
            },
            "functionSelector": "2209b59e",
            "id": 20558,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20479,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20478,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21049,
                  "src": "3099:19:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "3099:19:99"
              },
              {
                "id": 20481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20480,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "3127:12:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "3127:12:99"
              },
              {
                "id": 20483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20482,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1836,
                  "src": "3148:13:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "3148:13:99"
              }
            ],
            "name": "depositWantToken",
            "nameLocation": "3024:16:99",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3082:8:99"
            },
            "parameters": {
              "id": 20476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20475,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3049:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20558,
                  "src": "3041:16:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3040:18:99"
            },
            "returnParameters": {
              "id": 20486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20558,
                  "src": "3179:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3179:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3178:9:99"
            },
            "scope": 20799,
            "src": "3015:1233:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21864
            ],
            "body": {
              "id": 20597,
              "nodeType": "Block",
              "src": "4714:684:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20577,
                        "name": "vaultActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20902,
                        "src": "4809:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20578,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20561,
                        "src": "4823:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20574,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20914,
                            "src": "4768:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20573,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "4750:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4750:36:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "4750:58:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 20579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4750:84:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20580,
                  "nodeType": "ExpressionStatement",
                  "src": "4750:84:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20585,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20561,
                        "src": "4957:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20588,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20914,
                            "src": "5062:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 20589,
                            "name": "token0Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20906,
                            "src": "5120:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 20590,
                            "name": "token0PriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20972,
                            "src": "5171:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          {
                            "id": 20591,
                            "name": "stablecoinPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20987,
                            "src": "5229:19:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          {
                            "id": 20592,
                            "name": "stablecoinToToken0Path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20945,
                            "src": "5293:22:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          ],
                          "expression": {
                            "id": 20586,
                            "name": "VaultActionsZorro",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25689,
                            "src": "4985:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VaultActionsZorro_$25689_$",
                              "typeString": "type(contract VaultActionsZorro)"
                            }
                          },
                          "id": 20587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ExchangeUSDForWantParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25517,
                          "src": "4985:42:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ExchangeUSDForWantParams_$25517_storage_ptr_$",
                            "typeString": "type(struct VaultActionsZorro.ExchangeUSDForWantParams storage pointer)"
                          }
                        },
                        "id": 20593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "stablecoin",
                          "tokenZorroAddress",
                          "zorroPriceFeed",
                          "stablecoinPriceFeed",
                          "stablecoinToZorroPath"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4985:349:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr",
                          "typeString": "struct VaultActionsZorro.ExchangeUSDForWantParams memory"
                        }
                      },
                      {
                        "id": 20594,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20563,
                        "src": "5352:25:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr",
                          "typeString": "struct VaultActionsZorro.ExchangeUSDForWantParams memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20582,
                            "name": "vaultActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20902,
                            "src": "4902:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20581,
                          "name": "VaultActionsZorro",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25689,
                          "src": "4884:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VaultActionsZorro_$25689_$",
                            "typeString": "type(contract VaultActionsZorro)"
                          }
                        },
                        "id": 20583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4884:31:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultActionsZorro_$25689",
                          "typeString": "contract VaultActionsZorro"
                        }
                      },
                      "id": 20584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25607,
                      "src": "4884:55:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_ExchangeUSDForWantParams_$25517_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,struct VaultActionsZorro.ExchangeUSDForWantParams memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 20595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:507:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20572,
                  "id": 20596,
                  "nodeType": "Return",
                  "src": "4865:526:99"
                }
              ]
            },
            "documentation": {
              "id": 20559,
              "nodeType": "StructuredDocumentation",
              "src": "4254:277:99",
              "text": "@notice Performs necessary operations to convert USD into Want token\n @param _amountUSD The USD quantity to exchange\n @param _maxMarketMovementAllowed The max slippage allowed. 1000 = 0 %, 995 = 0.5%, etc.\n @return uint256 Amount of Want token obtained"
            },
            "functionSelector": "e502a88d",
            "id": 20598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20566,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21049,
                  "src": "4662:19:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "4662:19:99"
              },
              {
                "id": 20569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20568,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1836,
                  "src": "4682:13:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "4682:13:99"
              }
            ],
            "name": "exchangeUSDForWantToken",
            "nameLocation": "4545:23:99",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20565,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4653:8:99"
            },
            "parameters": {
              "id": 20564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20561,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "4586:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20598,
                  "src": "4578:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20563,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "4614:25:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20598,
                  "src": "4606:33:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:77:99"
            },
            "returnParameters": {
              "id": 20572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20598,
                  "src": "4705:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4705:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4704:9:99"
            },
            "scope": 20799,
            "src": "4536:862:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13606
            ],
            "body": {
              "id": 20604,
              "nodeType": "Block",
              "src": "5496:2:99",
              "statements": []
            },
            "documentation": {
              "id": 20599,
              "nodeType": "StructuredDocumentation",
              "src": "5404:51:99",
              "text": "@notice Public function for farming Want token."
            },
            "functionSelector": "36e9332d",
            "id": 20605,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20602,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20601,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "5483:12:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "5483:12:99"
              }
            ],
            "name": "farm",
            "nameLocation": "5469:4:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5473:2:99"
            },
            "returnParameters": {
              "id": 20603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5496:0:99"
            },
            "scope": 20799,
            "src": "5460:38:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21878
            ],
            "body": {
              "id": 20713,
              "nodeType": "Block",
              "src": "5834:1578:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20619,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20608,
                          "src": "5880:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 20620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5891:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5880:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e656757616e74",
                        "id": 20622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5894:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_869a81434170bf1000300fd22bf6ea05da16d1d14b21ddcb3fa8ec273453ac05",
                          "typeString": "literal_string \"negWant\""
                        },
                        "value": "negWant"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_869a81434170bf1000300fd22bf6ea05da16d1d14b21ddcb3fa8ec273453ac05",
                          "typeString": "literal_string \"negWant\""
                        }
                      ],
                      "id": 20618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5872:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5872:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20624,
                  "nodeType": "ExpressionStatement",
                  "src": "5872:32:99"
                },
                {
                  "assignments": [
                    20626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20626,
                      "mutability": "mutable",
                      "name": "sharesRemoved",
                      "nameLocation": "6027:13:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 20713,
                      "src": "6019:21:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6019:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20634,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 20632,
                        "name": "wantLockedTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20940,
                        "src": "6073:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20629,
                            "name": "sharesTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20942,
                            "src": "6056:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 20627,
                            "name": "_wantAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20608,
                            "src": "6043:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 20628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3722,
                          "src": "6043:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 20630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6043:25:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 20631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3737,
                      "src": "6043:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 20633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6043:46:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6019:70:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20635,
                      "name": "sharesRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20626,
                      "src": "6167:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 20636,
                      "name": "sharesTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20942,
                      "src": "6183:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6167:27:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20643,
                  "nodeType": "IfStatement",
                  "src": "6163:85:99",
                  "trueBody": {
                    "id": 20642,
                    "nodeType": "Block",
                    "src": "6196:52:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 20640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20638,
                            "name": "sharesRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20626,
                            "src": "6210:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 20639,
                            "name": "sharesTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20942,
                            "src": "6226:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6210:27:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20641,
                        "nodeType": "ExpressionStatement",
                        "src": "6210:27:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 20649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20644,
                      "name": "sharesTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20942,
                      "src": "6316:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20647,
                          "name": "sharesRemoved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20626,
                          "src": "6346:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 20645,
                          "name": "sharesTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20942,
                          "src": "6330:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3707,
                        "src": "6330:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 20648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6330:30:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6316:44:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20650,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:44:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20651,
                      "name": "withdrawFeeFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "6464:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 20652,
                      "name": "withdrawFeeFactorMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20879,
                      "src": "6484:20:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6464:40:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20665,
                  "nodeType": "IfStatement",
                  "src": "6460:169:99",
                  "trueBody": {
                    "id": 20664,
                    "nodeType": "Block",
                    "src": "6506:123:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 20662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20654,
                            "name": "_wantAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20608,
                            "src": "6520:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 20660,
                                "name": "withdrawFeeFactorMax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20879,
                                "src": "6584:20:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 20657,
                                    "name": "withdrawFeeFactor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20936,
                                    "src": "6544:17:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 20655,
                                    "name": "_wantAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20608,
                                    "src": "6531:8:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 20656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3722,
                                  "src": "6531:12:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 20658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6531:31:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 20659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3737,
                              "src": "6531:35:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 20661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6531:87:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6520:98:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20663,
                        "nodeType": "ExpressionStatement",
                        "src": "6520:98:99"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    20667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20667,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "6748:8:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 20713,
                      "src": "6740:16:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6740:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20677,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 20674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6808:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultZorro_$20799",
                              "typeString": "contract VaultZorro"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultZorro_$20799",
                              "typeString": "contract VaultZorro"
                            }
                          ],
                          "id": 20673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6800:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6800:7:99",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6800:13:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20669,
                            "name": "wantAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20904,
                            "src": "6777:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20668,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "6759:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6759:30:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "6759:40:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 20676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6759:55:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6740:74:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20678,
                      "name": "_wantAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20608,
                      "src": "6828:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 20679,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20667,
                      "src": "6839:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6828:19:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20686,
                  "nodeType": "IfStatement",
                  "src": "6824:69:99",
                  "trueBody": {
                    "id": 20685,
                    "nodeType": "Block",
                    "src": "6849:44:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 20683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20681,
                            "name": "_wantAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20608,
                            "src": "6863:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 20682,
                            "name": "_wantBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20667,
                            "src": "6874:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6863:19:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20684,
                        "nodeType": "ExpressionStatement",
                        "src": "6863:19:99"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20687,
                      "name": "wantLockedTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "6982:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 20688,
                      "name": "_wantAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20608,
                      "src": "7000:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6982:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20695,
                  "nodeType": "IfStatement",
                  "src": "6978:83:99",
                  "trueBody": {
                    "id": 20694,
                    "nodeType": "Block",
                    "src": "7010:51:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 20692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20690,
                            "name": "_wantAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20608,
                            "src": "7024:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 20691,
                            "name": "wantLockedTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20940,
                            "src": "7035:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7024:26:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20693,
                        "nodeType": "ExpressionStatement",
                        "src": "7024:26:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 20701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20696,
                      "name": "wantLockedTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "7137:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20699,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20608,
                          "src": "7175:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 20697,
                          "name": "wantLockedTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20940,
                          "src": "7155:15:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 20698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3707,
                        "src": "7155:19:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 20700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7155:29:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7137:47:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20702,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:47:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20707,
                        "name": "zorroControllerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20894,
                        "src": "7341:22:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20708,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20608,
                        "src": "7365:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20704,
                            "name": "wantAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20904,
                            "src": "7315:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20703,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "7297:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7297:30:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "7297:43:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 20709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7297:77:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20710,
                  "nodeType": "ExpressionStatement",
                  "src": "7297:77:99"
                },
                {
                  "expression": {
                    "id": 20711,
                    "name": "sharesRemoved",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20626,
                    "src": "7392:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20617,
                  "id": 20712,
                  "nodeType": "Return",
                  "src": "7385:20:99"
                }
              ]
            },
            "documentation": {
              "id": 20606,
              "nodeType": "StructuredDocumentation",
              "src": "5504:169:99",
              "text": "@notice Withdraw Want tokens from the Farm contract\n @param _wantAmt The amount of Want token to withdraw\n @return uint256 the number of shares removed"
            },
            "functionSelector": "55ebedec",
            "id": 20714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20611,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21049,
                  "src": "5763:19:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "5763:19:99"
              },
              {
                "id": 20614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20613,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "5791:12:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "5791:12:99"
              }
            ],
            "name": "withdrawWantToken",
            "nameLocation": "5687:17:99",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20610,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5746:8:99"
            },
            "parameters": {
              "id": 20609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20608,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "5713:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20714,
                  "src": "5705:16:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5705:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5704:18:99"
            },
            "returnParameters": {
              "id": 20617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20714,
                  "src": "5821:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5821:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5820:9:99"
            },
            "scope": 20799,
            "src": "5678:1734:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21887
            ],
            "body": {
              "id": 20751,
              "nodeType": "Block",
              "src": "7912:677:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20731,
                        "name": "vaultActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20902,
                        "src": "8001:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20732,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20717,
                        "src": "8015:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20728,
                            "name": "wantAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20904,
                            "src": "7966:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20727,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "7948:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7948:30:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "7948:52:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 20733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7948:75:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20734,
                  "nodeType": "ExpressionStatement",
                  "src": "7948:75:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20739,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20717,
                        "src": "8146:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20742,
                            "name": "token0Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20906,
                            "src": "8260:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 20743,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20914,
                            "src": "8307:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 20744,
                            "name": "token0PriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20972,
                            "src": "8362:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          {
                            "id": 20745,
                            "name": "stablecoinPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20987,
                            "src": "8420:19:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          {
                            "id": 20746,
                            "name": "token0ToStablecoinPath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20951,
                            "src": "8484:22:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          ],
                          "expression": {
                            "id": 20740,
                            "name": "VaultActionsZorro",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25689,
                            "src": "8171:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VaultActionsZorro_$25689_$",
                              "typeString": "type(contract VaultActionsZorro)"
                            }
                          },
                          "id": 20741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ExchangeWantTokenForUSDParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25531,
                          "src": "8171:47:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ExchangeWantTokenForUSDParams_$25531_storage_ptr_$",
                            "typeString": "type(struct VaultActionsZorro.ExchangeWantTokenForUSDParams storage pointer)"
                          }
                        },
                        "id": 20747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "tokenZorroAddress",
                          "stablecoin",
                          "zorroPriceFeed",
                          "stablecoinPriceFeed",
                          "zorroToStablecoinPath"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "8171:354:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr",
                          "typeString": "struct VaultActionsZorro.ExchangeWantTokenForUSDParams memory"
                        }
                      },
                      {
                        "id": 20748,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20719,
                        "src": "8543:25:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr",
                          "typeString": "struct VaultActionsZorro.ExchangeWantTokenForUSDParams memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20736,
                            "name": "vaultActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20902,
                            "src": "8091:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20735,
                          "name": "VaultActionsZorro",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25689,
                          "src": "8073:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VaultActionsZorro_$25689_$",
                            "typeString": "type(contract VaultActionsZorro)"
                          }
                        },
                        "id": 20737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8073:31:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultActionsZorro_$25689",
                          "typeString": "contract VaultActionsZorro"
                        }
                      },
                      "id": 20738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeWantTokenForUSD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25688,
                      "src": "8073:55:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_ExchangeWantTokenForUSDParams_$25531_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,struct VaultActionsZorro.ExchangeWantTokenForUSDParams memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 20749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8073:509:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20726,
                  "id": 20750,
                  "nodeType": "Return",
                  "src": "8054:528:99"
                }
              ]
            },
            "documentation": {
              "id": 20715,
              "nodeType": "StructuredDocumentation",
              "src": "7418:320:99",
              "text": "@notice Converts Want token back into USD to be ready for withdrawal\n @param _amount The Want token quantity to exchange\n @param _maxMarketMovementAllowed The max slippage allowed for swaps. (included here just to implement interface; otherwise unused)\n @return uint256 Amount of  token obtained"
            },
            "functionSelector": "648794a4",
            "id": 20752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20723,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20722,
                  "name": "onlyZorroController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21049,
                  "src": "7874:19:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "7874:19:99"
              }
            ],
            "name": "exchangeWantTokenForUSD",
            "nameLocation": "7752:23:99",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20721,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7865:8:99"
            },
            "parameters": {
              "id": 20720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20717,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7793:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20752,
                  "src": "7785:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7785:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20719,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "7818:25:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20752,
                  "src": "7810:33:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7810:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7775:74:99"
            },
            "returnParameters": {
              "id": 20726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20752,
                  "src": "7903:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7903:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7902:9:99"
            },
            "scope": 20799,
            "src": "7743:846:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21892
            ],
            "body": {
              "id": 20797,
              "nodeType": "Block",
              "src": "8951:547:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20764,
                          "name": "_maxMarketMovementAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20755,
                          "src": "8985:25:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 20765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9014:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8985:30:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8977:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8977:39:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20768,
                  "nodeType": "ExpressionStatement",
                  "src": "8977:39:99"
                },
                {
                  "condition": {
                    "id": 20769,
                    "name": "onlyGov",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20892,
                    "src": "9174:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20779,
                  "nodeType": "IfStatement",
                  "src": "9170:79:99",
                  "trueBody": {
                    "id": 20778,
                    "nodeType": "Block",
                    "src": "9183:66:99",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 20774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 20771,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "9205:3:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 20772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9205:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 20773,
                                "name": "govAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20890,
                                "src": "9219:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9205:24:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "21676f76",
                              "id": 20775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9231:6:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b3654675894a95b1dc82f755299fd3027dd62a51a93db7a4df3c20f76d37c21",
                                "typeString": "literal_string \"!gov\""
                              },
                              "value": "!gov"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b3654675894a95b1dc82f755299fd3027dd62a51a93db7a4df3c20f76d37c21",
                                "typeString": "literal_string \"!gov\""
                              }
                            ],
                            "id": 20770,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9197:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 20776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9197:41:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20777,
                        "nodeType": "ExpressionStatement",
                        "src": "9197:41:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 20783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20780,
                      "name": "lastEarnBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20938,
                      "src": "9341:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 20781,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "9357:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 20782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "9357:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9341:28:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20784,
                  "nodeType": "ExpressionStatement",
                  "src": "9341:28:99"
                },
                {
                  "expression": {
                    "id": 20795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20785,
                      "name": "wantLockedTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "9416:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 20792,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9485:4:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultZorro_$20799",
                                "typeString": "contract VaultZorro"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultZorro_$20799",
                                "typeString": "contract VaultZorro"
                              }
                            ],
                            "id": 20791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9477:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 20790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9477:7:99",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 20793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9477:13:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 20787,
                              "name": "token0Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20906,
                              "src": "9452:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 20786,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2635,
                            "src": "9434:17:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 20788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9434:32:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "id": 20789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2574,
                        "src": "9434:42:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 20794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9434:57:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9416:75:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20796,
                  "nodeType": "ExpressionStatement",
                  "src": "9416:75:99"
                }
              ]
            },
            "documentation": {
              "id": 20753,
              "nodeType": "StructuredDocumentation",
              "src": "8595:223:99",
              "text": "@notice The main compounding (earn) function. Reinvests profits since the last earn event.\n @param _maxMarketMovementAllowed The max slippage allowed. (included here just to implement interface; otherwise unused)"
            },
            "functionSelector": "e65a0117",
            "id": 20798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20759,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20758,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8912:12:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "8912:12:99"
              },
              {
                "id": 20761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20760,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1836,
                  "src": "8933:13:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "8933:13:99"
              }
            ],
            "name": "earn",
            "nameLocation": "8832:4:99",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20757,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8895:8:99"
            },
            "parameters": {
              "id": 20756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20755,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "8845:25:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 20798,
                  "src": "8837:33:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8837:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8836:35:99"
            },
            "returnParameters": {
              "id": 20762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8951:0:99"
            },
            "scope": 20799,
            "src": "8823:675:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20800,
        "src": "365:9135:99",
        "usedErrors": []
      }
    ],
    "src": "32:9469:99"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-23T16:17:51.632Z",
  "devdoc": {
    "details": "Only to be deployed on the home of the ZOR token",
    "kind": "dev",
    "methods": {
      "depositWantToken(uint256)": {
        "params": {
          "_wantAmt": "amount of Want token to deposit/stake"
        },
        "returns": {
          "_0": "uint256 Number of shares added"
        }
      },
      "earn(uint256)": {
        "params": {
          "_maxMarketMovementAllowed": "The max slippage allowed. (included here just to implement interface; otherwise unused)"
        }
      },
      "exchangeUSDForWantToken(uint256,uint256)": {
        "params": {
          "_amountUSD": "The USD quantity to exchange",
          "_maxMarketMovementAllowed": "The max slippage allowed. 1000 = 0 %, 995 = 0.5%, etc."
        },
        "returns": {
          "_0": "uint256 Amount of Want token obtained"
        }
      },
      "exchangeWantTokenForUSD(uint256,uint256)": {
        "params": {
          "_amount": "The Want token quantity to exchange",
          "_maxMarketMovementAllowed": "The max slippage allowed for swaps. (included here just to implement interface; otherwise unused)"
        },
        "returns": {
          "_0": "uint256 Amount of  token obtained"
        }
      },
      "inCaseTokensGetStuck(address,uint256,address)": {
        "params": {
          "_amount": "The amount of the tokens to transfer",
          "_to": "The address to transfer tokens to",
          "_token": "Address of the ERC20 token to transfer"
        }
      },
      "initialize(address,(uint256,(address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address),address[],(uint256,uint256,uint256,uint256,uint256),(address,address,address,address,address,address)))": {
        "details": "NOTE: Only to be deployed on home chain!",
        "params": {
          "_initValue": "A VaultZorroInit struct that contains all constructor args",
          "_timelockOwner": "The designated timelock controller address to act as owner"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFeeSettings(uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_buyBackRate": "Buy back rate fee numerator",
          "_controllerFee": "Controller fee numerator",
          "_entranceFeeFactor": "Entrance fee numerator (higher means smaller percentage)",
          "_revShareRate": "Rev share rate fee numerator",
          "_withdrawFeeFactor": "Withdrawal fee numerator (higher means smaller percentage)"
        }
      },
      "setGov(address)": {
        "params": {
          "_govAddress": "The new gov address"
        }
      },
      "setOnlyGov(bool)": {
        "params": {
          "_onlyGov": "whether onlyGov should be enforced"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawWantToken(uint256)": {
        "params": {
          "_wantAmt": "The amount of Want token to withdraw"
        },
        "returns": {
          "_0": "uint256 the number of shares removed"
        }
      }
    },
    "title": "VaultZorro. The Vault for staking the Zorro token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "depositWantToken(uint256)": {
        "notice": "Receives new deposits from user"
      },
      "earn(uint256)": {
        "notice": "The main compounding (earn) function. Reinvests profits since the last earn event."
      },
      "exchangeUSDForWantToken(uint256,uint256)": {
        "notice": "Performs necessary operations to convert USD into Want token"
      },
      "exchangeWantTokenForUSD(uint256,uint256)": {
        "notice": "Converts Want token back into USD to be ready for withdrawal"
      },
      "farm()": {
        "notice": "Public function for farming Want token."
      },
      "inCaseTokensGetStuck(address,uint256,address)": {
        "notice": "Safely transfer ERC20 tokens stuck in this contract to a specified address"
      },
      "initialize(address,(uint256,(address,address,address,address,address,address,address,address,address,address,address,address,address,address,address,address),address[],(uint256,uint256,uint256,uint256,uint256),(address,address,address,address,address,address)))": {
        "notice": "Upgradeable constructor"
      },
      "pause()": {
        "notice": "Pause contract"
      },
      "setFeeSettings(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Configure key fee parameters"
      },
      "setGov(address)": {
        "notice": "Set governor address"
      },
      "setOnlyGov(bool)": {
        "notice": "Set onlyGov property"
      },
      "unpause()": {
        "notice": "Unpause contract"
      },
      "withdrawWantToken(uint256)": {
        "notice": "Withdraw Want tokens from the Farm contract"
      }
    },
    "version": 1
  }
}