{
  "contractName": "MockAcryptosVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_liquidity",
          "type": "uint256"
        }
      ],
      "name": "AddedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RemovedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken0Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burn",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"name\":\"AddedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RemovedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burn\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken0Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol\":\"MockAcryptosVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0x45fe5b6e09537c84248325b6cb3595aed7752b07425dfe136351234f2d8130dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a71d1520ace64f0bbd75ff6039bb7bb71b0d66e1d153235df4266dafea7f729c\",\"dweb:/ipfs/QmQUXcrczoVskKmcwYKvYkGy2ehtwbVH58tUBqNRG7iW7H\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/IAMMFarm.sol\":{\"keccak256\":\"0x2b2600a84fb56a84ebfbeeadc317c16eed08dd7bbfb19011fb7a76c1093e6504\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8751dd42de042238f176b12a69ec7a5e80e890a8cf6e05bfad4d84532f24c065\",\"dweb:/ipfs/QmbWDH4fwdN6zx61dK6RPkM4bVYUXMBEBfPNzPPJX5vPFa\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IAcryptosFarm.sol\":{\"keccak256\":\"0x47419fd5665c625d577324f045af56f122a79924bda917774a781fd759e8038a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f11a565fbe4b7f2217c11d17433d299d6ce82b29593ecb5ddc844906c416e83\",\"dweb:/ipfs/QmdMy9xXQT755L49CGw7tJecs9Bq4qHVNCoCTDSFi7CeuF\"]},\"project:/contracts/interfaces/IAcryptosVault.sol\":{\"keccak256\":\"0xfe0dc21cb573c0db10fd4ff03e42c21456342040bbc387146a813718a4b7d7fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a5e9e077572487d9dfcf3ff4fbc1f7a0f94119da9b9263cd253c2ba520745e30\",\"dweb:/ipfs/QmUxxYcU9xbickhiApStKrEAvPNkj2mRgGMctw68ze7F3c\"]},\"project:/contracts/interfaces/IBalancerVault.sol\":{\"keccak256\":\"0xaed146c2eb3b89794becab4737eb4ab12d447222de4b8c4434631dc0b3a7a044\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ed3abd3ac4a22fd98b17c42a3f1367e233b39f92fb522db779add5e62dbfebab\",\"dweb:/ipfs/QmWuogqduPJuMwhkGBc37gxjNgqV8xXCYqH7VMHY6vGz3L\"]},\"project:/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xc8fbc73780d12ff4e45eb04f09c6c65dc2f0967c83442f8921dcd8059773e187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://558ea1af6b64e5b487033fcf1c38f457ebbf919f321f5ec53976a0a3983d941c\",\"dweb:/ipfs/Qmd7jE9MkgkpAfJyLgWyynbGbSueRZVpGEijnyC7cC1hkK\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0x7fec6730fe3fb24fac6e05b24afc27500827267995090672010d8e6e55aab607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b99832bf831112efcd47b71b648d89ad1699caf4ca1fe33d3e36a905211a5d84\",\"dweb:/ipfs/QmZAPD34XUd4vRWX4EUT57YestKNdaWtmWCBedbphGV5zL\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xffdf544c0a602152923799cd1134676f37c75563608223b22c904b68c5d2e528\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f0fc099cac5c5ee3381751de1b0d50ef4c5a189cfa5834d0581a5d1dea24b31\",\"dweb:/ipfs/QmZoEZCG5HoJpytTvuqnSVxyGV8szu7iToT5AyXSNJ8t41\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]},\"project:/contracts/vaults/VaultAcryptosSingle.sol\":{\"keccak256\":\"0x0b9925c3eabfd55120cc00ec5e8678075a53f86d5c77e4540b14d28f87f9d636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2cf56f4811f25181e98ad4e93e4db782120032431cdf88c79c56ebfb4bea7af\",\"dweb:/ipfs/QmQAQTsgSXVpDEhPpYiGeZaK68E15qGGUJ2BZRzvMUUVRT\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0xefddf03334283bbc7324774d2d65b2921ccc800b22f9650c3b96e7fd4d3d5205\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9eeb46a3cb4aed99295c2862cdf1b56152390c7e60deee94c3906aba8b0a72a\",\"dweb:/ipfs/QmTnrQGy5QZ242EMwWTBrfsHs3WRgD9ynd2NQPeGkwZwvE\"]},\"project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol\":{\"keccak256\":\"0x5dfb0a3d72505aa3bcfa7e15f5865305cc860283907557a8360e15441a19b5d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c4a97df4753f2169d5a3c938995e14ed66901870797ef3ba9c9feaf3132029\",\"dweb:/ipfs/QmfEWYm7oKWXVoHL53S6z7BRgL1iWf2EY7mLHmEMeUeczE\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f3e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80634b0e7216116100a2578063a457c2d711610071578063a457c2d71461026a578063a9059cbb1461027d578063b6b55f2514610290578063c8479cd6146102a3578063dd62ed3e146102d357600080fd5b80634b0e7216146101f657806370a082311461022657806370d5ae051461024f57806395d89b411461026257600080fd5b806323b872dd116100e957806323b872dd146101995780632e1a7d4d146101ac578063313ce567146101c157806339509351146101d057806340c10f19146101e357600080fd5b806306fdde031461011b578063095ea7b3146101395780630dfe16811461015c57806318160ddd14610187575b600080fd5b61012361030c565b6040516101309190610d4d565b60405180910390f35b61014c610147366004610d9c565b61039e565b6040519015158152602001610130565b60655461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6035545b604051908152602001610130565b61014c6101a7366004610dc6565b6103b6565b6101bf6101ba366004610e02565b6103dc565b005b60405160128152602001610130565b61014c6101de366004610d9c565b61049f565b6101bf6101f1366004610d9c565b6104de565b6101bf610204366004610e1b565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61018b610234366004610e1b565b6001600160a01b031660009081526033602052604090205490565b60665461016f906001600160a01b031681565b6101236104ec565b61014c610278366004610d9c565b6104fb565b61014c61028b366004610d9c565b61059d565b6101bf61029e366004610e02565b6105ab565b6101bf6102b1366004610e1b565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61018b6102e1366004610e36565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461031b90610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461034790610e69565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b6000336103ac81858561060c565b5060019392505050565b6000336103c4858285610730565b6103cf8585856107c2565b60019150505b9392505050565b6066546103f690309033906001600160a01b031684610990565b6065546040516340c10f1960e01b8152336004820152671bc16d674ec8000060248201819052916001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561044a57600080fd5b505af115801561045e573d6000803e3d6000fd5b505050507f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11218160405161049391815260200190565b60405180910390a15050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906103ac90829086906104d9908790610ea4565b61060c565b6104e882826109ea565b5050565b60606037805461031b90610e69565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156105855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610592828686840361060c565b506001949350505050565b6000336103ac8185856107c2565b6065546105c3906001600160a01b0316333084610990565b670de0b6b3a76400006105d633826109ea565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c4977019101610493565b6001600160a01b03831661066e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161057c565b6001600160a01b0382166106cf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161057c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146107bc57818110156107af5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161057c565b6107bc848484840361060c565b50505050565b6001600160a01b0383166108265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161057c565b6001600160a01b0382166108885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161057c565b6001600160a01b038316600090815260336020526040902054818110156109005760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161057c565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610937908490610ea4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161098391815260200190565b60405180910390a36107bc565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107bc908590610ace565b6001600160a01b038216610a405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161057c565b8060356000828254610a529190610ea4565b90915550506001600160a01b03821660009081526033602052604081208054839290610a7f908490610ea4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610b23826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ba09092919063ffffffff16565b805190915015610ac95780806020019051810190610b419190610eca565b610ac95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161057c565b6060610baf8484600085610bb7565b949350505050565b606082471015610c185760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161057c565b6001600160a01b0385163b610c6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057c565b600080866001600160a01b03168587604051610c8b9190610eec565b60006040518083038185875af1925050503d8060008114610cc8576040519150601f19603f3d011682016040523d82523d6000602084013e610ccd565b606091505b5091509150610cdd828286610ce8565b979650505050505050565b60608315610cf75750816103d5565b825115610d075782518084602001fd5b8160405162461bcd60e51b815260040161057c9190610d4d565b60005b83811015610d3c578181015183820152602001610d24565b838111156107bc5750506000910152565b6020815260008251806020840152610d6c816040850160208701610d21565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d9757600080fd5b919050565b60008060408385031215610daf57600080fd5b610db883610d80565b946020939093013593505050565b600080600060608486031215610ddb57600080fd5b610de484610d80565b9250610df260208501610d80565b9150604084013590509250925092565b600060208284031215610e1457600080fd5b5035919050565b600060208284031215610e2d57600080fd5b6103d582610d80565b60008060408385031215610e4957600080fd5b610e5283610d80565b9150610e6060208401610d80565b90509250929050565b600181811c90821680610e7d57607f821691505b60208210811415610e9e57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ec557634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610edc57600080fd5b815180151581146103d557600080fd5b60008251610efe818460208701610d21565b919091019291505056fea2646970667358221220ebc629a607ec857c959b0a953bf11d216993eb39e8ede07bc4848d2da01f2dc464736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80634b0e7216116100a2578063a457c2d711610071578063a457c2d71461026a578063a9059cbb1461027d578063b6b55f2514610290578063c8479cd6146102a3578063dd62ed3e146102d357600080fd5b80634b0e7216146101f657806370a082311461022657806370d5ae051461024f57806395d89b411461026257600080fd5b806323b872dd116100e957806323b872dd146101995780632e1a7d4d146101ac578063313ce567146101c157806339509351146101d057806340c10f19146101e357600080fd5b806306fdde031461011b578063095ea7b3146101395780630dfe16811461015c57806318160ddd14610187575b600080fd5b61012361030c565b6040516101309190610d4d565b60405180910390f35b61014c610147366004610d9c565b61039e565b6040519015158152602001610130565b60655461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6035545b604051908152602001610130565b61014c6101a7366004610dc6565b6103b6565b6101bf6101ba366004610e02565b6103dc565b005b60405160128152602001610130565b61014c6101de366004610d9c565b61049f565b6101bf6101f1366004610d9c565b6104de565b6101bf610204366004610e1b565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61018b610234366004610e1b565b6001600160a01b031660009081526033602052604090205490565b60665461016f906001600160a01b031681565b6101236104ec565b61014c610278366004610d9c565b6104fb565b61014c61028b366004610d9c565b61059d565b6101bf61029e366004610e02565b6105ab565b6101bf6102b1366004610e1b565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61018b6102e1366004610e36565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461031b90610e69565b80601f016020809104026020016040519081016040528092919081815260200182805461034790610e69565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b6000336103ac81858561060c565b5060019392505050565b6000336103c4858285610730565b6103cf8585856107c2565b60019150505b9392505050565b6066546103f690309033906001600160a01b031684610990565b6065546040516340c10f1960e01b8152336004820152671bc16d674ec8000060248201819052916001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561044a57600080fd5b505af115801561045e573d6000803e3d6000fd5b505050507f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11218160405161049391815260200190565b60405180910390a15050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906103ac90829086906104d9908790610ea4565b61060c565b6104e882826109ea565b5050565b60606037805461031b90610e69565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156105855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610592828686840361060c565b506001949350505050565b6000336103ac8185856107c2565b6065546105c3906001600160a01b0316333084610990565b670de0b6b3a76400006105d633826109ea565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c4977019101610493565b6001600160a01b03831661066e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161057c565b6001600160a01b0382166106cf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161057c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526034602090815260408083209386168352929052205460001981146107bc57818110156107af5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161057c565b6107bc848484840361060c565b50505050565b6001600160a01b0383166108265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161057c565b6001600160a01b0382166108885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161057c565b6001600160a01b038316600090815260336020526040902054818110156109005760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161057c565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610937908490610ea4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161098391815260200190565b60405180910390a36107bc565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107bc908590610ace565b6001600160a01b038216610a405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161057c565b8060356000828254610a529190610ea4565b90915550506001600160a01b03821660009081526033602052604081208054839290610a7f908490610ea4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610b23826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ba09092919063ffffffff16565b805190915015610ac95780806020019051810190610b419190610eca565b610ac95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161057c565b6060610baf8484600085610bb7565b949350505050565b606082471015610c185760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161057c565b6001600160a01b0385163b610c6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057c565b600080866001600160a01b03168587604051610c8b9190610eec565b60006040518083038185875af1925050503d8060008114610cc8576040519150601f19603f3d011682016040523d82523d6000602084013e610ccd565b606091505b5091509150610cdd828286610ce8565b979650505050505050565b60608315610cf75750816103d5565b825115610d075782518084602001fd5b8160405162461bcd60e51b815260040161057c9190610d4d565b60005b83811015610d3c578181015183820152602001610d24565b838111156107bc5750506000910152565b6020815260008251806020840152610d6c816040850160208701610d21565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d9757600080fd5b919050565b60008060408385031215610daf57600080fd5b610db883610d80565b946020939093013593505050565b600080600060608486031215610ddb57600080fd5b610de484610d80565b9250610df260208501610d80565b9150604084013590509250925092565b600060208284031215610e1457600080fd5b5035919050565b600060208284031215610e2d57600080fd5b6103d582610d80565b60008060408385031215610e4957600080fd5b610e5283610d80565b9150610e6060208401610d80565b90509250929050565b600181811c90821680610e7d57607f821691505b60208210811415610e9e57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ec557634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610edc57600080fd5b815180151581146103d557600080fd5b60008251610efe818460208701610d21565b919091019291505056fea2646970667358221220ebc629a607ec857c959b0a953bf11d216993eb39e8ede07bc4848d2da01f2dc464736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9257:81",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:81",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:81",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:81",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:81"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:81"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:81"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:81"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:81"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:81"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:81"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:81"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:81"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:81",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:81",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:81"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:81",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:81"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:81"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:81",
                    "statements": []
                  },
                  "src": "96:113:81"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:81"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:81"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:81"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:81"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:81"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:81",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:81",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:81",
                "type": ""
              }
            ],
            "src": "14:258:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:81"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:81"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:81",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:81"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:81",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:81"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:81"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:81",
                "type": ""
              }
            ],
            "src": "277:383:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:124:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "724:29:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "733:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:20:81"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:81"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "775:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "786:5:81"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "801:3:81",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "806:1:81",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "797:3:81"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "797:11:81"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "810:1:81",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:19:81"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:31:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "772:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:42:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:50:81"
                  },
                  "nodeType": "YulIf",
                  "src": "762:70:81"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "693:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:81",
                "type": ""
              }
            ],
            "src": "665:173:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "930:167:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "976:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "988:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "978:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "951:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "960:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "943:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "940:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:39:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1030:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1011:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:29:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1049:42:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1059:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:32:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "899:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "911:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "919:6:81",
                "type": ""
              }
            ],
            "src": "843:254:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1197:92:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1207:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1207:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1249:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1267:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:14:81"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1260:6:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:22:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:41:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:41:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1166:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1177:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1188:4:81",
                "type": ""
              }
            ],
            "src": "1102:187:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:102:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1417:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1428:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1405:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1447:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1462:6:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:81",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:1:81",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1474:11:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1487:1:81",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1470:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1470:19:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:32:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:51:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:51:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1375:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1386:4:81",
                "type": ""
              }
            ],
            "src": "1294:203:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1603:76:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1613:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1625:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1621:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1621:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1613:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1655:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1666:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1648:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1648:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1648:25:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1572:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1583:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1594:4:81",
                "type": ""
              }
            ],
            "src": "1502:177:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1788:224:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1834:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1843:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1846:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1836:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1836:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1836:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1809:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1818:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1805:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1830:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1801:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1801:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "1798:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:39:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1888:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1869:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:29:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1859:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1907:48:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1940:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1951:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1936:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1936:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1917:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:38:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1907:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1964:42:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1991:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1974:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:32:81"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1738:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1749:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1761:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1769:6:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1777:6:81",
                "type": ""
              }
            ],
            "src": "1684:328:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:110:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2133:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2142:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2145:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2135:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2135:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2135:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2108:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2117:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2104:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2104:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2129:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "2097:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2158:33:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2181:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2168:12:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2168:23:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2053:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2064:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2076:6:81",
                "type": ""
              }
            ],
            "src": "2017:180:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2299:87:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2309:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2321:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2332:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2317:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2317:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2309:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2351:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2366:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:4:81",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2362:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2362:17:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2344:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:36:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2344:36:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2268:9:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2279:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2290:4:81",
                "type": ""
              }
            ],
            "src": "2202:184:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2461:116:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2507:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2516:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2519:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2509:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2509:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2509:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2482:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2491:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2478:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2503:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2474:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2474:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "2471:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2532:39:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2561:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2542:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:29:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2427:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2438:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2450:6:81",
                "type": ""
              }
            ],
            "src": "2391:186:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:173:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2715:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2724:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2727:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2717:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2717:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2717:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2690:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2699:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2686:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2686:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2711:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2682:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "2679:52:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:39:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2769:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2750:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:29:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:48:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2821:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2832:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2817:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2817:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2798:18:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:38:81"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2788:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2627:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2638:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2650:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2658:6:81",
                "type": ""
              }
            ],
            "src": "2582:260:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:325:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2912:22:81",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2926:1:81",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2929:4:81"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:12:81"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2912:6:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2943:38:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2973:4:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2979:1:81",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2969:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:12:81"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2947:18:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3020:31:81",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3022:27:81",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3036:6:81"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3044:4:81",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3032:3:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3032:17:81"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3022:6:81"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3000:18:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:26:81"
                  },
                  "nodeType": "YulIf",
                  "src": "2990:61:81"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3110:111:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3131:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3138:3:81",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3143:10:81",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3134:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3134:20:81"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3124:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3124:31:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3124:31:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3175:1:81",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3178:4:81",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3168:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3168:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3168:15:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3203:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3206:4:81",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3196:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3196:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3196:15:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3066:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3089:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3097:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3086:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:14:81"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3063:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3063:38:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3060:161:81"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2882:4:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2891:6:81",
                "type": ""
              }
            ],
            "src": "2847:380:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3361:145:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3371:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3383:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3394:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3379:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3379:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3371:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3413:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3428:6:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3444:3:81",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3449:1:81",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3440:3:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3440:11:81"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3453:1:81",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3436:3:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3436:19:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3424:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3424:32:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3406:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3406:51:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3406:51:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3477:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3488:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3473:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3473:18:81"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3493:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3466:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3466:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3322:9:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3333:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3341:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3352:4:81",
                "type": ""
              }
            ],
            "src": "3232:274:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3559:177:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3594:111:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3615:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3622:3:81",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3627:10:81",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3618:3:81"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3618:20:81"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3608:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3608:31:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3608:31:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3659:1:81",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3662:4:81",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3652:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3652:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3652:15:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3687:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3690:4:81",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3680:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3680:15:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3680:15:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3575:1:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3582:1:81"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3578:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3578:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3572:2:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3572:13:81"
                  },
                  "nodeType": "YulIf",
                  "src": "3569:136:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3714:16:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3725:1:81"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3728:1:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3721:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:9:81"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3714:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3542:1:81",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3545:1:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3551:3:81",
                "type": ""
              }
            ],
            "src": "3511:225:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3915:227:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3932:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3943:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3925:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3925:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3925:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3966:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3977:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3962:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3962:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3982:2:81",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3955:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3955:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3955:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4005:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4016:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4001:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4001:18:81"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4021:34:81",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3994:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3994:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4076:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4087:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:18:81"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4092:7:81",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4065:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4065:35:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4065:35:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4109:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4121:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4132:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4117:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4117:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4109:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3892:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3906:4:81",
                "type": ""
              }
            ],
            "src": "3741:401:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4276:119:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4286:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4298:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4309:2:81",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4286:4:81"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4328:9:81"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4339:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4321:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4321:25:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4321:25:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4366:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4377:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4362:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4362:18:81"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4382:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4355:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4355:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4355:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4237:9:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4248:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4256:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4267:4:81",
                "type": ""
              }
            ],
            "src": "4147:248:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4574:226:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4591:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4602:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4584:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4584:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4584:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4625:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4636:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4621:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4621:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4641:2:81",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4614:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4614:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4614:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4664:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4675:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4660:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4660:18:81"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4680:34:81",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4653:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4653:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4735:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4746:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4731:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4731:18:81"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4751:6:81",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4724:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4724:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4724:34:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4767:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4779:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4790:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4767:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4551:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4565:4:81",
                "type": ""
              }
            ],
            "src": "4400:400:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4979:224:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4996:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4989:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4989:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4989:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5030:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5041:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5026:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5026:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5046:2:81",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5069:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5080:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5065:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5065:18:81"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5085:34:81",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5058:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5058:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5140:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5151:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5136:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5136:18:81"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5156:4:81",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5129:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5129:32:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5129:32:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5170:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5182:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5193:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5178:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5178:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5170:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4956:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4970:4:81",
                "type": ""
              }
            ],
            "src": "4805:398:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5382:179:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5399:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5410:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5392:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5392:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5433:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5444:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5429:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5429:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5449:2:81",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5422:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5422:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5422:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5472:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5483:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5468:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5468:18:81"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5488:31:81",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5461:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5461:59:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5461:59:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5529:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5541:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5552:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5537:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5537:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5529:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5359:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5373:4:81",
                "type": ""
              }
            ],
            "src": "5208:353:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5740:227:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5757:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5768:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5750:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5750:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5791:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5802:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5787:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5787:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5807:2:81",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5780:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5780:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5830:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5841:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5826:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5826:18:81"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5846:34:81",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5819:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5819:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5819:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5901:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5912:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5897:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5897:18:81"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5917:7:81",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5890:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5890:35:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5890:35:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5934:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5946:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5957:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5942:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5942:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5934:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5717:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5731:4:81",
                "type": ""
              }
            ],
            "src": "5566:401:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6146:225:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6163:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6174:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6156:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6156:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6156:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6197:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6208:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6193:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6193:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6213:2:81",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6186:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6186:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6186:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6236:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6247:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6232:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:18:81"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6252:34:81",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6225:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6225:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6307:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6318:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6303:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6303:18:81"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6323:5:81",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6296:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6296:33:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6296:33:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6338:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6350:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6361:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6346:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6346:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6338:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6123:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6137:4:81",
                "type": ""
              }
            ],
            "src": "5972:399:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6550:228:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6567:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6578:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6560:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6560:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6560:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6601:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6612:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6597:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6597:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6617:2:81",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6590:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6590:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6590:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:81"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6656:34:81",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6711:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6722:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6707:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:18:81"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6727:8:81",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:36:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:36:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6745:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6757:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6768:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6753:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6745:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6527:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6541:4:81",
                "type": ""
              }
            ],
            "src": "6376:402:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6940:218:81",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6950:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6962:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6973:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6958:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6950:4:81"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6985:29:81",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7003:3:81",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7008:1:81",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6999:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6999:11:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7012:1:81",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6995:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6995:19:81"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6989:2:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7030:9:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7045:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7053:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7041:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7041:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7023:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7023:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7023:34:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7077:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7088:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7073:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7073:18:81"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7097:6:81"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7105:2:81"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7093:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7093:15:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7066:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7066:43:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7066:43:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7129:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7140:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7125:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7125:18:81"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7145:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7118:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:34:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7118:34:81"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6893:9:81",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6904:6:81",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6912:6:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6920:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6931:4:81",
                "type": ""
              }
            ],
            "src": "6783:375:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7337:181:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7354:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7365:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7347:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7347:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7347:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7388:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7399:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7384:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7384:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7404:2:81",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7377:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7377:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7377:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7427:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7438:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7423:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7423:18:81"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7443:33:81",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7416:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7416:61:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7416:61:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7486:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7498:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7509:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7494:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7494:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7486:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7314:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7328:4:81",
                "type": ""
              }
            ],
            "src": "7163:355:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7601:199:81",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7647:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7656:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7659:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7649:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7649:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7649:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7622:7:81"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7631:9:81"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7618:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7618:23:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7643:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7614:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:32:81"
                  },
                  "nodeType": "YulIf",
                  "src": "7611:52:81"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7672:29:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7691:9:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7685:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7685:16:81"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7676:5:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7754:16:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7763:1:81",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7766:1:81",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7756:6:81"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7756:12:81"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7756:12:81"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7723:5:81"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7744:5:81"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7737:6:81"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7737:13:81"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7730:6:81"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7730:21:81"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7720:2:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7720:32:81"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7713:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7713:40:81"
                  },
                  "nodeType": "YulIf",
                  "src": "7710:60:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7779:15:81",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7789:5:81"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7779:6:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7567:9:81",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7578:7:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7590:6:81",
                "type": ""
              }
            ],
            "src": "7523:277:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7979:232:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7996:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8007:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7989:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7989:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7989:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8030:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8041:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8026:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8026:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8046:2:81",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8019:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8019:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8019:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8069:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8080:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8065:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8065:18:81"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8085:34:81",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8058:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8058:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8058:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8140:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8151:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8136:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8136:18:81"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8156:12:81",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8129:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:40:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8129:40:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8178:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8190:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8201:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8186:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8186:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8178:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7956:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7970:4:81",
                "type": ""
              }
            ],
            "src": "7805:406:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:228:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8407:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8418:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8400:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8400:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8400:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8441:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8452:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8437:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8437:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8457:2:81",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8430:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8430:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8430:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8480:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8491:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8476:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8476:18:81"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8496:34:81",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8469:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:62:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8469:62:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8551:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8562:2:81",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8547:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8547:18:81"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8567:8:81",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8540:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8540:36:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8540:36:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8597:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8608:3:81",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:19:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8585:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8367:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8381:4:81",
                "type": ""
              }
            ],
            "src": "8216:402:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8797:179:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8814:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8825:2:81",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8807:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8807:21:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8807:21:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8848:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8859:2:81",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8844:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8844:18:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8864:2:81",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8837:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8837:30:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8837:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8887:9:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8898:2:81",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8883:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8883:18:81"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8903:31:81",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8876:6:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8876:59:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8876:59:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8944:26:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8956:9:81"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8967:2:81",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8952:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8952:18:81"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8944:4:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8774:9:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8788:4:81",
                "type": ""
              }
            ],
            "src": "8623:353:81"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9118:137:81",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9128:27:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9148:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9142:5:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9142:13:81"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9132:6:81",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9190:6:81"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9198:4:81",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9186:3:81"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9186:17:81"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9205:3:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9210:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9164:21:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9164:53:81"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9164:53:81"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9226:23:81",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9237:3:81"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9242:6:81"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9233:3:81"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9233:16:81"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9226:3:81"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9094:3:81",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9099:6:81",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9110:3:81",
                "type": ""
              }
            ],
            "src": "8981:274:81"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 81,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1099:1092:77:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1099:1092:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:81;;1260:22;1242:41;;1230:2;1215:18;4770:197:6;1102:187:81;1336:21:77;;;;;-1:-1:-1;;;;;1336:21:77;;;;;;-1:-1:-1;;;;;1458:32:81;;;1440:51;;1428:2;1413:18;1336:21:77;1294:203:81;3581:106:6;3668:12;;3581:106;;;1648:25:81;;;1636:2;1621:18;3581:106:6;1502:177:81;5529:286:6;;;;;;:::i;:::-;;:::i;1863:326:77:-;;;;;;:::i;:::-;;:::i;:::-;;3430:91:6;;;3512:2;2344:36:81;;2332:2;2317:18;3430:91:6;2202:184:81;6210:236:6;;;;;;:::i;:::-;;:::i;419:97:70:-;;;;;;:::i;:::-;;:::i;1483:82:77:-;;;;;;:::i;:::-;1539:11;:19;;-1:-1:-1;;;;;;1539:19:77;-1:-1:-1;;;;;1539:19:77;;;;;;;;;;1483:82;3745:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:6;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1363:26:77;;;;;-1:-1:-1;;;;;1363:26:77;;;2704:102:6;;;:::i;6933:429::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1571:286:77:-;;;;;;:::i;:::-;;:::i;1396:81::-;;;;;;:::i;:::-;1455:6;:15;;-1:-1:-1;;;;;;1455:15:77;-1:-1:-1;;;;;1455:15:77;;;;;;;;;;1396:81;4313:149:6;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:6;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:11;4907:32:6;929:10:11;4923:7:6;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:6;;4770:197;-1:-1:-1;;;4770:197:6:o;5529:286::-;5656:4;929:10:11;5712:38:6;5728:4;929:10:11;5743:6:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;1863:326:77:-;1977:11;;1915:83;;1941:4;;1965:10;;-1:-1:-1;;;;;1977:11:77;1990:7;1915:49;:83::i;:::-;2095:6;;2073:62;;-1:-1:-1;;;2073:62:77;;2108:10;2073:62;;;3406:51:81;2033:7:77;3473:18:81;;;3466:34;;;2033:7:77;-1:-1:-1;;;;;2095:6:77;;2073:34;;3379:18:81;;2073:62:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:32;2167:14;2150:32;;;;1648:25:81;;1636:2;1621:18;;1502:177;2150:32:77;;;;;;;;1905:284;1863:326;:::o;6210:236:6:-;929:10:11;6298:4:6;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:6;;;;;;;;;;6298:4;;929:10:11;6352:66:6;;929:10:11;;6377:27:6;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;419:97:70:-;485:24;491:8;501:7;485:5;:24::i;:::-;419:97;;:::o;2704:102:6:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:11;7026:4:6;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:6;;;;;;;;;;7026:4;;929:10:11;7152:35:6;;;;7144:85;;;;-1:-1:-1;;;7144:85:6;;3943:2:81;7144:85:6;;;3925:21:81;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:81;;;4065:35;4117:19;;7144:85:6;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;:::-;-1:-1:-1;7351:4:6;;6933:429;-1:-1:-1;;;;6933:429:6:o;4066:189::-;4145:4;929:10:11;4199:28:6;929:10:11;4216:2:6;4220:6;4199:9;:28::i;1571:286:77:-;1640:6;;1622:78;;-1:-1:-1;;;;;1640:6:77;1665:10;1685:4;1692:7;1622:42;:78::i;:::-;1731:7;1771:29;1777:10;1731:7;1771:5;:29::i;:::-;1815:35;;;4321:25:81;;;4377:2;4362:18;;4355:34;;;1815:35:77;;4294:18:81;1815:35:77;4147:248:81;10460:370:6;-1:-1:-1;;;;;10591:19:6;;10583:68;;;;-1:-1:-1;;;10583:68:6;;4602:2:81;10583:68:6;;;4584:21:81;4641:2;4621:18;;;4614:30;4680:34;4660:18;;;4653:62;-1:-1:-1;;;4731:18:81;;;4724:34;4775:19;;10583:68:6;4400:400:81;10583:68:6;-1:-1:-1;;;;;10669:21:6;;10661:68;;;;-1:-1:-1;;;10661:68:6;;5007:2:81;10661:68:6;;;4989:21:81;5046:2;5026:18;;;5019:30;5085:34;5065:18;;;5058:62;-1:-1:-1;;;5136:18:81;;;5129:32;5178:19;;10661:68:6;4805:398:81;10661:68:6;-1:-1:-1;;;;;10740:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1648:25:81;;;10791:32:6;;1621:18:81;10791:32:6;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:6;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:6;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:6;;5410:2:81;11356:68:6;;;5392:21:81;5449:2;5429:18;;;5422:30;5488:31;5468:18;;;5461:59;5537:18;;11356:68:6;5208:353:81;11356:68:6;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:6;;7943:68;;;;-1:-1:-1;;;7943:68:6;;5768:2:81;7943:68:6;;;5750:21:81;5807:2;5787:18;;;5780:30;5846:34;5826:18;;;5819:62;-1:-1:-1;;;5897:18:81;;;5890:35;5942:19;;7943:68:6;5566:401:81;7943:68:6;-1:-1:-1;;;;;8029:16:6;;8021:64;;;;-1:-1:-1;;;8021:64:6;;6174:2:81;8021:64:6;;;6156:21:81;6213:2;6193:18;;;6186:30;6252:34;6232:18;;;6225:62;-1:-1:-1;;;6303:18:81;;;6296:33;6346:19;;8021:64:6;5972:399:81;8021:64:6;-1:-1:-1;;;;;8167:15:6;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:6;;6578:2:81;8192:72:6;;;6560:21:81;6617:2;6597:18;;;6590:30;6656:34;6636:18;;;6629:62;-1:-1:-1;;;6707:18:81;;;6700:36;6753:19;;8192:72:6;6376:402:81;8192:72:6;-1:-1:-1;;;;;8298:15:6;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:6;8404:4;-1:-1:-1;;;;;8395:26:6;;8414:6;8395:26;;;;1648:25:81;;1636:2;1621:18;;1502:177;8395:26:6;;;;;;;;8432:37;12132:121;967:252:9;1143:68;;;-1:-1:-1;;;;;7041:15:81;;;1143:68:9;;;7023:34:81;7093:15;;7073:18;;;7066:43;7125:18;;;;7118:34;;;1143:68:9;;;;;;;;;;6958:18:81;;;;1143:68:9;;;;;;;;-1:-1:-1;;;;;1143:68:9;-1:-1:-1;;;1143:68:9;;;1116:96;;1136:5;;1116:19;:96::i;8752:389:6:-;-1:-1:-1;;;;;8835:21:6;;8827:65;;;;-1:-1:-1;;;8827:65:6;;7365:2:81;8827:65:6;;;7347:21:81;7404:2;7384:18;;;7377:30;7443:33;7423:18;;;7416:61;7494:18;;8827:65:6;7163:355:81;8827:65:6;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:6;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:6;;1648:25:81;;;-1:-1:-1;;;;;9038:37:6;;;9055:1;;9038:37;;1636:2:81;1621:18;9038:37:6;;;;;;;419:97:70;;:::o;12132:121:6:-;;;;:::o;3306:717:9:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:9;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:9;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:9;;8007:2:81;3921:85:9;;;7989:21:81;8046:2;8026:18;;;8019:30;8085:34;8065:18;;;8058:62;-1:-1:-1;;;8136:18:81;;;8129:40;8186:19;;3921:85:9;7805:406:81;3872:223:10;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:10:o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:10;;8418:2:81;5148:81:10;;;8400:21:81;8457:2;8437:18;;;8430:30;8496:34;8476:18;;;8469:62;-1:-1:-1;;;8547:18:81;;;8540:36;8593:19;;5148:81:10;8216:402:81;5148:81:10;-1:-1:-1;;;;;1476:19:10;;;5239:60;;;;-1:-1:-1;;;5239:60:10;;8825:2:81;5239:60:10;;;8807:21:81;8864:2;8844:18;;;8837:30;8903:31;8883:18;;;8876:59;8952:18;;5239:60:10;8623:353:81;5239:60:10;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:10;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:10:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:10;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:10;;;;;;;;:::i;14:258:81:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:81;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:81;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:81:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:81;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:81:o;1684:328::-;1761:6;1769;1777;1830:2;1818:9;1809:7;1805:23;1801:32;1798:52;;;1846:1;1843;1836:12;1798:52;1869:29;1888:9;1869:29;:::i;:::-;1859:39;;1917:38;1951:2;1940:9;1936:18;1917:38;:::i;:::-;1907:48;;2002:2;1991:9;1987:18;1974:32;1964:42;;1684:328;;;;;:::o;2017:180::-;2076:6;2129:2;2117:9;2108:7;2104:23;2100:32;2097:52;;;2145:1;2142;2135:12;2097:52;-1:-1:-1;2168:23:81;;2017:180;-1:-1:-1;2017:180:81:o;2391:186::-;2450:6;2503:2;2491:9;2482:7;2478:23;2474:32;2471:52;;;2519:1;2516;2509:12;2471:52;2542:29;2561:9;2542:29;:::i;2582:260::-;2650:6;2658;2711:2;2699:9;2690:7;2686:23;2682:32;2679:52;;;2727:1;2724;2717:12;2679:52;2750:29;2769:9;2750:29;:::i;:::-;2740:39;;2798:38;2832:2;2821:9;2817:18;2798:38;:::i;:::-;2788:48;;2582:260;;;;;:::o;2847:380::-;2926:1;2922:12;;;;2969;;;2990:61;;3044:4;3036:6;3032:17;3022:27;;2990:61;3097:2;3089:6;3086:14;3066:18;3063:38;3060:161;;;3143:10;3138:3;3134:20;3131:1;3124:31;3178:4;3175:1;3168:15;3206:4;3203:1;3196:15;3060:161;;2847:380;;;:::o;3511:225::-;3551:3;3582:1;3578:6;3575:1;3572:13;3569:136;;;3627:10;3622:3;3618:20;3615:1;3608:31;3662:4;3659:1;3652:15;3690:4;3687:1;3680:15;3569:136;-1:-1:-1;3721:9:81;;3511:225::o;7523:277::-;7590:6;7643:2;7631:9;7622:7;7618:23;7614:32;7611:52;;;7659:1;7656;7649:12;7611:52;7691:9;7685:16;7744:5;7737:13;7730:21;7723:5;7720:32;7710:60;;7766:1;7763;7756:12;8981:274;9110:3;9148:6;9142:13;9164:53;9210:6;9205:3;9198:4;9190:6;9186:17;9164:53;:::i;:::-;9233:16;;;;;8981:274;-1:-1:-1;;8981:274:81:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultAcryptosSingle.sol\";\n\nimport \"../../tokens/mocks/MockToken.sol\";\n\ncontract MockVaultFactoryAcryptosSingle is VaultFactoryAcryptosSingle {\n    \n}\n\ncontract MockVaultAcryptosSingle is VaultAcryptosSingle {\n    function unfarm(uint256 _wantAmt) public {\n        _unfarm(_wantAmt);\n    }\n    \n    function swapEarnedToUSDC(\n        uint256 _earnedAmount,\n        address _destination,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _swapEarnedToUSDC(_earnedAmount, _destination, _maxMarketMovementAllowed, _rates);\n    }\n\n    function revShareOnChain(\n        uint256 _amount,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _revShareOnChain(_amount, _maxMarketMovementAllowed, _rates);\n    }\n\n    function buybackOnChain(\n        uint256 _amount,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _buybackOnChain(_amount, _maxMarketMovementAllowed, _rates);\n    }\n}\n\ncontract MockAcryptosVault is IAcryptosVault, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event AddedLiquidity(uint256 _amount, uint256 _liquidity);\n    event RemovedLiquidity(uint256 _amount);\n\n    address public token0;\n    address public burnAddress;\n\n    function setToken0Address(address _token) public {\n        token0 = _token;\n    }\n\n    function setBurnAddress(address _burn) public {\n        burnAddress = _burn;\n    }\n\n    function deposit(uint256 _amount) public {\n        IERC20Upgradeable(token0).safeTransferFrom(msg.sender, address(this), _amount);\n        uint256 _liquidity = 1 ether; // Hard code for tests\n        _mint(msg.sender, _liquidity);\n        emit AddedLiquidity(_amount, _liquidity);\n    }\n\n    function withdraw(uint256 _shares) public {\n        IERC20Upgradeable(address(this)).safeTransferFrom(msg.sender, burnAddress, _shares);\n        uint256 _withdrawalAmt = 2 ether; // Hard code for tests\n        IMockERC20Upgradeable(token0).mint(msg.sender, _withdrawalAmt);\n        emit RemovedLiquidity(_withdrawalAmt);\n    }\n}\n\ncontract MockAcryptosFarm is IAcryptosFarm, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event Deposited(address indexed _want, uint256 indexed _amount);\n    event Withdrew(address indexed _want, uint256 indexed _amount);\n\n    address public burnAddress;\n    address public wantToken;\n\n    function setWantAddress(address _wantToken) public {\n        wantToken = _wantToken;\n    }\n\n    function setBurnAddress(address _burnAddress) public {\n        burnAddress = _burnAddress;\n    }\n\n    function deposit(address _lpToken, uint256 _amount) public {\n        IERC20Upgradeable(wantToken).safeTransferFrom(msg.sender, burnAddress, _amount);\n        emit Deposited(_lpToken, _amount);\n    }\n\n    function withdraw(address _lpToken, uint256 _amount) public {\n        IMockERC20Upgradeable(wantToken).mint(msg.sender, _amount);\n        emit Withdrew(_lpToken, _amount);\n    }\n}\n\ncontract MockBUSD is MockERC20Upgradeable {}\ncontract MockACS is MockERC20Upgradeable {}",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        11651
      ],
      "FundManagement": [
        11627
      ],
      "IAMMFarm": [
        11168
      ],
      "IAMMRouter01": [
        11476
      ],
      "IAMMRouter02": [
        11564
      ],
      "IAcryptosFarm": [
        11581
      ],
      "IAcryptosVault": [
        11594
      ],
      "IAsset": [
        11618
      ],
      "IBalancerVault": [
        11721
      ],
      "IERC20": [
        4114
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        11880
      ],
      "IMockERC20Upgradeable": [
        14638
      ],
      "IStargateReceiver": [
        11946
      ],
      "IVault": [
        12138
      ],
      "IZorroControllerXChain": [
        12718
      ],
      "IZorroControllerXChainBase": [
        12493
      ],
      "IZorroControllerXChainDeposit": [
        12546
      ],
      "IZorroControllerXChainEarn": [
        12617
      ],
      "IZorroControllerXChainReceiver": [
        12706
      ],
      "IZorroControllerXChainWithdraw": [
        12694
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        11639
      ],
      "MockACS": [
        21125
      ],
      "MockAcryptosFarm": [
        21119
      ],
      "MockAcryptosVault": [
        21029
      ],
      "MockBUSD": [
        21122
      ],
      "MockERC20Upgradeable": [
        14656
      ],
      "MockUSDC": [
        14659
      ],
      "MockVaultAcryptosSingle": [
        20916
      ],
      "MockVaultFactoryAcryptosSingle": [
        20849
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        12825
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        13095
      ],
      "SafeSwapParams": [
        13117
      ],
      "SafeSwapUni": [
        12924
      ],
      "SingleSwap": [
        11613
      ],
      "SwapKind": [
        11616
      ],
      "VaultAcryptosSingle": [
        16271
      ],
      "VaultBase": [
        20842
      ],
      "VaultFactoryAcryptosSingle": [
        14748
      ]
    },
    "id": 21126,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20844,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultAcryptosSingle.sol",
        "file": "../VaultAcryptosSingle.sol",
        "id": 20845,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21126,
        "sourceUnit": 16272,
        "src": "58:36:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 20846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21126,
        "sourceUnit": 14660,
        "src": "96:42:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20847,
              "name": "VaultFactoryAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14748,
              "src": "183:26:77"
            },
            "id": 20848,
            "nodeType": "InheritanceSpecifier",
            "src": "183:26:77"
          }
        ],
        "canonicalName": "MockVaultFactoryAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20849,
        "linearizedBaseContracts": [
          20849,
          14748,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryAcryptosSingle",
        "nameLocation": "149:30:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "140:78:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20850,
              "name": "VaultAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16271,
              "src": "256:19:77"
            },
            "id": 20851,
            "nodeType": "InheritanceSpecifier",
            "src": "256:19:77"
          }
        ],
        "canonicalName": "MockVaultAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20916,
        "linearizedBaseContracts": [
          20916,
          16271,
          20842,
          434,
          493,
          169,
          1718,
          323,
          12138
        ],
        "name": "MockVaultAcryptosSingle",
        "nameLocation": "229:23:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20860,
              "nodeType": "Block",
              "src": "323:34:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20857,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20853,
                        "src": "341:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20856,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15565,
                      "src": "333:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 20858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20859,
                  "nodeType": "ExpressionStatement",
                  "src": "333:17:77"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 20861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "291:6:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20853,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "306:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20861,
                  "src": "298:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "297:18:77"
            },
            "returnParameters": {
              "id": 20855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:77"
            },
            "scope": 20916,
            "src": "282:75:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20880,
              "nodeType": "Block",
              "src": "547:98:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20874,
                        "name": "_earnedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20863,
                        "src": "575:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20875,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20865,
                        "src": "590:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20876,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20867,
                        "src": "604:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20877,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20870,
                        "src": "631:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20873,
                      "name": "_swapEarnedToUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16270
                      ],
                      "referencedDeclaration": 16270,
                      "src": "557:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "557:81:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20879,
                  "nodeType": "ExpressionStatement",
                  "src": "557:81:77"
                }
              ]
            },
            "functionSelector": "13303335",
            "id": 20881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEarnedToUSDC",
            "nameLocation": "376:16:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20863,
                  "mutability": "mutable",
                  "name": "_earnedAmount",
                  "nameLocation": "410:13:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "402:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20865,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "441:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "433:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20867,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "471:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "463:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20870,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "527:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "506:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20868,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "506:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "506:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:147:77"
            },
            "returnParameters": {
              "id": 20872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:77"
            },
            "scope": 20916,
            "src": "367:278:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20897,
              "nodeType": "Block",
              "src": "794:77:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20892,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20883,
                        "src": "821:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20893,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20885,
                        "src": "830:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20894,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20888,
                        "src": "857:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20891,
                      "name": "_revShareOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16178
                      ],
                      "referencedDeclaration": 16178,
                      "src": "804:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:60:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20896,
                  "nodeType": "ExpressionStatement",
                  "src": "804:60:77"
                }
              ]
            },
            "functionSelector": "b6b41a8b",
            "id": 20898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revShareOnChain",
            "nameLocation": "660:15:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20883,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "693:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "685:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20885,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "718:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "710:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20888,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "774:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "753:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20886,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "753:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "753:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:111:77"
            },
            "returnParameters": {
              "id": 20890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:77"
            },
            "scope": 20916,
            "src": "651:220:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20914,
              "nodeType": "Block",
              "src": "1019:76:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20909,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20900,
                        "src": "1045:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20910,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20902,
                        "src": "1054:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20911,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20905,
                        "src": "1081:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20908,
                      "name": "_buybackOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16096
                      ],
                      "referencedDeclaration": 16096,
                      "src": "1029:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:59:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20913,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:59:77"
                }
              ]
            },
            "functionSelector": "009b81db",
            "id": 20915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buybackOnChain",
            "nameLocation": "886:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20900,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "918:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "910:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20902,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "943:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "935:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20905,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "999:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "978:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20903,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "978:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "978:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:111:77"
            },
            "returnParameters": {
              "id": 20907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:77"
            },
            "scope": 20916,
            "src": "877:218:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "220:877:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20917,
              "name": "IAcryptosVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11594,
              "src": "1129:14:77"
            },
            "id": 20918,
            "nodeType": "InheritanceSpecifier",
            "src": "1129:14:77"
          },
          {
            "baseName": {
              "id": 20919,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "1145:20:77"
            },
            "id": 20920,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:20:77"
          }
        ],
        "canonicalName": "MockAcryptosVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21029,
        "linearizedBaseContracts": [
          21029,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323,
          11594
        ],
        "name": "MockAcryptosVault",
        "nameLocation": "1108:17:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20924,
            "libraryName": {
              "id": 20921,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "1178:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "1172:49:77",
            "typeName": {
              "id": 20923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20922,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "1203:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "1203:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 20930,
            "name": "AddedLiquidity",
            "nameLocation": "1233:14:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20926,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1256:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20930,
                  "src": "1248:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20928,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_liquidity",
                  "nameLocation": "1273:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20930,
                  "src": "1265:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:37:77"
            },
            "src": "1227:58:77"
          },
          {
            "anonymous": false,
            "id": 20934,
            "name": "RemovedLiquidity",
            "nameLocation": "1296:16:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20932,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1321:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20934,
                  "src": "1313:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:17:77"
            },
            "src": "1290:40:77"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 20936,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1351:6:77",
            "nodeType": "VariableDeclaration",
            "scope": 21029,
            "src": "1336:21:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20935,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 20938,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1378:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 21029,
            "src": "1363:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20937,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1363:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20947,
              "nodeType": "Block",
              "src": "1445:32:77",
              "statements": [
                {
                  "expression": {
                    "id": 20945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20943,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "1455:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20944,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "1464:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1455:15:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20946,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:15:77"
                }
              ]
            },
            "functionSelector": "c8479cd6",
            "id": 20948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setToken0Address",
            "nameLocation": "1405:16:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20940,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1430:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20948,
                  "src": "1422:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:16:77"
            },
            "returnParameters": {
              "id": 20942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:77"
            },
            "scope": 21029,
            "src": "1396:81:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20957,
              "nodeType": "Block",
              "src": "1529:36:77",
              "statements": [
                {
                  "expression": {
                    "id": 20955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20953,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20938,
                      "src": "1539:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20954,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20950,
                      "src": "1553:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1539:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20956,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:19:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "1492:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20950,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "1515:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20958,
                  "src": "1507:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:15:77"
            },
            "returnParameters": {
              "id": 20952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:0:77"
            },
            "scope": 21029,
            "src": "1483:82:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11588
            ],
            "body": {
              "id": 20991,
              "nodeType": "Block",
              "src": "1612:245:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20967,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1665:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1665:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20971,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1685:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                              "typeString": "contract MockAcryptosVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                              "typeString": "contract MockAcryptosVault"
                            }
                          ],
                          "id": 20970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1677:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1677:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20973,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20960,
                        "src": "1692:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20964,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20936,
                            "src": "1640:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20963,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1622:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:25:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1622:42:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:78:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20975,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:78:77"
                },
                {
                  "assignments": [
                    20977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20977,
                      "mutability": "mutable",
                      "name": "_liquidity",
                      "nameLocation": "1718:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 20991,
                      "src": "1710:18:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1710:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20979,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 20978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1731:7:77",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1710:28:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1777:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1777:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20983,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20977,
                        "src": "1789:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20980,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1771:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20985,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:29:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20987,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20960,
                        "src": "1830:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20988,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20977,
                        "src": "1839:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20986,
                      "name": "AddedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20930,
                      "src": "1815:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:35:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20990,
                  "nodeType": "EmitStatement",
                  "src": "1810:40:77"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 20992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1580:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20960,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1596:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20992,
                  "src": "1588:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:17:77"
            },
            "returnParameters": {
              "id": 20962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:77"
            },
            "scope": 21029,
            "src": "1571:286:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11593
            ],
            "body": {
              "id": 21027,
              "nodeType": "Block",
              "src": "1905:284:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1965:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1965:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21006,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20938,
                        "src": "1977:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21007,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20994,
                        "src": "1990:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21000,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1941:4:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              ],
                              "id": 20999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1933:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20998,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1933:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1933:13:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20997,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1915:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 21002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1915:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 21003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1915:49:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 21008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:83:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21009,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:83:77"
                },
                {
                  "assignments": [
                    21011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21011,
                      "mutability": "mutable",
                      "name": "_withdrawalAmt",
                      "nameLocation": "2016:14:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 21027,
                      "src": "2008:22:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21013,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 21012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2033:7:77",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2008:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21018,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2108:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2108:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21020,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21011,
                        "src": "2120:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21015,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20936,
                            "src": "2095:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21014,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "2073:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$14638_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 21016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:29:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$14638",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 21017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14637,
                      "src": "2073:34:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:62:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21022,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:62:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21024,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21011,
                        "src": "2167:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21023,
                      "name": "RemovedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "2150:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21026,
                  "nodeType": "EmitStatement",
                  "src": "2145:37:77"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 21028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1872:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20994,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1889:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21028,
                  "src": "1881:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:17:77"
            },
            "returnParameters": {
              "id": 20996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:0:77"
            },
            "scope": 21029,
            "src": "1863:326:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "1099:1092:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21030,
              "name": "IAcryptosFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11581,
              "src": "2222:13:77"
            },
            "id": 21031,
            "nodeType": "InheritanceSpecifier",
            "src": "2222:13:77"
          },
          {
            "baseName": {
              "id": 21032,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "2237:20:77"
            },
            "id": 21033,
            "nodeType": "InheritanceSpecifier",
            "src": "2237:20:77"
          }
        ],
        "canonicalName": "MockAcryptosFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21119,
        "linearizedBaseContracts": [
          21119,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323,
          11581
        ],
        "name": "MockAcryptosFarm",
        "nameLocation": "2202:16:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21037,
            "libraryName": {
              "id": 21034,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "2270:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "2264:49:77",
            "typeName": {
              "id": 21036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21035,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "2295:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "2295:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 21043,
            "name": "Deposited",
            "nameLocation": "2325:9:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21039,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2351:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21043,
                  "src": "2335:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2374:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21043,
                  "src": "2358:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2334:48:77"
            },
            "src": "2319:64:77"
          },
          {
            "anonymous": false,
            "id": 21049,
            "name": "Withdrew",
            "nameLocation": "2394:8:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21045,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2419:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21049,
                  "src": "2403:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21047,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2442:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21049,
                  "src": "2426:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2402:48:77"
            },
            "src": "2388:63:77"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 21051,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "2472:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 21119,
            "src": "2457:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21050,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2457:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 21053,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "2504:9:77",
            "nodeType": "VariableDeclaration",
            "scope": 21119,
            "src": "2489:24:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21052,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2489:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21062,
              "nodeType": "Block",
              "src": "2571:39:77",
              "statements": [
                {
                  "expression": {
                    "id": 21060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21058,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21053,
                      "src": "2581:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21059,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21055,
                      "src": "2593:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2581:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21061,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:22:77"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 21063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "2529:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21055,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "2552:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21063,
                  "src": "2544:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:20:77"
            },
            "returnParameters": {
              "id": 21057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:0:77"
            },
            "scope": 21119,
            "src": "2520:90:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21072,
              "nodeType": "Block",
              "src": "2669:43:77",
              "statements": [
                {
                  "expression": {
                    "id": 21070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21068,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21051,
                      "src": "2679:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21069,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21065,
                      "src": "2693:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2679:26:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21071,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:26:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 21073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "2625:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21065,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "2648:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21073,
                  "src": "2640:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2640:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2639:22:77"
            },
            "returnParameters": {
              "id": 21067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:77"
            },
            "scope": 21119,
            "src": "2616:96:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11573
            ],
            "body": {
              "id": 21095,
              "nodeType": "Block",
              "src": "2777:139:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2833:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2833:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21086,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21051,
                        "src": "2845:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21087,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21077,
                        "src": "2858:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21081,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21053,
                            "src": "2805:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21080,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "2787:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 21082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2787:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 21083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "2787:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 21088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:79:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21089,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:79:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21091,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21075,
                        "src": "2891:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21092,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21077,
                        "src": "2901:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21090,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21043,
                      "src": "2881:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:28:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21094,
                  "nodeType": "EmitStatement",
                  "src": "2876:33:77"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 21096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2727:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21075,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2743:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21096,
                  "src": "2735:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21077,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2761:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21096,
                  "src": "2753:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:35:77"
            },
            "returnParameters": {
              "id": 21079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:0:77"
            },
            "scope": 21119,
            "src": "2718:198:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11580
            ],
            "body": {
              "id": 21117,
              "nodeType": "Block",
              "src": "2982:117:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3030:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3030:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21109,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21100,
                        "src": "3042:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21104,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21053,
                            "src": "3014:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21103,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "2992:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$14638_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 21105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2992:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$14638",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 21106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14637,
                      "src": "2992:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:58:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21111,
                  "nodeType": "ExpressionStatement",
                  "src": "2992:58:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21113,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21098,
                        "src": "3074:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21114,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21100,
                        "src": "3084:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21112,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21049,
                      "src": "3065:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3065:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21116,
                  "nodeType": "EmitStatement",
                  "src": "3060:32:77"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 21118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2931:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21098,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2948:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21118,
                  "src": "2940:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21100,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2966:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21118,
                  "src": "2958:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:35:77"
            },
            "returnParameters": {
              "id": 21102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2982:0:77"
            },
            "scope": 21119,
            "src": "2922:177:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "2193:908:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21120,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "3124:20:77"
            },
            "id": 21121,
            "nodeType": "InheritanceSpecifier",
            "src": "3124:20:77"
          }
        ],
        "canonicalName": "MockBUSD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21122,
        "linearizedBaseContracts": [
          21122,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323
        ],
        "name": "MockBUSD",
        "nameLocation": "3112:8:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "3103:44:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21123,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "3168:20:77"
            },
            "id": 21124,
            "nodeType": "InheritanceSpecifier",
            "src": "3168:20:77"
          }
        ],
        "canonicalName": "MockACS",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21125,
        "linearizedBaseContracts": [
          21125,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323
        ],
        "name": "MockACS",
        "nameLocation": "3157:7:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "3148:43:77",
        "usedErrors": []
      }
    ],
    "src": "33:3158:77"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        11651
      ],
      "FundManagement": [
        11627
      ],
      "IAMMFarm": [
        11168
      ],
      "IAMMRouter01": [
        11476
      ],
      "IAMMRouter02": [
        11564
      ],
      "IAcryptosFarm": [
        11581
      ],
      "IAcryptosVault": [
        11594
      ],
      "IAsset": [
        11618
      ],
      "IBalancerVault": [
        11721
      ],
      "IERC20": [
        4114
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        11880
      ],
      "IMockERC20Upgradeable": [
        14638
      ],
      "IStargateReceiver": [
        11946
      ],
      "IVault": [
        12138
      ],
      "IZorroControllerXChain": [
        12718
      ],
      "IZorroControllerXChainBase": [
        12493
      ],
      "IZorroControllerXChainDeposit": [
        12546
      ],
      "IZorroControllerXChainEarn": [
        12617
      ],
      "IZorroControllerXChainReceiver": [
        12706
      ],
      "IZorroControllerXChainWithdraw": [
        12694
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        11639
      ],
      "MockACS": [
        21125
      ],
      "MockAcryptosFarm": [
        21119
      ],
      "MockAcryptosVault": [
        21029
      ],
      "MockBUSD": [
        21122
      ],
      "MockERC20Upgradeable": [
        14656
      ],
      "MockUSDC": [
        14659
      ],
      "MockVaultAcryptosSingle": [
        20916
      ],
      "MockVaultFactoryAcryptosSingle": [
        20849
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        12825
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        13095
      ],
      "SafeSwapParams": [
        13117
      ],
      "SafeSwapUni": [
        12924
      ],
      "SingleSwap": [
        11613
      ],
      "SwapKind": [
        11616
      ],
      "VaultAcryptosSingle": [
        16271
      ],
      "VaultBase": [
        20842
      ],
      "VaultFactoryAcryptosSingle": [
        14748
      ]
    },
    "id": 21126,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20844,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultAcryptosSingle.sol",
        "file": "../VaultAcryptosSingle.sol",
        "id": 20845,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21126,
        "sourceUnit": 16272,
        "src": "58:36:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 20846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21126,
        "sourceUnit": 14660,
        "src": "96:42:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20847,
              "name": "VaultFactoryAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14748,
              "src": "183:26:77"
            },
            "id": 20848,
            "nodeType": "InheritanceSpecifier",
            "src": "183:26:77"
          }
        ],
        "canonicalName": "MockVaultFactoryAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20849,
        "linearizedBaseContracts": [
          20849,
          14748,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryAcryptosSingle",
        "nameLocation": "149:30:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "140:78:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20850,
              "name": "VaultAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16271,
              "src": "256:19:77"
            },
            "id": 20851,
            "nodeType": "InheritanceSpecifier",
            "src": "256:19:77"
          }
        ],
        "canonicalName": "MockVaultAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20916,
        "linearizedBaseContracts": [
          20916,
          16271,
          20842,
          434,
          493,
          169,
          1718,
          323,
          12138
        ],
        "name": "MockVaultAcryptosSingle",
        "nameLocation": "229:23:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20860,
              "nodeType": "Block",
              "src": "323:34:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20857,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20853,
                        "src": "341:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20856,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15565,
                      "src": "333:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 20858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20859,
                  "nodeType": "ExpressionStatement",
                  "src": "333:17:77"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 20861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "291:6:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20853,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "306:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20861,
                  "src": "298:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "297:18:77"
            },
            "returnParameters": {
              "id": 20855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:77"
            },
            "scope": 20916,
            "src": "282:75:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20880,
              "nodeType": "Block",
              "src": "547:98:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20874,
                        "name": "_earnedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20863,
                        "src": "575:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20875,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20865,
                        "src": "590:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20876,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20867,
                        "src": "604:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20877,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20870,
                        "src": "631:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20873,
                      "name": "_swapEarnedToUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16270
                      ],
                      "referencedDeclaration": 16270,
                      "src": "557:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "557:81:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20879,
                  "nodeType": "ExpressionStatement",
                  "src": "557:81:77"
                }
              ]
            },
            "functionSelector": "13303335",
            "id": 20881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEarnedToUSDC",
            "nameLocation": "376:16:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20863,
                  "mutability": "mutable",
                  "name": "_earnedAmount",
                  "nameLocation": "410:13:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "402:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20865,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "441:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "433:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20867,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "471:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "463:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20870,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "527:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20881,
                  "src": "506:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20868,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "506:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "506:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "392:147:77"
            },
            "returnParameters": {
              "id": 20872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:77"
            },
            "scope": 20916,
            "src": "367:278:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20897,
              "nodeType": "Block",
              "src": "794:77:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20892,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20883,
                        "src": "821:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20893,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20885,
                        "src": "830:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20894,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20888,
                        "src": "857:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20891,
                      "name": "_revShareOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16178
                      ],
                      "referencedDeclaration": 16178,
                      "src": "804:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:60:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20896,
                  "nodeType": "ExpressionStatement",
                  "src": "804:60:77"
                }
              ]
            },
            "functionSelector": "b6b41a8b",
            "id": 20898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revShareOnChain",
            "nameLocation": "660:15:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20883,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "693:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "685:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20885,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "718:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "710:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20888,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "774:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20898,
                  "src": "753:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20887,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20886,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "753:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "753:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:111:77"
            },
            "returnParameters": {
              "id": 20890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:77"
            },
            "scope": 20916,
            "src": "651:220:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20914,
              "nodeType": "Block",
              "src": "1019:76:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20909,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20900,
                        "src": "1045:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20910,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20902,
                        "src": "1054:25:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20911,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20905,
                        "src": "1081:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 20908,
                      "name": "_buybackOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16096
                      ],
                      "referencedDeclaration": 16096,
                      "src": "1029:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19996_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 20912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1029:59:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20913,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:59:77"
                }
              ]
            },
            "functionSelector": "009b81db",
            "id": 20915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buybackOnChain",
            "nameLocation": "886:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20900,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "918:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "910:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20902,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "943:25:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "935:33:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20905,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "999:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20915,
                  "src": "978:27:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19996_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 20904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 20903,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19996,
                      "src": "978:13:77"
                    },
                    "referencedDeclaration": 19996,
                    "src": "978:13:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19996_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:111:77"
            },
            "returnParameters": {
              "id": 20907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:77"
            },
            "scope": 20916,
            "src": "877:218:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "220:877:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20917,
              "name": "IAcryptosVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11594,
              "src": "1129:14:77"
            },
            "id": 20918,
            "nodeType": "InheritanceSpecifier",
            "src": "1129:14:77"
          },
          {
            "baseName": {
              "id": 20919,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "1145:20:77"
            },
            "id": 20920,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:20:77"
          }
        ],
        "canonicalName": "MockAcryptosVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21029,
        "linearizedBaseContracts": [
          21029,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323,
          11594
        ],
        "name": "MockAcryptosVault",
        "nameLocation": "1108:17:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20924,
            "libraryName": {
              "id": 20921,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "1178:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "1172:49:77",
            "typeName": {
              "id": 20923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20922,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "1203:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "1203:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 20930,
            "name": "AddedLiquidity",
            "nameLocation": "1233:14:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20926,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1256:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20930,
                  "src": "1248:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20928,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_liquidity",
                  "nameLocation": "1273:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20930,
                  "src": "1265:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:37:77"
            },
            "src": "1227:58:77"
          },
          {
            "anonymous": false,
            "id": 20934,
            "name": "RemovedLiquidity",
            "nameLocation": "1296:16:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20932,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1321:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20934,
                  "src": "1313:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:17:77"
            },
            "src": "1290:40:77"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 20936,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1351:6:77",
            "nodeType": "VariableDeclaration",
            "scope": 21029,
            "src": "1336:21:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20935,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 20938,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1378:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 21029,
            "src": "1363:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20937,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1363:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20947,
              "nodeType": "Block",
              "src": "1445:32:77",
              "statements": [
                {
                  "expression": {
                    "id": 20945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20943,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "1455:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20944,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "1464:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1455:15:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20946,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:15:77"
                }
              ]
            },
            "functionSelector": "c8479cd6",
            "id": 20948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setToken0Address",
            "nameLocation": "1405:16:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20940,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1430:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20948,
                  "src": "1422:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:16:77"
            },
            "returnParameters": {
              "id": 20942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:77"
            },
            "scope": 21029,
            "src": "1396:81:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20957,
              "nodeType": "Block",
              "src": "1529:36:77",
              "statements": [
                {
                  "expression": {
                    "id": 20955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20953,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20938,
                      "src": "1539:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20954,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20950,
                      "src": "1553:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1539:19:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20956,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:19:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "1492:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20950,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "1515:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20958,
                  "src": "1507:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:15:77"
            },
            "returnParameters": {
              "id": 20952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:0:77"
            },
            "scope": 21029,
            "src": "1483:82:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11588
            ],
            "body": {
              "id": 20991,
              "nodeType": "Block",
              "src": "1612:245:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20967,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1665:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1665:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20971,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1685:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                              "typeString": "contract MockAcryptosVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                              "typeString": "contract MockAcryptosVault"
                            }
                          ],
                          "id": 20970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1677:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1677:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20973,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20960,
                        "src": "1692:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20964,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20936,
                            "src": "1640:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20963,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1622:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:25:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1622:42:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:78:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20975,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:78:77"
                },
                {
                  "assignments": [
                    20977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20977,
                      "mutability": "mutable",
                      "name": "_liquidity",
                      "nameLocation": "1718:10:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 20991,
                      "src": "1710:18:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1710:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20979,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 20978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1731:7:77",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1710:28:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1777:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1777:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20983,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20977,
                        "src": "1789:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20980,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1771:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20985,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:29:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20987,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20960,
                        "src": "1830:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20988,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20977,
                        "src": "1839:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20986,
                      "name": "AddedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20930,
                      "src": "1815:14:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:35:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20990,
                  "nodeType": "EmitStatement",
                  "src": "1810:40:77"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 20992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1580:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20960,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1596:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 20992,
                  "src": "1588:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:17:77"
            },
            "returnParameters": {
              "id": 20962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:77"
            },
            "scope": 21029,
            "src": "1571:286:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11593
            ],
            "body": {
              "id": 21027,
              "nodeType": "Block",
              "src": "1905:284:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21004,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1965:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1965:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21006,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20938,
                        "src": "1977:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21007,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20994,
                        "src": "1990:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21000,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1941:4:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$21029",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              ],
                              "id": 20999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1933:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20998,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1933:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1933:13:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20997,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1915:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 21002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1915:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 21003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1915:49:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 21008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:83:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21009,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:83:77"
                },
                {
                  "assignments": [
                    21011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21011,
                      "mutability": "mutable",
                      "name": "_withdrawalAmt",
                      "nameLocation": "2016:14:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 21027,
                      "src": "2008:22:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2008:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21013,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 21012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2033:7:77",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2008:32:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21018,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2108:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2108:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21020,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21011,
                        "src": "2120:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21015,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20936,
                            "src": "2095:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21014,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "2073:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$14638_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 21016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:29:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$14638",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 21017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14637,
                      "src": "2073:34:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:62:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21022,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:62:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21024,
                        "name": "_withdrawalAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21011,
                        "src": "2167:14:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21023,
                      "name": "RemovedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "2150:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21026,
                  "nodeType": "EmitStatement",
                  "src": "2145:37:77"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 21028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1872:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20994,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1889:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21028,
                  "src": "1881:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:17:77"
            },
            "returnParameters": {
              "id": 20996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:0:77"
            },
            "scope": 21029,
            "src": "1863:326:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "1099:1092:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21030,
              "name": "IAcryptosFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11581,
              "src": "2222:13:77"
            },
            "id": 21031,
            "nodeType": "InheritanceSpecifier",
            "src": "2222:13:77"
          },
          {
            "baseName": {
              "id": 21032,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "2237:20:77"
            },
            "id": 21033,
            "nodeType": "InheritanceSpecifier",
            "src": "2237:20:77"
          }
        ],
        "canonicalName": "MockAcryptosFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21119,
        "linearizedBaseContracts": [
          21119,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323,
          11581
        ],
        "name": "MockAcryptosFarm",
        "nameLocation": "2202:16:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21037,
            "libraryName": {
              "id": 21034,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "2270:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "2264:49:77",
            "typeName": {
              "id": 21036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21035,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "2295:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "2295:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 21043,
            "name": "Deposited",
            "nameLocation": "2325:9:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21039,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2351:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21043,
                  "src": "2335:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2374:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21043,
                  "src": "2358:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2334:48:77"
            },
            "src": "2319:64:77"
          },
          {
            "anonymous": false,
            "id": 21049,
            "name": "Withdrew",
            "nameLocation": "2394:8:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21045,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2419:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21049,
                  "src": "2403:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21047,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2442:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21049,
                  "src": "2426:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2402:48:77"
            },
            "src": "2388:63:77"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 21051,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "2472:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 21119,
            "src": "2457:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21050,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2457:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 21053,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "2504:9:77",
            "nodeType": "VariableDeclaration",
            "scope": 21119,
            "src": "2489:24:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21052,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2489:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21062,
              "nodeType": "Block",
              "src": "2571:39:77",
              "statements": [
                {
                  "expression": {
                    "id": 21060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21058,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21053,
                      "src": "2581:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21059,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21055,
                      "src": "2593:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2581:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21061,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:22:77"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 21063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "2529:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21055,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "2552:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21063,
                  "src": "2544:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:20:77"
            },
            "returnParameters": {
              "id": 21057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:0:77"
            },
            "scope": 21119,
            "src": "2520:90:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21072,
              "nodeType": "Block",
              "src": "2669:43:77",
              "statements": [
                {
                  "expression": {
                    "id": 21070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21068,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21051,
                      "src": "2679:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21069,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21065,
                      "src": "2693:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2679:26:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21071,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:26:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 21073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "2625:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21065,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "2648:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21073,
                  "src": "2640:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2640:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2639:22:77"
            },
            "returnParameters": {
              "id": 21067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:77"
            },
            "scope": 21119,
            "src": "2616:96:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11573
            ],
            "body": {
              "id": 21095,
              "nodeType": "Block",
              "src": "2777:139:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2833:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2833:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21086,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21051,
                        "src": "2845:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21087,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21077,
                        "src": "2858:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21081,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21053,
                            "src": "2805:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21080,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "2787:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 21082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2787:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 21083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "2787:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 21088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:79:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21089,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:79:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21091,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21075,
                        "src": "2891:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21092,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21077,
                        "src": "2901:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21090,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21043,
                      "src": "2881:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:28:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21094,
                  "nodeType": "EmitStatement",
                  "src": "2876:33:77"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 21096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2727:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21075,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2743:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21096,
                  "src": "2735:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21077,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2761:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21096,
                  "src": "2753:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:35:77"
            },
            "returnParameters": {
              "id": 21079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2777:0:77"
            },
            "scope": 21119,
            "src": "2718:198:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11580
            ],
            "body": {
              "id": 21117,
              "nodeType": "Block",
              "src": "2982:117:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3030:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3030:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21109,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21100,
                        "src": "3042:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21104,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21053,
                            "src": "3014:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21103,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14638,
                          "src": "2992:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$14638_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 21105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2992:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$14638",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 21106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14637,
                      "src": "2992:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:58:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21111,
                  "nodeType": "ExpressionStatement",
                  "src": "2992:58:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21113,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21098,
                        "src": "3074:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21114,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21100,
                        "src": "3084:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21112,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21049,
                      "src": "3065:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3065:27:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21116,
                  "nodeType": "EmitStatement",
                  "src": "3060:32:77"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 21118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2931:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21098,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2948:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21118,
                  "src": "2940:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21100,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2966:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 21118,
                  "src": "2958:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:35:77"
            },
            "returnParameters": {
              "id": 21102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2982:0:77"
            },
            "scope": 21119,
            "src": "2922:177:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 21126,
        "src": "2193:908:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21120,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "3124:20:77"
            },
            "id": 21121,
            "nodeType": "InheritanceSpecifier",
            "src": "3124:20:77"
          }
        ],
        "canonicalName": "MockBUSD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21122,
        "linearizedBaseContracts": [
          21122,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323
        ],
        "name": "MockBUSD",
        "nameLocation": "3112:8:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "3103:44:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21123,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14656,
              "src": "3168:20:77"
            },
            "id": 21124,
            "nodeType": "InheritanceSpecifier",
            "src": "3168:20:77"
          }
        ],
        "canonicalName": "MockACS",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21125,
        "linearizedBaseContracts": [
          21125,
          14656,
          1106,
          1209,
          14638,
          1184,
          1718,
          323
        ],
        "name": "MockACS",
        "nameLocation": "3157:7:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 21126,
        "src": "3148:43:77",
        "usedErrors": []
      }
    ],
    "src": "33:3158:77"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "1652636156992": {
      "events": {},
      "links": {},
      "address": "0xFdb344183972730e39488a86Ae49bb937FD24369",
      "transactionHash": "0x796bf74cbd3abd7d1e1e5a16399a3ef2adcd7b3f1904e3ef63be92cd6dd828a3"
    },
    "1652923066803": {
      "events": {},
      "links": {},
      "address": "0xDA21B5B18b40Fd0a74A1BE39DDCB6fD8523EF977",
      "transactionHash": "0x027be40319efe9789120e5cd9c21af96135260249bafd705456764782298f036"
    },
    "1653053335375": {
      "events": {},
      "links": {},
      "address": "0x6552DB878489179C2280e7e24a2AE8e6e5A7A271",
      "transactionHash": "0x1769ba5b8216a3f929b790fa6db722eda5522846c6306d4e256832260600e812"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-05-22T03:11:04.770Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}