{
  "contractName": "MockAcryptosVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_liquidity",
          "type": "uint256"
        }
      ],
      "name": "AddedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RemovedLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken0Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burn",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"name\":\"AddedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RemovedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burn\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken0Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol\":\"MockAcryptosVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0x45fe5b6e09537c84248325b6cb3595aed7752b07425dfe136351234f2d8130dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a71d1520ace64f0bbd75ff6039bb7bb71b0d66e1d153235df4266dafea7f729c\",\"dweb:/ipfs/QmQUXcrczoVskKmcwYKvYkGy2ehtwbVH58tUBqNRG7iW7H\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/IAMMFarm.sol\":{\"keccak256\":\"0x2b2600a84fb56a84ebfbeeadc317c16eed08dd7bbfb19011fb7a76c1093e6504\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8751dd42de042238f176b12a69ec7a5e80e890a8cf6e05bfad4d84532f24c065\",\"dweb:/ipfs/QmbWDH4fwdN6zx61dK6RPkM4bVYUXMBEBfPNzPPJX5vPFa\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IAcryptosFarm.sol\":{\"keccak256\":\"0x47419fd5665c625d577324f045af56f122a79924bda917774a781fd759e8038a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f11a565fbe4b7f2217c11d17433d299d6ce82b29593ecb5ddc844906c416e83\",\"dweb:/ipfs/QmdMy9xXQT755L49CGw7tJecs9Bq4qHVNCoCTDSFi7CeuF\"]},\"project:/contracts/interfaces/IAcryptosVault.sol\":{\"keccak256\":\"0xfe0dc21cb573c0db10fd4ff03e42c21456342040bbc387146a813718a4b7d7fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a5e9e077572487d9dfcf3ff4fbc1f7a0f94119da9b9263cd253c2ba520745e30\",\"dweb:/ipfs/QmUxxYcU9xbickhiApStKrEAvPNkj2mRgGMctw68ze7F3c\"]},\"project:/contracts/interfaces/IBalancerVault.sol\":{\"keccak256\":\"0xaed146c2eb3b89794becab4737eb4ab12d447222de4b8c4434631dc0b3a7a044\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ed3abd3ac4a22fd98b17c42a3f1367e233b39f92fb522db779add5e62dbfebab\",\"dweb:/ipfs/QmWuogqduPJuMwhkGBc37gxjNgqV8xXCYqH7VMHY6vGz3L\"]},\"project:/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xc8fbc73780d12ff4e45eb04f09c6c65dc2f0967c83442f8921dcd8059773e187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://558ea1af6b64e5b487033fcf1c38f457ebbf919f321f5ec53976a0a3983d941c\",\"dweb:/ipfs/Qmd7jE9MkgkpAfJyLgWyynbGbSueRZVpGEijnyC7cC1hkK\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xf383c9dbe34ffdffe798d9abe4c8d962b28294ed67b4ff9292b15f43cc6d0b65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://936ac5d56936dba5fd4716df06f4cf277b9d6f2ba3662181e8896cf268a7ef75\",\"dweb:/ipfs/QmSdVUYSDqr62WxqMKcxGM1AdU6gF3WaHUMNNSqn52aofL\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xeccc8b05ee229b2854832f381284a265f9289346f7fa0d52c561313d81b14d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed5c199002d7557731119f147899c3c4a0c8c6dd5056870e02d21220a1835b3\",\"dweb:/ipfs/QmazTMgstgdc3ZW577kobqCsw4HsqGLpxtoJuJGja9vYSb\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]},\"project:/contracts/vaults/VaultAcryptosSingle.sol\":{\"keccak256\":\"0xa87037286a7a0b08152ec716bbcac68f271aa4e4c25a15e08015ed70a5a4689a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbf83d6742bbd4072e1ab6205a468415eedbc65c1ca71945c3fa9b89d20aa4a7\",\"dweb:/ipfs/Qmc1rQ64CVHthp1ADaNeHvokuxV4hJ2Uj3dbXLmfv7zKqU\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0x3a6e28d87cb213ec59ee36746e26908341ee2b775cc88e24e7bc67135078b68d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be589699a3e2165122565b5922d96ee5e5c111e3b4081f648f109e67eb02408d\",\"dweb:/ipfs/QmdMgntL8VFvuZGh87YAmUCxJgFTWG4iSVAmG36JusKXGp\"]},\"project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol\":{\"keccak256\":\"0x9abe097faf0bc126775f0e0227705bf15e84b5d1919f021d2ed41144f15213db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ae5d8ab441c4bda74699a44e54f730433eb6293046c74f1a08bc034af230c47\",\"dweb:/ipfs/QmNn1zbeXA6jq3EzbH16oi6oCeuMzVoUq3vsR4xvTkwZ6D\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610eda806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80634b0e7216116100a2578063a457c2d711610071578063a457c2d71461026a578063a9059cbb1461027d578063b6b55f2514610290578063c8479cd6146102a3578063dd62ed3e146102d357600080fd5b80634b0e7216146101f657806370a082311461022657806370d5ae051461024f57806395d89b411461026257600080fd5b806323b872dd116100e957806323b872dd146101995780632e1a7d4d146101ac578063313ce567146101c157806339509351146101d057806340c10f19146101e357600080fd5b806306fdde031461011b578063095ea7b3146101395780630dfe16811461015c57806318160ddd14610187575b600080fd5b61012361030c565b6040516101309190610ce9565b60405180910390f35b61014c610147366004610d38565b61039e565b6040519015158152602001610130565b60655461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6035545b604051908152602001610130565b61014c6101a7366004610d62565b6103b6565b6101bf6101ba366004610d9e565b6103dc565b005b60405160128152602001610130565b61014c6101de366004610d38565b610434565b6101bf6101f1366004610d38565b610473565b6101bf610204366004610db7565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61018b610234366004610db7565b6001600160a01b031660009081526033602052604090205490565b60665461016f906001600160a01b031681565b610123610481565b61014c610278366004610d38565b610490565b61014c61028b366004610d38565b610532565b6101bf61029e366004610d9e565b610540565b6101bf6102b1366004610db7565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61018b6102e1366004610dd2565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461031b90610e05565b80601f016020809104026020016040519081016040528092919081815260200182805461034790610e05565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b6000336103ac8185856105a8565b5060019392505050565b6000336103c48582856106cc565b6103cf85858561075e565b60019150505b9392505050565b6066546103f690309033906001600160a01b03168461092c565b604051671bc16d674ec8000081527f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11219060200160405180910390a150565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906103ac908290869061046e908790610e40565b6105a8565b61047d8282610986565b5050565b60606037805461031b90610e05565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561051a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61052782868684036105a8565b506001949350505050565b6000336103ac81858561075e565b606554610558906001600160a01b031633308461092c565b670de0b6b3a764000061056b3382610986565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c497701910160405180910390a15050565b6001600160a01b03831661060a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610511565b6001600160a01b03821661066b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610511565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610758578181101561074b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610511565b61075884848484036105a8565b50505050565b6001600160a01b0383166107c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610511565b6001600160a01b0382166108245760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610511565b6001600160a01b0383166000908152603360205260409020548181101561089c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610511565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906108d3908490610e40565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091f91815260200190565b60405180910390a3610758565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610758908590610a6a565b6001600160a01b0382166109dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610511565b80603560008282546109ee9190610e40565b90915550506001600160a01b03821660009081526033602052604081208054839290610a1b908490610e40565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610abf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b3c9092919063ffffffff16565b805190915015610a655780806020019051810190610add9190610e66565b610a655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610511565b6060610b4b8484600085610b53565b949350505050565b606082471015610bb45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610511565b6001600160a01b0385163b610c0b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610511565b600080866001600160a01b03168587604051610c279190610e88565b60006040518083038185875af1925050503d8060008114610c64576040519150601f19603f3d011682016040523d82523d6000602084013e610c69565b606091505b5091509150610c79828286610c84565b979650505050505050565b60608315610c935750816103d5565b825115610ca35782518084602001fd5b8160405162461bcd60e51b81526004016105119190610ce9565b60005b83811015610cd8578181015183820152602001610cc0565b838111156107585750506000910152565b6020815260008251806020840152610d08816040850160208701610cbd565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d3357600080fd5b919050565b60008060408385031215610d4b57600080fd5b610d5483610d1c565b946020939093013593505050565b600080600060608486031215610d7757600080fd5b610d8084610d1c565b9250610d8e60208501610d1c565b9150604084013590509250925092565b600060208284031215610db057600080fd5b5035919050565b600060208284031215610dc957600080fd5b6103d582610d1c565b60008060408385031215610de557600080fd5b610dee83610d1c565b9150610dfc60208401610d1c565b90509250929050565b600181811c90821680610e1957607f821691505b60208210811415610e3a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610e6157634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610e7857600080fd5b815180151581146103d557600080fd5b60008251610e9a818460208701610cbd565b919091019291505056fea26469706673582212207e106367a1f032f99c87adbe856e2a32495abf5166808e15c093176a84448cc464736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80634b0e7216116100a2578063a457c2d711610071578063a457c2d71461026a578063a9059cbb1461027d578063b6b55f2514610290578063c8479cd6146102a3578063dd62ed3e146102d357600080fd5b80634b0e7216146101f657806370a082311461022657806370d5ae051461024f57806395d89b411461026257600080fd5b806323b872dd116100e957806323b872dd146101995780632e1a7d4d146101ac578063313ce567146101c157806339509351146101d057806340c10f19146101e357600080fd5b806306fdde031461011b578063095ea7b3146101395780630dfe16811461015c57806318160ddd14610187575b600080fd5b61012361030c565b6040516101309190610ce9565b60405180910390f35b61014c610147366004610d38565b61039e565b6040519015158152602001610130565b60655461016f906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6035545b604051908152602001610130565b61014c6101a7366004610d62565b6103b6565b6101bf6101ba366004610d9e565b6103dc565b005b60405160128152602001610130565b61014c6101de366004610d38565b610434565b6101bf6101f1366004610d38565b610473565b6101bf610204366004610db7565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61018b610234366004610db7565b6001600160a01b031660009081526033602052604090205490565b60665461016f906001600160a01b031681565b610123610481565b61014c610278366004610d38565b610490565b61014c61028b366004610d38565b610532565b6101bf61029e366004610d9e565b610540565b6101bf6102b1366004610db7565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b61018b6102e1366004610dd2565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461031b90610e05565b80601f016020809104026020016040519081016040528092919081815260200182805461034790610e05565b80156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b6000336103ac8185856105a8565b5060019392505050565b6000336103c48582856106cc565b6103cf85858561075e565b60019150505b9392505050565b6066546103f690309033906001600160a01b03168461092c565b604051671bc16d674ec8000081527f04b0a3a0ab96097f4ab2292b42474f44218859ae0f669c636c01fa72712f11219060200160405180910390a150565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906103ac908290869061046e908790610e40565b6105a8565b61047d8282610986565b5050565b60606037805461031b90610e05565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561051a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61052782868684036105a8565b506001949350505050565b6000336103ac81858561075e565b606554610558906001600160a01b031633308461092c565b670de0b6b3a764000061056b3382610986565b60408051838152602081018390527fe74b04c1435e286c6b8eba73f0f16a0a2fcc9d21d879598ecacf17db8c497701910160405180910390a15050565b6001600160a01b03831661060a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610511565b6001600160a01b03821661066b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610511565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114610758578181101561074b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610511565b61075884848484036105a8565b50505050565b6001600160a01b0383166107c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610511565b6001600160a01b0382166108245760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610511565b6001600160a01b0383166000908152603360205260409020548181101561089c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610511565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906108d3908490610e40565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161091f91815260200190565b60405180910390a3610758565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610758908590610a6a565b6001600160a01b0382166109dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610511565b80603560008282546109ee9190610e40565b90915550506001600160a01b03821660009081526033602052604081208054839290610a1b908490610e40565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000610abf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b3c9092919063ffffffff16565b805190915015610a655780806020019051810190610add9190610e66565b610a655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610511565b6060610b4b8484600085610b53565b949350505050565b606082471015610bb45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610511565b6001600160a01b0385163b610c0b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610511565b600080866001600160a01b03168587604051610c279190610e88565b60006040518083038185875af1925050503d8060008114610c64576040519150601f19603f3d011682016040523d82523d6000602084013e610c69565b606091505b5091509150610c79828286610c84565b979650505050505050565b60608315610c935750816103d5565b825115610ca35782518084602001fd5b8160405162461bcd60e51b81526004016105119190610ce9565b60005b83811015610cd8578181015183820152602001610cc0565b838111156107585750506000910152565b6020815260008251806020840152610d08816040850160208701610cbd565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d3357600080fd5b919050565b60008060408385031215610d4b57600080fd5b610d5483610d1c565b946020939093013593505050565b600080600060608486031215610d7757600080fd5b610d8084610d1c565b9250610d8e60208501610d1c565b9150604084013590509250925092565b600060208284031215610db057600080fd5b5035919050565b600060208284031215610dc957600080fd5b6103d582610d1c565b60008060408385031215610de557600080fd5b610dee83610d1c565b9150610dfc60208401610d1c565b90509250929050565b600181811c90821680610e1957607f821691505b60208210811415610e3a57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610e6157634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610e7857600080fd5b815180151581146103d557600080fd5b60008251610e9a818460208701610cbd565b919091019291505056fea26469706673582212207e106367a1f032f99c87adbe856e2a32495abf5166808e15c093176a84448cc464736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9186:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:80",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:80"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:80"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:80",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:80"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:80",
                    "statements": []
                  },
                  "src": "96:113:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:80"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:80"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:80",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:80",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:80",
                "type": ""
              }
            ],
            "src": "14:258:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:80",
                "type": ""
              }
            ],
            "src": "277:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:124:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "724:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "733:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:20:80"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:80"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "775:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "786:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "801:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "806:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "797:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "797:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "810:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "772:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "762:70:80"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "693:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:80",
                "type": ""
              }
            ],
            "src": "665:173:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "930:167:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "976:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "988:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "978:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "951:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "960:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "943:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "940:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1030:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1011:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1049:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1059:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "899:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "911:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "919:6:80",
                "type": ""
              }
            ],
            "src": "843:254:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1197:92:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1207:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1207:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1249:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1267:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1260:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:41:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1166:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1177:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1188:4:80",
                "type": ""
              }
            ],
            "src": "1102:187:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1417:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1428:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1405:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1447:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1462:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1483:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1474:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1474:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1487:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1470:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1470:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1458:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1458:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1375:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1386:4:80",
                "type": ""
              }
            ],
            "src": "1294:203:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1603:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1613:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1625:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1621:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1621:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1613:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1655:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1666:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1648:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1648:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1648:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1572:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1583:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1594:4:80",
                "type": ""
              }
            ],
            "src": "1502:177:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1788:224:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1834:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1843:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1846:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1836:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1836:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1836:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1809:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1818:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1805:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1830:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1801:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1801:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1798:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1888:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1869:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1859:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1907:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1940:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1951:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1936:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1936:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1917:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:38:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1907:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1964:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1991:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1974:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1738:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1749:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1761:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1769:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1777:6:80",
                "type": ""
              }
            ],
            "src": "1684:328:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:110:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2133:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2142:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2145:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2135:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2135:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2135:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2108:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2117:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2104:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2104:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2129:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2097:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2158:33:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2181:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2168:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2168:23:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2053:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2064:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2076:6:80",
                "type": ""
              }
            ],
            "src": "2017:180:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2299:87:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2309:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2321:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2332:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2317:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2317:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2309:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2351:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2366:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:4:80",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2362:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2362:17:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2344:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2344:36:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2268:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2279:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2290:4:80",
                "type": ""
              }
            ],
            "src": "2202:184:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2461:116:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2507:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2516:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2519:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2509:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2509:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2509:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2482:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2491:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2478:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2503:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2474:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2474:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2471:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2532:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2561:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2542:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2427:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2438:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2450:6:80",
                "type": ""
              }
            ],
            "src": "2391:186:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:173:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2715:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2724:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2727:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2717:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2717:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2717:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2690:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2699:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2686:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2686:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2711:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2682:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2679:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2769:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2750:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2740:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2821:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2832:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2817:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2817:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2798:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:38:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2788:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2627:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2638:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2650:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2658:6:80",
                "type": ""
              }
            ],
            "src": "2582:260:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2912:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2926:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2929:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2922:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2912:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2943:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2973:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2979:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2969:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2947:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3020:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3022:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3036:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3044:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3032:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3032:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3022:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3000:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2990:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3110:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3131:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3138:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3143:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3134:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3134:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3124:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3124:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3124:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3175:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3178:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3168:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3168:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3168:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3203:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3206:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3196:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3196:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3196:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3066:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3089:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3097:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3086:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3063:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3063:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3060:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2882:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2891:6:80",
                "type": ""
              }
            ],
            "src": "2847:380:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3359:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3369:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3381:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3392:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3377:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3369:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3411:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3422:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3404:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3404:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_2000000000000000000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3328:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3339:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3350:4:80",
                "type": ""
              }
            ],
            "src": "3232:203:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3488:177:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3523:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3544:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3551:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3556:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3547:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3547:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3537:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3537:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3537:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3588:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3591:4:80",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3581:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3581:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3581:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3616:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3619:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3609:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3609:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3609:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3504:1:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3511:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3507:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3507:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3501:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3498:136:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3643:16:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3654:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3657:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3650:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3643:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3471:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3474:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3480:3:80",
                "type": ""
              }
            ],
            "src": "3440:225:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3844:227:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3861:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3872:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3854:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3854:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3906:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3891:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3911:2:80",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3884:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3884:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3884:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3945:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3930:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3930:18:80"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3950:34:80",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3923:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3923:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3923:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4005:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4016:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4001:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4001:18:80"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4021:7:80",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3994:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:35:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3994:35:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4038:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4050:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4061:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4046:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4046:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4038:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3821:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3835:4:80",
                "type": ""
              }
            ],
            "src": "3670:401:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4205:119:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4215:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4227:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4238:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4223:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4223:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4215:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4257:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4268:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4250:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4250:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4250:25:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4295:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4306:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4291:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4291:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4311:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4284:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4284:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4166:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4177:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4185:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4196:4:80",
                "type": ""
              }
            ],
            "src": "4076:248:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4503:226:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4520:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4513:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4513:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4554:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4570:2:80",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4543:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4543:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4593:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4604:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4589:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4589:18:80"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4609:34:80",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4582:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4582:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4582:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4664:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4675:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4660:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4660:18:80"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4680:6:80",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4653:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4653:34:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4696:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4708:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4719:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4704:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4696:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4480:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4494:4:80",
                "type": ""
              }
            ],
            "src": "4329:400:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4908:224:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4925:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4936:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4918:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4918:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4959:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4970:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4955:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4955:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4975:2:80",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4948:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4948:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4948:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4998:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5009:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:18:80"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5014:34:80",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4987:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4987:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4987:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5069:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5080:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5065:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5065:18:80"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5085:4:80",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5058:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:32:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5058:32:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5099:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5122:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5107:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5107:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5099:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4885:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4899:4:80",
                "type": ""
              }
            ],
            "src": "4734:398:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5311:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5328:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5339:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5321:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5321:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5321:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5362:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5373:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5358:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5358:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5378:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5351:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5351:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5351:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5401:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5412:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5397:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5397:18:80"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5417:31:80",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5390:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5390:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5390:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5458:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5470:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5481:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5466:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5466:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5458:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5288:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5302:4:80",
                "type": ""
              }
            ],
            "src": "5137:353:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5669:227:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5686:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5697:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5679:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5679:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5720:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5731:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5716:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5716:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5736:2:80",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5709:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5709:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5709:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5759:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5770:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5755:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5755:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5775:34:80",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5748:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5748:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5748:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5830:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5841:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5826:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5826:18:80"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5846:7:80",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5819:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5819:35:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5819:35:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5863:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5875:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5886:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5871:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5871:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5863:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5646:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5660:4:80",
                "type": ""
              }
            ],
            "src": "5495:401:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6075:225:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6092:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6103:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6085:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6085:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6085:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6126:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6137:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6122:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6122:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6142:2:80",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6115:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6115:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6165:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6176:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6161:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6161:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6181:34:80",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6154:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6154:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6236:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6247:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6232:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:18:80"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6252:5:80",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6225:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6225:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6267:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6279:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6290:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6275:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6275:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6267:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6052:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6066:4:80",
                "type": ""
              }
            ],
            "src": "5901:399:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6479:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6496:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6507:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6489:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6489:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6489:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6530:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6541:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6526:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6526:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6546:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6519:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6519:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6519:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6569:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6580:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6565:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6565:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6585:34:80",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6558:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6558:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6558:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:80"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6656:8:80",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6674:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6686:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6697:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6682:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6682:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6674:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6456:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6470:4:80",
                "type": ""
              }
            ],
            "src": "6305:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6869:218:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6879:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6891:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6902:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6887:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6887:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6879:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6914:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6937:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6928:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6928:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6941:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6924:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6924:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6918:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6959:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6974:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6982:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6952:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6952:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7006:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7017:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7002:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7002:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7026:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7034:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7022:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7022:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6995:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6995:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6995:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7058:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7069:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7054:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7054:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7074:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7047:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7047:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6822:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6833:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6841:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6849:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6860:4:80",
                "type": ""
              }
            ],
            "src": "6712:375:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7266:181:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7283:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7294:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7276:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7276:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7317:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7328:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7313:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7313:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7333:2:80",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7306:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7306:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7306:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7356:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7367:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7352:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7352:18:80"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7372:33:80",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7345:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:61:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7345:61:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7415:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7427:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7438:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7423:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7423:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7415:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7243:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7257:4:80",
                "type": ""
              }
            ],
            "src": "7092:355:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7530:199:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7576:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7585:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7588:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7578:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7578:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7578:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7551:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7560:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7547:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7547:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7572:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7543:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7543:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "7540:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7601:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7620:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7614:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7605:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7683:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7692:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7695:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7685:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7685:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7685:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7652:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7673:5:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7666:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7666:13:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7659:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7659:21:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7649:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7649:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7642:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7642:40:80"
                  },
                  "nodeType": "YulIf",
                  "src": "7639:60:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7708:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7718:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7708:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7496:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7507:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7519:6:80",
                "type": ""
              }
            ],
            "src": "7452:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7908:232:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7925:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7936:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7918:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7918:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7918:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7959:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7970:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7955:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7955:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7975:2:80",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7948:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7948:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7948:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7998:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8009:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7994:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7994:18:80"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8014:34:80",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7987:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7987:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7987:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8069:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8080:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8065:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8065:18:80"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8085:12:80",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8058:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8058:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8058:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8107:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8119:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8130:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8115:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8115:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8107:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7885:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7899:4:80",
                "type": ""
              }
            ],
            "src": "7734:406:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8319:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8336:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8347:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8329:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8329:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8329:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8370:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8381:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8366:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8366:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8386:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8359:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8359:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8359:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8409:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8420:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8405:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8405:18:80"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8425:34:80",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8398:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8398:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8398:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8480:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8491:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8476:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8476:18:80"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8496:8:80",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8469:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8469:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8514:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8526:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8537:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8522:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8522:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8514:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8296:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8310:4:80",
                "type": ""
              }
            ],
            "src": "8145:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8726:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8743:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8754:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8736:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8736:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8736:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8777:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8788:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8773:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8773:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8793:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8766:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8766:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8766:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8816:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8827:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8812:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8812:18:80"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8832:31:80",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8805:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8805:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8805:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8873:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8885:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8896:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8881:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8873:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8703:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8717:4:80",
                "type": ""
              }
            ],
            "src": "8552:353:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9047:137:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9057:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9077:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9071:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9071:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9061:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9119:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9127:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9115:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9115:17:80"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9134:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9139:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9093:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9093:53:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9093:53:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9155:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9166:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9171:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9162:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9162:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9155:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9023:3:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9028:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9039:3:80",
                "type": ""
              }
            ],
            "src": "8910:274:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_rational_2000000000000000000_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1014:971:76:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1014:971:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:80;;1260:22;1242:41;;1230:2;1215:18;4770:197:6;1102:187:80;1251:21:76;;;;;-1:-1:-1;;;;;1251:21:76;;;;;;-1:-1:-1;;;;;1458:32:80;;;1440:51;;1428:2;1413:18;1251:21:76;1294:203:80;3581:106:6;3668:12;;3581:106;;;1648:25:80;;;1636:2;1621:18;3581:106:6;1502:177:80;5529:286:6;;;;;;:::i;:::-;;:::i;1778:205:76:-;;;;;;:::i;:::-;;:::i;:::-;;3430:91:6;;;3512:2;2344:36:80;;2332:2;2317:18;3430:91:6;2202:184:80;6210:236:6;;;;;;:::i;:::-;;:::i;419:97:69:-;;;;;;:::i;:::-;;:::i;1398:82:76:-;;;;;;:::i;:::-;1454:11;:19;;-1:-1:-1;;;;;;1454:19:76;-1:-1:-1;;;;;1454:19:76;;;;;;;;;;1398:82;3745:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:6;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;1278:26:76;;;;;-1:-1:-1;;;;;1278:26:76;;;2704:102:6;;;:::i;6933:429::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;1486:286:76:-;;;;;;:::i;:::-;;:::i;1311:81::-;;;;;;:::i;:::-;1370:6;:15;;-1:-1:-1;;;;;;1370:15:76;-1:-1:-1;;;;;1370:15:76;;;;;;;;;;1311:81;4313:149:6;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:6;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:11;4907:32:6;929:10:11;4923:7:6;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:6;;4770:197;-1:-1:-1;;;4770:197:6:o;5529:286::-;5656:4;929:10:11;5712:38:6;5728:4;929:10:11;5743:6:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;5804:4;5797:11;;;5529:286;;;;;;:::o;1778:205:76:-;1892:11;;1830:83;;1856:4;;1880:10;;-1:-1:-1;;;;;1892:11:76;1905:7;1830:49;:83::i;:::-;1928:25;;1945:7;1648:25:80;;1928::76;;1636:2:80;1621:18;1928:25:76;;;;;;;1778:205;:::o;6210:236:6:-;929:10:11;6298:4:6;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:6;;;;;;;;;;6298:4;;929:10:11;6352:66:6;;929:10:11;;6377:27:6;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;419:97:69:-;485:24;491:8;501:7;485:5;:24::i;:::-;419:97;;:::o;2704:102:6:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:11;7026:4:6;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:6;;;;;;;;;;7026:4;;929:10:11;7152:35:6;;;;7144:85;;;;-1:-1:-1;;;7144:85:6;;3872:2:80;7144:85:6;;;3854:21:80;3911:2;3891:18;;;3884:30;3950:34;3930:18;;;3923:62;-1:-1:-1;;;4001:18:80;;;3994:35;4046:19;;7144:85:6;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;:::-;-1:-1:-1;7351:4:6;;6933:429;-1:-1:-1;;;;6933:429:6:o;4066:189::-;4145:4;929:10:11;4199:28:6;929:10:11;4216:2:6;4220:6;4199:9;:28::i;1486:286:76:-;1555:6;;1537:78;;-1:-1:-1;;;;;1555:6:76;1580:10;1600:4;1607:7;1537:42;:78::i;:::-;1646:7;1686:29;1692:10;1646:7;1686:5;:29::i;:::-;1730:35;;;4250:25:80;;;4306:2;4291:18;;4284:34;;;1730:35:76;;4223:18:80;1730:35:76;;;;;;;1527:245;1486:286;:::o;10460:370:6:-;-1:-1:-1;;;;;10591:19:6;;10583:68;;;;-1:-1:-1;;;10583:68:6;;4531:2:80;10583:68:6;;;4513:21:80;4570:2;4550:18;;;4543:30;4609:34;4589:18;;;4582:62;-1:-1:-1;;;4660:18:80;;;4653:34;4704:19;;10583:68:6;4329:400:80;10583:68:6;-1:-1:-1;;;;;10669:21:6;;10661:68;;;;-1:-1:-1;;;10661:68:6;;4936:2:80;10661:68:6;;;4918:21:80;4975:2;4955:18;;;4948:30;5014:34;4994:18;;;4987:62;-1:-1:-1;;;5065:18:80;;;5058:32;5107:19;;10661:68:6;4734:398:80;10661:68:6;-1:-1:-1;;;;;10740:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1648:25:80;;;10791:32:6;;1621:18:80;10791:32:6;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:6;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:6;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:6;;5339:2:80;11356:68:6;;;5321:21:80;5378:2;5358:18;;;5351:30;5417:31;5397:18;;;5390:59;5466:18;;11356:68:6;5137:353:80;11356:68:6;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:6;;7943:68;;;;-1:-1:-1;;;7943:68:6;;5697:2:80;7943:68:6;;;5679:21:80;5736:2;5716:18;;;5709:30;5775:34;5755:18;;;5748:62;-1:-1:-1;;;5826:18:80;;;5819:35;5871:19;;7943:68:6;5495:401:80;7943:68:6;-1:-1:-1;;;;;8029:16:6;;8021:64;;;;-1:-1:-1;;;8021:64:6;;6103:2:80;8021:64:6;;;6085:21:80;6142:2;6122:18;;;6115:30;6181:34;6161:18;;;6154:62;-1:-1:-1;;;6232:18:80;;;6225:33;6275:19;;8021:64:6;5901:399:80;8021:64:6;-1:-1:-1;;;;;8167:15:6;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:6;;6507:2:80;8192:72:6;;;6489:21:80;6546:2;6526:18;;;6519:30;6585:34;6565:18;;;6558:62;-1:-1:-1;;;6636:18:80;;;6629:36;6682:19;;8192:72:6;6305:402:80;8192:72:6;-1:-1:-1;;;;;8298:15:6;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:6;8404:4;-1:-1:-1;;;;;8395:26:6;;8414:6;8395:26;;;;1648:25:80;;1636:2;1621:18;;1502:177;8395:26:6;;;;;;;;8432:37;12132:121;967:252:9;1143:68;;;-1:-1:-1;;;;;6970:15:80;;;1143:68:9;;;6952:34:80;7022:15;;7002:18;;;6995:43;7054:18;;;;7047:34;;;1143:68:9;;;;;;;;;;6887:18:80;;;;1143:68:9;;;;;;;;-1:-1:-1;;;;;1143:68:9;-1:-1:-1;;;1143:68:9;;;1116:96;;1136:5;;1116:19;:96::i;8752:389:6:-;-1:-1:-1;;;;;8835:21:6;;8827:65;;;;-1:-1:-1;;;8827:65:6;;7294:2:80;8827:65:6;;;7276:21:80;7333:2;7313:18;;;7306:30;7372:33;7352:18;;;7345:61;7423:18;;8827:65:6;7092:355:80;8827:65:6;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:6;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:6;;1648:25:80;;;-1:-1:-1;;;;;9038:37:6;;;9055:1;;9038:37;;1636:2:80;1621:18;9038:37:6;;;;;;;419:97:69;;:::o;12132:121:6:-;;;;:::o;3306:717:9:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:9;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:9;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:9;;7936:2:80;3921:85:9;;;7918:21:80;7975:2;7955:18;;;7948:30;8014:34;7994:18;;;7987:62;-1:-1:-1;;;8065:18:80;;;8058:40;8115:19;;3921:85:9;7734:406:80;3872:223:10;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:10:o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:10;;8347:2:80;5148:81:10;;;8329:21:80;8386:2;8366:18;;;8359:30;8425:34;8405:18;;;8398:62;-1:-1:-1;;;8476:18:80;;;8469:36;8522:19;;5148:81:10;8145:402:80;5148:81:10;-1:-1:-1;;;;;1476:19:10;;;5239:60;;;;-1:-1:-1;;;5239:60:10;;8754:2:80;5239:60:10;;;8736:21:80;8793:2;8773:18;;;8766:30;8832:31;8812:18;;;8805:59;8881:18;;5239:60:10;8552:353:80;5239:60:10;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:10;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:10:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:10;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:10;;;;;;;;:::i;14:258:80:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:80;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:80;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:80:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:80;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:80:o;1684:328::-;1761:6;1769;1777;1830:2;1818:9;1809:7;1805:23;1801:32;1798:52;;;1846:1;1843;1836:12;1798:52;1869:29;1888:9;1869:29;:::i;:::-;1859:39;;1917:38;1951:2;1940:9;1936:18;1917:38;:::i;:::-;1907:48;;2002:2;1991:9;1987:18;1974:32;1964:42;;1684:328;;;;;:::o;2017:180::-;2076:6;2129:2;2117:9;2108:7;2104:23;2100:32;2097:52;;;2145:1;2142;2135:12;2097:52;-1:-1:-1;2168:23:80;;2017:180;-1:-1:-1;2017:180:80:o;2391:186::-;2450:6;2503:2;2491:9;2482:7;2478:23;2474:32;2471:52;;;2519:1;2516;2509:12;2471:52;2542:29;2561:9;2542:29;:::i;2582:260::-;2650:6;2658;2711:2;2699:9;2690:7;2686:23;2682:32;2679:52;;;2727:1;2724;2717:12;2679:52;2750:29;2769:9;2750:29;:::i;:::-;2740:39;;2798:38;2832:2;2821:9;2817:18;2798:38;:::i;:::-;2788:48;;2582:260;;;;;:::o;2847:380::-;2926:1;2922:12;;;;2969;;;2990:61;;3044:4;3036:6;3032:17;3022:27;;2990:61;3097:2;3089:6;3086:14;3066:18;3063:38;3060:161;;;3143:10;3138:3;3134:20;3131:1;3124:31;3178:4;3175:1;3168:15;3206:4;3203:1;3196:15;3060:161;;2847:380;;;:::o;3440:225::-;3480:3;3511:1;3507:6;3504:1;3501:13;3498:136;;;3556:10;3551:3;3547:20;3544:1;3537:31;3591:4;3588:1;3581:15;3619:4;3616:1;3609:15;3498:136;-1:-1:-1;3650:9:80;;3440:225::o;7452:277::-;7519:6;7572:2;7560:9;7551:7;7547:23;7543:32;7540:52;;;7588:1;7585;7578:12;7540:52;7620:9;7614:16;7673:5;7666:13;7659:21;7652:5;7649:32;7639:60;;7695:1;7692;7685:12;8910:274;9039:3;9077:6;9071:13;9093:53;9139:6;9134:3;9127:4;9119:6;9115:17;9093:53;:::i;:::-;9162:16;;;;;8910:274;-1:-1:-1;;8910:274:80:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultAcryptosSingle.sol\";\n\nimport \"../../tokens/mocks/MockToken.sol\";\n\ncontract MockVaultFactoryAcryptosSingle is VaultFactoryAcryptosSingle {\n    \n}\n\ncontract MockVaultAcryptosSingle is VaultAcryptosSingle {\n    function swapEarnedToUSDC(\n        uint256 _earnedAmount,\n        address _destination,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _swapEarnedToUSDC(_earnedAmount, _destination, _maxMarketMovementAllowed, _rates);\n    }\n\n    function revShareOnChain(\n        uint256 _amount,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _revShareOnChain(_amount, _maxMarketMovementAllowed, _rates);\n    }\n\n    function buybackOnChain(\n        uint256 _amount,\n        uint256 _maxMarketMovementAllowed,\n        ExchangeRates memory _rates\n    ) public {\n        _buybackOnChain(_amount, _maxMarketMovementAllowed, _rates);\n    }\n}\n\ncontract MockAcryptosVault is IAcryptosVault, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event AddedLiquidity(uint256 _amount, uint256 _liquidity);\n    event RemovedLiquidity(uint256 _amount);\n\n    address public token0;\n    address public burnAddress;\n\n    function setToken0Address(address _token) public {\n        token0 = _token;\n    }\n\n    function setBurnAddress(address _burn) public {\n        burnAddress = _burn;\n    }\n\n    function deposit(uint256 _amount) public {\n        IERC20Upgradeable(token0).safeTransferFrom(msg.sender, address(this), _amount);\n        uint256 _liquidity = 1 ether; // Hard code for tests\n        _mint(msg.sender, _liquidity);\n        emit AddedLiquidity(_amount, _liquidity);\n    }\n\n    function withdraw(uint256 _shares) public {\n        IERC20Upgradeable(address(this)).safeTransferFrom(msg.sender, burnAddress, _shares);\n        emit RemovedLiquidity(2 ether); // Hard code for tests\n    }\n}\n\ncontract MockAcryptosFarm is IAcryptosFarm, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event Deposited(address indexed _want, uint256 indexed _amount);\n    event Withdrew(address indexed _want, uint256 indexed _amount);\n\n    address public burnAddress;\n    address public wantToken;\n\n    function setWantAddress(address _wantToken) public {\n        wantToken = _wantToken;\n    }\n\n    function setBurnAddress(address _burnAddress) public {\n        burnAddress = _burnAddress;\n    }\n\n    function deposit(address _lpToken, uint256 _amount) public {\n        IERC20Upgradeable(wantToken).safeTransferFrom(msg.sender, burnAddress, _amount);\n        emit Deposited(_lpToken, _amount);\n    }\n\n    function withdraw(address _lpToken, uint256 _amount) public {\n        IMockERC20Upgradeable(wantToken).mint(msg.sender, _amount);\n        emit Withdrew(_lpToken, _amount);\n    }\n}\n\ncontract MockBUSD is MockERC20Upgradeable {}\ncontract MockACS is MockERC20Upgradeable {}",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        10696
      ],
      "FundManagement": [
        10672
      ],
      "IAMMFarm": [
        10213
      ],
      "IAMMRouter01": [
        10521
      ],
      "IAMMRouter02": [
        10609
      ],
      "IAcryptosFarm": [
        10626
      ],
      "IAcryptosVault": [
        10639
      ],
      "IAsset": [
        10663
      ],
      "IBalancerVault": [
        10766
      ],
      "IERC20": [
        4050
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        10925
      ],
      "IMockERC20Upgradeable": [
        13690
      ],
      "IStargateReceiver": [
        10991
      ],
      "IVault": [
        11183
      ],
      "IZorroControllerXChain": [
        11786
      ],
      "IZorroControllerXChainBase": [
        11554
      ],
      "IZorroControllerXChainDeposit": [
        11607
      ],
      "IZorroControllerXChainEarn": [
        11683
      ],
      "IZorroControllerXChainReceiver": [
        11774
      ],
      "IZorroControllerXChainWithdraw": [
        11762
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        10684
      ],
      "MockACS": [
        20173
      ],
      "MockAcryptosFarm": [
        20167
      ],
      "MockAcryptosVault": [
        20077
      ],
      "MockBUSD": [
        20170
      ],
      "MockERC20Upgradeable": [
        13708
      ],
      "MockUSDC": [
        13711
      ],
      "MockVaultAcryptosSingle": [
        19977
      ],
      "MockVaultFactoryAcryptosSingle": [
        19920
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        11893
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        12161
      ],
      "SafeSwapParams": [
        12183
      ],
      "SafeSwapUni": [
        11992
      ],
      "SingleSwap": [
        10658
      ],
      "SwapKind": [
        10661
      ],
      "VaultAcryptosSingle": [
        15340
      ],
      "VaultBase": [
        19913
      ],
      "VaultFactoryAcryptosSingle": [
        13800
      ]
    },
    "id": 20174,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19915,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:76"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultAcryptosSingle.sol",
        "file": "../VaultAcryptosSingle.sol",
        "id": 19916,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20174,
        "sourceUnit": 15341,
        "src": "58:36:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 19917,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20174,
        "sourceUnit": 13712,
        "src": "96:42:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19918,
              "name": "VaultFactoryAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13800,
              "src": "183:26:76"
            },
            "id": 19919,
            "nodeType": "InheritanceSpecifier",
            "src": "183:26:76"
          }
        ],
        "canonicalName": "MockVaultFactoryAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19920,
        "linearizedBaseContracts": [
          19920,
          13800,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryAcryptosSingle",
        "nameLocation": "149:30:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "140:78:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19921,
              "name": "VaultAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15340,
              "src": "256:19:76"
            },
            "id": 19922,
            "nodeType": "InheritanceSpecifier",
            "src": "256:19:76"
          }
        ],
        "canonicalName": "MockVaultAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19977,
        "linearizedBaseContracts": [
          19977,
          15340,
          19913,
          434,
          493,
          169,
          1718,
          323,
          11183
        ],
        "name": "MockVaultAcryptosSingle",
        "nameLocation": "229:23:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19941,
              "nodeType": "Block",
              "src": "462:98:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19935,
                        "name": "_earnedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19924,
                        "src": "490:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19936,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19926,
                        "src": "505:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19937,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19928,
                        "src": "519:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19938,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19931,
                        "src": "546:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19934,
                      "name": "_swapEarnedToUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15339
                      ],
                      "referencedDeclaration": 15339,
                      "src": "472:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:81:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19940,
                  "nodeType": "ExpressionStatement",
                  "src": "472:81:76"
                }
              ]
            },
            "functionSelector": "13303335",
            "id": 19942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEarnedToUSDC",
            "nameLocation": "291:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19924,
                  "mutability": "mutable",
                  "name": "_earnedAmount",
                  "nameLocation": "325:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "317:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19926,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "356:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "348:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19928,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "386:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "378:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19931,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "442:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "421:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19930,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19929,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "421:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "421:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:147:76"
            },
            "returnParameters": {
              "id": 19933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:76"
            },
            "scope": 19977,
            "src": "282:278:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19958,
              "nodeType": "Block",
              "src": "709:77:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19953,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19944,
                        "src": "736:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19954,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19946,
                        "src": "745:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19955,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19949,
                        "src": "772:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19952,
                      "name": "_revShareOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15247
                      ],
                      "referencedDeclaration": 15247,
                      "src": "719:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:60:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19957,
                  "nodeType": "ExpressionStatement",
                  "src": "719:60:76"
                }
              ]
            },
            "functionSelector": "b6b41a8b",
            "id": 19959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revShareOnChain",
            "nameLocation": "575:15:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19944,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "608:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "600:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19946,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "633:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "625:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19949,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "689:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "668:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19948,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19947,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "668:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "668:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:111:76"
            },
            "returnParameters": {
              "id": 19951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:76"
            },
            "scope": 19977,
            "src": "566:220:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19975,
              "nodeType": "Block",
              "src": "934:76:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19970,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19961,
                        "src": "960:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19971,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19963,
                        "src": "969:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19972,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19966,
                        "src": "996:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19969,
                      "name": "_buybackOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15165
                      ],
                      "referencedDeclaration": 15165,
                      "src": "944:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:59:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19974,
                  "nodeType": "ExpressionStatement",
                  "src": "944:59:76"
                }
              ]
            },
            "functionSelector": "009b81db",
            "id": 19976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buybackOnChain",
            "nameLocation": "801:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19961,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "833:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "825:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19963,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "858:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "850:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19966,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "914:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "893:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19965,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19964,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "893:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "893:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:111:76"
            },
            "returnParameters": {
              "id": 19968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:76"
            },
            "scope": 19977,
            "src": "792:218:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "220:792:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19978,
              "name": "IAcryptosVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10639,
              "src": "1044:14:76"
            },
            "id": 19979,
            "nodeType": "InheritanceSpecifier",
            "src": "1044:14:76"
          },
          {
            "baseName": {
              "id": 19980,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "1060:20:76"
            },
            "id": 19981,
            "nodeType": "InheritanceSpecifier",
            "src": "1060:20:76"
          }
        ],
        "canonicalName": "MockAcryptosVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20077,
        "linearizedBaseContracts": [
          20077,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323,
          10639
        ],
        "name": "MockAcryptosVault",
        "nameLocation": "1023:17:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19985,
            "libraryName": {
              "id": 19982,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "1093:20:76"
            },
            "nodeType": "UsingForDirective",
            "src": "1087:49:76",
            "typeName": {
              "id": 19984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19983,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "1118:17:76"
              },
              "referencedDeclaration": 1184,
              "src": "1118:17:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 19991,
            "name": "AddedLiquidity",
            "nameLocation": "1148:14:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1171:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19991,
                  "src": "1163:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_liquidity",
                  "nameLocation": "1188:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19991,
                  "src": "1180:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:37:76"
            },
            "src": "1142:58:76"
          },
          {
            "anonymous": false,
            "id": 19995,
            "name": "RemovedLiquidity",
            "nameLocation": "1211:16:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1236:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19995,
                  "src": "1228:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:17:76"
            },
            "src": "1205:40:76"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 19997,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1266:6:76",
            "nodeType": "VariableDeclaration",
            "scope": 20077,
            "src": "1251:21:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1251:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 19999,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1293:11:76",
            "nodeType": "VariableDeclaration",
            "scope": 20077,
            "src": "1278:26:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19998,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1278:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20008,
              "nodeType": "Block",
              "src": "1360:32:76",
              "statements": [
                {
                  "expression": {
                    "id": 20006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20004,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19997,
                      "src": "1370:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20005,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20001,
                      "src": "1379:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1370:15:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20007,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:15:76"
                }
              ]
            },
            "functionSelector": "c8479cd6",
            "id": 20009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setToken0Address",
            "nameLocation": "1320:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20001,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1345:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20009,
                  "src": "1337:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:16:76"
            },
            "returnParameters": {
              "id": 20003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:76"
            },
            "scope": 20077,
            "src": "1311:81:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20018,
              "nodeType": "Block",
              "src": "1444:36:76",
              "statements": [
                {
                  "expression": {
                    "id": 20016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20014,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19999,
                      "src": "1454:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20015,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20011,
                      "src": "1468:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1454:19:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20017,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:76"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "1407:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20011,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "1430:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20019,
                  "src": "1422:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:15:76"
            },
            "returnParameters": {
              "id": 20013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:76"
            },
            "scope": 20077,
            "src": "1398:82:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10633
            ],
            "body": {
              "id": 20052,
              "nodeType": "Block",
              "src": "1527:245:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20028,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1580:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1580:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20032,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1600:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                              "typeString": "contract MockAcryptosVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                              "typeString": "contract MockAcryptosVault"
                            }
                          ],
                          "id": 20031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1592:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1592:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1592:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20034,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20021,
                        "src": "1607:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20025,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19997,
                            "src": "1555:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20024,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1537:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:25:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1537:42:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:78:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20036,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:78:76"
                },
                {
                  "assignments": [
                    20038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20038,
                      "mutability": "mutable",
                      "name": "_liquidity",
                      "nameLocation": "1633:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 20052,
                      "src": "1625:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1625:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20040,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 20039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1646:7:76",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1625:28:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20042,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1692:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1692:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20044,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20038,
                        "src": "1704:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20041,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1686:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:29:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20046,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:29:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20048,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20021,
                        "src": "1745:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20049,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20038,
                        "src": "1754:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20047,
                      "name": "AddedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19991,
                      "src": "1730:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:35:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20051,
                  "nodeType": "EmitStatement",
                  "src": "1725:40:76"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 20053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1495:7:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20021,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1511:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20053,
                  "src": "1503:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:17:76"
            },
            "returnParameters": {
              "id": 20023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:76"
            },
            "scope": 20077,
            "src": "1486:286:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10638
            ],
            "body": {
              "id": 20075,
              "nodeType": "Block",
              "src": "1820:163:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20065,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1880:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1880:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20067,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19999,
                        "src": "1892:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20068,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20055,
                        "src": "1905:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 20061,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1856:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              ],
                              "id": 20060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1848:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20059,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1848:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 20062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1848:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20058,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1830:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1830:49:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:83:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20070,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:83:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 20072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:7:76",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 20071,
                      "name": "RemovedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19995,
                      "src": "1928:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:25:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20074,
                  "nodeType": "EmitStatement",
                  "src": "1923:30:76"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 20076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1787:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20055,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1804:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20076,
                  "src": "1796:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1795:17:76"
            },
            "returnParameters": {
              "id": 20057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:0:76"
            },
            "scope": 20077,
            "src": "1778:205:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "1014:971:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20078,
              "name": "IAcryptosFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10626,
              "src": "2016:13:76"
            },
            "id": 20079,
            "nodeType": "InheritanceSpecifier",
            "src": "2016:13:76"
          },
          {
            "baseName": {
              "id": 20080,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2031:20:76"
            },
            "id": 20081,
            "nodeType": "InheritanceSpecifier",
            "src": "2031:20:76"
          }
        ],
        "canonicalName": "MockAcryptosFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20167,
        "linearizedBaseContracts": [
          20167,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323,
          10626
        ],
        "name": "MockAcryptosFarm",
        "nameLocation": "1996:16:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20085,
            "libraryName": {
              "id": 20082,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "2064:20:76"
            },
            "nodeType": "UsingForDirective",
            "src": "2058:49:76",
            "typeName": {
              "id": 20084,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20083,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "2089:17:76"
              },
              "referencedDeclaration": 1184,
              "src": "2089:17:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 20091,
            "name": "Deposited",
            "nameLocation": "2119:9:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20087,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2145:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20091,
                  "src": "2129:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20089,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2168:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20091,
                  "src": "2152:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:48:76"
            },
            "src": "2113:64:76"
          },
          {
            "anonymous": false,
            "id": 20097,
            "name": "Withdrew",
            "nameLocation": "2188:8:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20093,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2213:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20097,
                  "src": "2197:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20095,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2236:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20097,
                  "src": "2220:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2196:48:76"
            },
            "src": "2182:63:76"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 20099,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "2266:11:76",
            "nodeType": "VariableDeclaration",
            "scope": 20167,
            "src": "2251:26:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20098,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2251:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 20101,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "2298:9:76",
            "nodeType": "VariableDeclaration",
            "scope": 20167,
            "src": "2283:24:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20100,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2283:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20110,
              "nodeType": "Block",
              "src": "2365:39:76",
              "statements": [
                {
                  "expression": {
                    "id": 20108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20106,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20101,
                      "src": "2375:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20107,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20103,
                      "src": "2387:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2375:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20109,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:22:76"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 20111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "2323:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20103,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "2346:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20111,
                  "src": "2338:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2337:20:76"
            },
            "returnParameters": {
              "id": 20105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2365:0:76"
            },
            "scope": 20167,
            "src": "2314:90:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20120,
              "nodeType": "Block",
              "src": "2463:43:76",
              "statements": [
                {
                  "expression": {
                    "id": 20118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20116,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20099,
                      "src": "2473:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20117,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20113,
                      "src": "2487:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2473:26:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20119,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:26:76"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "2419:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20113,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "2442:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20121,
                  "src": "2434:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2433:22:76"
            },
            "returnParameters": {
              "id": 20115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2463:0:76"
            },
            "scope": 20167,
            "src": "2410:96:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10618
            ],
            "body": {
              "id": 20143,
              "nodeType": "Block",
              "src": "2571:139:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2627:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2627:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20134,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20099,
                        "src": "2639:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20135,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20125,
                        "src": "2652:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20129,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20101,
                            "src": "2599:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20128,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "2581:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2581:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "2581:45:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:79:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20137,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:79:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20139,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20123,
                        "src": "2685:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20140,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20125,
                        "src": "2695:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20138,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20091,
                      "src": "2675:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:28:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20142,
                  "nodeType": "EmitStatement",
                  "src": "2670:33:76"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 20144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2521:7:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20123,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2537:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20144,
                  "src": "2529:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20125,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2555:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20144,
                  "src": "2547:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2528:35:76"
            },
            "returnParameters": {
              "id": 20127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:0:76"
            },
            "scope": 20167,
            "src": "2512:198:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10625
            ],
            "body": {
              "id": 20165,
              "nodeType": "Block",
              "src": "2776:117:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20155,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2824:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2824:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20157,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20148,
                        "src": "2836:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20152,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20101,
                            "src": "2808:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20151,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13690,
                          "src": "2786:21:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$13690_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 20153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2786:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$13690",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 20154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13689,
                      "src": "2786:37:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 20158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:58:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20159,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:58:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20161,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20146,
                        "src": "2868:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20162,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20148,
                        "src": "2878:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20160,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20097,
                      "src": "2859:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20164,
                  "nodeType": "EmitStatement",
                  "src": "2854:32:76"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 20166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2725:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20146,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2742:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20166,
                  "src": "2734:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20148,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2760:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20166,
                  "src": "2752:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:35:76"
            },
            "returnParameters": {
              "id": 20150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:0:76"
            },
            "scope": 20167,
            "src": "2716:177:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "1987:908:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20168,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2918:20:76"
            },
            "id": 20169,
            "nodeType": "InheritanceSpecifier",
            "src": "2918:20:76"
          }
        ],
        "canonicalName": "MockBUSD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20170,
        "linearizedBaseContracts": [
          20170,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323
        ],
        "name": "MockBUSD",
        "nameLocation": "2906:8:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "2897:44:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20171,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2962:20:76"
            },
            "id": 20172,
            "nodeType": "InheritanceSpecifier",
            "src": "2962:20:76"
          }
        ],
        "canonicalName": "MockACS",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20173,
        "linearizedBaseContracts": [
          20173,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323
        ],
        "name": "MockACS",
        "nameLocation": "2951:7:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "2942:43:76",
        "usedErrors": []
      }
    ],
    "src": "33:2952:76"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultAcryptosSingle.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        10696
      ],
      "FundManagement": [
        10672
      ],
      "IAMMFarm": [
        10213
      ],
      "IAMMRouter01": [
        10521
      ],
      "IAMMRouter02": [
        10609
      ],
      "IAcryptosFarm": [
        10626
      ],
      "IAcryptosVault": [
        10639
      ],
      "IAsset": [
        10663
      ],
      "IBalancerVault": [
        10766
      ],
      "IERC20": [
        4050
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        10925
      ],
      "IMockERC20Upgradeable": [
        13690
      ],
      "IStargateReceiver": [
        10991
      ],
      "IVault": [
        11183
      ],
      "IZorroControllerXChain": [
        11786
      ],
      "IZorroControllerXChainBase": [
        11554
      ],
      "IZorroControllerXChainDeposit": [
        11607
      ],
      "IZorroControllerXChainEarn": [
        11683
      ],
      "IZorroControllerXChainReceiver": [
        11774
      ],
      "IZorroControllerXChainWithdraw": [
        11762
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        10684
      ],
      "MockACS": [
        20173
      ],
      "MockAcryptosFarm": [
        20167
      ],
      "MockAcryptosVault": [
        20077
      ],
      "MockBUSD": [
        20170
      ],
      "MockERC20Upgradeable": [
        13708
      ],
      "MockUSDC": [
        13711
      ],
      "MockVaultAcryptosSingle": [
        19977
      ],
      "MockVaultFactoryAcryptosSingle": [
        19920
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        11893
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        12161
      ],
      "SafeSwapParams": [
        12183
      ],
      "SafeSwapUni": [
        11992
      ],
      "SingleSwap": [
        10658
      ],
      "SwapKind": [
        10661
      ],
      "VaultAcryptosSingle": [
        15340
      ],
      "VaultBase": [
        19913
      ],
      "VaultFactoryAcryptosSingle": [
        13800
      ]
    },
    "id": 20174,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19915,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:76"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultAcryptosSingle.sol",
        "file": "../VaultAcryptosSingle.sol",
        "id": 19916,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20174,
        "sourceUnit": 15341,
        "src": "58:36:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 19917,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 20174,
        "sourceUnit": 13712,
        "src": "96:42:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19918,
              "name": "VaultFactoryAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13800,
              "src": "183:26:76"
            },
            "id": 19919,
            "nodeType": "InheritanceSpecifier",
            "src": "183:26:76"
          }
        ],
        "canonicalName": "MockVaultFactoryAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19920,
        "linearizedBaseContracts": [
          19920,
          13800,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryAcryptosSingle",
        "nameLocation": "149:30:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "140:78:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19921,
              "name": "VaultAcryptosSingle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15340,
              "src": "256:19:76"
            },
            "id": 19922,
            "nodeType": "InheritanceSpecifier",
            "src": "256:19:76"
          }
        ],
        "canonicalName": "MockVaultAcryptosSingle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19977,
        "linearizedBaseContracts": [
          19977,
          15340,
          19913,
          434,
          493,
          169,
          1718,
          323,
          11183
        ],
        "name": "MockVaultAcryptosSingle",
        "nameLocation": "229:23:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19941,
              "nodeType": "Block",
              "src": "462:98:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19935,
                        "name": "_earnedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19924,
                        "src": "490:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19936,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19926,
                        "src": "505:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19937,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19928,
                        "src": "519:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19938,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19931,
                        "src": "546:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19934,
                      "name": "_swapEarnedToUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15339
                      ],
                      "referencedDeclaration": 15339,
                      "src": "472:17:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:81:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19940,
                  "nodeType": "ExpressionStatement",
                  "src": "472:81:76"
                }
              ]
            },
            "functionSelector": "13303335",
            "id": 19942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEarnedToUSDC",
            "nameLocation": "291:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19924,
                  "mutability": "mutable",
                  "name": "_earnedAmount",
                  "nameLocation": "325:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "317:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19926,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "356:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "348:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19928,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "386:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "378:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19931,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "442:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19942,
                  "src": "421:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19930,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19929,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "421:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "421:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "307:147:76"
            },
            "returnParameters": {
              "id": 19933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:76"
            },
            "scope": 19977,
            "src": "282:278:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19958,
              "nodeType": "Block",
              "src": "709:77:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19953,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19944,
                        "src": "736:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19954,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19946,
                        "src": "745:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19955,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19949,
                        "src": "772:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19952,
                      "name": "_revShareOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15247
                      ],
                      "referencedDeclaration": 15247,
                      "src": "719:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:60:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19957,
                  "nodeType": "ExpressionStatement",
                  "src": "719:60:76"
                }
              ]
            },
            "functionSelector": "b6b41a8b",
            "id": 19959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revShareOnChain",
            "nameLocation": "575:15:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19944,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "608:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "600:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19946,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "633:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "625:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19949,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "689:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19959,
                  "src": "668:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19948,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19947,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "668:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "668:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "590:111:76"
            },
            "returnParameters": {
              "id": 19951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:76"
            },
            "scope": 19977,
            "src": "566:220:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19975,
              "nodeType": "Block",
              "src": "934:76:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19970,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19961,
                        "src": "960:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19971,
                        "name": "_maxMarketMovementAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19963,
                        "src": "969:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19972,
                        "name": "_rates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19966,
                        "src": "996:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                          "typeString": "struct VaultBase.ExchangeRates memory"
                        }
                      ],
                      "id": 19969,
                      "name": "_buybackOnChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15165
                      ],
                      "referencedDeclaration": 15165,
                      "src": "944:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ExchangeRates_$19067_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct VaultBase.ExchangeRates memory)"
                      }
                    },
                    "id": 19973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:59:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19974,
                  "nodeType": "ExpressionStatement",
                  "src": "944:59:76"
                }
              ]
            },
            "functionSelector": "009b81db",
            "id": 19976,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buybackOnChain",
            "nameLocation": "801:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19961,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "833:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "825:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19963,
                  "mutability": "mutable",
                  "name": "_maxMarketMovementAllowed",
                  "nameLocation": "858:25:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "850:33:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19966,
                  "mutability": "mutable",
                  "name": "_rates",
                  "nameLocation": "914:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19976,
                  "src": "893:27:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeRates_$19067_memory_ptr",
                    "typeString": "struct VaultBase.ExchangeRates"
                  },
                  "typeName": {
                    "id": 19965,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19964,
                      "name": "ExchangeRates",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19067,
                      "src": "893:13:76"
                    },
                    "referencedDeclaration": 19067,
                    "src": "893:13:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeRates_$19067_storage_ptr",
                      "typeString": "struct VaultBase.ExchangeRates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:111:76"
            },
            "returnParameters": {
              "id": 19968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:76"
            },
            "scope": 19977,
            "src": "792:218:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "220:792:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19978,
              "name": "IAcryptosVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10639,
              "src": "1044:14:76"
            },
            "id": 19979,
            "nodeType": "InheritanceSpecifier",
            "src": "1044:14:76"
          },
          {
            "baseName": {
              "id": 19980,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "1060:20:76"
            },
            "id": 19981,
            "nodeType": "InheritanceSpecifier",
            "src": "1060:20:76"
          }
        ],
        "canonicalName": "MockAcryptosVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20077,
        "linearizedBaseContracts": [
          20077,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323,
          10639
        ],
        "name": "MockAcryptosVault",
        "nameLocation": "1023:17:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19985,
            "libraryName": {
              "id": 19982,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "1093:20:76"
            },
            "nodeType": "UsingForDirective",
            "src": "1087:49:76",
            "typeName": {
              "id": 19984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19983,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "1118:17:76"
              },
              "referencedDeclaration": 1184,
              "src": "1118:17:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 19991,
            "name": "AddedLiquidity",
            "nameLocation": "1148:14:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1171:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19991,
                  "src": "1163:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_liquidity",
                  "nameLocation": "1188:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19991,
                  "src": "1180:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:37:76"
            },
            "src": "1142:58:76"
          },
          {
            "anonymous": false,
            "id": 19995,
            "name": "RemovedLiquidity",
            "nameLocation": "1211:16:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1236:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 19995,
                  "src": "1228:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:17:76"
            },
            "src": "1205:40:76"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 19997,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1266:6:76",
            "nodeType": "VariableDeclaration",
            "scope": 20077,
            "src": "1251:21:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1251:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 19999,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1293:11:76",
            "nodeType": "VariableDeclaration",
            "scope": 20077,
            "src": "1278:26:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19998,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1278:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20008,
              "nodeType": "Block",
              "src": "1360:32:76",
              "statements": [
                {
                  "expression": {
                    "id": 20006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20004,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19997,
                      "src": "1370:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20005,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20001,
                      "src": "1379:6:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1370:15:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20007,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:15:76"
                }
              ]
            },
            "functionSelector": "c8479cd6",
            "id": 20009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setToken0Address",
            "nameLocation": "1320:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20001,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1345:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20009,
                  "src": "1337:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:16:76"
            },
            "returnParameters": {
              "id": 20003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:76"
            },
            "scope": 20077,
            "src": "1311:81:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20018,
              "nodeType": "Block",
              "src": "1444:36:76",
              "statements": [
                {
                  "expression": {
                    "id": 20016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20014,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19999,
                      "src": "1454:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20015,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20011,
                      "src": "1468:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1454:19:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20017,
                  "nodeType": "ExpressionStatement",
                  "src": "1454:19:76"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "1407:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20011,
                  "mutability": "mutable",
                  "name": "_burn",
                  "nameLocation": "1430:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20019,
                  "src": "1422:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:15:76"
            },
            "returnParameters": {
              "id": 20013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:76"
            },
            "scope": 20077,
            "src": "1398:82:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10633
            ],
            "body": {
              "id": 20052,
              "nodeType": "Block",
              "src": "1527:245:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20028,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1580:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1580:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 20032,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1600:4:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                              "typeString": "contract MockAcryptosVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                              "typeString": "contract MockAcryptosVault"
                            }
                          ],
                          "id": 20031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1592:7:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1592:7:76",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1592:13:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20034,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20021,
                        "src": "1607:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20025,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19997,
                            "src": "1555:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20024,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1537:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:25:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1537:42:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:78:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20036,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:78:76"
                },
                {
                  "assignments": [
                    20038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20038,
                      "mutability": "mutable",
                      "name": "_liquidity",
                      "nameLocation": "1633:10:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 20052,
                      "src": "1625:18:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1625:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20040,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 20039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1646:7:76",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1625:28:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20042,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1692:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1692:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20044,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20038,
                        "src": "1704:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20041,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1686:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:29:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20046,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:29:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20048,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20021,
                        "src": "1745:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 20049,
                        "name": "_liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20038,
                        "src": "1754:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20047,
                      "name": "AddedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19991,
                      "src": "1730:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 20050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:35:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20051,
                  "nodeType": "EmitStatement",
                  "src": "1725:40:76"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 20053,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1495:7:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20021,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1511:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20053,
                  "src": "1503:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:17:76"
            },
            "returnParameters": {
              "id": 20023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:76"
            },
            "scope": 20077,
            "src": "1486:286:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10638
            ],
            "body": {
              "id": 20075,
              "nodeType": "Block",
              "src": "1820:163:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20065,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1880:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1880:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20067,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19999,
                        "src": "1892:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20068,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20055,
                        "src": "1905:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 20061,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1856:4:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockAcryptosVault_$20077",
                                  "typeString": "contract MockAcryptosVault"
                                }
                              ],
                              "id": 20060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1848:7:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 20059,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1848:7:76",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 20062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1848:13:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20058,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1830:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1830:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1830:49:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:83:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20070,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:83:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 20072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:7:76",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 20071,
                      "name": "RemovedLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19995,
                      "src": "1928:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:25:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20074,
                  "nodeType": "EmitStatement",
                  "src": "1923:30:76"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 20076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1787:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20055,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nameLocation": "1804:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20076,
                  "src": "1796:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1795:17:76"
            },
            "returnParameters": {
              "id": 20057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:0:76"
            },
            "scope": 20077,
            "src": "1778:205:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "1014:971:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20078,
              "name": "IAcryptosFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10626,
              "src": "2016:13:76"
            },
            "id": 20079,
            "nodeType": "InheritanceSpecifier",
            "src": "2016:13:76"
          },
          {
            "baseName": {
              "id": 20080,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2031:20:76"
            },
            "id": 20081,
            "nodeType": "InheritanceSpecifier",
            "src": "2031:20:76"
          }
        ],
        "canonicalName": "MockAcryptosFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20167,
        "linearizedBaseContracts": [
          20167,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323,
          10626
        ],
        "name": "MockAcryptosFarm",
        "nameLocation": "1996:16:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 20085,
            "libraryName": {
              "id": 20082,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "2064:20:76"
            },
            "nodeType": "UsingForDirective",
            "src": "2058:49:76",
            "typeName": {
              "id": 20084,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20083,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "2089:17:76"
              },
              "referencedDeclaration": 1184,
              "src": "2089:17:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 20091,
            "name": "Deposited",
            "nameLocation": "2119:9:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20087,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2145:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20091,
                  "src": "2129:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20089,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2168:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20091,
                  "src": "2152:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:48:76"
            },
            "src": "2113:64:76"
          },
          {
            "anonymous": false,
            "id": 20097,
            "name": "Withdrew",
            "nameLocation": "2188:8:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20093,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "2213:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20097,
                  "src": "2197:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20095,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2236:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20097,
                  "src": "2220:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2196:48:76"
            },
            "src": "2182:63:76"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 20099,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "2266:11:76",
            "nodeType": "VariableDeclaration",
            "scope": 20167,
            "src": "2251:26:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20098,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2251:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 20101,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "2298:9:76",
            "nodeType": "VariableDeclaration",
            "scope": 20167,
            "src": "2283:24:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20100,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2283:7:76",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20110,
              "nodeType": "Block",
              "src": "2365:39:76",
              "statements": [
                {
                  "expression": {
                    "id": 20108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20106,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20101,
                      "src": "2375:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20107,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20103,
                      "src": "2387:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2375:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20109,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:22:76"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 20111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "2323:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20103,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "2346:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20111,
                  "src": "2338:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2337:20:76"
            },
            "returnParameters": {
              "id": 20105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2365:0:76"
            },
            "scope": 20167,
            "src": "2314:90:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20120,
              "nodeType": "Block",
              "src": "2463:43:76",
              "statements": [
                {
                  "expression": {
                    "id": 20118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20116,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20099,
                      "src": "2473:11:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20117,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20113,
                      "src": "2487:12:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2473:26:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20119,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:26:76"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 20121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "2419:14:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20113,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "2442:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20121,
                  "src": "2434:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2433:22:76"
            },
            "returnParameters": {
              "id": 20115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2463:0:76"
            },
            "scope": 20167,
            "src": "2410:96:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10618
            ],
            "body": {
              "id": 20143,
              "nodeType": "Block",
              "src": "2571:139:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2627:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2627:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20134,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20099,
                        "src": "2639:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20135,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20125,
                        "src": "2652:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20129,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20101,
                            "src": "2599:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20128,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "2581:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 20130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2581:28:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 20131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "2581:45:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 20136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:79:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20137,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:79:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20139,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20123,
                        "src": "2685:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20140,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20125,
                        "src": "2695:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20138,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20091,
                      "src": "2675:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:28:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20142,
                  "nodeType": "EmitStatement",
                  "src": "2670:33:76"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 20144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2521:7:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20123,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2537:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20144,
                  "src": "2529:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20125,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2555:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20144,
                  "src": "2547:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2528:35:76"
            },
            "returnParameters": {
              "id": 20127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2571:0:76"
            },
            "scope": 20167,
            "src": "2512:198:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10625
            ],
            "body": {
              "id": 20165,
              "nodeType": "Block",
              "src": "2776:117:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 20155,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2824:3:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 20156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2824:10:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20157,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20148,
                        "src": "2836:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 20152,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20101,
                            "src": "2808:9:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 20151,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13690,
                          "src": "2786:21:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$13690_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 20153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2786:32:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$13690",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 20154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13689,
                      "src": "2786:37:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 20158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:58:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20159,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:58:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20161,
                        "name": "_lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20146,
                        "src": "2868:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20162,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20148,
                        "src": "2878:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20160,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20097,
                      "src": "2859:8:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20164,
                  "nodeType": "EmitStatement",
                  "src": "2854:32:76"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 20166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2725:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20146,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nameLocation": "2742:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20166,
                  "src": "2734:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20148,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2760:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 20166,
                  "src": "2752:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:35:76"
            },
            "returnParameters": {
              "id": 20150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:0:76"
            },
            "scope": 20167,
            "src": "2716:177:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 20174,
        "src": "1987:908:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20168,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2918:20:76"
            },
            "id": 20169,
            "nodeType": "InheritanceSpecifier",
            "src": "2918:20:76"
          }
        ],
        "canonicalName": "MockBUSD",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20170,
        "linearizedBaseContracts": [
          20170,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323
        ],
        "name": "MockBUSD",
        "nameLocation": "2906:8:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "2897:44:76",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20171,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13708,
              "src": "2962:20:76"
            },
            "id": 20172,
            "nodeType": "InheritanceSpecifier",
            "src": "2962:20:76"
          }
        ],
        "canonicalName": "MockACS",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 20173,
        "linearizedBaseContracts": [
          20173,
          13708,
          1106,
          1209,
          13690,
          1184,
          1718,
          323
        ],
        "name": "MockACS",
        "nameLocation": "2951:7:76",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 20174,
        "src": "2942:43:76",
        "usedErrors": []
      }
    ],
    "src": "33:2952:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "1651671423946": {
      "events": {},
      "links": {},
      "address": "0x88808EB5E2fa35d43A9D4C022d66E670B83DaA26",
      "transactionHash": "0x65dcdf81a39c8692295e05e28bace0a041ad860d9f00d307c7694f9527b617c1"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-05-04T15:04:43.016Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}