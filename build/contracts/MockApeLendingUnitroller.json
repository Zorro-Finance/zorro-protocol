{
  "contractName": "MockApeLendingUnitroller",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationIncentiveMantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeCollateralUSDCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "activeCollateralCTokenUsage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationIncentiveMantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeCollateralUSDCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeCollateralCTokenUsage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultApeLending.sol\":\"MockApeLendingUnitroller\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/ApeLending/IRainMaker.sol\":{\"keccak256\":\"0x49891a916f9dac8e99a3abcdd19db24a3a69063a30ab635de8c274c8d64ef267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1aa6e061b37cd30c31b4fed0075cd59d4c9b64a0c9c78d5ece5b75dd7ba661f\",\"dweb:/ipfs/QmXF2TUqjVdrskTEW8bUrEMGxTR4zrVWfCtEHqFB38Q4BM\"]},\"project:/contracts/interfaces/ApeLending/IUnitroller.sol\":{\"keccak256\":\"0x03f1bc9fe78d680d8aceaa72446eabbc140953f1bad72100aeaa5bf7515e515b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52ed046c3fe52d8e40eed125d14b9c3f710c9769eaae7ea0aeb254bc95fcca8a\",\"dweb:/ipfs/Qmc1rv6seH9Uu6h4Mi6ABzsHAMyDVxGdhLqyZJdMzw45Bm\"]},\"project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol\":{\"keccak256\":\"0xda9dd25da2670def30beb473d7aa28c93203046142c6febf550da390cbe6de61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f89b4bad141dca9e584ca0c2269c2a5ad35512f91eb367b1496c69bd8e0377c5\",\"dweb:/ipfs/QmXPVgB7P8RSGRYVWTf5qzLZbBArjhp6mPj2KLDNC39xgC\"]},\"project:/contracts/interfaces/Benqi/IUnitroller.sol\":{\"keccak256\":\"0x3abbfdaf5b897c1b17aaffd370f9777a8471dce408ef394fecc9c899feb08e2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36da0f0f95ef9ec6abb5ae37e115ee861ab54ca8988e5a6533ff237e844ce02\",\"dweb:/ipfs/QmZ9Wd1ut5t4AQMpzQk2CDvB24BtsAPYEe8ks72ZwwGMD9\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xa1a158e676f2b6a24680fbed4f1aec74d08c69719d9bc39a8efeaaa063b15974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://500d6fcba8e6476a539b9351797e2e4646c4e7e3fa72694f7628b871cd669102\",\"dweb:/ipfs/QmeW3gYAh58ebumDgiX1Fa8NDK9ghSCDMG5tNnQjyKG3Hs\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Lending/ILendingToken.sol\":{\"keccak256\":\"0x45ad85de2b54a72284762da24cadd5a695f3a143d109acae569c8e9ae55a3a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a631c9ffc0e03017028becd66998715a8c02bc83c62ae2f9ee40df72b578b3\",\"dweb:/ipfs/QmR48bzWJhZTp7pvUvQPA4h7hFmnDujr7HiKxcARDpVwvt\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0xe17ccabab650cbb65082c21ff539e47822e3811021e7dc768207afabf0d5e30b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecdc2ecec34bb31b3d7f04bb68bc601638bacb7ad287fa9c9ca8d18b2b9ed96\",\"dweb:/ipfs/QmeLj3cBLGFmyZLPYk1nTQvj5bUz2LFEaef1KS8uKS6ujB\"]},\"project:/contracts/vaults/VaultApeLending.sol\":{\"keccak256\":\"0xe9d242ca093f2a205d430243c387beeea16c877d4956e616e0de4c5253754390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35a7ecc33ab4d35f026ffba1ac0ec11511f720d4b969dabb68597ce8e16fac1c\",\"dweb:/ipfs/QmdPrbZTGfSzxggvXb1QVH9g6WBzPQsigBPeEHKu8zWMsu\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0xfd19f00b52477433e2c355e8ae78ef7aeba97af6e33209029515a3625862abbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6784f31cf7e461f731d052ae1b1bf2165f895b516d4632d0016f04017d1febd\",\"dweb:/ipfs/QmPs7Uiav3Ex5oqQ4xMcNsZwEREPTSWnoPxRgocBuW2zXT\"]},\"project:/contracts/vaults/_VaultLending.sol\":{\"keccak256\":\"0x8687b4ce226bb2256c8dc2868b5301c2789c33c6a78b069dd221668383d2747f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d584f6d1c51033c1bd8b996120c19bf66c791aede5adc473b4883c30d445b3a2\",\"dweb:/ipfs/QmZP9jgKWBaKrkSRPVuBinFKyEwmyiX6SyCU7mcr4nd3u7\"]},\"project:/contracts/vaults/actions/VaultActionsBenqiLending.sol\":{\"keccak256\":\"0xa12f51b7626d6a7fbe681eb5b08981fa2bcb945b381287412ff561c5ac54359a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9b1f0be3128e4547a7a96eb3dc645cc20f83d331fc56c37eb27633cc542a87\",\"dweb:/ipfs/Qmdi4RffGDMmXhx3PR9MkYUVhwsq5JrphLLx5RoXgUKpkg\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0xd06c45d939cdf6488e49be6ad9beef8f5e835ab1407c96a149acf4deb2c00eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c27ae3c9a1ef76ba3c3c41680f557a8055e614a74602ad0a3c8bd90bc9b13172\",\"dweb:/ipfs/QmU9Rvp5gbBBRsxmKFxprsUpQeNgY2XouSBTWs8DmEFFK2\"]},\"project:/contracts/vaults/actions/_VaultActionsLending.sol\":{\"keccak256\":\"0x108382375c83caae344f932cbd9093db3bbda9fe30cf74424c0ef5dee7f4b92b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e0554e9bb7d33b5ed10bc78dcf735da622df82ce0cf2f75dfb644df8354a6d\",\"dweb:/ipfs/QmfWTHojfbE2Bnxow71qznzUwbBBqmK5ixAWHpf7G1HE8S\"]},\"project:/contracts/vaults/mocks/MockVaultApeLending.sol\":{\"keccak256\":\"0x5330ba3a36de81d2dce1a3d861603c805d1687d514a730b1b57ca27033a62ce2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4f3468f10e1563e182fc6ddb98c0d59b58e9a7187f080bdc8bfd875714ef6a8\",\"dweb:/ipfs/QmebQX5XiHycxBA5C1BjEcBcVRcMYFmLLnGN5E6GHYx347\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061010a806100206000396000f3fe6080604052348015600f57600080fd5b50600436106044577c010000000000000000000000000000000000000000000000000000000060003504638e8f294b81146049575b600080fd5b606660543660046099565b60008060008060008091939550919395565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c00160405180910390f35b60006020828403121560aa57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460cd57600080fd5b939250505056fea264697066735822122027b9e0f924ed988b08ae7232f4440e9405b8e9ee6309c916f82d972d81c8243964736f6c634300080a0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b50600436106044577c010000000000000000000000000000000000000000000000000000000060003504638e8f294b81146049575b600080fd5b606660543660046099565b60008060008060008091939550919395565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c00160405180910390f35b60006020828403121560aa57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460cd57600080fd5b939250505056fea264697066735822122027b9e0f924ed988b08ae7232f4440e9405b8e9ee6309c916f82d972d81c8243964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:875:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:123",
                "type": ""
              }
            ],
            "src": "14:309:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:310:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "585:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "596:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "581:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "573:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "641:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "634:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "634:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "627:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "609:41:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "670:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "681:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "686:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "659:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "659:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "713:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "724:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "729:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "702:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "702:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "756:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "767:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "772:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "810:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "795:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "795:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "816:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "788:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "788:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:19:123"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "860:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "832:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "832:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "503:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "511:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "519:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "527:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "535:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "543:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "554:4:123",
                "type": ""
              }
            ],
            "src": "328:545:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "480:319:118:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "480:319:118:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:252;;;;;;:::i;:::-;598:13;613:32;647:33;682:36;720:30;752:35;545:252;;;;;;;;;;;;634:14:123;;627:22;609:41;;681:2;666:18;;659:34;;;;709:18;;;702:34;;;;767:2;752:18;;745:34;810:3;795:19;;788:35;854:3;839:19;;832:35;596:3;581:19;545:252:118;;;;;;;14:309:123;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:123:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultApeLending.sol\";\n\nimport \"../../interfaces/Lending/ILendingToken.sol\";\n\nimport \"../../interfaces/ApeLending/IRainMaker.sol\";\n\nimport \"../../interfaces/ApeLending/IUnitroller.sol\";\n\ncontract MockVaultApeLending is VaultApeLending {\n    // TODO: fill in necessary methods to be able to run tests\n}\n\ncontract MockApeLendingRainMaker is IRainMaker {\n    function claimComp(address holder) external {\n\n    }\n}\n\ncontract MockApeLendingUnitroller is IUnitrollerApeLending {\n    function markets ( address ) external view returns ( bool isListed, uint256 collateralFactorMantissa, uint256 liquidationFactorMantissa, uint256 liquidationIncentiveMantissa, uint256 activeCollateralUSDCap, uint256 activeCollateralCTokenUsage) {\n\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultApeLending.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultApeLending.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13438
      ],
      "IAMMRouter02": [
        13526
      ],
      "IAlpacaVault": [
        12874
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12839
      ],
      "ILayerZeroReceiver": [
        14629
      ],
      "ILendingToken": [
        14841
      ],
      "IQiTokenSaleDistributor": [
        13021
      ],
      "IRainMaker": [
        12995
      ],
      "IStargateReceiver": [
        14876
      ],
      "IUnitrollerApeLending": [
        13015
      ],
      "IUnitrollerBenqi": [
        13070
      ],
      "IVault": [
        13899
      ],
      "IZorroControllerXChain": [
        14470
      ],
      "IZorroControllerXChainBase": [
        14311
      ],
      "IZorroControllerXChainDeposit": [
        14345
      ],
      "IZorroControllerXChainEarn": [
        14403
      ],
      "IZorroControllerXChainReceiver": [
        14458
      ],
      "IZorroControllerXChainWithdraw": [
        14446
      ],
      "Initializable": [
        1774
      ],
      "MockApeLendingRainMaker": [
        28745
      ],
      "MockApeLendingUnitroller": [
        28766
      ],
      "MockVaultApeLending": [
        28736
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15499
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapParams": [
        15716
      ],
      "SafeSwapUni": [
        15698
      ],
      "VaultActions": [
        26967
      ],
      "VaultActionsBenqiLending": [
        25198
      ],
      "VaultActionsLending": [
        27475
      ],
      "VaultApeLending": [
        18923
      ],
      "VaultApeLendingETH": [
        18926
      ],
      "VaultBase": [
        22802
      ],
      "VaultLending": [
        24722
      ]
    },
    "id": 28767,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28729,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:118"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultApeLending.sol",
        "file": "../VaultApeLending.sol",
        "id": 28730,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28767,
        "sourceUnit": 18927,
        "src": "58:32:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Lending/ILendingToken.sol",
        "file": "../../interfaces/Lending/ILendingToken.sol",
        "id": 28731,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28767,
        "sourceUnit": 14842,
        "src": "92:52:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ApeLending/IRainMaker.sol",
        "file": "../../interfaces/ApeLending/IRainMaker.sol",
        "id": 28732,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28767,
        "sourceUnit": 12996,
        "src": "146:52:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ApeLending/IUnitroller.sol",
        "file": "../../interfaces/ApeLending/IUnitroller.sol",
        "id": 28733,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28767,
        "sourceUnit": 13016,
        "src": "200:53:118",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28734,
              "name": "VaultApeLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18923,
              "src": "287:15:118"
            },
            "id": 28735,
            "nodeType": "InheritanceSpecifier",
            "src": "287:15:118"
          }
        ],
        "canonicalName": "MockVaultApeLending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28736,
        "linearizedBaseContracts": [
          28736,
          18923,
          24722,
          22802,
          1885,
          1944,
          571,
          3169,
          1774,
          13899
        ],
        "name": "MockVaultApeLending",
        "nameLocation": "264:19:118",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28767,
        "src": "255:114:118",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28737,
              "name": "IRainMaker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12995,
              "src": "407:10:118"
            },
            "id": 28738,
            "nodeType": "InheritanceSpecifier",
            "src": "407:10:118"
          }
        ],
        "canonicalName": "MockApeLendingRainMaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28745,
        "linearizedBaseContracts": [
          28745,
          12995
        ],
        "name": "MockApeLendingRainMaker",
        "nameLocation": "380:23:118",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12994
            ],
            "body": {
              "id": 28743,
              "nodeType": "Block",
              "src": "468:8:118",
              "statements": []
            },
            "functionSelector": "e9af0292",
            "id": 28744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimComp",
            "nameLocation": "433:9:118",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28740,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "451:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28744,
                  "src": "443:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:16:118"
            },
            "returnParameters": {
              "id": 28742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:118"
            },
            "scope": 28745,
            "src": "424:52:118",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28767,
        "src": "371:107:118",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28746,
              "name": "IUnitrollerApeLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13015,
              "src": "517:21:118"
            },
            "id": 28747,
            "nodeType": "InheritanceSpecifier",
            "src": "517:21:118"
          }
        ],
        "canonicalName": "MockApeLendingUnitroller",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28766,
        "linearizedBaseContracts": [
          28766,
          13015
        ],
        "name": "MockApeLendingUnitroller",
        "nameLocation": "489:24:118",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              13014
            ],
            "body": {
              "id": 28764,
              "nodeType": "Block",
              "src": "789:8:118",
              "statements": []
            },
            "functionSelector": "8e8f294b",
            "id": 28765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markets",
            "nameLocation": "554:7:118",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "564:7:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:11:118"
            },
            "returnParameters": {
              "id": 28763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28752,
                  "mutability": "mutable",
                  "name": "isListed",
                  "nameLocation": "603:8:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "598:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28751,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28754,
                  "mutability": "mutable",
                  "name": "collateralFactorMantissa",
                  "nameLocation": "621:24:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "613:32:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28756,
                  "mutability": "mutable",
                  "name": "liquidationFactorMantissa",
                  "nameLocation": "655:25:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "647:33:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28758,
                  "mutability": "mutable",
                  "name": "liquidationIncentiveMantissa",
                  "nameLocation": "690:28:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "682:36:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28760,
                  "mutability": "mutable",
                  "name": "activeCollateralUSDCap",
                  "nameLocation": "728:22:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "720:30:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28762,
                  "mutability": "mutable",
                  "name": "activeCollateralCTokenUsage",
                  "nameLocation": "760:27:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 28765,
                  "src": "752:35:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:192:118"
            },
            "scope": 28766,
            "src": "545:252:118",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28767,
        "src": "480:319:118",
        "usedErrors": []
      }
    ],
    "src": "33:767:118"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-21T01:35:07.672Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}