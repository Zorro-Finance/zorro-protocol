{
  "contractName": "TreasuryVestingWallet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherReleased",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "vestedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "vestedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {TokensReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {TokensReleased} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"title\":\"TreasuryVestingWallet: The vesting wallet for ZOR tokens, redeemable by PoolTreasury\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/finance/PoolTreasury.sol\":\"TreasuryVestingWallet\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/finance/VestingWalletUpgradeable.sol\":{\"keccak256\":\"0xf4049cdf2e2aef1ad78fe20f7a4b879c16fe545c5ffc0c25f73bf6936d76962f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ed225a7b6b8fbe49a8b27b3109b60a9716e7afea2cf80e16f07d4545965ce2\",\"dweb:/ipfs/QmQ53RUaScPvwUmM5A9tXbd9b3GEvbFtTiJmojG2XkUJac\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xd0a917e32d1251a9b2f1dea15e932815d5382e64e6b0a18104664a6cc774cd70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60174d1dd57aba43ec620c5938c37d254afaa0b05ee9c4eeef5b1f7bf7f21423\",\"dweb:/ipfs/QmNennX1XgjkDRpjtPWqxqunVUoGYiJ2EncXo8bS9rahM9\"]},\"project:/contracts/finance/PoolTreasury.sol\":{\"keccak256\":\"0x063d244852f73104cbd2d483c2f872c12091d145f0b0cffda09b1ff2a3830c2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13b51d37fbc484eceb238ee11984673a3c5aa8d38623ac1e864905621b564ea7\",\"dweb:/ipfs/QmTECVG77JYYCpRGwNnLhq95NqnBzzYNAxG1BYFKmEaGf4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b8e806100206000396000f3fe6080604052600436106100a7576000357c010000000000000000000000000000000000000000000000000000000090048063810ec23b11610076578063810ec23b1461014f57806386d1a69f1461016f57806396132521146101845780639852595c14610199578063be9a6555146101cf57600080fd5b80630a17b06b146100b35780630fb5a6b4146100e6578063191655871461010557806338af3eed1461012757600080fd5b366100ae57005b600080fd5b3480156100bf57600080fd5b506100d36100ce366004610966565b610206565b6040519081526020015b60405180910390f35b3480156100f257600080fd5b5060365467ffffffffffffffff166100d3565b34801561011157600080fd5b50610125610120366004610998565b61022b565b005b34801561013357600080fd5b50603554604051600160a060020a0390911681526020016100dd565b34801561015b57600080fd5b506100d361016a3660046109b3565b6102e8565b34801561017b57600080fd5b50610125610397565b34801561019057600080fd5b506033546100d3565b3480156101a557600080fd5b506100d36101b4366004610998565b600160a060020a031660009081526034602052604090205490565b3480156101db57600080fd5b5060355474010000000000000000000000000000000000000000900467ffffffffffffffff166100d3565b600061022561021460335490565b61021f903031610a15565b8361041f565b92915050565b600160a060020a03811660009081526034602052604081205461024e83426102e8565b6102589190610a2d565b600160a060020a038316600090815260346020526040812080549293508392909190610285908490610a15565b9091555050604051818152600160a060020a038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26102e4826102de603554600160a060020a031690565b83610515565b5050565b600160a060020a038216600090815260346020526040812054610390906040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038616906370a0823190602401602060405180830381865afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610a44565b61021f9190610a15565b9392505050565b60006103a260335490565b6103ab42610206565b6103b59190610a2d565b905080603360008282546103c99190610a15565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161041c610416603554600160a060020a031690565b8261059a565b50565b60355460009074010000000000000000000000000000000000000000900467ffffffffffffffff168267ffffffffffffffff16101561046057506000610225565b60365467ffffffffffffffff1660355474010000000000000000000000000000000000000000900467ffffffffffffffff1661049c9190610a15565b8267ffffffffffffffff1611156104b4575081610225565b60365467ffffffffffffffff1660355474010000000000000000000000000000000000000000900467ffffffffffffffff166104fa9067ffffffffffffffff8516610a2d565b6105049085610a5d565b61050e9190610a7c565b9050610225565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105959084906106bf565b505050565b30318111156105f35760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b600082600160a060020a03168260405160006040518083038185875af1925050503d8060008114610640576040519150601f19603f3d011682016040523d82523d6000602084013e610645565b606091505b50509050806105955760405160e560020a62461bcd02815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105ea565b6000610714826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166107a79092919063ffffffff16565b80519091501561059557808060200190518101906107329190610ab7565b6105955760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ea565b60606107b684846000856107be565b949350505050565b6060303183111561083a5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ea565b600160a060020a0385163b6108945760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ea565b60008086600160a060020a031685876040516108b09190610b09565b60006040518083038185875af1925050503d80600081146108ed576040519150601f19603f3d011682016040523d82523d6000602084013e6108f2565b606091505b509150915061090282828661090d565b979650505050505050565b6060831561091c575081610390565b82511561092c5782518084602001fd5b8160405160e560020a62461bcd0281526004016105ea9190610b25565b803567ffffffffffffffff8116811461096157600080fd5b919050565b60006020828403121561097857600080fd5b61039082610949565b8035600160a060020a038116811461096157600080fd5b6000602082840312156109aa57600080fd5b61039082610981565b600080604083850312156109c657600080fd5b6109cf83610981565b91506109dd60208401610949565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610a2857610a286109e6565b500190565b600082821015610a3f57610a3f6109e6565b500390565b600060208284031215610a5657600080fd5b5051919050565b6000816000190483118215151615610a7757610a776109e6565b500290565b600082610ab2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610ac957600080fd5b8151801515811461039057600080fd5b60005b83811015610af4578181015183820152602001610adc565b83811115610b03576000848401525b50505050565b60008251610b1b818460208701610ad9565b9190910192915050565b6020815260008251806020840152610b44816040850160208701610ad9565b601f01601f1916919091016040019291505056fea2646970667358221220c809954ef0c4b467ce1a7d93ad03be9ab9fe10580e33567a41195aad8018be3e64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100a7576000357c010000000000000000000000000000000000000000000000000000000090048063810ec23b11610076578063810ec23b1461014f57806386d1a69f1461016f57806396132521146101845780639852595c14610199578063be9a6555146101cf57600080fd5b80630a17b06b146100b35780630fb5a6b4146100e6578063191655871461010557806338af3eed1461012757600080fd5b366100ae57005b600080fd5b3480156100bf57600080fd5b506100d36100ce366004610966565b610206565b6040519081526020015b60405180910390f35b3480156100f257600080fd5b5060365467ffffffffffffffff166100d3565b34801561011157600080fd5b50610125610120366004610998565b61022b565b005b34801561013357600080fd5b50603554604051600160a060020a0390911681526020016100dd565b34801561015b57600080fd5b506100d361016a3660046109b3565b6102e8565b34801561017b57600080fd5b50610125610397565b34801561019057600080fd5b506033546100d3565b3480156101a557600080fd5b506100d36101b4366004610998565b600160a060020a031660009081526034602052604090205490565b3480156101db57600080fd5b5060355474010000000000000000000000000000000000000000900467ffffffffffffffff166100d3565b600061022561021460335490565b61021f903031610a15565b8361041f565b92915050565b600160a060020a03811660009081526034602052604081205461024e83426102e8565b6102589190610a2d565b600160a060020a038316600090815260346020526040812080549293508392909190610285908490610a15565b9091555050604051818152600160a060020a038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26102e4826102de603554600160a060020a031690565b83610515565b5050565b600160a060020a038216600090815260346020526040812054610390906040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038616906370a0823190602401602060405180830381865afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610a44565b61021f9190610a15565b9392505050565b60006103a260335490565b6103ab42610206565b6103b59190610a2d565b905080603360008282546103c99190610a15565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161041c610416603554600160a060020a031690565b8261059a565b50565b60355460009074010000000000000000000000000000000000000000900467ffffffffffffffff168267ffffffffffffffff16101561046057506000610225565b60365467ffffffffffffffff1660355474010000000000000000000000000000000000000000900467ffffffffffffffff1661049c9190610a15565b8267ffffffffffffffff1611156104b4575081610225565b60365467ffffffffffffffff1660355474010000000000000000000000000000000000000000900467ffffffffffffffff166104fa9067ffffffffffffffff8516610a2d565b6105049085610a5d565b61050e9190610a7c565b9050610225565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105959084906106bf565b505050565b30318111156105f35760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b600082600160a060020a03168260405160006040518083038185875af1925050503d8060008114610640576040519150601f19603f3d011682016040523d82523d6000602084013e610645565b606091505b50509050806105955760405160e560020a62461bcd02815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105ea565b6000610714826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166107a79092919063ffffffff16565b80519091501561059557808060200190518101906107329190610ab7565b6105955760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ea565b60606107b684846000856107be565b949350505050565b6060303183111561083a5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ea565b600160a060020a0385163b6108945760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ea565b60008086600160a060020a031685876040516108b09190610b09565b60006040518083038185875af1925050503d80600081146108ed576040519150601f19603f3d011682016040523d82523d6000602084013e6108f2565b606091505b509150915061090282828661090d565b979650505050505050565b6060831561091c575081610390565b82511561092c5782518084602001fd5b8160405160e560020a62461bcd0281526004016105ea9190610b25565b803567ffffffffffffffff8116811461096157600080fd5b919050565b60006020828403121561097857600080fd5b61039082610949565b8035600160a060020a038116811461096157600080fd5b6000602082840312156109aa57600080fd5b61039082610981565b600080604083850312156109c657600080fd5b6109cf83610981565b91506109dd60208401610949565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610a2857610a286109e6565b500190565b600082821015610a3f57610a3f6109e6565b500390565b600060208284031215610a5657600080fd5b5051919050565b6000816000190483118215151615610a7757610a776109e6565b500290565b600082610ab2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610ac957600080fd5b8151801515811461039057600080fd5b60005b83811015610af4578181015183820152602001610adc565b83811115610b03576000848401525b50505050565b60008251610b1b818460208701610ad9565b9190910192915050565b6020815260008251806020840152610b44816040850160208701610ad9565b601f01601f1916919091016040019291505056fea2646970667358221220c809954ef0c4b467ce1a7d93ad03be9ab9fe10580e33567a41195aad8018be3e64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6222:127",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:127",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "62:123:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "72:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "94:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "81:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "81:20:127"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "72:5:127"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "163:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "172:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "175:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "165:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "165:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "165:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "123:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "134:5:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "141:18:127",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "130:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "130:30:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "120:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:41:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:49:127"
                  },
                  "nodeType": "YulIf",
                  "src": "110:69:127"
                }
              ]
            },
            "name": "abi_decode_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "41:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:127",
                "type": ""
              }
            ],
            "src": "14:171:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "259:115:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "280:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "289:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "276:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "276:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "301:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "272:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "272:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "269:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "330:38:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "358:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "340:17:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:28:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "330:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "225:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "236:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "248:6:127",
                "type": ""
              }
            ],
            "src": "190:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:76:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "490:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "502:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "513:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "498:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "490:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "532:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "543:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "525:25:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "449:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "460:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "471:4:127",
                "type": ""
              }
            ],
            "src": "379:177:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "610:147:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "620:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "642:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "629:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:20:127"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "620:5:127"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "735:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "744:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "737:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "737:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "737:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "671:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "682:5:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "689:42:127",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "678:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "678:54:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "668:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:65:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:73:127"
                  },
                  "nodeType": "YulIf",
                  "src": "658:93:127"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "589:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "600:5:127",
                "type": ""
              }
            ],
            "src": "561:196:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "832:116:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "878:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "887:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "890:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "880:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "880:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "880:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "862:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "849:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "849:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "874:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "842:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "903:39:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "932:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "913:18:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:29:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "798:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "809:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "821:6:127",
                "type": ""
              }
            ],
            "src": "762:186:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:125:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1064:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1076:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1087:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1064:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1106:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1099:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1099:74:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1023:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1034:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1045:4:127",
                "type": ""
              }
            ],
            "src": "953:226:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1270:172:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1316:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1325:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1328:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1318:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1318:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1318:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1291:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1300:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1283:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1280:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1341:39:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1370:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1351:18:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:29:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1389:47:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1421:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1432:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1417:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1417:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "1399:17:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1399:37:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1389:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1228:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1239:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1251:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1259:6:127",
                "type": ""
              }
            ],
            "src": "1184:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1496:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1499:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1489:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1593:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:4:127",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1586:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1586:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1617:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1620:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1610:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1610:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1610:15:127"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1447:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1684:80:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1711:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1713:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1713:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1713:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1700:1:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1707:1:127"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1703:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1703:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1697:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1697:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1694:39:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1742:16:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1753:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1756:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1749:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1742:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1667:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1670:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1676:3:127",
                "type": ""
              }
            ],
            "src": "1636:128:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1818:76:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1840:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1842:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1842:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1842:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1834:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1837:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1831:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1831:8:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1828:34:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1871:17:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1883:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1886:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1879:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "1871:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1800:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1803:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "1809:4:127",
                "type": ""
              }
            ],
            "src": "1769:125:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1980:103:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2026:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2035:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2038:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2028:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2028:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2028:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2001:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2010:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1997:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1997:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2022:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1993:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1990:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2051:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2067:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2061:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1946:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1957:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1969:6:127",
                "type": ""
              }
            ],
            "src": "1899:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2140:116:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2199:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2201:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2201:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2201:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2171:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2164:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2164:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2157:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2157:17:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2179:1:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2190:1:127",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2186:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2186:6:127"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2194:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2182:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2182:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2176:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2176:21:127"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2153:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:45:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2150:71:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2230:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2245:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2248:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2241:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2241:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2230:7:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2119:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2122:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2128:7:127",
                "type": ""
              }
            ],
            "src": "2088:168:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2307:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2338:168:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2359:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2362:77:127",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2352:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2352:88:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2352:88:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2460:1:127",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2463:4:127",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2453:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2453:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2453:15:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2488:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2491:4:127",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2481:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2481:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2481:15:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2327:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2320:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2320:9:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2317:189:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2515:14:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2524:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2527:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2520:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2515:1:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2292:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2295:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2301:1:127",
                "type": ""
              }
            ],
            "src": "2261:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:168:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2679:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2691:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2702:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2687:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2687:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2679:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2721:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2736:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2744:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2714:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2714:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2714:74:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2808:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2819:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2804:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2804:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2824:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2797:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2797:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2797:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2630:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2641:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2649:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2660:4:127",
                "type": ""
              }
            ],
            "src": "2540:297:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3016:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3033:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3044:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3026:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3026:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3026:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3067:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3078:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3063:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3063:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3083:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3056:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3056:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3056:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3106:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3117:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3102:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3102:18:127"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3122:31:127",
                        "type": "",
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3095:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3095:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3095:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3163:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3175:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3186:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3171:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3163:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2993:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3007:4:127",
                "type": ""
              }
            ],
            "src": "2842:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3391:14:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:10:127",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3400:3:127"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3393:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3375:3:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3383:3:127",
                "type": ""
              }
            ],
            "src": "3200:205:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3584:248:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3601:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3612:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3594:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3635:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3646:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3631:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3631:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3651:2:127",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3624:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3624:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3674:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3685:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3670:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3670:18:127"
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3690:34:127",
                        "type": "",
                        "value": "Address: unable to send value, r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3663:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3663:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3663:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3745:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3756:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3741:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3741:18:127"
                      },
                      {
                        "hexValue": "6563697069656e74206d61792068617665207265766572746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3761:28:127",
                        "type": "",
                        "value": "ecipient may have reverted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3734:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3734:56:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3734:56:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3799:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3811:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3822:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3807:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3799:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3561:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3575:4:127",
                "type": ""
              }
            ],
            "src": "3410:422:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3915:199:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3961:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3970:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3973:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3963:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3963:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3963:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3936:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3945:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3932:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3932:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3957:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3928:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3928:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3925:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3986:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4005:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3999:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3999:16:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3990:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4068:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4077:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4080:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4070:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4070:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4070:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4037:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4058:5:127"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4051:6:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4051:13:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4044:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4044:21:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4034:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:32:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4027:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:40:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4024:60:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4093:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4103:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4093:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3881:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3892:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3904:6:127",
                "type": ""
              }
            ],
            "src": "3837:277:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4293:232:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4310:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4321:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4303:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4303:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4303:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4340:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4360:2:127",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4333:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4333:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4333:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4383:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4394:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4379:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4379:18:127"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4399:34:127",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4372:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4372:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4372:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4454:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4465:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4450:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4450:18:127"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4470:12:127",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4443:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4443:40:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4443:40:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4492:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4504:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4515:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4500:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4492:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4270:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4284:4:127",
                "type": ""
              }
            ],
            "src": "4119:406:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4704:228:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4721:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4732:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4714:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4714:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4755:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4766:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4751:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4751:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4771:2:127",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4744:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4744:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4794:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4805:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4790:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4790:18:127"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4810:34:127",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4783:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4783:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4783:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4865:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4876:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4861:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4861:18:127"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4881:8:127",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4854:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:36:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4854:36:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4899:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4911:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4922:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4907:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4899:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4681:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4695:4:127",
                "type": ""
              }
            ],
            "src": "4530:402:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5111:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5128:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5139:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5121:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5121:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5121:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5162:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5173:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5158:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5158:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5178:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5151:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5151:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5151:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5201:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5212:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5197:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5197:18:127"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5217:31:127",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5190:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5190:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5190:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5258:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5270:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5281:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5266:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5258:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5088:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5102:4:127",
                "type": ""
              }
            ],
            "src": "4937:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5348:205:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5358:10:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5367:1:127",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5362:1:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5427:63:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5452:3:127"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5457:1:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5448:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5448:11:127"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5471:3:127"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5476:1:127"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5467:3:127"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5467:11:127"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5461:5:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5461:18:127"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5441:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5441:39:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5441:39:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5388:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5391:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5385:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5385:13:127"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5399:19:127",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5401:15:127",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5410:1:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5413:2:127",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5406:3:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5406:10:127"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5401:1:127"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5381:3:127",
                    "statements": []
                  },
                  "src": "5377:113:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5516:31:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5529:3:127"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5534:6:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5525:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5525:16:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5543:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5518:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5518:27:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5518:27:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5505:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5508:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5502:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5502:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "5499:48:127"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5326:3:127",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5331:3:127",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5336:6:127",
                "type": ""
              }
            ],
            "src": "5295:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5695:137:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5705:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5725:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5719:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5709:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5767:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5775:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5763:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5763:17:127"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5782:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5787:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5741:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:53:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5741:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5803:23:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5814:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5819:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5810:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5810:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5803:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5671:3:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5676:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5687:3:127",
                "type": ""
              }
            ],
            "src": "5558:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5958:262:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5975:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5986:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5968:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5968:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5968:21:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5998:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6018:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6012:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6002:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6045:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6056:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6041:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6041:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6061:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6034:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6034:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6034:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6103:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6111:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6099:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6099:15:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6120:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6131:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6116:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6116:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6136:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6077:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:66:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:66:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6152:62:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6168:9:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6187:6:127"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6195:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6183:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6183:15:127"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6204:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6200:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6200:7:127"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6179:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6179:29:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6164:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6164:45:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6160:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6160:54:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6152:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5927:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5938:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5949:4:127",
                "type": ""
              }
            ],
            "src": "5837:383:127"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 127,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2463:61:49:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2463:61:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:165:4;;;;;;;;;;-1:-1:-1;4025:165:4;;;;;:::i;:::-;;:::i;:::-;;;525:25:127;;;513:2;498:18;4025:165:4;;;;;;;;2587:91;;;;;;;;;;-1:-1:-1;2662:9:4;;;;2587:91;;3550:335;;;;;;;;;;-1:-1:-1;3550:335:4;;;;;:::i;:::-;;:::i;:::-;;2272:97;;;;;;;;;;-1:-1:-1;2350:12:4;;2272:97;;-1:-1:-1;;;;;2350:12:4;;;1099:74:127;;1087:2;1072:18;2272:97:4;953:226:127;4331:213:4;;;;;;;;;;-1:-1:-1;4331:213:4;;;;;:::i;:::-;;:::i;3156:269::-;;;;;;;;;;;;;:::i;2743:91::-;;;;;;;;;;-1:-1:-1;2818:9:4;;2743:91;;2901:116;;;;;;;;;;-1:-1:-1;2901:116:4;;;;;:::i;:::-;-1:-1:-1;;;;;2989:21:4;2963:7;2989:21;;;:14;:21;;;;;;;2901:116;2435:85;;;;;;;;;;-1:-1:-1;2507:6:4;;;;;;;2435:85;;4025:165;4094:7;4120:63;4161:10;2818:9;;;2743:91;4161:10;4137:34;;4145:4;4137:21;:34;:::i;:::-;4173:9;4120:16;:63::i;:::-;4113:70;4025:165;-1:-1:-1;;4025:165:4:o;3550:335::-;-1:-1:-1;;;;;2989:21:4;;3607:18;2989:21;;;:14;:21;;;;;;3628:44;3641:5;3655:15;3628:12;:44::i;:::-;:62;;;;:::i;:::-;-1:-1:-1;;;;;3700:21:4;;;;;;:14;:21;;;;;:35;;3607:83;;-1:-1:-1;3607:83:4;;3700:21;;;:35;;3607:83;;3700:35;:::i;:::-;;;;-1:-1:-1;;3750:32:4;;525:25:127;;;-1:-1:-1;;;;;3750:32:4;;;;;513:2:127;498:18;3750:32:4;;;;;;;3792:86;3844:5;3852:13;2350:12;;-1:-1:-1;;;;;2350:12:4;;2272:97;3852:13;3867:10;3792:33;:86::i;:::-;3597:288;3550:335;:::o;4331:213::-;-1:-1:-1;;;;;2989:21:4;;4415:7;2989:21;;;:14;:21;;;;;;4441:96;;4458:49;;;;;4501:4;4458:49;;;1099:74:127;-1:-1:-1;;;;;4458:34:4;;;;;1072:18:127;;4458:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;4441:96::-;4434:103;4331:213;-1:-1:-1;;;4331:213:4:o;3156:269::-;3200:18;3261:10;2818:9;;;2743:91;3261:10;3221:37;3241:15;3221:12;:37::i;:::-;:50;;;;:::i;:::-;3200:71;;3294:10;3281:9;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;3319:25:4;;525::127;;;3319::4;;513:2:127;498:18;3319:25:4;;;;;;;3354:64;3391:13;2350:12;;-1:-1:-1;;;;;2350:12:4;;2272:97;3391:13;3407:10;3354:28;:64::i;:::-;3190:235;3156:269::o;4738:366::-;2507:6;;4838:7;;2507:6;;;;;4861:9;:19;;;4857:241;;;-1:-1:-1;4903:1:4;4896:8;;4857:241;2662:9;;;;2507:6;;;;;;;4937:20;;;;:::i;:::-;4925:9;:32;;;4921:177;;;-1:-1:-1;4980:15:4;4973:22;;4921:177;2662:9;;;;2507:6;;;;;;;5053:19;;;;;;:::i;:::-;5034:39;;:15;:39;:::i;:::-;5033:54;;;;:::i;:::-;5026:61;;;;745:216:12;895:58;;;-1:-1:-1;;;;;2732:55:127;;895:58:12;;;2714:74:127;2804:18;;;;2797:34;;;895:58:12;;;;;;;;;;2687:18:127;;;;895:58:12;;;;;;;;;;918:23;895:58;;;868:86;;888:5;;868:19;:86::i;:::-;745:216;;;:::o;2423:312:13:-;2520:4;2512:21;:31;-1:-1:-1;2512:31:13;2504:73;;;;-1:-1:-1;;;;;2504:73:13;;3044:2:127;2504:73:13;;;3026:21:127;3083:2;3063:18;;;3056:30;3122:31;3102:18;;;3095:59;3171:18;;2504:73:13;;;;;;;;;2589:12;2607:9;-1:-1:-1;;;;;2607:14:13;2629:6;2607:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:52;;;2658:7;2650:78;;;;-1:-1:-1;;;;;2650:78:13;;3612:2:127;2650:78:13;;;3594:21:127;3651:2;3631:18;;;3624:30;3690:34;3670:18;;;3663:62;3761:28;3741:18;;;3734:56;3807:19;;2650:78:13;3410:422:127;3306:717:12;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;4321:2:127;3921:85:12;;;4303:21:127;4360:2;4340:18;;;4333:30;4399:34;4379:18;;;4372:62;4470:12;4450:18;;;4443:40;4500:19;;3921:85:12;4119:406:127;3872:223:13;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:13:o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;4732:2:127;5148:81:13;;;4714:21:127;4771:2;4751:18;;;4744:30;4810:34;4790:18;;;4783:62;4881:8;4861:18;;;4854:36;4907:19;;5148:81:13;4530:402:127;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;5139:2:127;5239:60:13;;;5121:21:127;5178:2;5158:18;;;5151:30;5217:31;5197:18;;;5190:59;5266:18;;5239:60:13;4937:353:127;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:171:127:-;81:20;;141:18;130:30;;120:41;;110:69;;175:1;172;165:12;110:69;14:171;;;:::o;190:184::-;248:6;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;340:28;358:9;340:28;:::i;561:196::-;629:20;;-1:-1:-1;;;;;678:54:127;;668:65;;658:93;;747:1;744;737:12;762:186;821:6;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;1184:258::-;1251:6;1259;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;1351:29;1370:9;1351:29;:::i;:::-;1341:39;;1399:37;1432:2;1421:9;1417:18;1399:37;:::i;:::-;1389:47;;1184:258;;;;;:::o;1447:184::-;1499:77;1496:1;1489:88;1596:4;1593:1;1586:15;1620:4;1617:1;1610:15;1636:128;1676:3;1707:1;1703:6;1700:1;1697:13;1694:39;;;1713:18;;:::i;:::-;-1:-1:-1;1749:9:127;;1636:128::o;1769:125::-;1809:4;1837:1;1834;1831:8;1828:34;;;1842:18;;:::i;:::-;-1:-1:-1;1879:9:127;;1769:125::o;1899:184::-;1969:6;2022:2;2010:9;2001:7;1997:23;1993:32;1990:52;;;2038:1;2035;2028:12;1990:52;-1:-1:-1;2061:16:127;;1899:184;-1:-1:-1;1899:184:127:o;2088:168::-;2128:7;2194:1;2190;2186:6;2182:14;2179:1;2176:21;2171:1;2164:9;2157:17;2153:45;2150:71;;;2201:18;;:::i;:::-;-1:-1:-1;2241:9:127;;2088:168::o;2261:274::-;2301:1;2327;2317:189;;2362:77;2359:1;2352:88;2463:4;2460:1;2453:15;2491:4;2488:1;2481:15;2317:189;-1:-1:-1;2520:9:127;;2261:274::o;3837:277::-;3904:6;3957:2;3945:9;3936:7;3932:23;3928:32;3925:52;;;3973:1;3970;3963:12;3925:52;4005:9;3999:16;4058:5;4051:13;4044:21;4037:5;4034:32;4024:60;;4080:1;4077;4070:12;5295:258;5367:1;5377:113;5391:6;5388:1;5385:13;5377:113;;;5467:11;;;5461:18;5448:11;;;5441:39;5413:2;5406:10;5377:113;;;5508:6;5505:1;5502:13;5499:48;;;5543:1;5534:6;5529:3;5525:16;5518:27;5499:48;;5295:258;;;:::o;5558:274::-;5687:3;5725:6;5719:13;5741:53;5787:6;5782:3;5775:4;5767:6;5763:17;5741:53;:::i;:::-;5810:16;;;;;5558:274;-1:-1:-1;;5558:274:127:o;5837:383::-;5986:2;5975:9;5968:21;5949:4;6018:6;6012:13;6061:6;6056:2;6045:9;6041:18;6034:34;6077:66;6136:6;6131:2;6120:9;6116:18;6111:2;6103:6;6099:15;6077:66;:::i;:::-;6204:2;6183:15;-1:-1:-1;;6179:29:127;6164:45;;;;6211:2;6160:54;;5837:383;-1:-1:-1;;5837:383:127:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/finance/VestingWalletUpgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\n\n// TODO: Unit tests needed\n\n/// @title PoolTreasury: The treasury pool contract.\ncontract PoolTreasury is Initializable, OwnableUpgradeable {\n    /* Libraries */\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* Constructor */\n    /// @notice Constructor\n    /// @param _zorroTokenAddress The Zorro token address\n    function initialize(\n        address _zorroTokenAddress\n    ) public initializer {\n        // Set Zorro token address\n        ZORRO = _zorroTokenAddress;\n    }\n\n    /* State */\n    address payable public vestingWallet; // Address of TreasuryVestingWallet\n    address public ZORRO; // Address of ZOR token\n\n    /* Setters */\n    function setVestingWallet(address payable _vestingWallet) external onlyOwner {\n        vestingWallet = _vestingWallet;\n    }\n\n    /* Functions */\n\n    /// @notice Withdraws any ERC20 tokens from this contract\n    /// @param _token The ERC20 token to withdraw\n    /// @param _recipient The recipient of the withdrawn funds\n    /// @param _quantity The amount of token to withdraw\n    function withdraw(address _token, address _recipient, uint256 _quantity) public onlyOwner {\n        IERC20Upgradeable(_token).safeTransfer(_recipient, _quantity);\n    }\n\n    /// @notice Withdraws any native ETH from this contract\n    /// @param _recipient The recipient of the withdrawn funds\n    /// @param _quantity The amount of token to withdraw\n    function withdraw(address payable _recipient, uint256 _quantity) public onlyOwner {\n        // TODO: Do we need reentrancy protection?\n        AddressUpgradeable.sendValue(_recipient, _quantity);\n    }\n\n    /// @notice Redeems vested ZOR token on the TreasuryVestingWallet contract to this contract\n    function redeemZOR() public onlyOwner {\n        TreasuryVestingWallet(vestingWallet).release(ZORRO);\n    }\n\n    /// @notice Allow this contract to receive ETH\n    receive() external payable virtual {}\n}\n\n/// @title TreasuryVestingWallet: The vesting wallet for ZOR tokens, redeemable by PoolTreasury\ncontract TreasuryVestingWallet is VestingWalletUpgradeable {}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/finance/PoolTreasury.sol",
  "ast": {
    "absolutePath": "project:/contracts/finance/PoolTreasury.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "ContextUpgradeable": [
        3169
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "Initializable": [
        1774
      ],
      "MathUpgradeable": [
        3516
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PoolTreasury": [
        12425
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "TreasuryVestingWallet": [
        12429
      ],
      "VestingWalletUpgradeable": [
        891
      ]
    },
    "id": 12430,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12323,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:49"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 12324,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12430,
        "sourceUnit": 2885,
        "src": "58:88:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 12325,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12430,
        "sourceUnit": 2636,
        "src": "148:79:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 12326,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12430,
        "sourceUnit": 572,
        "src": "229:75:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/finance/VestingWalletUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/finance/VestingWalletUpgradeable.sol",
        "id": 12327,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12430,
        "sourceUnit": 892,
        "src": "306:82:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "id": 12328,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12430,
        "sourceUnit": 3128,
        "src": "390:74:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12330,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1774,
              "src": "572:13:49"
            },
            "id": 12331,
            "nodeType": "InheritanceSpecifier",
            "src": "572:13:49"
          },
          {
            "baseName": {
              "id": 12332,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 571,
              "src": "587:18:49"
            },
            "id": 12333,
            "nodeType": "InheritanceSpecifier",
            "src": "587:18:49"
          }
        ],
        "canonicalName": "PoolTreasury",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12329,
          "nodeType": "StructuredDocumentation",
          "src": "494:53:49",
          "text": "@title PoolTreasury: The treasury pool contract."
        },
        "fullyImplemented": true,
        "id": 12425,
        "linearizedBaseContracts": [
          12425,
          571,
          3169,
          1774
        ],
        "name": "PoolTreasury",
        "nameLocation": "556:12:49",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12337,
            "libraryName": {
              "id": 12334,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "638:20:49"
            },
            "nodeType": "UsingForDirective",
            "src": "632:49:49",
            "typeName": {
              "id": 12336,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12335,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "663:17:49"
              },
              "referencedDeclaration": 2635,
              "src": "663:17:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "body": {
              "id": 12349,
              "nodeType": "Block",
              "src": "876:78:49",
              "statements": [
                {
                  "expression": {
                    "id": 12347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12345,
                      "name": "ZORRO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12354,
                      "src": "921:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12346,
                      "name": "_zorroTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12340,
                      "src": "929:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "921:26:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12348,
                  "nodeType": "ExpressionStatement",
                  "src": "921:26:49"
                }
              ]
            },
            "documentation": {
              "id": 12338,
              "nodeType": "StructuredDocumentation",
              "src": "709:81:49",
              "text": "@notice Constructor\n @param _zorroTokenAddress The Zorro token address"
            },
            "functionSelector": "c4d66de8",
            "id": 12350,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12343,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12342,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1748,
                  "src": "864:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "864:11:49"
              }
            ],
            "name": "initialize",
            "nameLocation": "804:10:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12340,
                  "mutability": "mutable",
                  "name": "_zorroTokenAddress",
                  "nameLocation": "832:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12350,
                  "src": "824:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:42:49"
            },
            "returnParameters": {
              "id": 12344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "876:0:49"
            },
            "scope": 12425,
            "src": "795:159:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a5ab11d",
            "id": 12352,
            "mutability": "mutable",
            "name": "vestingWallet",
            "nameLocation": "999:13:49",
            "nodeType": "VariableDeclaration",
            "scope": 12425,
            "src": "976:36:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 12351,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "976:15:49",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8c157db2",
            "id": 12354,
            "mutability": "mutable",
            "name": "ZORRO",
            "nameLocation": "1069:5:49",
            "nodeType": "VariableDeclaration",
            "scope": 12425,
            "src": "1054:20:49",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12353,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1054:7:49",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12365,
              "nodeType": "Block",
              "src": "1200:47:49",
              "statements": [
                {
                  "expression": {
                    "id": 12363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12361,
                      "name": "vestingWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12352,
                      "src": "1210:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12362,
                      "name": "_vestingWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12356,
                      "src": "1226:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1210:30:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 12364,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:30:49"
                }
              ]
            },
            "functionSelector": "18d7f9a5",
            "id": 12366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12358,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1190:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1190:9:49"
              }
            ],
            "name": "setVestingWallet",
            "nameLocation": "1132:16:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12356,
                  "mutability": "mutable",
                  "name": "_vestingWallet",
                  "nameLocation": "1165:14:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12366,
                  "src": "1149:30:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:32:49"
            },
            "returnParameters": {
              "id": 12360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:0:49"
            },
            "scope": 12425,
            "src": "1123:124:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12386,
              "nodeType": "Block",
              "src": "1596:78:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12382,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12371,
                        "src": "1645:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12383,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12373,
                        "src": "1657:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12379,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12369,
                            "src": "1624:6:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12378,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1606:17:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 12380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1606:25:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 12381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "1606:38:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 12384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:61:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12385,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:61:49"
                }
              ]
            },
            "documentation": {
              "id": 12367,
              "nodeType": "StructuredDocumentation",
              "src": "1274:227:49",
              "text": "@notice Withdraws any ERC20 tokens from this contract\n @param _token The ERC20 token to withdraw\n @param _recipient The recipient of the withdrawn funds\n @param _quantity The amount of token to withdraw"
            },
            "functionSelector": "d9caed12",
            "id": 12387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12375,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1586:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1586:9:49"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1515:8:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12369,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1532:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12387,
                  "src": "1524:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12371,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "1548:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12387,
                  "src": "1540:18:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12373,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "1568:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12387,
                  "src": "1560:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1523:55:49"
            },
            "returnParameters": {
              "id": 12377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1596:0:49"
            },
            "scope": 12425,
            "src": "1506:168:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12404,
              "nodeType": "Block",
              "src": "1942:119:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12400,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12390,
                        "src": "2032:10:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 12401,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12392,
                        "src": "2044:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12397,
                        "name": "AddressUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3127,
                        "src": "2003:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$3127_$",
                          "typeString": "type(library AddressUpgradeable)"
                        }
                      },
                      "id": 12399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2936,
                      "src": "2003:28:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 12402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:51:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12403,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:51:49"
                }
              ]
            },
            "documentation": {
              "id": 12388,
              "nodeType": "StructuredDocumentation",
              "src": "1680:175:49",
              "text": "@notice Withdraws any native ETH from this contract\n @param _recipient The recipient of the withdrawn funds\n @param _quantity The amount of token to withdraw"
            },
            "functionSelector": "f3fef3a3",
            "id": 12405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1932:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "1932:9:49"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1869:8:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12390,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "1894:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12405,
                  "src": "1878:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 12389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:15:49",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12392,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "1914:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 12405,
                  "src": "1906:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1877:47:49"
            },
            "returnParameters": {
              "id": 12396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:0:49"
            },
            "scope": 12425,
            "src": "1860:201:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12418,
              "nodeType": "Block",
              "src": "2201:68:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12415,
                        "name": "ZORRO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12354,
                        "src": "2256:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12412,
                            "name": "vestingWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12352,
                            "src": "2233:13:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 12411,
                          "name": "TreasuryVestingWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12429,
                          "src": "2211:21:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TreasuryVestingWallet_$12429_$",
                            "typeString": "type(contract TreasuryVestingWallet)"
                          }
                        },
                        "id": 12413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2211:36:49",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TreasuryVestingWallet_$12429",
                          "typeString": "contract TreasuryVestingWallet"
                        }
                      },
                      "id": 12414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 793,
                      "src": "2211:44:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2211:51:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12417,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:51:49"
                }
              ]
            },
            "documentation": {
              "id": 12406,
              "nodeType": "StructuredDocumentation",
              "src": "2067:91:49",
              "text": "@notice Redeems vested ZOR token on the TreasuryVestingWallet contract to this contract"
            },
            "functionSelector": "44e85612",
            "id": 12419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12408,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "2191:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:9:49"
              }
            ],
            "name": "redeemZOR",
            "nameLocation": "2172:9:49",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:2:49"
            },
            "returnParameters": {
              "id": 12410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2201:0:49"
            },
            "scope": 12425,
            "src": "2163:106:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12423,
              "nodeType": "Block",
              "src": "2361:2:49",
              "statements": []
            },
            "documentation": {
              "id": 12420,
              "nodeType": "StructuredDocumentation",
              "src": "2275:46:49",
              "text": "@notice Allow this contract to receive ETH"
            },
            "id": 12424,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:2:49"
            },
            "returnParameters": {
              "id": 12422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2361:0:49"
            },
            "scope": 12425,
            "src": "2326:37:49",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 12430,
        "src": "547:1818:49",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12427,
              "name": "VestingWalletUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 891,
              "src": "2497:24:49"
            },
            "id": 12428,
            "nodeType": "InheritanceSpecifier",
            "src": "2497:24:49"
          }
        ],
        "canonicalName": "TreasuryVestingWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12426,
          "nodeType": "StructuredDocumentation",
          "src": "2367:96:49",
          "text": "@title TreasuryVestingWallet: The vesting wallet for ZOR tokens, redeemable by PoolTreasury"
        },
        "fullyImplemented": true,
        "id": 12429,
        "linearizedBaseContracts": [
          12429,
          891,
          3169,
          1774
        ],
        "name": "TreasuryVestingWallet",
        "nameLocation": "2472:21:49",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 12430,
        "src": "2463:61:49",
        "usedErrors": []
      }
    ],
    "src": "33:2492:49"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-14T04:46:30.431Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "details": "Getter for the beneficiary address."
      },
      "duration()": {
        "details": "Getter for the vesting duration."
      },
      "release()": {
        "details": "Release the native token (ether) that have already vested. Emits a {TokensReleased} event."
      },
      "release(address)": {
        "details": "Release the tokens that have already vested. Emits a {TokensReleased} event."
      },
      "released()": {
        "details": "Amount of eth already released"
      },
      "released(address)": {
        "details": "Amount of token already released"
      },
      "start()": {
        "details": "Getter for the start timestamp."
      },
      "vestedAmount(address,uint64)": {
        "details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
      },
      "vestedAmount(uint64)": {
        "details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
      }
    },
    "title": "TreasuryVestingWallet: The vesting wallet for ZOR tokens, redeemable by PoolTreasury",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}