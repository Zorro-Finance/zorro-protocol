{
  "contractName": "MockAMMToken1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultStandardAMM.sol\":\"MockAMMToken1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0x45fe5b6e09537c84248325b6cb3595aed7752b07425dfe136351234f2d8130dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a71d1520ace64f0bbd75ff6039bb7bb71b0d66e1d153235df4266dafea7f729c\",\"dweb:/ipfs/QmQUXcrczoVskKmcwYKvYkGy2ehtwbVH58tUBqNRG7iW7H\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/IAMMFarm.sol\":{\"keccak256\":\"0x2b2600a84fb56a84ebfbeeadc317c16eed08dd7bbfb19011fb7a76c1093e6504\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8751dd42de042238f176b12a69ec7a5e80e890a8cf6e05bfad4d84532f24c065\",\"dweb:/ipfs/QmbWDH4fwdN6zx61dK6RPkM4bVYUXMBEBfPNzPPJX5vPFa\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IBalancerVault.sol\":{\"keccak256\":\"0xaed146c2eb3b89794becab4737eb4ab12d447222de4b8c4434631dc0b3a7a044\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ed3abd3ac4a22fd98b17c42a3f1367e233b39f92fb522db779add5e62dbfebab\",\"dweb:/ipfs/QmWuogqduPJuMwhkGBc37gxjNgqV8xXCYqH7VMHY6vGz3L\"]},\"project:/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xc8fbc73780d12ff4e45eb04f09c6c65dc2f0967c83442f8921dcd8059773e187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://558ea1af6b64e5b487033fcf1c38f457ebbf919f321f5ec53976a0a3983d941c\",\"dweb:/ipfs/Qmd7jE9MkgkpAfJyLgWyynbGbSueRZVpGEijnyC7cC1hkK\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xf383c9dbe34ffdffe798d9abe4c8d962b28294ed67b4ff9292b15f43cc6d0b65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://936ac5d56936dba5fd4716df06f4cf277b9d6f2ba3662181e8896cf268a7ef75\",\"dweb:/ipfs/QmSdVUYSDqr62WxqMKcxGM1AdU6gF3WaHUMNNSqn52aofL\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0x693fd56f4f59e29c8a13c7f7f300e718a801ff60d90d38d57d8ce27bfee44443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c59e9eef226b88b03c923e6295df062e3ddbf8eb674ff98f22d6fe819c520b7\",\"dweb:/ipfs/QmZnYPDUxKoVWBkbUCGbtUNXEyUqCYVnK34Aeyg7NVedVK\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x0c9292dce8d648bdc9c170a7c46b3573e0fff1873bc8ed2c359b76e2dc004368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c687e4dff0f105d0bc4d7d853791aa87c91b2f8534ee0db5e157818d492dabdb\",\"dweb:/ipfs/QmcYdP7e8txoGaesgzYwNm5SW2vbmsJua1sVbRKe2hJDPy\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]},\"project:/contracts/vaults/VaultStandardAMM.sol\":{\"keccak256\":\"0x51120cc17bbc7b64d7cbe054b29d6adc5532c1fe6db66f777d17fa44d8020fde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ab9b4cec9feb95c7d6141a351dd48ae49606062be84cd28e8318964d1bcf9be\",\"dweb:/ipfs/QmQ33jEKYTBnLKiGWxZvf59pkuymbQjhMygy5VHxoyRKHx\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0xe76156dbd4f699d878d753c08483c053441adf73dc9b052aee456b0eacc03250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee164f07944aa944b614869a097d70df6ded8ce0b0fbba9c880bbd4498a3a77e\",\"dweb:/ipfs/QmZnkp3mjt7tvYorySm85CTJcme1AiW39rdykx4mQ7updc\"]},\"project:/contracts/vaults/mocks/MockVaultStandardAMM.sol\":{\"keccak256\":\"0xb7e8a5c7ec4be8fabcd3f7d2aa633151e61964656a468722ea9d3036735025fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4479a62af3768a59891a199186caba89d95a5e2ae06b56ff4a44a0a6c746bd8\",\"dweb:/ipfs/QmQnn8woxGDB3fPsqsVxQtAC5pfKqUnnmERd3G9yLtvNnr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610818565b60405180910390f35b6100ea6100e5366004610889565b610278565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a3660046108b3565b610290565b604051601281526020016100ce565b6100ea61013c366004610889565b6102b4565b61015461014f366004610889565b6102f3565b005b6100fe6101643660046108ef565b6001600160a01b031660009081526033602052604090205490565b6100c1610301565b6100ea610195366004610889565b610310565b6100ea6101a8366004610889565b6103a7565b6100fe6101bb366004610911565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101f590610944565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610944565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103b5565b5060019392505050565b60003361029e8582856104d9565b6102a985858561056b565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee90879061097f565b6103b5565b6102fd8282610739565b5050565b6060603780546101f590610944565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561039a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102a982868684036103b5565b60003361028681858561056b565b6001600160a01b0383166104175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b6001600160a01b0382166104785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610391565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461056557818110156105585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610391565b61056584848484036103b5565b50505050565b6001600160a01b0383166105cf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610391565b6001600160a01b0382166106315760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610391565b6001600160a01b038316600090815260336020526040902054818110156106a95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610391565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906106e090849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072c91815260200190565b60405180910390a3610565565b6001600160a01b03821661078f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610391565b80603560008282546107a1919061097f565b90915550506001600160a01b038216600090815260336020526040812080548392906107ce90849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561084557858101830151858201604001528201610829565b81811115610857576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461088457600080fd5b919050565b6000806040838503121561089c57600080fd5b6108a58361086d565b946020939093013593505050565b6000806000606084860312156108c857600080fd5b6108d18461086d565b92506108df6020850161086d565b9150604084013590509250925092565b60006020828403121561090157600080fd5b61090a8261086d565b9392505050565b6000806040838503121561092457600080fd5b61092d8361086d565b915061093b6020840161086d565b90509250929050565b600181811c9082168061095857607f821691505b6020821081141561097957634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156109a057634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122080a113a47fdca2859c5633b512fbdd7e2a1e3a6bada9c18c27f47dc663bb633b64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610818565b60405180910390f35b6100ea6100e5366004610889565b610278565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a3660046108b3565b610290565b604051601281526020016100ce565b6100ea61013c366004610889565b6102b4565b61015461014f366004610889565b6102f3565b005b6100fe6101643660046108ef565b6001600160a01b031660009081526033602052604090205490565b6100c1610301565b6100ea610195366004610889565b610310565b6100ea6101a8366004610889565b6103a7565b6100fe6101bb366004610911565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101f590610944565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610944565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103b5565b5060019392505050565b60003361029e8582856104d9565b6102a985858561056b565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee90879061097f565b6103b5565b6102fd8282610739565b5050565b6060603780546101f590610944565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561039a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102a982868684036103b5565b60003361028681858561056b565b6001600160a01b0383166104175760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b6001600160a01b0382166104785760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610391565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461056557818110156105585760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610391565b61056584848484036103b5565b50505050565b6001600160a01b0383166105cf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610391565b6001600160a01b0382166106315760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610391565b6001600160a01b038316600090815260336020526040902054818110156106a95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610391565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906106e090849061097f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072c91815260200190565b60405180910390a3610565565b6001600160a01b03821661078f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610391565b80603560008282546107a1919061097f565b90915550506001600160a01b038216600090815260336020526040812080548392906107ce90849061097f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561084557858101830151858201604001528201610829565b81811115610857576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461088457600080fd5b919050565b6000806040838503121561089c57600080fd5b6108a58361086d565b946020939093013593505050565b6000806000606084860312156108c857600080fd5b6108d18461086d565b92506108df6020850161086d565b9150604084013590509250925092565b60006020828403121561090157600080fd5b61090a8261086d565b9392505050565b6000806040838503121561092457600080fd5b61092d8361086d565b915061093b6020840161086d565b90509250929050565b600181811c9082168061095857607f821691505b6020821081141561097957634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156109a057634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122080a113a47fdca2859c5633b512fbdd7e2a1e3a6bada9c18c27f47dc663bb633b64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6166:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:80",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:80",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:80",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:80"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:80"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:80"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:80"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:80"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:80"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:80",
                    "statements": []
                  },
                  "src": "294:140:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:80"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:80"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:80",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:80",
                "type": ""
              }
            ],
            "src": "14:597:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "665:124:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "675:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "697:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "684:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:20:80"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "675:5:80"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "767:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "769:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "769:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "769:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "726:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "737:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "752:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "757:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "748:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "748:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "744:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "744:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "733:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "733:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "723:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "713:70:80"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "655:5:80",
                "type": ""
              }
            ],
            "src": "616:173:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:167:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "927:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "929:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "929:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "929:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "891:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "952:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "981:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "962:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1027:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1038:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1010:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "850:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "862:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "870:6:80",
                "type": ""
              }
            ],
            "src": "794:254:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:92:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1166:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1200:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1218:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1218:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1211:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1211:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:41:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1117:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1128:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1139:4:80",
                "type": ""
              }
            ],
            "src": "1053:187:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1368:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1379:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1364:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1356:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1409:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1391:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1315:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1326:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1337:4:80",
                "type": ""
              }
            ],
            "src": "1245:177:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:224:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1577:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1586:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1579:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1579:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1579:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1552:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1561:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1612:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1660:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:38:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1707:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1734:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1745:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1730:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1717:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1481:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1492:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1504:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1520:6:80",
                "type": ""
              }
            ],
            "src": "1427:328:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1857:87:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1867:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1867:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1909:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1924:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:4:80",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1920:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:17:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:36:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1826:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1837:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1848:4:80",
                "type": ""
              }
            ],
            "src": "1760:184:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:116:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2065:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2074:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2077:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2067:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2067:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2040:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2049:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2036:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2032:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2029:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2100:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1985:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1996:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2008:6:80",
                "type": ""
              }
            ],
            "src": "1949:186:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2227:173:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2282:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2248:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2257:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2244:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2244:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2240:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2237:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:39:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2327:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2308:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:29:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2346:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2379:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2390:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2375:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2356:18:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:38:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2346:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2185:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2196:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2208:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2216:6:80",
                "type": ""
              }
            ],
            "src": "2140:260:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2460:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2470:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2484:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2487:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2480:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2480:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2501:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2531:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2537:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2527:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2505:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2578:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2580:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2594:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2602:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2590:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2590:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2580:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2558:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2551:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2548:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2668:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2689:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2696:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2701:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2692:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2692:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2682:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2682:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2682:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2733:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2736:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2726:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2726:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2726:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2761:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2764:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2754:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2754:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2754:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2624:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2647:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2655:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2644:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2621:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2618:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2440:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2449:6:80",
                "type": ""
              }
            ],
            "src": "2405:380:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2838:177:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2873:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2894:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2901:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2906:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2897:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2897:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2887:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2887:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2887:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2938:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2941:4:80",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2931:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2931:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2931:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2966:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2969:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2959:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2959:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2959:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2854:1:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2861:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2857:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2857:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2851:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2848:136:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2993:16:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3004:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3007:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3000:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2993:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2821:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2824:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2830:3:80",
                "type": ""
              }
            ],
            "src": "2790:225:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3194:227:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3211:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3222:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3204:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3245:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3256:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3241:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3241:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3261:2:80",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3234:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3234:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3234:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3284:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3295:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3280:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3280:18:80"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3300:34:80",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3273:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3273:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3273:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3355:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3366:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3351:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3351:18:80"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3371:7:80",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3344:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3344:35:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3344:35:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3388:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3400:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3411:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3396:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3396:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3388:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3171:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3185:4:80",
                "type": ""
              }
            ],
            "src": "3020:401:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3600:226:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3617:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3628:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3610:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3610:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3651:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3662:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3647:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3647:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3667:2:80",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3640:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3640:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3640:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3701:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3686:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:18:80"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3706:34:80",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3679:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3679:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3679:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3772:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3757:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:18:80"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3777:6:80",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:34:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3805:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3816:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3801:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3793:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3577:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3591:4:80",
                "type": ""
              }
            ],
            "src": "3426:400:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4005:224:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4022:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4033:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4015:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4015:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4015:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4056:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4067:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4052:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4052:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4072:2:80",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4045:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4045:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4045:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4095:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4106:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4091:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:18:80"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4111:34:80",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4084:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4084:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4084:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4166:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4177:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4162:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4162:18:80"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4182:4:80",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4155:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4155:32:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4155:32:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4196:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4208:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4219:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4204:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4204:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4196:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3982:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3996:4:80",
                "type": ""
              }
            ],
            "src": "3831:398:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4408:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4425:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4436:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4418:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4418:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4459:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4470:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4455:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4455:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4475:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4448:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4448:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4448:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4498:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4509:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4494:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4494:18:80"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4514:31:80",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4487:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4487:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4487:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4555:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4567:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4578:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4563:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4563:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4555:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4385:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4399:4:80",
                "type": ""
              }
            ],
            "src": "4234:353:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4766:227:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4783:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4794:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4776:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4776:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4776:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4817:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4828:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4813:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4813:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4833:2:80",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4806:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4806:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4806:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4856:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4867:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4852:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4852:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4872:34:80",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4845:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4845:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4845:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4927:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4938:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4923:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4923:18:80"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4943:7:80",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4916:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:35:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4916:35:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4960:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4972:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4983:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4968:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4968:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4960:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4743:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4757:4:80",
                "type": ""
              }
            ],
            "src": "4592:401:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5172:225:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5189:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5200:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5182:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5182:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5223:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5234:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5219:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5219:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5239:2:80",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5212:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5212:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5212:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5262:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5273:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5258:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5258:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5278:34:80",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5251:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5251:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5251:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5333:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5344:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5329:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5329:18:80"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5349:5:80",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5322:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5322:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5322:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5364:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5376:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5387:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5372:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5364:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5149:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5163:4:80",
                "type": ""
              }
            ],
            "src": "4998:399:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5576:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5593:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5604:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5586:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5586:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5627:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5638:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5623:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5623:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5643:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5616:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5616:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5666:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5677:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5662:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5662:18:80"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5682:34:80",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5655:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5655:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5655:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5737:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5748:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5733:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5733:18:80"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5753:8:80",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5771:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5783:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5794:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5779:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5779:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5771:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5553:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5567:4:80",
                "type": ""
              }
            ],
            "src": "5402:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:181:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6000:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6011:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6034:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6045:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6030:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6030:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6050:2:80",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6073:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6084:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6069:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6069:18:80"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6089:33:80",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6062:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6062:61:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6062:61:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6132:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6144:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6155:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6140:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6140:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6132:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5960:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5974:4:80",
                "type": ""
              }
            ],
            "src": "5809:355:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2415:49:77:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2415:49:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:80;;1211:22;1193:41;;1181:2;1166:18;4770:197:6;1053:187:80;3581:106:6;3668:12;;3581:106;;;1391:25:80;;;1379:2;1364:18;3581:106:6;1245:177:80;5529:286:6;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;1902:36:80;;1890:2;1875:18;3430:91:6;1760:184:80;6210:236:6;;;;;;:::i;:::-;;:::i;419:97:69:-;;;;;;:::i;:::-;;:::i;:::-;;3745:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:6;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6933:429::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4428:18:6;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149;2493:98;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:11;4907:32:6;929:10:11;4923:7:6;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:6;;4770:197;-1:-1:-1;;;4770:197:6:o;5529:286::-;5656:4;929:10:11;5712:38:6;5728:4;929:10:11;5743:6:6;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:6;;5529:286;-1:-1:-1;;;;5529:286:6:o;6210:236::-;929:10:11;6298:4:6;6377:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6377:27:6;;;;;;;;;;6298:4;;929:10:11;6352:66:6;;929:10:11;;6377:27:6;;:40;;6407:10;;6377:40;:::i;:::-;6352:8;:66::i;419:97:69:-;485:24;491:8;501:7;485:5;:24::i;:::-;419:97;;:::o;2704:102:6:-;2760:13;2792:7;2785:14;;;;;:::i;6933:429::-;929:10:11;7026:4:6;7107:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;7107:27:6;;;;;;;;;;7026:4;;929:10:11;7152:35:6;;;;7144:85;;;;-1:-1:-1;;;7144:85:6;;3222:2:80;7144:85:6;;;3204:21:80;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:80;;;3344:35;3396:19;;7144:85:6;;;;;;;;;7263:60;7272:5;7279:7;7307:15;7288:16;:34;7263:8;:60::i;4066:189::-;4145:4;929:10:11;4199:28:6;929:10:11;4216:2:6;4220:6;4199:9;:28::i;10460:370::-;-1:-1:-1;;;;;10591:19:6;;10583:68;;;;-1:-1:-1;;;10583:68:6;;3628:2:80;10583:68:6;;;3610:21:80;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:80;;;3750:34;3801:19;;10583:68:6;3426:400:80;10583:68:6;-1:-1:-1;;;;;10669:21:6;;10661:68;;;;-1:-1:-1;;;10661:68:6;;4033:2:80;10661:68:6;;;4015:21:80;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:80;;;4155:32;4204:19;;10661:68:6;3831:398:80;10661:68:6;-1:-1:-1;;;;;10740:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10791:32;;1391:25:80;;;10791:32:6;;1364:18:80;10791:32:6;;;;;;;10460:370;;;:::o;11107:441::-;-1:-1:-1;;;;;4428:18:6;;;11237:24;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11303:37:6;;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:6;;4436:2:80;11356:68:6;;;4418:21:80;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11356:68:6;4234:353:80;11356:68:6;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7825:651::-;-1:-1:-1;;;;;7951:18:6;;7943:68;;;;-1:-1:-1;;;7943:68:6;;4794:2:80;7943:68:6;;;4776:21:80;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:80;;;4916:35;4968:19;;7943:68:6;4592:401:80;7943:68:6;-1:-1:-1;;;;;8029:16:6;;8021:64;;;;-1:-1:-1;;;8021:64:6;;5200:2:80;8021:64:6;;;5182:21:80;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:80;;;5322:33;5372:19;;8021:64:6;4998:399:80;8021:64:6;-1:-1:-1;;;;;8167:15:6;;8145:19;8167:15;;;:9;:15;;;;;;8200:21;;;;8192:72;;;;-1:-1:-1;;;8192:72:6;;5604:2:80;8192:72:6;;;5586:21:80;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:80;;;5726:36;5779:19;;8192:72:6;5402:402:80;8192:72:6;-1:-1:-1;;;;;8298:15:6;;;;;;;:9;:15;;;;;;8316:20;;;8298:38;;8356:13;;;;;;;;:23;;8330:6;;8298:15;8356:23;;8330:6;;8356:23;:::i;:::-;;;;;;;;8410:2;-1:-1:-1;;;;;8395:26:6;8404:4;-1:-1:-1;;;;;8395:26:6;;8414:6;8395:26;;;;1391:25:80;;1379:2;1364:18;;1245:177;8395:26:6;;;;;;;;8432:37;12132:121;8752:389;-1:-1:-1;;;;;8835:21:6;;8827:65;;;;-1:-1:-1;;;8827:65:6;;6011:2:80;8827:65:6;;;5993:21:80;6050:2;6030:18;;;6023:30;6089:33;6069:18;;;6062:61;6140:18;;8827:65:6;5809:355:80;8827:65:6;8979:6;8963:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8995:18:6;;;;;;:9;:18;;;;;:28;;9017:6;;8995:18;:28;;9017:6;;8995:28;:::i;:::-;;;;-1:-1:-1;;9038:37:6;;1391:25:80;;;-1:-1:-1;;;;;9038:37:6;;;9055:1;;9038:37;;1379:2:80;1364:18;9038:37:6;;;;;;;419:97:69;;:::o;14:597:80:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:80;574:15;-1:-1:-1;;570:29:80;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:80:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:80;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:80:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:80:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:80;;2790:225::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultStandardAMM.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"../../tokens/mocks/MockToken.sol\";\n\ncontract MockVaultFactoryStandardAMM is VaultFactoryStandardAMM {}\n\ncontract MockVaultStandardAMM is VaultStandardAMM {\n    function reversePath(address[] memory _path)\n        public\n        pure\n        returns (address[] memory)\n    {\n        return _reversePath(_path);\n    }\n\n    function unfarm(uint256 _wantAmt) public {\n        _unfarm(_wantAmt);\n    }\n}\n\ncontract MockAMMFarm is IAMMFarm, MockERC20Upgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    address public burnAddress;\n    address public wantToken;\n\n    function setWantAddress(address _wantToken) public {\n        wantToken = _wantToken;\n    }\n\n    function setBurnAddress(address _burnAddress) public {\n        burnAddress = _burnAddress;\n    }\n\n    function poolLength() external view returns (uint256) {}\n\n    function userInfo() external view returns (uint256) {}\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to)\n        external\n        view\n        returns (uint256)\n    {}\n\n    // View function to see pending CAKEs on frontend.\n    function pendingCake(uint256 _pid, address _user)\n        external\n        view\n        returns (uint256)\n    {}\n\n    event Deposited(uint256 indexed _pid, uint256 indexed _amount);\n\n    // Deposit LP tokens to MasterChef for CAKE allocation.\n    function deposit(uint256 _pid, uint256 _amount) external {\n        IERC20Upgradeable(wantToken).safeTransferFrom(msg.sender, burnAddress, _amount);\n        emit Deposited(_pid, _amount);\n    }\n\n    event Withdrew(uint256 indexed _pid, uint256 indexed _amount);\n\n    // Withdraw LP tokens from MasterChef.\n    function withdraw(uint256 _pid, uint256 _amount) external {\n        IMockERC20Upgradeable(wantToken).mint(msg.sender, _amount);\n        emit Withdrew(_pid, _amount);\n    }\n\n    // Stake CAKE tokens to MasterChef\n    function enterStaking(uint256 _amount) external {}\n\n    // Withdraw CAKE tokens from STAKING.\n    function leaveStaking(uint256 _amount) external {}\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) external {}\n}\n\ncontract MockAMMToken0 is MockERC20Upgradeable {}\ncontract MockAMMToken1 is MockERC20Upgradeable {}\ncontract MockAMMOtherLPToken is MockERC20Upgradeable {}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultStandardAMM.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultStandardAMM.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        10696
      ],
      "FundManagement": [
        10672
      ],
      "IAMMFarm": [
        10213
      ],
      "IAMMRouter01": [
        10521
      ],
      "IAMMRouter02": [
        10609
      ],
      "IAsset": [
        10663
      ],
      "IBalancerVault": [
        10766
      ],
      "IERC20": [
        4050
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        10925
      ],
      "IMockERC20Upgradeable": [
        13616
      ],
      "IStargateReceiver": [
        10991
      ],
      "IVault": [
        11183
      ],
      "IZorroControllerXChain": [
        11786
      ],
      "IZorroControllerXChainBase": [
        11554
      ],
      "IZorroControllerXChainDeposit": [
        11607
      ],
      "IZorroControllerXChainEarn": [
        11683
      ],
      "IZorroControllerXChainReceiver": [
        11774
      ],
      "IZorroControllerXChainWithdraw": [
        11762
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        10684
      ],
      "MockAMMFarm": [
        19930
      ],
      "MockAMMOtherLPToken": [
        19939
      ],
      "MockAMMToken0": [
        19933
      ],
      "MockAMMToken1": [
        19936
      ],
      "MockERC20Upgradeable": [
        13634
      ],
      "MockUSDC": [
        13637
      ],
      "MockVaultFactoryStandardAMM": [
        19763
      ],
      "MockVaultStandardAMM": [
        19790
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        11893
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        12162
      ],
      "SafeSwapParams": [
        12184
      ],
      "SafeSwapUni": [
        11993
      ],
      "SingleSwap": [
        10658
      ],
      "SwapKind": [
        10661
      ],
      "VaultBase": [
        19746
      ],
      "VaultFactoryStandardAMM": [
        15290
      ],
      "VaultStandardAMM": [
        16753
      ]
    },
    "id": 19940,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19757,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultStandardAMM.sol",
        "file": "../VaultStandardAMM.sol",
        "id": 19758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 16754,
        "src": "58:33:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 19759,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 1107,
        "src": "93:78:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 19760,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 13638,
        "src": "173:42:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19761,
              "name": "VaultFactoryStandardAMM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15290,
              "src": "257:23:77"
            },
            "id": 19762,
            "nodeType": "InheritanceSpecifier",
            "src": "257:23:77"
          }
        ],
        "canonicalName": "MockVaultFactoryStandardAMM",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19763,
        "linearizedBaseContracts": [
          19763,
          15290,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryStandardAMM",
        "nameLocation": "226:27:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "217:66:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19764,
              "name": "VaultStandardAMM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16753,
              "src": "318:16:77"
            },
            "id": 19765,
            "nodeType": "InheritanceSpecifier",
            "src": "318:16:77"
          }
        ],
        "canonicalName": "MockVaultStandardAMM",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19790,
        "linearizedBaseContracts": [
          19790,
          16753,
          19746,
          434,
          493,
          169,
          1718,
          323,
          11183
        ],
        "name": "MockVaultStandardAMM",
        "nameLocation": "294:20:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19778,
              "nodeType": "Block",
              "src": "453:43:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19775,
                        "name": "_path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19768,
                        "src": "483:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 19774,
                      "name": "_reversePath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19474,
                      "src": "470:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address[] memory) pure returns (address[] memory)"
                      }
                    },
                    "id": 19776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:19:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 19773,
                  "id": 19777,
                  "nodeType": "Return",
                  "src": "463:26:77"
                }
              ]
            },
            "functionSelector": "8b4c5aee",
            "id": 19779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reversePath",
            "nameLocation": "350:11:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19768,
                  "mutability": "mutable",
                  "name": "_path",
                  "nameLocation": "379:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19779,
                  "src": "362:22:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19766,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "362:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 19767,
                    "nodeType": "ArrayTypeName",
                    "src": "362:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:24:77"
            },
            "returnParameters": {
              "id": 19773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19779,
                  "src": "431:16:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19770,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "431:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 19771,
                    "nodeType": "ArrayTypeName",
                    "src": "431:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:18:77"
            },
            "scope": 19790,
            "src": "341:155:77",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19788,
              "nodeType": "Block",
              "src": "543:34:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19785,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19781,
                        "src": "561:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19784,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15936,
                      "src": "553:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 19786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "553:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 19787,
                  "nodeType": "ExpressionStatement",
                  "src": "553:17:77"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 19789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "511:6:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19781,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "526:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19789,
                  "src": "518:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:18:77"
            },
            "returnParameters": {
              "id": 19783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:0:77"
            },
            "scope": 19790,
            "src": "502:75:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19940,
        "src": "285:294:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19791,
              "name": "IAMMFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10213,
              "src": "605:8:77"
            },
            "id": 19792,
            "nodeType": "InheritanceSpecifier",
            "src": "605:8:77"
          },
          {
            "baseName": {
              "id": 19793,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "615:20:77"
            },
            "id": 19794,
            "nodeType": "InheritanceSpecifier",
            "src": "615:20:77"
          }
        ],
        "canonicalName": "MockAMMFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19930,
        "linearizedBaseContracts": [
          19930,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323,
          10213
        ],
        "name": "MockAMMFarm",
        "nameLocation": "590:11:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19798,
            "libraryName": {
              "id": 19795,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "648:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "642:49:77",
            "typeName": {
              "id": 19797,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19796,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "673:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "673:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 19800,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "712:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 19930,
            "src": "697:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19799,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 19802,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "744:9:77",
            "nodeType": "VariableDeclaration",
            "scope": 19930,
            "src": "729:24:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19801,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19811,
              "nodeType": "Block",
              "src": "811:39:77",
              "statements": [
                {
                  "expression": {
                    "id": 19809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19807,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19802,
                      "src": "821:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19808,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19804,
                      "src": "833:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "821:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19810,
                  "nodeType": "ExpressionStatement",
                  "src": "821:22:77"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 19812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "769:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19804,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "792:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19812,
                  "src": "784:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:20:77"
            },
            "returnParameters": {
              "id": 19806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:77"
            },
            "scope": 19930,
            "src": "760:90:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19821,
              "nodeType": "Block",
              "src": "909:43:77",
              "statements": [
                {
                  "expression": {
                    "id": 19819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19817,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19800,
                      "src": "919:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19818,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19814,
                      "src": "933:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "919:26:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19820,
                  "nodeType": "ExpressionStatement",
                  "src": "919:26:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 19822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "865:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19814,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "888:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19822,
                  "src": "880:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:22:77"
            },
            "returnParameters": {
              "id": 19816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:77"
            },
            "scope": 19930,
            "src": "856:96:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10160
            ],
            "body": {
              "id": 19827,
              "nodeType": "Block",
              "src": "1012:2:77",
              "statements": []
            },
            "functionSelector": "081e3eda",
            "id": 19828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "967:10:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:77"
            },
            "returnParameters": {
              "id": 19826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19825,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19828,
                  "src": "1003:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:9:77"
            },
            "scope": 19930,
            "src": "958:56:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10165
            ],
            "body": {
              "id": 19833,
              "nodeType": "Block",
              "src": "1072:2:77",
              "statements": []
            },
            "functionSelector": "43a6f4ee",
            "id": 19834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInfo",
            "nameLocation": "1029:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:77"
            },
            "returnParameters": {
              "id": 19832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19834,
                  "src": "1063:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:9:77"
            },
            "scope": 19930,
            "src": "1020:54:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10174
            ],
            "body": {
              "id": 19843,
              "nodeType": "Block",
              "src": "1258:2:77",
              "statements": []
            },
            "functionSelector": "8dbb1e3a",
            "id": 19844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nameLocation": "1156:13:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19836,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1178:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1170:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19838,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1193:3:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1185:11:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1169:28:77"
            },
            "returnParameters": {
              "id": 19842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1245:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:77"
            },
            "scope": 19930,
            "src": "1147:113:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10183
            ],
            "body": {
              "id": 19853,
              "nodeType": "Block",
              "src": "1431:2:77",
              "statements": []
            },
            "functionSelector": "1175a1dd",
            "id": 19854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingCake",
            "nameLocation": "1330:11:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19846,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1350:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1342:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19848,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1364:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1356:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:29:77"
            },
            "returnParameters": {
              "id": 19852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1418:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:9:77"
            },
            "scope": 19930,
            "src": "1321:112:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 19860,
            "name": "Deposited",
            "nameLocation": "1445:9:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1471:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19860,
                  "src": "1455:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19858,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1493:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19860,
                  "src": "1477:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1454:47:77"
            },
            "src": "1439:63:77"
          },
          {
            "baseFunctions": [
              10190
            ],
            "body": {
              "id": 19882,
              "nodeType": "Block",
              "src": "1625:135:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1681:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1681:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19873,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19800,
                        "src": "1693:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19874,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19864,
                        "src": "1706:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19868,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19802,
                            "src": "1653:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19867,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1635:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 19869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1635:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 19870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1635:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 19875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:79:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19876,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:79:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 19878,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19862,
                        "src": "1739:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19879,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19864,
                        "src": "1745:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19877,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19860,
                      "src": "1729:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:24:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19881,
                  "nodeType": "EmitStatement",
                  "src": "1724:29:77"
                }
              ]
            },
            "functionSelector": "e2bbb158",
            "id": 19883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1577:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19862,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1593:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19883,
                  "src": "1585:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19864,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1607:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19883,
                  "src": "1599:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:31:77"
            },
            "returnParameters": {
              "id": 19866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:77"
            },
            "scope": 19930,
            "src": "1568:192:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 19889,
            "name": "Withdrew",
            "nameLocation": "1772:8:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19885,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1797:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19889,
                  "src": "1781:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19887,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1819:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19889,
                  "src": "1803:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:47:77"
            },
            "src": "1766:62:77"
          },
          {
            "baseFunctions": [
              10197
            ],
            "body": {
              "id": 19910,
              "nodeType": "Block",
              "src": "1935:113:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1983:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1983:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "1995:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19897,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19802,
                            "src": "1967:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19896,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13616,
                          "src": "1945:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$13616_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 19898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1945:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$13616",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 19899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13615,
                      "src": "1945:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 19903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:58:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19904,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:58:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 19906,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19891,
                        "src": "2027:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19907,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "2033:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19905,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19889,
                      "src": "2018:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19909,
                  "nodeType": "EmitStatement",
                  "src": "2013:28:77"
                }
              ]
            },
            "functionSelector": "441a3e70",
            "id": 19911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1886:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19891,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1903:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19911,
                  "src": "1895:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19893,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1917:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19911,
                  "src": "1909:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:31:77"
            },
            "returnParameters": {
              "id": 19895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1935:0:77"
            },
            "scope": 19930,
            "src": "1877:171:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10202
            ],
            "body": {
              "id": 19916,
              "nodeType": "Block",
              "src": "2141:2:77",
              "statements": []
            },
            "functionSelector": "41441d3b",
            "id": 19917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterStaking",
            "nameLocation": "2102:12:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19913,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2123:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19917,
                  "src": "2115:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:17:77"
            },
            "returnParameters": {
              "id": 19915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:77"
            },
            "scope": 19930,
            "src": "2093:50:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10207
            ],
            "body": {
              "id": 19922,
              "nodeType": "Block",
              "src": "2239:2:77",
              "statements": []
            },
            "functionSelector": "1058d281",
            "id": 19923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStaking",
            "nameLocation": "2200:12:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19919,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2221:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19923,
                  "src": "2213:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:17:77"
            },
            "returnParameters": {
              "id": 19921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:77"
            },
            "scope": 19930,
            "src": "2191:50:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10212
            ],
            "body": {
              "id": 19928,
              "nodeType": "Block",
              "src": "2359:2:77",
              "statements": []
            },
            "functionSelector": "5312ea8e",
            "id": 19929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "2318:17:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19925,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2344:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19929,
                  "src": "2336:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2335:14:77"
            },
            "returnParameters": {
              "id": 19927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2359:0:77"
            },
            "scope": 19930,
            "src": "2309:52:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 19940,
        "src": "581:1782:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19931,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2391:20:77"
            },
            "id": 19932,
            "nodeType": "InheritanceSpecifier",
            "src": "2391:20:77"
          }
        ],
        "canonicalName": "MockAMMToken0",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19933,
        "linearizedBaseContracts": [
          19933,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMToken0",
        "nameLocation": "2374:13:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2365:49:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19934,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2441:20:77"
            },
            "id": 19935,
            "nodeType": "InheritanceSpecifier",
            "src": "2441:20:77"
          }
        ],
        "canonicalName": "MockAMMToken1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19936,
        "linearizedBaseContracts": [
          19936,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMToken1",
        "nameLocation": "2424:13:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2415:49:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19937,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2497:20:77"
            },
            "id": 19938,
            "nodeType": "InheritanceSpecifier",
            "src": "2497:20:77"
          }
        ],
        "canonicalName": "MockAMMOtherLPToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19939,
        "linearizedBaseContracts": [
          19939,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMOtherLPToken",
        "nameLocation": "2474:19:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2465:55:77",
        "usedErrors": []
      }
    ],
    "src": "33:2488:77"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultStandardAMM.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1676
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ClonesUpgradeable": [
        249
      ],
      "ContextUpgradeable": [
        1718
      ],
      "ERC20Upgradeable": [
        1106
      ],
      "ExitPoolRequest": [
        10696
      ],
      "FundManagement": [
        10672
      ],
      "IAMMFarm": [
        10213
      ],
      "IAMMRouter01": [
        10521
      ],
      "IAMMRouter02": [
        10609
      ],
      "IAsset": [
        10663
      ],
      "IBalancerVault": [
        10766
      ],
      "IERC20": [
        4050
      ],
      "IERC20MetadataUpgradeable": [
        1209
      ],
      "IERC20Upgradeable": [
        1184
      ],
      "ILayerZeroReceiver": [
        10925
      ],
      "IMockERC20Upgradeable": [
        13616
      ],
      "IStargateReceiver": [
        10991
      ],
      "IVault": [
        11183
      ],
      "IZorroControllerXChain": [
        11786
      ],
      "IZorroControllerXChainBase": [
        11554
      ],
      "IZorroControllerXChainDeposit": [
        11607
      ],
      "IZorroControllerXChainEarn": [
        11683
      ],
      "IZorroControllerXChainReceiver": [
        11774
      ],
      "IZorroControllerXChainWithdraw": [
        11762
      ],
      "Initializable": [
        323
      ],
      "JoinPoolRequest": [
        10684
      ],
      "MockAMMFarm": [
        19930
      ],
      "MockAMMOtherLPToken": [
        19939
      ],
      "MockAMMToken0": [
        19933
      ],
      "MockAMMToken1": [
        19936
      ],
      "MockERC20Upgradeable": [
        13634
      ],
      "MockUSDC": [
        13637
      ],
      "MockVaultFactoryStandardAMM": [
        19763
      ],
      "MockVaultStandardAMM": [
        19790
      ],
      "OwnableUpgradeable": [
        169
      ],
      "PausableUpgradeable": [
        434
      ],
      "PriceFeed": [
        11893
      ],
      "ReentrancyGuardUpgradeable": [
        493
      ],
      "SafeERC20Upgradeable": [
        1433
      ],
      "SafeMathUpgradeable": [
        2118
      ],
      "SafeSwapBalancer": [
        12162
      ],
      "SafeSwapParams": [
        12184
      ],
      "SafeSwapUni": [
        11993
      ],
      "SingleSwap": [
        10658
      ],
      "SwapKind": [
        10661
      ],
      "VaultBase": [
        19746
      ],
      "VaultFactoryStandardAMM": [
        15290
      ],
      "VaultStandardAMM": [
        16753
      ]
    },
    "id": 19940,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19757,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultStandardAMM.sol",
        "file": "../VaultStandardAMM.sol",
        "id": 19758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 16754,
        "src": "58:33:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 19759,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 1107,
        "src": "93:78:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
        "file": "../../tokens/mocks/MockToken.sol",
        "id": 19760,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19940,
        "sourceUnit": 13638,
        "src": "173:42:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19761,
              "name": "VaultFactoryStandardAMM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15290,
              "src": "257:23:77"
            },
            "id": 19762,
            "nodeType": "InheritanceSpecifier",
            "src": "257:23:77"
          }
        ],
        "canonicalName": "MockVaultFactoryStandardAMM",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19763,
        "linearizedBaseContracts": [
          19763,
          15290,
          169,
          1718,
          323
        ],
        "name": "MockVaultFactoryStandardAMM",
        "nameLocation": "226:27:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "217:66:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19764,
              "name": "VaultStandardAMM",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16753,
              "src": "318:16:77"
            },
            "id": 19765,
            "nodeType": "InheritanceSpecifier",
            "src": "318:16:77"
          }
        ],
        "canonicalName": "MockVaultStandardAMM",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19790,
        "linearizedBaseContracts": [
          19790,
          16753,
          19746,
          434,
          493,
          169,
          1718,
          323,
          11183
        ],
        "name": "MockVaultStandardAMM",
        "nameLocation": "294:20:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19778,
              "nodeType": "Block",
              "src": "453:43:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19775,
                        "name": "_path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19768,
                        "src": "483:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 19774,
                      "name": "_reversePath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19474,
                      "src": "470:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address[] memory) pure returns (address[] memory)"
                      }
                    },
                    "id": 19776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:19:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 19773,
                  "id": 19777,
                  "nodeType": "Return",
                  "src": "463:26:77"
                }
              ]
            },
            "functionSelector": "8b4c5aee",
            "id": 19779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reversePath",
            "nameLocation": "350:11:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19768,
                  "mutability": "mutable",
                  "name": "_path",
                  "nameLocation": "379:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19779,
                  "src": "362:22:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19766,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "362:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 19767,
                    "nodeType": "ArrayTypeName",
                    "src": "362:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "361:24:77"
            },
            "returnParameters": {
              "id": 19773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19779,
                  "src": "431:16:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19770,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "431:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 19771,
                    "nodeType": "ArrayTypeName",
                    "src": "431:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:18:77"
            },
            "scope": 19790,
            "src": "341:155:77",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19788,
              "nodeType": "Block",
              "src": "543:34:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19785,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19781,
                        "src": "561:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19784,
                      "name": "_unfarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15936,
                      "src": "553:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 19786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "553:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 19787,
                  "nodeType": "ExpressionStatement",
                  "src": "553:17:77"
                }
              ]
            },
            "functionSelector": "1c885bae",
            "id": 19789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unfarm",
            "nameLocation": "511:6:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19781,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "526:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19789,
                  "src": "518:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:18:77"
            },
            "returnParameters": {
              "id": 19783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:0:77"
            },
            "scope": 19790,
            "src": "502:75:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19940,
        "src": "285:294:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19791,
              "name": "IAMMFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10213,
              "src": "605:8:77"
            },
            "id": 19792,
            "nodeType": "InheritanceSpecifier",
            "src": "605:8:77"
          },
          {
            "baseName": {
              "id": 19793,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "615:20:77"
            },
            "id": 19794,
            "nodeType": "InheritanceSpecifier",
            "src": "615:20:77"
          }
        ],
        "canonicalName": "MockAMMFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19930,
        "linearizedBaseContracts": [
          19930,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323,
          10213
        ],
        "name": "MockAMMFarm",
        "nameLocation": "590:11:77",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19798,
            "libraryName": {
              "id": 19795,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "648:20:77"
            },
            "nodeType": "UsingForDirective",
            "src": "642:49:77",
            "typeName": {
              "id": 19797,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19796,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1184,
                "src": "673:17:77"
              },
              "referencedDeclaration": 1184,
              "src": "673:17:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 19800,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "712:11:77",
            "nodeType": "VariableDeclaration",
            "scope": 19930,
            "src": "697:26:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19799,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d23e0480",
            "id": 19802,
            "mutability": "mutable",
            "name": "wantToken",
            "nameLocation": "744:9:77",
            "nodeType": "VariableDeclaration",
            "scope": 19930,
            "src": "729:24:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19801,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:77",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19811,
              "nodeType": "Block",
              "src": "811:39:77",
              "statements": [
                {
                  "expression": {
                    "id": 19809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19807,
                      "name": "wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19802,
                      "src": "821:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19808,
                      "name": "_wantToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19804,
                      "src": "833:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "821:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19810,
                  "nodeType": "ExpressionStatement",
                  "src": "821:22:77"
                }
              ]
            },
            "functionSelector": "6183e804",
            "id": 19812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWantAddress",
            "nameLocation": "769:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19804,
                  "mutability": "mutable",
                  "name": "_wantToken",
                  "nameLocation": "792:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19812,
                  "src": "784:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:20:77"
            },
            "returnParameters": {
              "id": 19806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:77"
            },
            "scope": 19930,
            "src": "760:90:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19821,
              "nodeType": "Block",
              "src": "909:43:77",
              "statements": [
                {
                  "expression": {
                    "id": 19819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19817,
                      "name": "burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19800,
                      "src": "919:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19818,
                      "name": "_burnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19814,
                      "src": "933:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "919:26:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19820,
                  "nodeType": "ExpressionStatement",
                  "src": "919:26:77"
                }
              ]
            },
            "functionSelector": "4b0e7216",
            "id": 19822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnAddress",
            "nameLocation": "865:14:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19814,
                  "mutability": "mutable",
                  "name": "_burnAddress",
                  "nameLocation": "888:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19822,
                  "src": "880:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "879:22:77"
            },
            "returnParameters": {
              "id": 19816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:77"
            },
            "scope": 19930,
            "src": "856:96:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10160
            ],
            "body": {
              "id": 19827,
              "nodeType": "Block",
              "src": "1012:2:77",
              "statements": []
            },
            "functionSelector": "081e3eda",
            "id": 19828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "967:10:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:77"
            },
            "returnParameters": {
              "id": 19826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19825,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19828,
                  "src": "1003:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:9:77"
            },
            "scope": 19930,
            "src": "958:56:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10165
            ],
            "body": {
              "id": 19833,
              "nodeType": "Block",
              "src": "1072:2:77",
              "statements": []
            },
            "functionSelector": "43a6f4ee",
            "id": 19834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInfo",
            "nameLocation": "1029:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:2:77"
            },
            "returnParameters": {
              "id": 19832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19834,
                  "src": "1063:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:9:77"
            },
            "scope": 19930,
            "src": "1020:54:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10174
            ],
            "body": {
              "id": 19843,
              "nodeType": "Block",
              "src": "1258:2:77",
              "statements": []
            },
            "functionSelector": "8dbb1e3a",
            "id": 19844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nameLocation": "1156:13:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19836,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1178:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1170:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19838,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1193:3:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1185:11:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1169:28:77"
            },
            "returnParameters": {
              "id": 19842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19844,
                  "src": "1245:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:9:77"
            },
            "scope": 19930,
            "src": "1147:113:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10183
            ],
            "body": {
              "id": 19853,
              "nodeType": "Block",
              "src": "1431:2:77",
              "statements": []
            },
            "functionSelector": "1175a1dd",
            "id": 19854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingCake",
            "nameLocation": "1330:11:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19846,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1350:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1342:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19848,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1364:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1356:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:29:77"
            },
            "returnParameters": {
              "id": 19852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19854,
                  "src": "1418:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:9:77"
            },
            "scope": 19930,
            "src": "1321:112:77",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 19860,
            "name": "Deposited",
            "nameLocation": "1445:9:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1471:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19860,
                  "src": "1455:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19858,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1493:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19860,
                  "src": "1477:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1454:47:77"
            },
            "src": "1439:63:77"
          },
          {
            "baseFunctions": [
              10190
            ],
            "body": {
              "id": 19882,
              "nodeType": "Block",
              "src": "1625:135:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1681:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1681:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19873,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19800,
                        "src": "1693:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19874,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19864,
                        "src": "1706:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19868,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19802,
                            "src": "1653:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19867,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "1635:17:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1184_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 19869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1635:28:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1184",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 19870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1266,
                      "src": "1635:45:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1184_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$1184_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 19875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:79:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19876,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:79:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 19878,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19862,
                        "src": "1739:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19879,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19864,
                        "src": "1745:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19877,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19860,
                      "src": "1729:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:24:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19881,
                  "nodeType": "EmitStatement",
                  "src": "1724:29:77"
                }
              ]
            },
            "functionSelector": "e2bbb158",
            "id": 19883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1577:7:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19862,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1593:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19883,
                  "src": "1585:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19864,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1607:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19883,
                  "src": "1599:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:31:77"
            },
            "returnParameters": {
              "id": 19866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:77"
            },
            "scope": 19930,
            "src": "1568:192:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 19889,
            "name": "Withdrew",
            "nameLocation": "1772:8:77",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19885,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1797:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19889,
                  "src": "1781:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19887,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1819:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19889,
                  "src": "1803:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:47:77"
            },
            "src": "1766:62:77"
          },
          {
            "baseFunctions": [
              10197
            ],
            "body": {
              "id": 19910,
              "nodeType": "Block",
              "src": "1935:113:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 19900,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1983:3:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1983:10:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "1995:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 19897,
                            "name": "wantToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19802,
                            "src": "1967:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 19896,
                          "name": "IMockERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13616,
                          "src": "1945:21:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMockERC20Upgradeable_$13616_$",
                            "typeString": "type(contract IMockERC20Upgradeable)"
                          }
                        },
                        "id": 19898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1945:32:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMockERC20Upgradeable_$13616",
                          "typeString": "contract IMockERC20Upgradeable"
                        }
                      },
                      "id": 19899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13615,
                      "src": "1945:37:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 19903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:58:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19904,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:58:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 19906,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19891,
                        "src": "2027:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19907,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19893,
                        "src": "2033:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 19905,
                      "name": "Withdrew",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19889,
                      "src": "2018:8:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 19908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19909,
                  "nodeType": "EmitStatement",
                  "src": "2013:28:77"
                }
              ]
            },
            "functionSelector": "441a3e70",
            "id": 19911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1886:8:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19891,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1903:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19911,
                  "src": "1895:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19893,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1917:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19911,
                  "src": "1909:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:31:77"
            },
            "returnParameters": {
              "id": 19895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1935:0:77"
            },
            "scope": 19930,
            "src": "1877:171:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10202
            ],
            "body": {
              "id": 19916,
              "nodeType": "Block",
              "src": "2141:2:77",
              "statements": []
            },
            "functionSelector": "41441d3b",
            "id": 19917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterStaking",
            "nameLocation": "2102:12:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19913,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2123:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19917,
                  "src": "2115:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:17:77"
            },
            "returnParameters": {
              "id": 19915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:77"
            },
            "scope": 19930,
            "src": "2093:50:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10207
            ],
            "body": {
              "id": 19922,
              "nodeType": "Block",
              "src": "2239:2:77",
              "statements": []
            },
            "functionSelector": "1058d281",
            "id": 19923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "leaveStaking",
            "nameLocation": "2200:12:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19919,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2221:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19923,
                  "src": "2213:15:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:17:77"
            },
            "returnParameters": {
              "id": 19921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:0:77"
            },
            "scope": 19930,
            "src": "2191:50:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10212
            ],
            "body": {
              "id": 19928,
              "nodeType": "Block",
              "src": "2359:2:77",
              "statements": []
            },
            "functionSelector": "5312ea8e",
            "id": 19929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nameLocation": "2318:17:77",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19925,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2344:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 19929,
                  "src": "2336:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2335:14:77"
            },
            "returnParameters": {
              "id": 19927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2359:0:77"
            },
            "scope": 19930,
            "src": "2309:52:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 19940,
        "src": "581:1782:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19931,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2391:20:77"
            },
            "id": 19932,
            "nodeType": "InheritanceSpecifier",
            "src": "2391:20:77"
          }
        ],
        "canonicalName": "MockAMMToken0",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19933,
        "linearizedBaseContracts": [
          19933,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMToken0",
        "nameLocation": "2374:13:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2365:49:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19934,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2441:20:77"
            },
            "id": 19935,
            "nodeType": "InheritanceSpecifier",
            "src": "2441:20:77"
          }
        ],
        "canonicalName": "MockAMMToken1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19936,
        "linearizedBaseContracts": [
          19936,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMToken1",
        "nameLocation": "2424:13:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2415:49:77",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19937,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13634,
              "src": "2497:20:77"
            },
            "id": 19938,
            "nodeType": "InheritanceSpecifier",
            "src": "2497:20:77"
          }
        ],
        "canonicalName": "MockAMMOtherLPToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19939,
        "linearizedBaseContracts": [
          19939,
          13634,
          1106,
          1209,
          13616,
          1184,
          1718,
          323
        ],
        "name": "MockAMMOtherLPToken",
        "nameLocation": "2474:19:77",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19940,
        "src": "2465:55:77",
        "usedErrors": []
      }
    ],
    "src": "33:2488:77"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x000f5B86a8F13F7142cfB3A787FEbf51a95ccddc",
      "transactionHash": "0x6780908b823fcb27d00437814e73baf61dd2a82f9251f510472cfdb02775a4e6"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-29T14:30:46.935Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}