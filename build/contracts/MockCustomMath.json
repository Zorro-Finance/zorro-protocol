{
  "contractName": "MockCustomMath",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "sqrt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockCustomMath: Mock contract for testing the CustomMath library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/mocks/MockMath.sol\":\"MockCustomMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/mocks/MockMath.sol\":{\"keccak256\":\"0x8731bc2710704fbd886f1a2e61df83c5b77e9c0fab9defb6166023465e0af46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a63b2da50be5c6600029aa2014eabf80b813e38db466f774107d00f8cc1eeed\",\"dweb:/ipfs/QmUgsEzMXeWoSk441NXbQu6efvw8fkXLurk3Ci5BqLzfSZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101c2806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463677342ce811461004c575b600080fd5b61005f61005a3660046100f9565b610071565b60405190815260200160405180910390f35b600061007c82610082565b92915050565b60008161009157506000919050565b600382116100a157506001919050565b600060026100b0846001610112565b6100ba9190610151565b90508291505b818110156100f3579050806002816100d88186610151565b6100e29190610112565b6100ec9190610151565b90506100c0565b50919050565b60006020828403121561010b57600080fd5b5035919050565b6000821982111561014c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600082610187577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122009dbf539634700c086ec3283466d2e55b800d14891ffe4b4a1d0ef20be8f655264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463677342ce811461004c575b600080fd5b61005f61005a3660046100f9565b610071565b60405190815260200160405180910390f35b600061007c82610082565b92915050565b60008161009157506000919050565b600382116100a157506001919050565b600060026100b0846001610112565b6100ba9190610151565b90508291505b818110156100f3579050806002816100d88186610151565b6100e29190610112565b6100ec9190610151565b90506100c0565b50919050565b60006020828403121561010b57600080fd5b5035919050565b6000821982111561014c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600082610187577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122009dbf539634700c086ec3283466d2e55b800d14891ffe4b4a1d0ef20be8f655264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:944:109",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:109",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:109",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:109",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:109",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:109"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:109"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:109"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:109"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:109"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:109",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:109"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:109"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:109",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:109"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:109"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:109"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:109",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:109",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:109",
                "type": ""
              }
            ],
            "src": "14:180:109"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:109",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:109",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:109"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:109",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:109"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:109"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:109"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:109"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:109"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:109"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:109",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:109",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:109",
                "type": ""
              }
            ],
            "src": "199:177:109"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:234:109",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "464:168:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "485:1:109",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "488:77:109",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "478:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "478:88:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "478:88:109"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "586:1:109",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "589:4:109",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "579:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "579:15:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "579:15:109"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "614:1:109",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "617:4:109",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "607:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "607:15:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "607:15:109"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "445:1:109"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "452:1:109"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "448:3:109"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "448:6:109"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "442:2:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "442:13:109"
                  },
                  "nodeType": "YulIf",
                  "src": "439:193:109"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "641:16:109",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "652:1:109"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "655:1:109"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "648:3:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:9:109"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:109"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "412:1:109",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "415:1:109",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "421:3:109",
                "type": ""
              }
            ],
            "src": "381:282:109"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:228:109",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "745:168:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "766:1:109",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "769:77:109",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "759:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "759:88:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "759:88:109"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "867:1:109",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "870:4:109",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "860:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "860:15:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "860:15:109"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "895:1:109",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "898:4:109",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "888:6:109"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "888:15:109"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "888:15:109"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "734:1:109"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:9:109"
                  },
                  "nodeType": "YulIf",
                  "src": "724:189:109"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "922:14:109",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "931:1:109"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "934:1:109"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "927:3:109"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:9:109"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "922:1:109"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "699:1:109",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "702:1:109",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "708:1:109",
                "type": ""
              }
            ],
            "src": "668:274:109"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 109,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "157:154:73:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "157:154:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:87;;;;;;:::i;:::-;;:::i;:::-;;;345:25:109;;;333:2;318:18;222:87:73;;;;;;;;268:7;294:8;:1;:6;:8::i;:::-;287:15;222:87;-1:-1:-1;;222:87:73:o;171:270:70:-;219:9;244:6;240:55;;-1:-1:-1;259:1:70;;171:270;-1:-1:-1;171:270:70:o;240:55::-;284:1;279;:6;275:20;;-1:-1:-1;294:1:70;;171:270;-1:-1:-1;171:270:70:o;275:20::-;305:6;324:1;315:5;:1;319;315:5;:::i;:::-;314:11;;;;:::i;:::-;305:20;;339:1;335:5;;350:85;361:1;357;:5;350:85;;;390:1;-1:-1:-1;390:1:70;423;390;410:5;390:1;410;:5;:::i;:::-;:9;;;;:::i;:::-;409:15;;;;:::i;:::-;405:19;;350:85;;;230:211;171:270;;;:::o;14:180:109:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:109;;14:180;-1:-1:-1;14:180:109:o;381:282::-;421:3;452:1;448:6;445:1;442:13;439:193;;;488:77;485:1;478:88;589:4;586:1;579:15;617:4;614:1;607:15;439:193;-1:-1:-1;648:9:109;;381:282::o;668:274::-;708:1;734;724:189;;769:77;766:1;759:88;870:4;867:1;860:15;898:4;895:1;888:15;724:189;-1:-1:-1;927:9:109;;668:274::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../Math.sol\";\n\n/// @title MockCustomMath: Mock contract for testing the CustomMath library\ncontract MockCustomMath {\n    using CustomMath for uint256;\n\n    function sqrt(uint256 x) public pure returns (uint256) {\n        return x.sqrt();\n    }\n}",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/libraries/mocks/MockMath.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/mocks/MockMath.sol",
    "exportedSymbols": {
      "CustomMath": [
        14526
      ],
      "MockCustomMath": [
        14813
      ]
    },
    "id": 14814,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14795,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:73"
      },
      {
        "absolutePath": "project:/contracts/libraries/Math.sol",
        "file": "../Math.sol",
        "id": 14796,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14814,
        "sourceUnit": 14527,
        "src": "58:21:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockCustomMath",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14797,
          "nodeType": "StructuredDocumentation",
          "src": "81:76:73",
          "text": "@title MockCustomMath: Mock contract for testing the CustomMath library"
        },
        "fullyImplemented": true,
        "id": 14813,
        "linearizedBaseContracts": [
          14813
        ],
        "name": "MockCustomMath",
        "nameLocation": "166:14:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14800,
            "libraryName": {
              "id": 14798,
              "name": "CustomMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14526,
              "src": "193:10:73"
            },
            "nodeType": "UsingForDirective",
            "src": "187:29:73",
            "typeName": {
              "id": 14799,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:73",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 14811,
              "nodeType": "Block",
              "src": "277:32:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 14807,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14802,
                        "src": "294:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 14808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14525,
                      "src": "294:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 14809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "294:8:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14806,
                  "id": 14810,
                  "nodeType": "Return",
                  "src": "287:15:73"
                }
              ]
            },
            "functionSelector": "677342ce",
            "id": 14812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sqrt",
            "nameLocation": "231:4:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14802,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "244:1:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14812,
                  "src": "236:9:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "235:11:73"
            },
            "returnParameters": {
              "id": 14806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14805,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14812,
                  "src": "268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "267:9:73"
            },
            "scope": 14813,
            "src": "222:87:73",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14814,
        "src": "157:154:73",
        "usedErrors": []
      }
    ],
    "src": "33:278:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-16T16:38:22.303Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "MockCustomMath: Mock contract for testing the CustomMath library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}