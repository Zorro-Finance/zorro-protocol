{
  "contractName": "ZorroControllerAnalytics",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "_trancheId",
          "type": "int256"
        }
      ],
      "name": "pendingZORRORewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pendingRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "_trancheId",
          "type": "int256"
        }
      ],
      "name": "stakedWantTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedWantAmt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_trancheId\",\"type\":\"int256\"}],\"name\":\"pendingZORRORewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_trancheId\",\"type\":\"int256\"}],\"name\":\"stakedWantTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedWantAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingZORRORewards(uint256,address,int256)\":{\"params\":{\"_account\":\"Wallet address of on chain account\",\"_pid\":\"Index of pool\",\"_trancheId\":\"Tranche ID. If -1, will do pending rewards for all active tranches\"},\"returns\":{\"pendingRewards\":\"Amount of Zorro rewards\"}},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"stakedWantTokens(uint256,address,int256)\":{\"params\":{\"_account\":\"Wallet address of on chain account\",\"_pid\":\"Index of pool\",\"_trancheId\":\"Tranche ID, or -1 to aggregate across all tranches\"},\"returns\":{\"stakedWantAmt\":\"Amount of staked Want tokens\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"pendingZORRORewards(uint256,address,int256)\":{\"notice\":\"View function to see pending ZORRO on frontend.\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"stakedWantTokens(uint256,address,int256)\":{\"notice\":\"View function to see staked Want tokens on frontend.\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerAnalytics.sol\":\"ZorroControllerAnalytics\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"project:/contracts/controllers/_ZorroControllerAnalytics.sol\":{\"keccak256\":\"0x93ef91dc4700fb05c0e34d4748c73cf34fa9e88de4aedb602a589aacd012df58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://564ef0f8e7c96f6d45816ef942c5a5372a5ffe5af4263264868895c2aed4808b\",\"dweb:/ipfs/QmdK8eJtYo4HkdacAKBUaLjBYipdm5F8D2StddTiYZVCyb\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0xbe9ada3669a1294aec5339475a5d1d1d5d5836ca7ad9562cd76b59f3ebf758ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4d3a6c80869b8df7771df3064acb89aac453bb75feb675a7569515ce79ccbf6\",\"dweb:/ipfs/QmPf1DXbK5X6HQRX4G56g5xE9qncgCtc7Aj73evStNAS6Y\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorro.sol\":{\"keccak256\":\"0x0bc5c8ba8e537c2800d4bfa81f60537eb063dccb880c18464a0e4717bbba40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91193eef46fa3d9831fd5c084fef34206d3fa4b6e7c439d82c15bf69d3707c8\",\"dweb:/ipfs/QmfFuPXAk6p8ZvHMbitFuY6fLPqmG9XQHaQzifDbieeY9D\"]},\"project:/contracts/interfaces/IZorroController.sol\":{\"keccak256\":\"0x8328d85c8bdad2c372560d312eccc24768b5c1fe0d60cd019f61962c8faca98f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03e66335f55b4fa2138bb1cb2b4ef132e0c68a164e7290db006ece8127c51f6d\",\"dweb:/ipfs/Qme9bZ3Qqqy7zvWmAknRRCoHtCdZSVXuvxMN6Gd3kH83Ca\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611e0a806100206000396000f3fe608060405234801561001057600080fd5b50600436106102785760003560e060020a90048063715018a611610155578063b61bb80a116100c7578063ed43633f1161008b578063ed43633f14610573578063ef12696714610586578063f2fde38b1461058f578063f35e4a6e146105a2578063f63cce37146105b5578063fc39a29e146105c857600080fd5b8063b61bb80a14610532578063b95cc68114610545578063c29361421461054e578063c6d758cb14610557578063cb9c2f681461056a57600080fd5b8063985b0a0d11610119578063985b0a0d146104b25780639a8a0592146104c55780639cebd371146104ce578063a13346c6146104d7578063a4d2b083146104df578063b4b4e9eb146104f257600080fd5b8063715018a614610460578063823c43d0146104685780638766eb081461047b5780638c157db21461048e5780638da5cb5b146104a157600080fd5b80634b0e7216116101ee57806353f73f87116101b257806353f73f87146103f85780635527a6f91461040b5780635c63fa8714610414578063668ababb146104275780636b8eb2e51461043a57806370d5ae051461044d57600080fd5b80634b0e7216146103ad5780634cfea68a146103c05780635051d371146103c957806351eb05a6146103dc57806352966832146103ef57600080fd5b80632e31283d116102405780632e31283d14610309578063332e5a7b1461036c5780633b7106881461037f5780633b9ce565146103885780633bbc1ffc1461039157806348cd4cb1146103a457600080fd5b8063081e3eda1461027d57806309b79b3c146102945780630aa0988e1461029e5780631526fe27146102b157806317caf6f114610300575b600080fd5b60aa545b6040519081526020015b60405180910390f35b61029c6105db565b005b61029c6102ac3660046118f8565b610648565b6102c46102bf36600461192b565b6106b0565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c00161028b565b61028160a45481565b61035461031736600461195d565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a03909116815260200161028b565b60ae5461035490600160a060020a031681565b61028160a35481565b61028160a15481565b61029c61039f36600461192b565b610703565b610281609c5481565b61029c6103bb366004611a21565b610792565b610281609d5481565b61029c6103d7366004611a21565b6107ee565b6102816103ea36600461192b565b61084a565b61028160a55481565b610281610406366004611a3c565b610a3d565b61028160a05481565b61029c610422366004611a5f565b610a65565b60995461035490600160a060020a031681565b61029c610448366004611a94565b610ac9565b609b5461035490600160a060020a031681565b61029c610b99565b60ad5461035490600160a060020a031681565b610281610489366004611acf565b610bd2565b60975461035490600160a060020a031681565b603354600160a060020a0316610354565b6102816104c0366004611acf565b610e7a565b61028160a75481565b61028160a25481565b61029c61106f565b609a5461035490600160a060020a031681565b610505610500366004611acf565b6110ed565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161028b565b60985461035490600160a060020a031681565b61028160a65481565b610281609e5481565b61029c610565366004611b04565b61114e565b610281609f5481565b61029c610581366004611b2e565b61121a565b61028160a85481565b61029c61059d366004611a21565b611293565b61029c6105b036600461192b565b61134b565b61029c6105c33660046118f8565b6113d0565b60a95461035490600160a060020a031681565b60ad54600160a060020a031633600160a060020a03161461061a5760405160e560020a62461bcd02815260040161061190611bbb565b60405180910390fd5b60a85460a75414156106415760405160e560020a62461bcd02815260040161061190611bf2565b600060a555565b603354600160a060020a031633146106755760405160e560020a62461bcd02815260040161061190611c29565b60978054600160a060020a0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560988054929093169116179055565b60aa81815481106106c057600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b603354600160a060020a031633146107305760405160e560020a62461bcd02815260040161061190611c29565b60a954600160a060020a0316301461078d5760405160e560020a62461bcd02815260206004820152600f60248201527f6f6e6c7920686f6d6520636861696e00000000000000000000000000000000006044820152606401610611565b609f55565b603354600160a060020a031633146107bf5760405160e560020a62461bcd02815260040161061190611c29565b609b805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b603354600160a060020a0316331461081b5760405160e560020a62461bcd02815260040161061190611c29565b60ad805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008060aa838154811061086057610860611c5e565b90600052602060002090600602019050806002015443116108845750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d9190611c77565b905080610924575043600290910155506000919050565b60008260020154436109369190611ca9565b9050600060a4548460010154609e54846109509190611cc0565b61095a9190611cc0565b6109649190611cdf565b60a954909150600160a060020a031630141561098d576109848130611495565b60009450610a16565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b50505050809450610a16856114b3565b808460030154610a269190611d04565b600385015550504360029092019190915550919050565b600091825260ab60209081526040808420600160a060020a0393909316845291905290205490565b603354600160a060020a03163314610a925760405160e560020a62461bcd02815260040161061190611c29565b60a79290925560a85560a9805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a031614610aff5760405160e560020a62461bcd02815260040161061190611bbb565b6000610b0d83612710611cc0565b848660a354610b1c9190611cc0565b610b269190611cc0565b610b309190611cdf565b905060a154811115610b45575060a154610b54565b60a054811015610b54575060a0545b609d54610b6387612710611cc0565b610b6d9190611cc0565b60a254610b7a8385611cc0565b610b849190611cc0565b610b8e9190611cdf565b609e55505050505050565b603354600160a060020a03163314610bc65760405160e560020a62461bcd02815260040161061190611c29565b610bd060006114ee565b565b60008060aa8581548110610be857610be8611c5e565b9060005260206000209060060201905060008160050160009054906101000a9004600160a060020a0316600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c769190611c77565b905060008260050160009054906101000a9004600160a060020a0316600160a060020a03166342da4eb36040518163ffffffff1660e060020a028152600401602060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190611c77565b905081610d095760009350505050610e73565b6000851215610dcd576000610d1e8888610a3d565b905060005b81811015610dc657600089815260ab60209081526040808320600160a060020a038c1684529091528120805483908110610d5f57610d5f611c5e565b90600052602060002090600602019050848160010154858360000154610d859190611cc0565b610d8f9190611cc0565b610d9e9064e8d4a51000611cc0565b610da89190611cdf565b610db29088611d04565b96505080610dbf90611d1c565b9050610d23565b5050610e6f565b600087815260ab60209081526040808320600160a060020a038a1684529091528120805487908110610e0157610e01611c5e565b90600052602060002090600602019050806005015460001415610e6857828160010154838360000154610e349190611cc0565b610e439064e8d4a51000611cc0565b610e4d9190611cc0565b610e579190611cdf565b610e619086611d04565b9450610e6d565b600094505b505b5050505b9392505050565b60008060aa8581548110610e9057610e90611c5e565b906000526020600020906006020190506000816003015490508160020154431115610f06576000826002015443610ec79190611ca9565b9050600060a4548460010154609e5484610ee19190611cc0565b610eeb9190611cc0565b610ef59190611cdf565b9050610f018184611d04565b925050505b6004820154610f1a57600092505050610e73565b6000841215610fdd576000610f2f8787610a3d565b905060005b81811015610fd657600088815260ab60209081526040808320600160a060020a038b1684529091528120805483908110610f7057610f70611c5e565b90600052602060002090600602019050806005015460001415610fc557600281015460048601548254610fa4908790611cc0565b610fae9190611cdf565b610fb89088611d04565b610fc29190611ca9565b95505b50610fcf81611d1c565b9050610f34565b5050611066565b600086815260ab60209081526040808320600160a060020a0389168452909152812080548690811061101157611011611c5e565b9060005260206000209060060201905080600501546000141561106057600281015460048401548254611045908590611cc0565b61104f9190611cdf565b6110599190611ca9565b9350610e6f565b60009350505b50509392505050565b60ad54600160a060020a031633600160a060020a0316146110a55760405160e560020a62461bcd02815260040161061190611bbb565b60a85460a75414156110cc5760405160e560020a62461bcd02815260040161061190611bf2565b609b5460a65460975461064192600160a060020a039182169291169061154d565b60ab602052826000526040600020602052816000526040600020818154811061111557600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b603354600160a060020a0316331461117b5760405160e560020a62461bcd02815260040161061190611c29565b609754600160a060020a03838116911614156112025760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610611565b611216600160a060020a038316338361154d565b5050565b603354600160a060020a031633146112475760405160e560020a62461bcd02815260040161061190611c29565b609d859055838360008161125d5761125d611c5e565b602002919091013560a055508383600181811061127c5761127c611c5e565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146112c05760405160e560020a62461bcd02815260040161061190611c29565b600160a060020a03811661133f5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610611565b611348816114ee565b50565b603354600160a060020a031633146113785760405160e560020a62461bcd02815260040161061190611c29565b609c54156113cb5760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c6500000000000000000000006044820152606401610611565b609c55565b603354600160a060020a031633146113fd5760405160e560020a62461bcd02815260040161061190611c29565b60a954600160a060020a0316301461145a5760405160e560020a62461bcd02815260206004820152600f60248201527f6f6e6c7920686f6d6520636861696e00000000000000000000000000000000006044820152606401610611565b60998054600160a060020a0393841673ffffffffffffffffffffffffffffffffffffffff1991821617909155609a8054929093169116179055565b60995460975461121691600160a060020a03918216911683856115fb565b60a85460a75414156114da5760405160e560020a62461bcd02815260040161061190611bf2565b8060a5546114e89190611d04565b60a55550565b60338054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051600160a060020a0383166024820152604481018290526115f69084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611652565b505050565b604051600160a060020a038085166024830152831660448201526064810182905261164c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611592565b50505050565b60006116a7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a031661173a9092919063ffffffff16565b8051909150156115f657808060200190518101906116c59190611d37565b6115f65760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610611565b60606117498484600085611751565b949350505050565b606030318311156117cd5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610611565b600160a060020a0385163b6118275760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610611565b60008086600160a060020a031685876040516118439190611d85565b60006040518083038185875af1925050503d8060008114611880576040519150601f19603f3d011682016040523d82523d6000602084013e611885565b606091505b50915091506118958282866118a0565b979650505050505050565b606083156118af575081610e73565b8251156118bf5782518084602001fd5b8160405160e560020a62461bcd0281526004016106119190611da1565b8035600160a060020a03811681146118f357600080fd5b919050565b6000806040838503121561190b57600080fd5b611914836118dc565b9150611922602084016118dc565b90509250929050565b60006020828403121561193d57600080fd5b5035919050565b60e060020a634e487b7102600052604160045260246000fd5b60008060006060848603121561197257600080fd5b83359250602084013567ffffffffffffffff8082111561199157600080fd5b818601915086601f8301126119a557600080fd5b8135818111156119b7576119b7611944565b604051601f8201601f19908116603f011681019083821181831017156119df576119df611944565b816040528281528960208487010111156119f857600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b600060208284031215611a3357600080fd5b610e73826118dc565b60008060408385031215611a4f57600080fd5b82359150611922602084016118dc565b600080600060608486031215611a7457600080fd5b8335925060208401359150611a8b604085016118dc565b90509250925092565b600080600080600060a08688031215611aac57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215611ae457600080fd5b83359250611af4602085016118dc565b9150604084013590509250925092565b60008060408385031215611b1757600080fd5b611b20836118dc565b946020939093013593505050565b600080600080600060808688031215611b4657600080fd5b85359450602086013567ffffffffffffffff80821115611b6557600080fd5b818801915088601f830112611b7957600080fd5b813581811115611b8857600080fd5b8960208083028501011115611b9c57600080fd5b9699602092909201985095966040810135965060600135945092505050565b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b600060208284031215611c8957600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b600082821015611cbb57611cbb611c90565b500390565b6000816000190483118215151615611cda57611cda611c90565b500290565b600082611cff5760e060020a634e487b7102600052601260045260246000fd5b500490565b60008219821115611d1757611d17611c90565b500190565b6000600019821415611d3057611d30611c90565b5060010190565b600060208284031215611d4957600080fd5b81518015158114610e7357600080fd5b60005b83811015611d74578181015183820152602001611d5c565b8381111561164c5750506000910152565b60008251611d97818460208701611d59565b9190910192915050565b6020815260008251806020840152611dc0816040850160208701611d59565b601f01601f1916919091016040019291505056fea26469706673582212202a5c32b14d2108145c857a66320a3afc763089129ab1dc3fb890480265e16ac264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102785760003560e060020a90048063715018a611610155578063b61bb80a116100c7578063ed43633f1161008b578063ed43633f14610573578063ef12696714610586578063f2fde38b1461058f578063f35e4a6e146105a2578063f63cce37146105b5578063fc39a29e146105c857600080fd5b8063b61bb80a14610532578063b95cc68114610545578063c29361421461054e578063c6d758cb14610557578063cb9c2f681461056a57600080fd5b8063985b0a0d11610119578063985b0a0d146104b25780639a8a0592146104c55780639cebd371146104ce578063a13346c6146104d7578063a4d2b083146104df578063b4b4e9eb146104f257600080fd5b8063715018a614610460578063823c43d0146104685780638766eb081461047b5780638c157db21461048e5780638da5cb5b146104a157600080fd5b80634b0e7216116101ee57806353f73f87116101b257806353f73f87146103f85780635527a6f91461040b5780635c63fa8714610414578063668ababb146104275780636b8eb2e51461043a57806370d5ae051461044d57600080fd5b80634b0e7216146103ad5780634cfea68a146103c05780635051d371146103c957806351eb05a6146103dc57806352966832146103ef57600080fd5b80632e31283d116102405780632e31283d14610309578063332e5a7b1461036c5780633b7106881461037f5780633b9ce565146103885780633bbc1ffc1461039157806348cd4cb1146103a457600080fd5b8063081e3eda1461027d57806309b79b3c146102945780630aa0988e1461029e5780631526fe27146102b157806317caf6f114610300575b600080fd5b60aa545b6040519081526020015b60405180910390f35b61029c6105db565b005b61029c6102ac3660046118f8565b610648565b6102c46102bf36600461192b565b6106b0565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c00161028b565b61028160a45481565b61035461031736600461195d565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a03909116815260200161028b565b60ae5461035490600160a060020a031681565b61028160a35481565b61028160a15481565b61029c61039f36600461192b565b610703565b610281609c5481565b61029c6103bb366004611a21565b610792565b610281609d5481565b61029c6103d7366004611a21565b6107ee565b6102816103ea36600461192b565b61084a565b61028160a55481565b610281610406366004611a3c565b610a3d565b61028160a05481565b61029c610422366004611a5f565b610a65565b60995461035490600160a060020a031681565b61029c610448366004611a94565b610ac9565b609b5461035490600160a060020a031681565b61029c610b99565b60ad5461035490600160a060020a031681565b610281610489366004611acf565b610bd2565b60975461035490600160a060020a031681565b603354600160a060020a0316610354565b6102816104c0366004611acf565b610e7a565b61028160a75481565b61028160a25481565b61029c61106f565b609a5461035490600160a060020a031681565b610505610500366004611acf565b6110ed565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161028b565b60985461035490600160a060020a031681565b61028160a65481565b610281609e5481565b61029c610565366004611b04565b61114e565b610281609f5481565b61029c610581366004611b2e565b61121a565b61028160a85481565b61029c61059d366004611a21565b611293565b61029c6105b036600461192b565b61134b565b61029c6105c33660046118f8565b6113d0565b60a95461035490600160a060020a031681565b60ad54600160a060020a031633600160a060020a03161461061a5760405160e560020a62461bcd02815260040161061190611bbb565b60405180910390fd5b60a85460a75414156106415760405160e560020a62461bcd02815260040161061190611bf2565b600060a555565b603354600160a060020a031633146106755760405160e560020a62461bcd02815260040161061190611c29565b60978054600160a060020a0393841673ffffffffffffffffffffffffffffffffffffffff199182161790915560988054929093169116179055565b60aa81815481106106c057600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b603354600160a060020a031633146107305760405160e560020a62461bcd02815260040161061190611c29565b60a954600160a060020a0316301461078d5760405160e560020a62461bcd02815260206004820152600f60248201527f6f6e6c7920686f6d6520636861696e00000000000000000000000000000000006044820152606401610611565b609f55565b603354600160a060020a031633146107bf5760405160e560020a62461bcd02815260040161061190611c29565b609b805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b603354600160a060020a0316331461081b5760405160e560020a62461bcd02815260040161061190611c29565b60ad805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008060aa838154811061086057610860611c5e565b90600052602060002090600602019050806002015443116108845750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d9190611c77565b905080610924575043600290910155506000919050565b60008260020154436109369190611ca9565b9050600060a4548460010154609e54846109509190611cc0565b61095a9190611cc0565b6109649190611cdf565b60a954909150600160a060020a031630141561098d576109848130611495565b60009450610a16565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b50505050809450610a16856114b3565b808460030154610a269190611d04565b600385015550504360029092019190915550919050565b600091825260ab60209081526040808420600160a060020a0393909316845291905290205490565b603354600160a060020a03163314610a925760405160e560020a62461bcd02815260040161061190611c29565b60a79290925560a85560a9805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a031614610aff5760405160e560020a62461bcd02815260040161061190611bbb565b6000610b0d83612710611cc0565b848660a354610b1c9190611cc0565b610b269190611cc0565b610b309190611cdf565b905060a154811115610b45575060a154610b54565b60a054811015610b54575060a0545b609d54610b6387612710611cc0565b610b6d9190611cc0565b60a254610b7a8385611cc0565b610b849190611cc0565b610b8e9190611cdf565b609e55505050505050565b603354600160a060020a03163314610bc65760405160e560020a62461bcd02815260040161061190611c29565b610bd060006114ee565b565b60008060aa8581548110610be857610be8611c5e565b9060005260206000209060060201905060008160050160009054906101000a9004600160a060020a0316600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c769190611c77565b905060008260050160009054906101000a9004600160a060020a0316600160a060020a03166342da4eb36040518163ffffffff1660e060020a028152600401602060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190611c77565b905081610d095760009350505050610e73565b6000851215610dcd576000610d1e8888610a3d565b905060005b81811015610dc657600089815260ab60209081526040808320600160a060020a038c1684529091528120805483908110610d5f57610d5f611c5e565b90600052602060002090600602019050848160010154858360000154610d859190611cc0565b610d8f9190611cc0565b610d9e9064e8d4a51000611cc0565b610da89190611cdf565b610db29088611d04565b96505080610dbf90611d1c565b9050610d23565b5050610e6f565b600087815260ab60209081526040808320600160a060020a038a1684529091528120805487908110610e0157610e01611c5e565b90600052602060002090600602019050806005015460001415610e6857828160010154838360000154610e349190611cc0565b610e439064e8d4a51000611cc0565b610e4d9190611cc0565b610e579190611cdf565b610e619086611d04565b9450610e6d565b600094505b505b5050505b9392505050565b60008060aa8581548110610e9057610e90611c5e565b906000526020600020906006020190506000816003015490508160020154431115610f06576000826002015443610ec79190611ca9565b9050600060a4548460010154609e5484610ee19190611cc0565b610eeb9190611cc0565b610ef59190611cdf565b9050610f018184611d04565b925050505b6004820154610f1a57600092505050610e73565b6000841215610fdd576000610f2f8787610a3d565b905060005b81811015610fd657600088815260ab60209081526040808320600160a060020a038b1684529091528120805483908110610f7057610f70611c5e565b90600052602060002090600602019050806005015460001415610fc557600281015460048601548254610fa4908790611cc0565b610fae9190611cdf565b610fb89088611d04565b610fc29190611ca9565b95505b50610fcf81611d1c565b9050610f34565b5050611066565b600086815260ab60209081526040808320600160a060020a0389168452909152812080548690811061101157611011611c5e565b9060005260206000209060060201905080600501546000141561106057600281015460048401548254611045908590611cc0565b61104f9190611cdf565b6110599190611ca9565b9350610e6f565b60009350505b50509392505050565b60ad54600160a060020a031633600160a060020a0316146110a55760405160e560020a62461bcd02815260040161061190611bbb565b60a85460a75414156110cc5760405160e560020a62461bcd02815260040161061190611bf2565b609b5460a65460975461064192600160a060020a039182169291169061154d565b60ab602052826000526040600020602052816000526040600020818154811061111557600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b603354600160a060020a0316331461117b5760405160e560020a62461bcd02815260040161061190611c29565b609754600160a060020a03838116911614156112025760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610611565b611216600160a060020a038316338361154d565b5050565b603354600160a060020a031633146112475760405160e560020a62461bcd02815260040161061190611c29565b609d859055838360008161125d5761125d611c5e565b602002919091013560a055508383600181811061127c5761127c611c5e565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146112c05760405160e560020a62461bcd02815260040161061190611c29565b600160a060020a03811661133f5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610611565b611348816114ee565b50565b603354600160a060020a031633146113785760405160e560020a62461bcd02815260040161061190611c29565b609c54156113cb5760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c6500000000000000000000006044820152606401610611565b609c55565b603354600160a060020a031633146113fd5760405160e560020a62461bcd02815260040161061190611c29565b60a954600160a060020a0316301461145a5760405160e560020a62461bcd02815260206004820152600f60248201527f6f6e6c7920686f6d6520636861696e00000000000000000000000000000000006044820152606401610611565b60998054600160a060020a0393841673ffffffffffffffffffffffffffffffffffffffff1991821617909155609a8054929093169116179055565b60995460975461121691600160a060020a03918216911683856115fb565b60a85460a75414156114da5760405160e560020a62461bcd02815260040161061190611bf2565b8060a5546114e89190611d04565b60a55550565b60338054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051600160a060020a0383166024820152604481018290526115f69084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611652565b505050565b604051600160a060020a038085166024830152831660448201526064810182905261164c9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611592565b50505050565b60006116a7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a031661173a9092919063ffffffff16565b8051909150156115f657808060200190518101906116c59190611d37565b6115f65760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610611565b60606117498484600085611751565b949350505050565b606030318311156117cd5760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610611565b600160a060020a0385163b6118275760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610611565b60008086600160a060020a031685876040516118439190611d85565b60006040518083038185875af1925050503d8060008114611880576040519150601f19603f3d011682016040523d82523d6000602084013e611885565b606091505b50915091506118958282866118a0565b979650505050505050565b606083156118af575081610e73565b8251156118bf5782518084602001fd5b8160405160e560020a62461bcd0281526004016106119190611da1565b8035600160a060020a03811681146118f357600080fd5b919050565b6000806040838503121561190b57600080fd5b611914836118dc565b9150611922602084016118dc565b90509250929050565b60006020828403121561193d57600080fd5b5035919050565b60e060020a634e487b7102600052604160045260246000fd5b60008060006060848603121561197257600080fd5b83359250602084013567ffffffffffffffff8082111561199157600080fd5b818601915086601f8301126119a557600080fd5b8135818111156119b7576119b7611944565b604051601f8201601f19908116603f011681019083821181831017156119df576119df611944565b816040528281528960208487010111156119f857600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b600060208284031215611a3357600080fd5b610e73826118dc565b60008060408385031215611a4f57600080fd5b82359150611922602084016118dc565b600080600060608486031215611a7457600080fd5b8335925060208401359150611a8b604085016118dc565b90509250925092565b600080600080600060a08688031215611aac57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215611ae457600080fd5b83359250611af4602085016118dc565b9150604084013590509250925092565b60008060408385031215611b1757600080fd5b611b20836118dc565b946020939093013593505050565b600080600080600060808688031215611b4657600080fd5b85359450602086013567ffffffffffffffff80821115611b6557600080fd5b818801915088601f830112611b7957600080fd5b813581811115611b8857600080fd5b8960208083028501011115611b9c57600080fd5b9699602092909201985095966040810135965060600135945092505050565b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b600060208284031215611c8957600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b600082821015611cbb57611cbb611c90565b500390565b6000816000190483118215151615611cda57611cda611c90565b500290565b600082611cff5760e060020a634e487b7102600052601260045260246000fd5b500490565b60008219821115611d1757611d17611c90565b500190565b6000600019821415611d3057611d30611c90565b5060010190565b600060208284031215611d4957600080fd5b81518015158114610e7357600080fd5b60005b83811015611d74578181015183820152602001611d5c565b8381111561164c5750506000910152565b60008251611d97818460208701611d59565b9190910192915050565b6020815260008251806020840152611dc0816040850160208701611d59565b601f01601f1916919091016040019291505056fea26469706673582212202a5c32b14d2108145c857a66320a3afc763089129ab1dc3fb890480265e16ac264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13582:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:123",
                "type": ""
              }
            ],
            "src": "14:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:147:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "370:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "379:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "382:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "372:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "372:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "372:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "324:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "293:93:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:123",
                "type": ""
              }
            ],
            "src": "196:196:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:173:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "539:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "542:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "494:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "555:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "584:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "565:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "555:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "603:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "636:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "647:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "613:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "603:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:123",
                "type": ""
              }
            ],
            "src": "397:260:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "732:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "778:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "787:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "790:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "780:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "780:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "780:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "753:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "762:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "749:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "745:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "742:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "803:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "826:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "813:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "813:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "803:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "698:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "709:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "721:6:123",
                "type": ""
              }
            ],
            "src": "662:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1114:373:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1124:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1136:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1147:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1132:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1132:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1124:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1160:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1170:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1164:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1228:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1243:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1251:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1239:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1239:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1221:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1221:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1221:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1291:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1264:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1318:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1329:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1314:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1307:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1361:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1372:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1357:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1357:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1377:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1350:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1350:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1350:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1404:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1415:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1421:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1393:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1393:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1393:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1448:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1459:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1444:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1444:19:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1469:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1477:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1465:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1437:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:44:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1437:44:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1043:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1054:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1062:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1070:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1078:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1086:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1094:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1105:4:123",
                "type": ""
              }
            ],
            "src": "847:640:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1524:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1541:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1544:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1534:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1534:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1638:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1641:4:123",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1631:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1631:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1631:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1662:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1665:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1655:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1655:15:123"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1492:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1794:944:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1840:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1849:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1852:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1842:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1842:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1842:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1815:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1824:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1811:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1811:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1836:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1807:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1804:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1888:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1875:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1875:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1865:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1907:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1938:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1949:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1934:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1934:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1921:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1911:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1962:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1972:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1966:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2017:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2026:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2029:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2019:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2019:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2019:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2005:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2013:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2002:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1999:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2042:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2056:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2067:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2052:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2046:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2122:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2131:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2134:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2124:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2124:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2124:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2101:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2105:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2097:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2097:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2112:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2093:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2093:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2086:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2083:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2147:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2170:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:16:123"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2151:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2196:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2198:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2198:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2198:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2188:2:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2192:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2185:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:10:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:36:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2227:17:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2241:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2237:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:7:123"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2231:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2253:23:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2273:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2267:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:9:123"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2257:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2285:71:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2307:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2331:2:123"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2335:4:123",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2327:3:123"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2327:13:123"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2342:2:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2323:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2323:22:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2347:2:123",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2319:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2319:31:123"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2352:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2315:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:40:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2303:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:53:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2289:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2415:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2417:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2417:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2417:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2374:10:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2386:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2371:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2371:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2394:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2406:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2391:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2391:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2368:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2365:72:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2453:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2457:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2446:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2446:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2446:22:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2484:6:123"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2492:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2477:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2477:18:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2477:18:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2541:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2550:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2553:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2543:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2543:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2543:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2518:2:123"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2522:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2514:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2514:11:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2527:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2510:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:20:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2532:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2507:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2504:53:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2583:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2591:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2579:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2579:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2600:2:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2604:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2596:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:11:123"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2609:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2566:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2566:46:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2566:46:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2636:6:123"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2644:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2632:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2632:15:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2649:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2628:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2628:24:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2654:1:123",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2621:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2621:35:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2665:16:123",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2675:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2665:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2690:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2717:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2728:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2713:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2713:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2700:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2700:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2690:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1744:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1755:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1767:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1775:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1783:6:123",
                "type": ""
              }
            ],
            "src": "1681:1057:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2844:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2854:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2866:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2877:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2862:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2854:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2896:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2911:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2919:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2907:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2907:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2889:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2889:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2889:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2813:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2824:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2835:4:123",
                "type": ""
              }
            ],
            "src": "2743:226:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3044:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3090:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3099:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3102:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3092:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3092:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3092:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3065:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3074:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3061:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3061:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3086:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3057:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3057:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3054:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3115:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3144:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3125:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3125:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3115:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3010:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3021:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3033:6:123",
                "type": ""
              }
            ],
            "src": "2974:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3298:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3307:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3310:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3300:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3300:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3300:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3273:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3282:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3269:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3269:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3294:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3265:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3265:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3262:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3323:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3346:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3333:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3333:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3323:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3365:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3398:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3409:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3394:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3375:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3365:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3210:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3221:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3233:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3241:6:123",
                "type": ""
              }
            ],
            "src": "3165:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3528:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3574:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3583:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3586:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3576:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3576:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3576:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3549:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3558:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3545:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3545:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3570:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3541:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3538:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3599:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3622:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3609:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3599:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3641:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3668:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3679:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3664:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3651:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3651:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3641:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3692:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3725:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3736:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3721:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3721:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3702:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3692:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3478:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3489:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3501:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3509:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3517:6:123",
                "type": ""
              }
            ],
            "src": "3424:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3889:316:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3936:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3945:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3948:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3938:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3938:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3938:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3910:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3919:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3906:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3906:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3931:3:123",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3902:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3902:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3899:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3961:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3984:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3971:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3961:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4003:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4030:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4041:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4026:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4026:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4013:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4013:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4003:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4054:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4081:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4092:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4077:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4077:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4064:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4054:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4105:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4132:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4143:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4128:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4128:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4115:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4105:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4156:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4183:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4194:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4179:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4179:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4166:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4166:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4156:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3823:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3834:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3846:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3854:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3862:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3870:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3878:6:123",
                "type": ""
              }
            ],
            "src": "3751:454:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4313:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4359:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4368:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4371:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4361:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4361:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4361:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4334:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4343:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4330:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4330:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4355:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4326:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4326:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4323:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4384:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4407:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4394:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4384:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4426:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4459:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4470:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4455:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4455:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4436:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4436:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4426:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4483:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4510:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4521:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4506:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4506:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4493:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4493:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4483:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4263:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4274:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4286:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4294:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4302:6:123",
                "type": ""
              }
            ],
            "src": "4210:321:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4640:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4686:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4695:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4698:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4688:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4688:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4688:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4661:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4670:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4682:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4653:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4650:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4711:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4734:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4721:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4711:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4753:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4786:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4797:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4782:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4782:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4763:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4763:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4753:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4810:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4837:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4848:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4833:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4833:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4820:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4820:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4810:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4590:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4601:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4613:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4621:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4629:6:123",
                "type": ""
              }
            ],
            "src": "4536:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5104:294:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5114:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5126:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5137:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5122:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5122:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5114:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5157:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5168:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5150:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5150:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5150:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5195:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5206:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5191:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5191:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5211:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5184:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5184:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5184:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5238:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5249:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5234:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5234:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5254:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5227:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5227:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5227:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5281:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5292:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5277:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5277:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5297:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5270:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5270:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5270:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5324:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5335:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "5341:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5313:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5313:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5368:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5379:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5364:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5364:19:123"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5385:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5357:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5357:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5357:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5033:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5044:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5052:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5060:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5068:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5076:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5084:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5095:4:123",
                "type": ""
              }
            ],
            "src": "4863:535:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5490:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5536:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5545:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5548:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5538:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5538:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5538:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5511:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5520:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5507:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5507:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5532:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5503:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5503:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5500:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5561:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5590:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5571:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5571:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5561:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5609:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5636:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5647:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5632:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5632:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5619:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5619:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5609:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5448:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5459:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5471:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5479:6:123",
                "type": ""
              }
            ],
            "src": "5403:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5818:665:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5865:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5874:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5877:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5867:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5867:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5867:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5839:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5848:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5835:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5835:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5860:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5831:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5831:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5828:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5890:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5913:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5900:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5900:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5890:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5932:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5963:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5974:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5959:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5959:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5946:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5936:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5987:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5997:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5991:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6042:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6051:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6054:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6044:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6044:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6044:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6030:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6038:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6027:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6024:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6067:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6081:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6092:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6077:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6071:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6147:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6156:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6159:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6149:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6149:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6149:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6126:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6130:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6122:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6122:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6137:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6118:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6118:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6111:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6111:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6108:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6172:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6199:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6186:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6186:16:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6176:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6229:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6238:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6241:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6231:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6231:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6231:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6217:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6225:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6214:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6214:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6211:34:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6304:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6313:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6316:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6306:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6306:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6306:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6268:2:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6276:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6284:2:123",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6272:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6272:15:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6264:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6264:24:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6290:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6260:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6260:33:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6295:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6257:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6257:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6254:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6329:21:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6343:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6347:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6339:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6339:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6329:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6359:16:123",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "6369:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6359:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6384:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6411:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6422:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6407:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6407:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6394:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6394:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6384:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6435:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6462:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6473:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6458:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6458:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6445:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6435:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5752:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5763:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5775:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5783:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5791:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5799:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5807:6:123",
                "type": ""
              }
            ],
            "src": "5662:821:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6662:167:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6679:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6690:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6672:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6672:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6672:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6713:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6724:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6709:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6709:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6729:2:123",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6702:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6702:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6702:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6752:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6763:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6748:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6748:18:123"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6768:19:123",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6741:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6741:47:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6741:47:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6797:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6809:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6820:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6805:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6797:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6639:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6653:4:123",
                "type": ""
              }
            ],
            "src": "6488:341:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7008:173:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7025:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7036:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7018:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7018:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7018:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7059:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7070:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7055:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7055:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7075:2:123",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7048:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7048:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7048:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7098:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7109:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7094:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7094:18:123"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7114:25:123",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7087:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7087:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7087:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7149:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7161:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7172:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7157:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7157:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7149:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6985:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6999:4:123",
                "type": ""
              }
            ],
            "src": "6834:347:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7360:182:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7377:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7388:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7370:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7370:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7370:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7411:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7422:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7407:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7407:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7427:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7450:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7461:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7446:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7446:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7466:34:123",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7439:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:62:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7510:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7522:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7533:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7518:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7518:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7510:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7337:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7351:4:123",
                "type": ""
              }
            ],
            "src": "7186:356:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7721:165:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7738:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7749:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7731:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7731:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7731:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7772:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7783:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7768:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7768:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7788:2:123",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7761:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7761:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7761:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7811:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7822:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7807:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7807:18:123"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7827:17:123",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7800:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7800:45:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7800:45:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7854:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7866:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7877:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7862:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7854:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7698:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7712:4:123",
                "type": ""
              }
            ],
            "src": "7547:339:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7923:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7940:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7943:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7933:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7933:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7933:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8037:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8040:4:123",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8030:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8030:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8030:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8061:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8064:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8054:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8054:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8054:15:123"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7891:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8161:103:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8207:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8216:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8219:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8209:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8209:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8209:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8182:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8191:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8178:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8178:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8203:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8174:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8174:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8171:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8232:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8248:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8242:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8242:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8232:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8127:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8138:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8150:6:123",
                "type": ""
              }
            ],
            "src": "8080:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8301:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8318:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8321:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8311:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8311:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8311:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8415:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8418:4:123",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8408:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8408:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8439:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8442:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8432:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8432:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8432:15:123"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8269:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8507:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8529:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8531:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8531:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8531:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8523:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8526:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8520:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8520:8:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8517:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8560:17:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8572:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8575:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8568:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8568:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8560:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8489:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8492:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8498:4:123",
                "type": ""
              }
            ],
            "src": "8458:125:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8640:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8699:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8701:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8701:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8701:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8671:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8664:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8664:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8657:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8657:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8679:1:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8690:1:123",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8686:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8686:6:123"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8694:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8682:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8682:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8676:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8676:21:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8653:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8653:45:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8650:71:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8730:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8745:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8748:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8741:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8741:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8730:7:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8619:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8622:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8628:7:123",
                "type": ""
              }
            ],
            "src": "8588:168:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8807:228:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8838:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8859:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8862:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8852:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8852:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8852:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8960:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8963:4:123",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8953:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8953:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8953:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8988:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8991:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8981:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8981:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8981:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8827:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8820:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8820:9:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8817:189:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9015:14:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9024:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9027:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9020:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9020:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9015:1:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8792:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8795:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8801:1:123",
                "type": ""
              }
            ],
            "src": "8761:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9169:168:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9179:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9191:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9202:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9187:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9187:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9179:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9221:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9236:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9244:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9214:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9214:74:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9308:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9319:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9304:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9304:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9324:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9297:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9297:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9297:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9130:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9141:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9149:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9160:4:123",
                "type": ""
              }
            ],
            "src": "9040:297:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9390:80:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9417:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9419:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9419:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9419:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9406:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9413:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9409:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9409:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9403:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9403:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9400:39:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9448:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9459:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9462:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9455:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9455:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9448:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9373:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9376:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9382:3:123",
                "type": ""
              }
            ],
            "src": "9342:128:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9522:88:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9553:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9555:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9555:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9555:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9538:5:123"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9549:1:123",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9545:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9545:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9535:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9535:17:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9532:43:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9584:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9595:5:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9602:1:123",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9591:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9591:13:123"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9584:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9504:5:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9514:3:123",
                "type": ""
              }
            ],
            "src": "9475:135:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9789:243:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9806:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9817:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9799:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9799:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9840:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9851:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9836:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9836:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9856:2:123",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9829:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9829:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9829:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9879:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9890:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9875:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9875:18:123"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9895:34:123",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9868:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9868:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9868:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9950:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9961:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9946:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9946:18:123"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9966:23:123",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9939:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9939:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9939:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9999:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10011:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10022:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10007:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10007:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9999:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9766:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9780:4:123",
                "type": ""
              }
            ],
            "src": "9615:417:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10211:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10228:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10239:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10221:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10221:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10221:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10262:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10273:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10258:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10258:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10278:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10251:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10251:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10251:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10301:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10312:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10297:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10297:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10317:34:123",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10290:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10290:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10290:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10372:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10383:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10368:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10368:18:123"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10388:8:123",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10361:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10361:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10361:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10406:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10418:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10429:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10414:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10414:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10406:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10188:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10202:4:123",
                "type": ""
              }
            ],
            "src": "10037:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10618:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10635:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10646:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10628:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10628:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10669:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10680:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10665:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10665:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10685:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10658:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10658:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10658:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10708:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10719:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10704:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10704:18:123"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10724:23:123",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10697:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10697:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10697:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10757:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10769:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10780:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10765:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10765:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10757:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10595:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10609:4:123",
                "type": ""
              }
            ],
            "src": "10444:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10951:241:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10961:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10973:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10984:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10969:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10969:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10961:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10996:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11006:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11000:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11064:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11079:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11087:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11075:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11075:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11057:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11057:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11057:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11111:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11122:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11107:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11107:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11131:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11139:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11127:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11127:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11100:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11100:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11100:43:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11163:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11174:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11159:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11159:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11179:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11152:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11152:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11152:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10904:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10915:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10923:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10931:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10942:4:123",
                "type": ""
              }
            ],
            "src": "10794:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11275:199:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11321:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11330:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11333:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11323:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11323:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11323:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11296:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11305:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11292:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11292:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11317:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11288:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11288:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11285:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11346:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11365:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11359:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11359:16:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11350:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11428:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11437:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11440:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11430:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11430:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11430:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11397:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11418:5:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11411:6:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11411:13:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11404:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11404:21:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11394:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11394:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11387:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11387:40:123"
                  },
                  "nodeType": "YulIf",
                  "src": "11384:60:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11453:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11463:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11453:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11241:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11252:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11264:6:123",
                "type": ""
              }
            ],
            "src": "11197:277:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11653:232:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11670:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11681:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11663:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11663:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11663:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11704:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11715:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11700:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11700:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11720:2:123",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11693:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11693:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11743:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11754:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11739:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11739:18:123"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11759:34:123",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11732:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11732:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11732:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11814:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11825:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11810:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11810:18:123"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11830:12:123",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11803:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11803:40:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11803:40:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11852:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11864:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11875:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11860:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11860:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11852:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11630:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11644:4:123",
                "type": ""
              }
            ],
            "src": "11479:406:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12064:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12081:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12092:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12074:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12074:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12074:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12115:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12126:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12111:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12111:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12131:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12104:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12104:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12104:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12154:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12165:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12150:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12150:18:123"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12170:34:123",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12143:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12143:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12143:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12225:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12236:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12221:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12221:18:123"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12241:8:123",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12214:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12214:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12214:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12259:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12271:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12282:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12267:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12267:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12259:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12041:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12055:4:123",
                "type": ""
              }
            ],
            "src": "11890:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12471:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12488:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12499:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12481:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12481:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12481:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12522:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12533:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12518:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12518:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12538:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12511:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12511:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12511:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12561:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12572:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12557:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12557:18:123"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12577:31:123",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12550:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12550:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12550:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12618:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12630:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12641:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12626:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12626:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12618:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12448:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12462:4:123",
                "type": ""
              }
            ],
            "src": "12297:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12708:205:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12718:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12727:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12722:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12787:63:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12812:3:123"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12817:1:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12808:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12808:11:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12831:3:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12836:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12827:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12827:11:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12821:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12821:18:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12801:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12801:39:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12801:39:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12748:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12751:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12745:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12745:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12759:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12761:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12770:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12773:2:123",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12766:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12766:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12761:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12741:3:123",
                    "statements": []
                  },
                  "src": "12737:113:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12876:31:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12889:3:123"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12894:6:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12885:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12885:16:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12903:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12878:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12878:27:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12878:27:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12865:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12868:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12862:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12862:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "12859:48:123"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12686:3:123",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12691:3:123",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12696:6:123",
                "type": ""
              }
            ],
            "src": "12655:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13055:137:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13065:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13085:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13079:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13079:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13069:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13127:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13135:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13123:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13123:17:123"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13142:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13147:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13101:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13101:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13101:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13163:23:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13174:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13179:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13170:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13170:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13163:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13031:3:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13036:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13047:3:123",
                "type": ""
              }
            ],
            "src": "12918:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13318:262:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13335:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13346:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13328:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13328:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13328:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13358:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13378:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13372:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13372:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13362:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13405:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13416:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13401:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13401:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13421:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13394:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13394:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13394:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13463:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13471:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13459:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13459:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13480:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13491:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13476:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13476:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13496:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13437:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13437:66:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13437:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13512:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13528:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13547:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13555:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13543:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13543:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13564:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13560:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13560:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13539:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13539:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13524:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13524:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13571:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13520:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13520:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13512:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13287:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13298:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13309:4:123",
                "type": ""
              }
            ],
            "src": "13197:383:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_int256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "178:5697:33:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "178:5697:33:-:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;178:5697:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7604:91:34;7673:8;:15;7604:91;;;160:25:123;;;148:2;133:18;7604:91:34;;;;;;;;14046:166;;;:::i;:::-;;3976:187;;;;;;:::i;:::-;;:::i;3140:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1239:15:123;;;1221:34;;1286:2;1271:18;;1264:34;;;;1314:18;;1307:34;;;;1372:2;1357:18;;1350:34;;;;1415:3;1400:19;;1393:35;1465:15;;;1459:3;1444:19;;1437:44;1147:3;1132:19;3140:26:34;847:640:123;2446:30:34;;;;;;3558:99;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3558:99:34;;;;;;-1:-1:-1;;;;;2907:55:123;;;2889:74;;2877:2;2862:18;3558:99:34;2743:226:123;3733:32:34;;;;;-1:-1:-1;;;;;3733:32:34;;;2400:40;;;;;;2218:57;;;;;;6415:200;;;;;;:::i;:::-;;:::i;1858:25::-;;;;;;4265:108;;;;;;:::i;:::-;;:::i;1889:27::-;;;;;;7318:168;;;;;;:::i;:::-;;:::i;10637:2004::-;;;;;;:::i;:::-;;:::i;2582:36::-;;;;;;7892:165;;;;;;:::i;:::-;;:::i;2122:57::-;;;;;;6875:282;;;;;;:::i;:::-;;:::i;1629:25::-;;;;;-1:-1:-1;;;;;1629:25:34;;;8745:1669;;;;;;:::i;:::-;;:::i;1778:26::-;;;;;-1:-1:-1;;;;;1778:26:34;;;1908:101:3;;;:::i;3678:36:34:-;;;;;-1:-1:-1;;;;;3678:36:34;;;3520:2353:33;;;;;;:::i;:::-;;:::i;1520:20:34:-;;;;;-1:-1:-1;;;;;1520:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;602:2614:33;;;;;;:::i;:::-;;:::i;2803:22:34:-;;;;;;2315:30;;;;;;13173:334;;;:::i;1692:32::-;;;;;-1:-1:-1;;;;;1692:32:34;;;3303:72;;;;;;:::i;:::-;;:::i;:::-;;;;5150:25:123;;;5206:2;5191:18;;5184:34;;;;5234:18;;;5227:34;;;;5292:2;5277:18;;5270:34;5335:3;5320:19;;5313:35;5379:3;5364:19;;5357:35;5137:3;5122:19;3303:72:34;4863:535:123;1546:32:34;;;;;-1:-1:-1;;;;;1546:32:34;;;2682:37;;;;;;1954:28;;;;;;15482:301;;;;;;:::i;:::-;;:::i;2026:42::-;;;;;;5598:613;;;;;;:::i;:::-;;:::i;2885:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4849:228:34:-;;;;;;:::i;:::-;;:::i;4569:226::-;;;;;;:::i;:::-;;:::i;2951:39::-;;;;;-1:-1:-1;;;;;2951:39:34;;;14046:166;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;;;;;;;;;1412:11:::1;;1401:7;;:22;;1393:58;;;;-1:-1:-1::0;;;;;1393:58:34::1;;;;;;;:::i;:::-;14204:1:::2;14180:21;:25:::0;14046:166::o;3976:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4094:5:34::1;:14:::0;;-1:-1:-1;;;;;4094:14:34;;::::1;-1:-1:-1::0;;4094:14:34;;::::1;;::::0;;;4118:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;3976:187::o;3140:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3140:26:34;;;;-1:-1:-1;3140:26:34;;;;;;;;:::o;6415:200::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1186:24:34::1;::::0;-1:-1:-1;;;;;1186:24:34::1;1177:4;1169:41;1161:69;;;::::0;-1:-1:-1;;;;;1161:69:34;;7749:2:123;1161:69:34::1;::::0;::::1;7731:21:123::0;7788:2;7768:18;;;7761:30;7827:17;7807:18;;;7800:45;7862:18;;1161:69:34::1;7547:339:123::0;1161:69:34::1;6550:27:::2;:58:::0;6415:200::o;4265:108::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4340:11:34::1;:26:::0;;-1:-1:-1;;4340:26:34::1;-1:-1:-1::0;;;;;4340:26:34;;;::::1;::::0;;;::::1;::::0;;4265:108::o;7318:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7433:21:34::1;:46:::0;;-1:-1:-1;;7433:46:34::1;-1:-1:-1::0;;;;;7433:46:34;;;::::1;::::0;;;::::1;::::0;;7318:168::o;10637:2004::-;10687:17;10765:21;10789:8;10798:4;10789:14;;;;;;;;:::i;:::-;;;;;;;;;;;10765:38;;10892:4;:20;;;10876:12;:36;10872:75;;-1:-1:-1;10935:1:34;;10637:2004;-1:-1:-1;;10637:2004:34:o;10872:75::-;11041:10;;;;11034:32;;;;;;;;11012:19;;-1:-1:-1;;;;;11041:10:34;;11034:30;;:32;;;;;;;;;;;;;;11041:10;11034:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11012:54;-1:-1:-1;11080:16:34;11076:104;;-1:-1:-1;11135:12:34;11112:20;;;;:35;-1:-1:-1;11168:1:34;;10637:2004;-1:-1:-1;10637:2004:34:o;11076:104::-;11292:21;11331:4;:20;;;11316:12;:35;;;;:::i;:::-;11292:59;;11460:19;11558:15;;11539:4;:15;;;11511:13;;11483;:41;;;;:::i;:::-;:71;;;;:::i;:::-;11482:91;;;;:::i;:::-;11681:24;;11460:113;;-1:-1:-1;;;;;;11681:24:34;11672:4;11664:41;11660:706;;;11865:53;11891:11;11912:4;11865:25;:53::i;:::-;12007:1;11995:13;;11660:706;;;12162:5;;12155:46;;;;;12182:4;12155:46;;;9214:74:123;9304:18;;;9297:34;;;-1:-1:-1;;;;;12162:5:34;;;;12155:18;;9187::123;;12155:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12261:11;12249:23;;12324:31;12345:9;12324:20;:31::i;:::-;12510:11;12487:4;:20;;;:34;;;;:::i;:::-;12464:20;;;:57;-1:-1:-1;;12622:12:34;12599:20;;;;:35;;;;-1:-1:-1;10637:2004:34;;-1:-1:-1;10637:2004:34:o;7892:165::-;7989:7;8019:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8019:24:34;;;;;;;;;;;:31;;7892:165::o;6875:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7034:7:34::1;:18:::0;;;;7062:11:::1;:26:::0;7098:24:::1;:52:::0;;-1:-1:-1;;7098:52:34::1;-1:-1:-1::0;;;;;7098:52:34;;::::1;::::0;;;::::1;::::0;;6875:282::o;8745:1669::-;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;9168:47:::1;9349:30;9357:22:::0;9349:5:::1;:30;:::i;:::-;9300:28;9263:18;9219:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9218:162;;;;:::i;:::-;9168:212;;9513:42;;9459:39;:96;9442:472;;;-1:-1:-1::0;9622:42:34::1;::::0;9442:472:::1;;;9752:42;;9698:39;:96;9681:233;;;-1:-1:-1::0;9861:42:34::1;::::0;9681:233:::1;10394:12;::::0;10361:30:::1;10369:22:::0;10361:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10329:15;::::0;10231:79:::1;10271:39:::0;10231:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10230:177;;;;:::i;:::-;10202:13;:205:::0;-1:-1:-1;;;;;;8745:1669:34:o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;3520:2353:33:-;3650:21;3717;3741:8;3750:4;3741:14;;;;;;;;:::i;:::-;;;;;;;;;;;3717:38;;3848:19;3877:4;:10;;;;;;;;;;-1:-1:-1;;;;;3877:10:33;-1:-1:-1;;;;;3870:30:33;;:32;;;;;-1:-1:-1;;;3870:32:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3848:54;;4013:23;4046:4;:10;;;;;;;;;;-1:-1:-1;;;;;4046:10:33;-1:-1:-1;;;;;4039:34:33;;:36;;;;;-1:-1:-1;;;4039:36:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4013:62;-1:-1:-1;4158:16:33;4154:98;;4206:1;4190:17;;4221:20;;;;;4154:98;4360:1;4347:10;:14;4343:1524;;;4442:19;4464:29;4478:4;4484:8;4464:13;:29::i;:::-;4442:51;;4579:11;4574:537;4602:11;4596:3;:17;4574:537;;;4640:28;4671:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;4671:27:33;;;;;;;;;:32;;4699:3;;4671:32;;;;;;:::i;:::-;;;;;;;;;;;4640:63;;5084:11;5026:8;:23;;;4984:15;4936:8;:21;;;:63;;;;:::i;:::-;:113;;;;:::i;:::-;:144;;5076:4;4936:144;:::i;:::-;4935:160;;;;:::i;:::-;4898:198;;:13;:198;:::i;:::-;4862:234;;4622:489;4615:5;;;;:::i;:::-;;;4574:537;;;;4363:758;4343:1524;;;5168:28;5199:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;5199:27:33;;;;;;;;;:78;;5252:10;;5199:78;;;;;;:::i;:::-;;;;;;;;;;;5168:109;;5343:8;:22;;;5369:1;5343:27;5339:518;;;5775:11;5728:8;:23;;;5655:15;5607:8;:21;;;:63;;;;:::i;:::-;:94;;5697:4;5607:94;:::i;:::-;:144;;;;:::i;:::-;5606:180;;;;:::i;:::-;5570:216;;:13;:216;:::i;:::-;5534:252;;5339:518;;;5841:1;5825:17;;5339:518;5127:740;4343:1524;3673:2200;;;3520:2353;;;;;;:::o;602:2614::-;733:22;801:21;825:8;834:4;825:14;;;;;;;;:::i;:::-;;;;;;;;;;;801:38;;849:24;876:4;:20;;;849:47;;1113:4;:20;;;1098:12;:35;1094:323;;;1149:21;1188:4;:20;;;1173:12;:35;;;;:::i;:::-;1149:59;;1222:19;1328:15;;1309:4;:15;;;1277:13;;1245;:45;;;;:::i;:::-;:79;;;;:::i;:::-;1244:99;;;;:::i;:::-;1222:121;-1:-1:-1;1376:30:33;1222:121;1376:16;:30;:::i;:::-;1357:49;;1135:282;;1094:323;1468:30;;;;1464:131;;1583:1;1576:8;;;;;;1464:131;1703:1;1690:10;:14;1686:1524;;;1785:19;1807:29;1821:4;1827:8;1807:13;:29::i;:::-;1785:51;;1921:11;1916:654;1944:11;1938:3;:17;1916:654;;;2016:28;2047:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;2047:27:33;;;;;;;;;:32;;2075:3;;2047:32;;;;;;:::i;:::-;;;;;;;;;;;2016:63;;2153:8;:22;;;2179:1;2153:27;2149:407;;;2518:19;;;;2461:30;;;;2393:21;;:40;;2417:16;;2393:40;:::i;:::-;2392:99;;;;:::i;:::-;2351:140;;:14;:140;:::i;:::-;:186;;;;:::i;:::-;2310:227;;2149:407;-1:-1:-1;1957:5:33;;;:::i;:::-;;;1916:654;;;;1706:874;1686:1524;;;2627:28;2658:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;2658:27:33;;;;;;;;;:78;;2711:10;;2658:78;;;;;;:::i;:::-;;;;;;;;;;;2627:109;;2802:8;:22;;;2828:1;2802:27;2798:402;;;3109:19;;;;3056:30;;;;2992:21;;:40;;3016:16;;2992:40;:::i;:::-;2991:95;;;;:::i;:::-;:137;;;;:::i;:::-;2954:174;;2798:402;;;3184:1;3167:18;;2586:624;1686:1524;757:2459;;602:2614;;;;;:::o;13173:334:34:-;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;1412:11:::1;;1401:7;;:22;;1393:58;;;;-1:-1:-1::0;;;;;1393:58:34::1;;;;;;;:::i;:::-;13390:11:::2;::::0;13415:22:::2;::::0;13357:5:::2;::::0;13339:108:::2;::::0;-1:-1:-1;;;;;13357:5:34;;::::2;::::0;13390:11;::::2;::::0;13339:37:::2;:108::i;3303:72::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3303:72:34;;-1:-1:-1;3303:72:34;-1:-1:-1;3303:72:34;;;:::o;15482:301::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;15623:5:34::1;::::0;-1:-1:-1;;;;;15613:15:34;;::::1;15623:5:::0;::::1;15613:15;;15592:115;;;::::0;-1:-1:-1;;;;;15592:115:34;;9817:2:123;15592:115:34::1;::::0;::::1;9799:21:123::0;9856:2;9836:18;;;9829:30;9895:34;9875:18;;;9868:62;9966:23;9946:18;;;9939:51;10007:19;;15592:115:34::1;9615:417:123::0;15592:115:34::1;15717:59;-1:-1:-1::0;;;;;15717:38:34;::::1;15756:10;15768:7:::0;15717:38:::1;:59::i;:::-;15482:301:::0;;:::o;5598:613::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5866:12:34::1;:28:::0;;;5972:17;;5990:1:::1;5972:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;5927:42;:65:::0;-1:-1:-1;6047:17:34;;6065:1:::1;6047:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6002:42;:65:::0;-1:-1:-1;6077:25:34::1;:54:::0;6170:15:::1;:34:::0;-1:-1:-1;;;5598:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;10239:2:123;2238:73:3::1;::::0;::::1;10221:21:123::0;10278:2;10258:18;;;10251:30;10317:34;10297:18;;;10290:62;10388:8;10368:18;;;10361:36;10414:19;;2238:73:3::1;10037:402:123::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4849:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4995:10:34::1;::::0;:15;4987:49:::1;;;::::0;-1:-1:-1;;;;;4987:49:34;;10646:2:123;4987:49:34::1;::::0;::::1;10628:21:123::0;10685:2;10665:18;;;10658:30;10724:23;10704:18;;;10697:51;10765:18;;4987:49:34::1;10444:345:123::0;4987:49:34::1;5046:10;:24:::0;4849:228::o;4569:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1186:24:34::1;::::0;-1:-1:-1;;;;;1186:24:34::1;1177:4;1169:41;1161:69;;;::::0;-1:-1:-1;;;;;1161:69:34;;7749:2:123;1161:69:34::1;::::0;::::1;7731:21:123::0;7788:2;7768:18;;;7761:30;7827:17;7807:18;;;7800:45;7862:18;;1161:69:34::1;7547:339:123::0;1161:69:34::1;4716:10:::2;:24:::0;;-1:-1:-1;;;;;4716:24:34;;::::2;-1:-1:-1::0;;4716:24:34;;::::2;;::::0;;;4750:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4569:226::o;14441:250::-;14617:10;;14580:5;;14562:122;;-1:-1:-1;;;;;14580:5:34;;;;14617:10;14641:12;14667:7;14562:41;:122::i;12811:209::-;1412:11;;1401:7;;:22;;1393:58;;;;-1:-1:-1;;;;;1393:58:34;;;;;;;:::i;:::-;12999:14:::1;12975:21;;:38;;;;:::i;:::-;12951:21;:62:::0;-1:-1:-1;12811:209:34:o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;9232:55:123;;895:58:12;;;9214:74:123;9304:18;;;9297:34;;;868:86:12;;888:5;;918:23;;9187:18:123;;895:58:12;;;;-1:-1:-1;;895:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;967:252::-;1143:68;;-1:-1:-1;;;;;11075:15:123;;;1143:68:12;;;11057:34:123;11127:15;;11107:18;;;11100:43;11159:18;;;11152:34;;;1116:96:12;;1136:5;;1166:27;;10969:18:123;;1143:68:12;10794:398:123;1116:96:12;967:252;;;;:::o;3306:717::-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;11681:2:123;3921:85:12;;;11663:21:123;11720:2;11700:18;;;11693:30;11759:34;11739:18;;;11732:62;11830:12;11810:18;;;11803:40;11860:19;;3921:85:12;11479:406:123;3872:223:13;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:13:o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;12092:2:123;5148:81:13;;;12074:21:123;12131:2;12111:18;;;12104:30;12170:34;12150:18;;;12143:62;12241:8;12221:18;;;12214:36;12267:19;;5148:81:13;11890:402:123;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;12499:2:123;5239:60:13;;;12481:21:123;12538:2;12518:18;;;12511:30;12577:31;12557:18;;;12550:59;12626:18;;5239:60:13;12297:353:123;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;196:196:123:-;264:20;;-1:-1:-1;;;;;313:54:123;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:260::-;465:6;473;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;565:29;584:9;565:29;:::i;:::-;555:39;;613:38;647:2;636:9;632:18;613:38;:::i;:::-;603:48;;397:260;;;;;:::o;662:180::-;721:6;774:2;762:9;753:7;749:23;745:32;742:52;;;790:1;787;780:12;742:52;-1:-1:-1;813:23:123;;662:180;-1:-1:-1;662:180:123:o;1492:184::-;-1:-1:-1;;;;;1541:1:123;1534:88;1641:4;1638:1;1631:15;1665:4;1662:1;1655:15;1681:1057;1767:6;1775;1783;1836:2;1824:9;1815:7;1811:23;1807:32;1804:52;;;1852:1;1849;1842:12;1804:52;1888:9;1875:23;1865:33;;1949:2;1938:9;1934:18;1921:32;1972:18;2013:2;2005:6;2002:14;1999:34;;;2029:1;2026;2019:12;1999:34;2067:6;2056:9;2052:22;2042:32;;2112:7;2105:4;2101:2;2097:13;2093:27;2083:55;;2134:1;2131;2124:12;2083:55;2170:2;2157:16;2192:2;2188;2185:10;2182:36;;;2198:18;;:::i;:::-;2273:2;2267:9;2241:2;2327:13;;-1:-1:-1;;2323:22:123;;;2347:2;2319:31;2315:40;2303:53;;;2371:18;;;2391:22;;;2368:46;2365:72;;;2417:18;;:::i;:::-;2457:10;2453:2;2446:22;2492:2;2484:6;2477:18;2532:7;2527:2;2522;2518;2514:11;2510:20;2507:33;2504:53;;;2553:1;2550;2543:12;2504:53;2609:2;2604;2600;2596:11;2591:2;2583:6;2579:15;2566:46;2654:1;2649:2;2644;2636:6;2632:15;2628:24;2621:35;2675:6;2665:16;;;;;;;2728:2;2717:9;2713:18;2700:32;2690:42;;1681:1057;;;;;:::o;2974:186::-;3033:6;3086:2;3074:9;3065:7;3061:23;3057:32;3054:52;;;3102:1;3099;3092:12;3054:52;3125:29;3144:9;3125:29;:::i;3165:254::-;3233:6;3241;3294:2;3282:9;3273:7;3269:23;3265:32;3262:52;;;3310:1;3307;3300:12;3262:52;3346:9;3333:23;3323:33;;3375:38;3409:2;3398:9;3394:18;3375:38;:::i;3424:322::-;3501:6;3509;3517;3570:2;3558:9;3549:7;3545:23;3541:32;3538:52;;;3586:1;3583;3576:12;3538:52;3622:9;3609:23;3599:33;;3679:2;3668:9;3664:18;3651:32;3641:42;;3702:38;3736:2;3725:9;3721:18;3702:38;:::i;:::-;3692:48;;3424:322;;;;;:::o;3751:454::-;3846:6;3854;3862;3870;3878;3931:3;3919:9;3910:7;3906:23;3902:33;3899:53;;;3948:1;3945;3938:12;3899:53;-1:-1:-1;;3971:23:123;;;4041:2;4026:18;;4013:32;;-1:-1:-1;4092:2:123;4077:18;;4064:32;;4143:2;4128:18;;4115:32;;-1:-1:-1;4194:3:123;4179:19;4166:33;;-1:-1:-1;3751:454:123;-1:-1:-1;3751:454:123:o;4210:321::-;4286:6;4294;4302;4355:2;4343:9;4334:7;4330:23;4326:32;4323:52;;;4371:1;4368;4361:12;4323:52;4407:9;4394:23;4384:33;;4436:38;4470:2;4459:9;4455:18;4436:38;:::i;:::-;4426:48;;4521:2;4510:9;4506:18;4493:32;4483:42;;4210:321;;;;;:::o;5403:254::-;5471:6;5479;5532:2;5520:9;5511:7;5507:23;5503:32;5500:52;;;5548:1;5545;5538:12;5500:52;5571:29;5590:9;5571:29;:::i;:::-;5561:39;5647:2;5632:18;;;;5619:32;;-1:-1:-1;;;5403:254:123:o;5662:821::-;5775:6;5783;5791;5799;5807;5860:3;5848:9;5839:7;5835:23;5831:33;5828:53;;;5877:1;5874;5867:12;5828:53;5913:9;5900:23;5890:33;;5974:2;5963:9;5959:18;5946:32;5997:18;6038:2;6030:6;6027:14;6024:34;;;6054:1;6051;6044:12;6024:34;6092:6;6081:9;6077:22;6067:32;;6137:7;6130:4;6126:2;6122:13;6118:27;6108:55;;6159:1;6156;6149:12;6108:55;6199:2;6186:16;6225:2;6217:6;6214:14;6211:34;;;6241:1;6238;6231:12;6211:34;6295:7;6290:2;6284;6276:6;6272:15;6268:2;6264:24;6260:33;6257:46;6254:66;;;6316:1;6313;6306:12;6254:66;5662:821;;6347:2;6339:11;;;;;-1:-1:-1;6369:6:123;;6422:2;6407:18;;6394:32;;-1:-1:-1;6473:2:123;6458:18;6445:32;;-1:-1:-1;5662:821:123;-1:-1:-1;;;5662:821:123:o;6488:341::-;6690:2;6672:21;;;6729:2;6709:18;;;6702:30;6768:19;6763:2;6748:18;;6741:47;6820:2;6805:18;;6488:341::o;6834:347::-;7036:2;7018:21;;;7075:2;7055:18;;;7048:30;7114:25;7109:2;7094:18;;7087:53;7172:2;7157:18;;6834:347::o;7186:356::-;7388:2;7370:21;;;7407:18;;;7400:30;7466:34;7461:2;7446:18;;7439:62;7533:2;7518:18;;7186:356::o;7891:184::-;-1:-1:-1;;;;;7940:1:123;7933:88;8040:4;8037:1;8030:15;8064:4;8061:1;8054:15;8080:184;8150:6;8203:2;8191:9;8182:7;8178:23;8174:32;8171:52;;;8219:1;8216;8209:12;8171:52;-1:-1:-1;8242:16:123;;8080:184;-1:-1:-1;8080:184:123:o;8269:::-;-1:-1:-1;;;;;8318:1:123;8311:88;8418:4;8415:1;8408:15;8442:4;8439:1;8432:15;8458:125;8498:4;8526:1;8523;8520:8;8517:34;;;8531:18;;:::i;:::-;-1:-1:-1;8568:9:123;;8458:125::o;8588:168::-;8628:7;8694:1;8690;8686:6;8682:14;8679:1;8676:21;8671:1;8664:9;8657:17;8653:45;8650:71;;;8701:18;;:::i;:::-;-1:-1:-1;8741:9:123;;8588:168::o;8761:274::-;8801:1;8827;8817:189;;-1:-1:-1;;;;;8859:1:123;8852:88;8963:4;8960:1;8953:15;8991:4;8988:1;8981:15;8817:189;-1:-1:-1;9020:9:123;;8761:274::o;9342:128::-;9382:3;9413:1;9409:6;9406:1;9403:13;9400:39;;;9419:18;;:::i;:::-;-1:-1:-1;9455:9:123;;9342:128::o;9475:135::-;9514:3;-1:-1:-1;;9535:17:123;;9532:43;;;9555:18;;:::i;:::-;-1:-1:-1;9602:1:123;9591:13;;9475:135::o;11197:277::-;11264:6;11317:2;11305:9;11296:7;11292:23;11288:32;11285:52;;;11333:1;11330;11323:12;11285:52;11365:9;11359:16;11418:5;11411:13;11404:21;11397:5;11394:32;11384:60;;11440:1;11437;11430:12;12655:258;12727:1;12737:113;12751:6;12748:1;12745:13;12737:113;;;12827:11;;;12821:18;12808:11;;;12801:39;12773:2;12766:10;12737:113;;;12868:6;12865:1;12862:13;12859:48;;;-1:-1:-1;;12903:1:123;12885:16;;12878:27;12655:258::o;12918:274::-;13047:3;13085:6;13079:13;13101:53;13147:6;13142:3;13135:4;13127:6;13123:17;13101:53;:::i;:::-;13170:16;;;;;12918:274;-1:-1:-1;;12918:274:123:o;13197:383::-;13346:2;13335:9;13328:21;13309:4;13378:6;13372:13;13421:6;13416:2;13405:9;13401:18;13394:34;13437:66;13496:6;13491:2;13480:9;13476:18;13471:2;13463:6;13459:15;13437:66;:::i;:::-;13564:2;13543:15;-1:-1:-1;;13539:29:123;13524:45;;;;13571:2;13520:54;;13197:383;-1:-1:-1;;13197:383:123:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/IVault.sol\";\n\nimport \"../interfaces/IZorroController.sol\";\n\ncontract ZorroControllerAnalytics is\n    IZorroControllerAnalytics,\n    ZorroControllerBase\n{\n    /* Functions */\n\n    /// @notice View function to see pending ZORRO on frontend.\n    /// @param _pid Index of pool\n    /// @param _account Wallet address of on chain account\n    /// @param _trancheId Tranche ID. If -1, will do pending rewards for all active tranches\n    /// @return pendingRewards Amount of Zorro rewards\n    function pendingZORRORewards(\n        uint256 _pid,\n        address _account,\n        int256 _trancheId\n    ) public view returns (uint256 pendingRewards) {\n        // Get pool and user info\n        PoolInfo storage pool = poolInfo[_pid];\n        uint256 _accZORRORewards = pool.accZORRORewards;\n\n        // Increment accumulated ZORRO rewards by the current pending Zorro rewards,\n        // IF we are on a block that is greater than the previous block this function was executed in\n        if (block.number > pool.lastRewardBlock) {\n            uint256 elapsedBlocks = block.number - pool.lastRewardBlock;\n            uint256 ZORROReward = (elapsedBlocks *\n                ZORROPerBlock *\n                pool.allocPoint) / totalAllocPoint;\n            _accZORRORewards = _accZORRORewards + ZORROReward;\n        }\n\n        // Calculate pending rewards\n        if (pool.totalTrancheContributions == 0) {\n            // Return 0 if the pool has no contributions\n            return 0;\n        }\n\n        // Check to see if data is needed for all tranches or a specific tranche\n        if (_trancheId < 0) {\n            // Get the number of tranches for this user and pool\n            uint256 numTranches = trancheLength(_pid, _account);\n            // Iterate through each tranche and increment rewards\n            for (uint256 tid = 0; tid < numTranches; ++tid) {\n                // Get the tranch\n                TrancheInfo storage _tranche = trancheInfo[_pid][_account][tid];\n                // Ensure tranche is not yet exited\n                if (_tranche.exitedVaultAt == 0) {\n                    // Return the user's share of the Zorro rewards for this pool, net of the reward debt\n                    pendingRewards =\n                        pendingRewards +\n                        (_tranche.contribution * _accZORRORewards) /\n                        pool.totalTrancheContributions -\n                        _tranche.rewardDebt;\n                }\n            }\n        } else {\n            // Get tranche\n            TrancheInfo storage _tranche = trancheInfo[_pid][_account][\n                uint256(_trancheId)\n            ];\n            // Ensure tranche is not yet exited\n            if (_tranche.exitedVaultAt == 0) {\n                // Return the tranche's share of the Zorro rewards for this pool, net of the reward debt\n                pendingRewards =\n                    (_tranche.contribution * _accZORRORewards) /\n                    pool.totalTrancheContributions -\n                    _tranche.rewardDebt;\n            } else {\n                pendingRewards = 0;\n            }\n        }\n    }\n\n    /// @notice View function to see staked Want tokens on frontend.\n    /// @param _pid Index of pool\n    /// @param _account Wallet address of on chain account\n    /// @param _trancheId Tranche ID, or -1 to aggregate across all tranches\n    /// @return stakedWantAmt Amount of staked Want tokens\n    function stakedWantTokens(\n        uint256 _pid,\n        address _account,\n        int256 _trancheId\n    ) external view returns (uint256 stakedWantAmt) {\n        // Get pool and user info\n        PoolInfo storage pool = poolInfo[_pid];\n        // Determine total number of shares in the underlying Zorro Vault contract\n        uint256 sharesTotal = IVault(pool.vault).sharesTotal();\n        // Determine the total number of Want tokens locked into the underlying Zorro Vault contract\n        uint256 wantLockedTotal = IVault(pool.vault).wantLockedTotal();\n\n        // If total shares is zero, there are no staked Want tokens\n        if (sharesTotal == 0) {\n            stakedWantAmt = 0;\n            return stakedWantAmt;\n        }\n\n        // Check to see if data is needed for all tranches or a specific tranche\n        if (_trancheId < 0) {\n            // Get the number of tranches for this user and pool\n            uint256 numTranches = trancheLength(_pid, _account);\n\n            // Iterate through each tranche and increment rewards\n            for (uint256 tid = 0; tid < numTranches; ++tid) {\n                TrancheInfo storage _tranche = trancheInfo[_pid][_account][tid];\n                // Otherwise, staked Want tokens is the user's shares as a percentage of total shares multiplied by total Want tokens locked\n                stakedWantAmt =\n                    stakedWantAmt +\n                    ((_tranche.contribution *\n                        wantLockedTotal *\n                        _tranche.timeMultiplier *\n                        1e12) / sharesTotal);\n            }\n        } else {\n            // Get tranche\n            TrancheInfo storage _tranche = trancheInfo[_pid][_account][\n                uint256(_trancheId)\n            ];\n            // Ensure tranche is not yet exited\n            if (_tranche.exitedVaultAt == 0) {\n                // Otherwise, staked Want tokens is the tranche's shares as a percentage of total shares multiplied by total Want tokens locked\n                stakedWantAmt =\n                    stakedWantAmt +\n                    (_tranche.contribution *\n                        wantLockedTotal *\n                        1e12 *\n                        _tranche.timeMultiplier) /\n                    sharesTotal;\n            } else {\n                stakedWantAmt = 0;\n            }\n        }\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerAnalytics.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerAnalytics.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "ContextUpgradeable": [
        3169
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        13660
      ],
      "IZorro": [
        13704
      ],
      "IZorroController": [
        14041
      ],
      "IZorroControllerAnalytics": [
        13840
      ],
      "IZorroControllerBase": [
        13814
      ],
      "IZorroControllerInvestment": [
        14001
      ],
      "IZorroControllerPoolMgmt": [
        14031
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "ZorroControllerAnalytics": [
        6378
      ],
      "ZorroControllerBase": [
        7034
      ]
    },
    "id": 6379,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6062,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:33"
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 6063,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6379,
        "sourceUnit": 7035,
        "src": "58:36:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 6064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6379,
        "sourceUnit": 13661,
        "src": "96:34:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorroController.sol",
        "file": "../interfaces/IZorroController.sol",
        "id": 6065,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6379,
        "sourceUnit": 14042,
        "src": "132:44:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6066,
              "name": "IZorroControllerAnalytics",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13840,
              "src": "219:25:33"
            },
            "id": 6067,
            "nodeType": "InheritanceSpecifier",
            "src": "219:25:33"
          },
          {
            "baseName": {
              "id": 6068,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7034,
              "src": "250:19:33"
            },
            "id": 6069,
            "nodeType": "InheritanceSpecifier",
            "src": "250:19:33"
          }
        ],
        "canonicalName": "ZorroControllerAnalytics",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6378,
        "linearizedBaseContracts": [
          6378,
          7034,
          1944,
          571,
          3169,
          1774,
          13840,
          13814
        ],
        "name": "ZorroControllerAnalytics",
        "nameLocation": "187:24:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              13828
            ],
            "body": {
              "id": 6231,
              "nodeType": "Block",
              "src": "757:2459:33",
              "statements": [
                {
                  "assignments": [
                    6083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6083,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "818:4:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 6231,
                      "src": "801:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 6082,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6081,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13735,
                          "src": "801:8:33"
                        },
                        "referencedDeclaration": 13735,
                        "src": "801:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6087,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6084,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "825:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13735_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 6086,
                    "indexExpression": {
                      "id": 6085,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6072,
                      "src": "834:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "825:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13735_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "801:38:33"
                },
                {
                  "assignments": [
                    6089
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6089,
                      "mutability": "mutable",
                      "name": "_accZORRORewards",
                      "nameLocation": "857:16:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 6231,
                      "src": "849:24:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6088,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "849:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6092,
                  "initialValue": {
                    "expression": {
                      "id": 6090,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6083,
                      "src": "876:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                      }
                    },
                    "id": 6091,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accZORRORewards",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13730,
                    "src": "876:20:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "849:47:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6093,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1098:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1098:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 6095,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6083,
                        "src": "1113:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 6096,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13728,
                      "src": "1113:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1098:35:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6125,
                  "nodeType": "IfStatement",
                  "src": "1094:323:33",
                  "trueBody": {
                    "id": 6124,
                    "nodeType": "Block",
                    "src": "1135:282:33",
                    "statements": [
                      {
                        "assignments": [
                          6099
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6099,
                            "mutability": "mutable",
                            "name": "elapsedBlocks",
                            "nameLocation": "1157:13:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6124,
                            "src": "1149:21:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6098,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1149:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6105,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6100,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1173:5:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "1173:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 6102,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6083,
                              "src": "1188:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 6103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13728,
                            "src": "1188:20:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1173:35:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1149:59:33"
                      },
                      {
                        "assignments": [
                          6107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6107,
                            "mutability": "mutable",
                            "name": "ZORROReward",
                            "nameLocation": "1230:11:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6124,
                            "src": "1222:19:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6106,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1222:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6117,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 6108,
                                    "name": "elapsedBlocks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6099,
                                    "src": "1245:13:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 6109,
                                    "name": "ZORROPerBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6453,
                                    "src": "1277:13:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1245:45:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 6111,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6083,
                                    "src": "1309:4:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 6112,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13726,
                                  "src": "1309:15:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1245:79:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6114,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1244:81:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 6115,
                            "name": "totalAllocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6465,
                            "src": "1328:15:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1244:99:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1222:121:33"
                      },
                      {
                        "expression": {
                          "id": 6122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6118,
                            "name": "_accZORRORewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6089,
                            "src": "1357:16:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6119,
                              "name": "_accZORRORewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6089,
                              "src": "1376:16:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 6120,
                              "name": "ZORROReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6107,
                              "src": "1395:11:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1376:30:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1357:49:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6123,
                        "nodeType": "ExpressionStatement",
                        "src": "1357:49:33"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6126,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6083,
                        "src": "1468:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 6127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13732,
                      "src": "1468:30:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1502:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1468:35:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6133,
                  "nodeType": "IfStatement",
                  "src": "1464:131:33",
                  "trueBody": {
                    "id": 6132,
                    "nodeType": "Block",
                    "src": "1505:90:33",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 6130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1583:1:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6080,
                        "id": 6131,
                        "nodeType": "Return",
                        "src": "1576:8:33"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 6136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6134,
                      "name": "_trancheId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6076,
                      "src": "1690:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1703:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1690:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6229,
                    "nodeType": "Block",
                    "src": "2586:624:33",
                    "statements": [
                      {
                        "assignments": [
                          6192
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6192,
                            "mutability": "mutable",
                            "name": "_tranche",
                            "nameLocation": "2647:8:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6229,
                            "src": "2627:28:33",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo"
                            },
                            "typeName": {
                              "id": 6191,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6190,
                                "name": "TrancheInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13721,
                                "src": "2627:11:33"
                              },
                              "referencedDeclaration": 13721,
                              "src": "2627:11:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6203,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6193,
                                "name": "trancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6487,
                                "src": "2658:11:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                }
                              },
                              "id": 6195,
                              "indexExpression": {
                                "id": 6194,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6072,
                                "src": "2670:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2658:17:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 6197,
                            "indexExpression": {
                              "id": 6196,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6074,
                              "src": "2676:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2658:27:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                            }
                          },
                          "id": 6202,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 6200,
                                "name": "_trancheId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6076,
                                "src": "2711:10:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 6199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2703:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 6198,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2703:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2703:19:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2658:78:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage",
                            "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2627:109:33"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6204,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6192,
                              "src": "2802:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                              }
                            },
                            "id": 6205,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exitedVaultAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13720,
                            "src": "2802:22:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2828:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2802:27:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 6227,
                          "nodeType": "Block",
                          "src": "3149:51:33",
                          "statements": [
                            {
                              "expression": {
                                "id": 6225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6223,
                                  "name": "pendingRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6079,
                                  "src": "3167:14:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 6224,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3184:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3167:18:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6226,
                              "nodeType": "ExpressionStatement",
                              "src": "3167:18:33"
                            }
                          ]
                        },
                        "id": 6228,
                        "nodeType": "IfStatement",
                        "src": "2798:402:33",
                        "trueBody": {
                          "id": 6222,
                          "nodeType": "Block",
                          "src": "2831:312:33",
                          "statements": [
                            {
                              "expression": {
                                "id": 6220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6208,
                                  "name": "pendingRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6079,
                                  "src": "2954:14:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 6212,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 6209,
                                              "name": "_tranche",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6192,
                                              "src": "2992:8:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                              }
                                            },
                                            "id": 6210,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "contribution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13710,
                                            "src": "2992:21:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 6211,
                                            "name": "_accZORRORewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6089,
                                            "src": "3016:16:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "2992:40:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 6213,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "2991:42:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 6214,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6083,
                                        "src": "3056:4:33",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 6215,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalTrancheContributions",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 13732,
                                      "src": "3056:30:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2991:95:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 6217,
                                      "name": "_tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6192,
                                      "src": "3109:8:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                        "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                      }
                                    },
                                    "id": 6218,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardDebt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13714,
                                    "src": "3109:19:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2991:137:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2954:174:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6221,
                              "nodeType": "ExpressionStatement",
                              "src": "2954:174:33"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 6230,
                  "nodeType": "IfStatement",
                  "src": "1686:1524:33",
                  "trueBody": {
                    "id": 6189,
                    "nodeType": "Block",
                    "src": "1706:874:33",
                    "statements": [
                      {
                        "assignments": [
                          6138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6138,
                            "mutability": "mutable",
                            "name": "numTranches",
                            "nameLocation": "1793:11:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6189,
                            "src": "1785:19:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6137,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1785:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6143,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 6140,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6072,
                              "src": "1821:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6141,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6074,
                              "src": "1827:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6139,
                            "name": "trancheLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6693,
                            "src": "1807:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view returns (uint256)"
                            }
                          },
                          "id": 6142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1807:29:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1785:51:33"
                      },
                      {
                        "body": {
                          "id": 6187,
                          "nodeType": "Block",
                          "src": "1964:606:33",
                          "statements": [
                            {
                              "assignments": [
                                6156
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6156,
                                  "mutability": "mutable",
                                  "name": "_tranche",
                                  "nameLocation": "2036:8:33",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6187,
                                  "src": "2016:28:33",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                                  },
                                  "typeName": {
                                    "id": 6155,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 6154,
                                      "name": "TrancheInfo",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 13721,
                                      "src": "2016:11:33"
                                    },
                                    "referencedDeclaration": 13721,
                                    "src": "2016:11:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6164,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 6157,
                                      "name": "trancheInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6487,
                                      "src": "2047:11:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                      }
                                    },
                                    "id": 6159,
                                    "indexExpression": {
                                      "id": 6158,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6072,
                                      "src": "2059:4:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2047:17:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 6161,
                                  "indexExpression": {
                                    "id": 6160,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6074,
                                    "src": "2065:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2047:27:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 6163,
                                "indexExpression": {
                                  "id": 6162,
                                  "name": "tid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6145,
                                  "src": "2075:3:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2047:32:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2016:63:33"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6165,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6156,
                                    "src": "2153:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                    }
                                  },
                                  "id": 6166,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exitedVaultAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13720,
                                  "src": "2153:22:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 6167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2179:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2153:27:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 6186,
                              "nodeType": "IfStatement",
                              "src": "2149:407:33",
                              "trueBody": {
                                "id": 6185,
                                "nodeType": "Block",
                                "src": "2182:374:33",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 6183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 6169,
                                        "name": "pendingRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6079,
                                        "src": "2310:14:33",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 6182,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 6179,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 6170,
                                            "name": "pendingRewards",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6079,
                                            "src": "2351:14:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 6178,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 6174,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "id": 6171,
                                                      "name": "_tranche",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 6156,
                                                      "src": "2393:8:33",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                        "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                                      }
                                                    },
                                                    "id": 6172,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "contribution",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 13710,
                                                    "src": "2393:21:33",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "id": 6173,
                                                    "name": "_accZORRORewards",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6089,
                                                    "src": "2417:16:33",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "2393:40:33",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 6175,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "2392:42:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 6176,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6083,
                                                "src": "2461:4:33",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                                  "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                                }
                                              },
                                              "id": 6177,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "totalTrancheContributions",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 13732,
                                              "src": "2461:30:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "2392:99:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "2351:140:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 6180,
                                            "name": "_tranche",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6156,
                                            "src": "2518:8:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                              "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                            }
                                          },
                                          "id": 6181,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "rewardDebt",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 13714,
                                          "src": "2518:19:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2351:186:33",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2310:227:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6184,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2310:227:33"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6148,
                            "name": "tid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6145,
                            "src": "1938:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 6149,
                            "name": "numTranches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6138,
                            "src": "1944:11:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1938:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6188,
                        "initializationExpression": {
                          "assignments": [
                            6145
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 6145,
                              "mutability": "mutable",
                              "name": "tid",
                              "nameLocation": "1929:3:33",
                              "nodeType": "VariableDeclaration",
                              "scope": 6188,
                              "src": "1921:11:33",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 6144,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1921:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 6147,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 6146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1935:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1921:15:33"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 6152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "1957:5:33",
                            "subExpression": {
                              "id": 6151,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6145,
                              "src": "1959:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6153,
                          "nodeType": "ExpressionStatement",
                          "src": "1957:5:33"
                        },
                        "nodeType": "ForStatement",
                        "src": "1916:654:33"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6070,
              "nodeType": "StructuredDocumentation",
              "src": "297:300:33",
              "text": "@notice View function to see pending ZORRO on frontend.\n @param _pid Index of pool\n @param _account Wallet address of on chain account\n @param _trancheId Tranche ID. If -1, will do pending rewards for all active tranches\n @return pendingRewards Amount of Zorro rewards"
            },
            "functionSelector": "985b0a0d",
            "id": 6232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingZORRORewards",
            "nameLocation": "611:19:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6072,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "648:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6232,
                  "src": "640:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6074,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "670:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6232,
                  "src": "662:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6076,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "695:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6232,
                  "src": "688:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6075,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:81:33"
            },
            "returnParameters": {
              "id": 6080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6079,
                  "mutability": "mutable",
                  "name": "pendingRewards",
                  "nameLocation": "741:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6232,
                  "src": "733:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "732:24:33"
            },
            "scope": 6378,
            "src": "602:2614:33",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13839
            ],
            "body": {
              "id": 6376,
              "nodeType": "Block",
              "src": "3673:2200:33",
              "statements": [
                {
                  "assignments": [
                    6246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6246,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3734:4:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 6376,
                      "src": "3717:21:33",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 6245,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6244,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13735,
                          "src": "3717:8:33"
                        },
                        "referencedDeclaration": 13735,
                        "src": "3717:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6250,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6247,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "3741:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13735_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 6249,
                    "indexExpression": {
                      "id": 6248,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6235,
                      "src": "3750:4:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3741:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13735_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3717:38:33"
                },
                {
                  "assignments": [
                    6252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6252,
                      "mutability": "mutable",
                      "name": "sharesTotal",
                      "nameLocation": "3856:11:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 6376,
                      "src": "3848:19:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3848:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6259,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6254,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6246,
                              "src": "3877:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 6255,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13734,
                            "src": "3877:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6253,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13660,
                          "src": "3870:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13660_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 6256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3870:18:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13660",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 6257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sharesTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13604,
                      "src": "3870:30:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 6258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:32:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3848:54:33"
                },
                {
                  "assignments": [
                    6261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6261,
                      "mutability": "mutable",
                      "name": "wantLockedTotal",
                      "nameLocation": "4021:15:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 6376,
                      "src": "4013:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4013:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6268,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 6263,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6246,
                              "src": "4046:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13735_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 6264,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13734,
                            "src": "4046:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6262,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13660,
                          "src": "4039:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13660_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 6265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4039:18:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13660",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 6266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wantLockedTotal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13599,
                      "src": "4039:34:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 6267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:36:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4013:62:33"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6269,
                      "name": "sharesTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6252,
                      "src": "4158:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4173:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4158:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6279,
                  "nodeType": "IfStatement",
                  "src": "4154:98:33",
                  "trueBody": {
                    "id": 6278,
                    "nodeType": "Block",
                    "src": "4176:76:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 6274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6272,
                            "name": "stakedWantAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6242,
                            "src": "4190:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 6273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4206:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4190:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6275,
                        "nodeType": "ExpressionStatement",
                        "src": "4190:17:33"
                      },
                      {
                        "expression": {
                          "id": 6276,
                          "name": "stakedWantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6242,
                          "src": "4228:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 6243,
                        "id": 6277,
                        "nodeType": "Return",
                        "src": "4221:20:33"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 6282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6280,
                      "name": "_trancheId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6239,
                      "src": "4347:10:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4360:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4347:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6374,
                    "nodeType": "Block",
                    "src": "5127:740:33",
                    "statements": [
                      {
                        "assignments": [
                          6334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6334,
                            "mutability": "mutable",
                            "name": "_tranche",
                            "nameLocation": "5188:8:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6374,
                            "src": "5168:28:33",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo"
                            },
                            "typeName": {
                              "id": 6333,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6332,
                                "name": "TrancheInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13721,
                                "src": "5168:11:33"
                              },
                              "referencedDeclaration": 13721,
                              "src": "5168:11:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6345,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6335,
                                "name": "trancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6487,
                                "src": "5199:11:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                }
                              },
                              "id": 6337,
                              "indexExpression": {
                                "id": 6336,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6235,
                                "src": "5211:4:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5199:17:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$",
                                "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 6339,
                            "indexExpression": {
                              "id": 6338,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6237,
                              "src": "5217:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5199:27:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                            }
                          },
                          "id": 6344,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 6342,
                                "name": "_trancheId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6239,
                                "src": "5252:10:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 6341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5244:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 6340,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5244:7:33",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5244:19:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5199:78:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage",
                            "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5168:109:33"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6346,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6334,
                              "src": "5343:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                              }
                            },
                            "id": 6347,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exitedVaultAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13720,
                            "src": "5343:22:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5369:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5343:27:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 6372,
                          "nodeType": "Block",
                          "src": "5807:50:33",
                          "statements": [
                            {
                              "expression": {
                                "id": 6370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6368,
                                  "name": "stakedWantAmt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6242,
                                  "src": "5825:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 6369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5841:1:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5825:17:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6371,
                              "nodeType": "ExpressionStatement",
                              "src": "5825:17:33"
                            }
                          ]
                        },
                        "id": 6373,
                        "nodeType": "IfStatement",
                        "src": "5339:518:33",
                        "trueBody": {
                          "id": 6367,
                          "nodeType": "Block",
                          "src": "5372:429:33",
                          "statements": [
                            {
                              "expression": {
                                "id": 6365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6350,
                                  "name": "stakedWantAmt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6242,
                                  "src": "5534:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 6351,
                                    "name": "stakedWantAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6242,
                                    "src": "5570:13:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 6360,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 6357,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 6355,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 6352,
                                                  "name": "_tranche",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6334,
                                                  "src": "5607:8:33",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                                  }
                                                },
                                                "id": 6353,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "contribution",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 13710,
                                                "src": "5607:21:33",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 6354,
                                                "name": "wantLockedTotal",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6261,
                                                "src": "5655:15:33",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5607:63:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "31653132",
                                              "id": 6356,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5697:4:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                                "typeString": "int_const 1000000000000"
                                              },
                                              "value": "1e12"
                                            },
                                            "src": "5607:94:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 6358,
                                              "name": "_tranche",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6334,
                                              "src": "5728:8:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                              }
                                            },
                                            "id": 6359,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timeMultiplier",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 13712,
                                            "src": "5728:23:33",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "5607:144:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 6361,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "5606:146:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 6362,
                                      "name": "sharesTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6252,
                                      "src": "5775:11:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5606:180:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5570:216:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5534:252:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6366,
                              "nodeType": "ExpressionStatement",
                              "src": "5534:252:33"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 6375,
                  "nodeType": "IfStatement",
                  "src": "4343:1524:33",
                  "trueBody": {
                    "id": 6331,
                    "nodeType": "Block",
                    "src": "4363:758:33",
                    "statements": [
                      {
                        "assignments": [
                          6284
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6284,
                            "mutability": "mutable",
                            "name": "numTranches",
                            "nameLocation": "4450:11:33",
                            "nodeType": "VariableDeclaration",
                            "scope": 6331,
                            "src": "4442:19:33",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6283,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4442:7:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6289,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 6286,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6235,
                              "src": "4478:4:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6287,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6237,
                              "src": "4484:8:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6285,
                            "name": "trancheLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6693,
                            "src": "4464:13:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view returns (uint256)"
                            }
                          },
                          "id": 6288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4464:29:33",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4442:51:33"
                      },
                      {
                        "body": {
                          "id": 6329,
                          "nodeType": "Block",
                          "src": "4622:489:33",
                          "statements": [
                            {
                              "assignments": [
                                6302
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6302,
                                  "mutability": "mutable",
                                  "name": "_tranche",
                                  "nameLocation": "4660:8:33",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6329,
                                  "src": "4640:28:33",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                                  },
                                  "typeName": {
                                    "id": 6301,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 6300,
                                      "name": "TrancheInfo",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 13721,
                                      "src": "4640:11:33"
                                    },
                                    "referencedDeclaration": 13721,
                                    "src": "4640:11:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6310,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 6303,
                                      "name": "trancheInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6487,
                                      "src": "4671:11:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                      }
                                    },
                                    "id": 6305,
                                    "indexExpression": {
                                      "id": 6304,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6235,
                                      "src": "4683:4:33",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4671:17:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 6307,
                                  "indexExpression": {
                                    "id": 6306,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6237,
                                    "src": "4689:8:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4671:27:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13721_storage_$dyn_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 6309,
                                "indexExpression": {
                                  "id": 6308,
                                  "name": "tid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6291,
                                  "src": "4699:3:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4671:32:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4640:63:33"
                            },
                            {
                              "expression": {
                                "id": 6327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6311,
                                  "name": "stakedWantAmt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6242,
                                  "src": "4862:13:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 6312,
                                    "name": "stakedWantAmt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6242,
                                    "src": "4898:13:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 6324,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 6321,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 6319,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 6316,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "id": 6313,
                                                      "name": "_tranche",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 6302,
                                                      "src": "4936:8:33",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                        "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                                      }
                                                    },
                                                    "id": 6314,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "contribution",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 13710,
                                                    "src": "4936:21:33",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "id": 6315,
                                                    "name": "wantLockedTotal",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6261,
                                                    "src": "4984:15:33",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "4936:63:33",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 6317,
                                                    "name": "_tranche",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6302,
                                                    "src": "5026:8:33",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_TrancheInfo_$13721_storage_ptr",
                                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage pointer"
                                                    }
                                                  },
                                                  "id": 6318,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timeMultiplier",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 13712,
                                                  "src": "5026:23:33",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "4936:113:33",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "31653132",
                                                "id": 6320,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5076:4:33",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1000000000000_by_1",
                                                  "typeString": "int_const 1000000000000"
                                                },
                                                "value": "1e12"
                                              },
                                              "src": "4936:144:33",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 6322,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "4935:146:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 6323,
                                          "name": "sharesTotal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6252,
                                          "src": "5084:11:33",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4935:160:33",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 6325,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4934:162:33",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4898:198:33",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4862:234:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6328,
                              "nodeType": "ExpressionStatement",
                              "src": "4862:234:33"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6294,
                            "name": "tid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6291,
                            "src": "4596:3:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 6295,
                            "name": "numTranches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6284,
                            "src": "4602:11:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4596:17:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6330,
                        "initializationExpression": {
                          "assignments": [
                            6291
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 6291,
                              "mutability": "mutable",
                              "name": "tid",
                              "nameLocation": "4587:3:33",
                              "nodeType": "VariableDeclaration",
                              "scope": 6330,
                              "src": "4579:11:33",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 6290,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4579:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 6293,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 6292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4593:1:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4579:15:33"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 6298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4615:5:33",
                            "subExpression": {
                              "id": 6297,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6291,
                              "src": "4617:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6299,
                          "nodeType": "ExpressionStatement",
                          "src": "4615:5:33"
                        },
                        "nodeType": "ForStatement",
                        "src": "4574:537:33"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6233,
              "nodeType": "StructuredDocumentation",
              "src": "3222:293:33",
              "text": "@notice View function to see staked Want tokens on frontend.\n @param _pid Index of pool\n @param _account Wallet address of on chain account\n @param _trancheId Tranche ID, or -1 to aggregate across all tranches\n @return stakedWantAmt Amount of staked Want tokens"
            },
            "functionSelector": "8766eb08",
            "id": 6377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakedWantTokens",
            "nameLocation": "3529:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6235,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3563:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6377,
                  "src": "3555:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6237,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3585:8:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6377,
                  "src": "3577:16:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6239,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "3610:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6377,
                  "src": "3603:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6238,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3545:81:33"
            },
            "returnParameters": {
              "id": 6243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6242,
                  "mutability": "mutable",
                  "name": "stakedWantAmt",
                  "nameLocation": "3658:13:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 6377,
                  "src": "3650:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3649:23:33"
            },
            "scope": 6378,
            "src": "3520:2353:33",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6379,
        "src": "178:5697:33",
        "usedErrors": []
      }
    ],
    "src": "33:5843:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-23T17:55:27.581Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingZORRORewards(uint256,address,int256)": {
        "params": {
          "_account": "Wallet address of on chain account",
          "_pid": "Index of pool",
          "_trancheId": "Tranche ID. If -1, will do pending rewards for all active tranches"
        },
        "returns": {
          "pendingRewards": "Amount of Zorro rewards"
        }
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "stakedWantTokens(uint256,address,int256)": {
        "params": {
          "_account": "Wallet address of on chain account",
          "_pid": "Index of pool",
          "_trancheId": "Tranche ID, or -1 to aggregate across all tranches"
        },
        "returns": {
          "stakedWantAmt": "Amount of staked Want tokens"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "pendingZORRORewards(uint256,address,int256)": {
        "notice": "View function to see pending ZORRO on frontend."
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "stakedWantTokens(uint256,address,int256)": {
        "notice": "View function to see staked Want tokens on frontend."
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      }
    },
    "version": 1
  }
}