{
  "contractName": "MockApeLendingRainMaker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimComp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vaults/mocks/MockVaultApeLending.sol\":\"MockApeLendingRainMaker\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaFairLaunch.sol\":{\"keccak256\":\"0xad81b0d4cffbce6e128843526c96ecea39b08242731eae4a52d032c64b00bb15\",\"license\":\"BUSL\",\"urls\":[\"bzz-raw://4ef4e8c6eb328a981308a37bf9850f18088febf7638b9e6e818ec6e8ebdfda54\",\"dweb:/ipfs/QmP482RAFoGhWC2Tyg93DVSHYuEcfeFeEZUua9aqxKy6X1\"]},\"project:/contracts/interfaces/Alpaca/IAlpacaVault.sol\":{\"keccak256\":\"0xabcbe1bf75a6a076a4c895f72562bb94e2dc082699bbc5b4e7cde1148667ad57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d96ad7765a52458ca06c56d90fdbc667ee581cc913562ac32008dd4d762dbcf\",\"dweb:/ipfs/QmbBK7B9KsFPu9hPVDMvPBM5um1TivCYH6AwtmPKrASgCG\"]},\"project:/contracts/interfaces/ApeLending/IRainMaker.sol\":{\"keccak256\":\"0x49891a916f9dac8e99a3abcdd19db24a3a69063a30ab635de8c274c8d64ef267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1aa6e061b37cd30c31b4fed0075cd59d4c9b64a0c9c78d5ece5b75dd7ba661f\",\"dweb:/ipfs/QmXF2TUqjVdrskTEW8bUrEMGxTR4zrVWfCtEHqFB38Q4BM\"]},\"project:/contracts/interfaces/ApeLending/IUnitroller.sol\":{\"keccak256\":\"0x03f1bc9fe78d680d8aceaa72446eabbc140953f1bad72100aeaa5bf7515e515b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52ed046c3fe52d8e40eed125d14b9c3f710c9769eaae7ea0aeb254bc95fcca8a\",\"dweb:/ipfs/Qmc1rv6seH9Uu6h4Mi6ABzsHAMyDVxGdhLqyZJdMzw45Bm\"]},\"project:/contracts/interfaces/Benqi/IQiTokenSaleDistributor.sol\":{\"keccak256\":\"0xda9dd25da2670def30beb473d7aa28c93203046142c6febf550da390cbe6de61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f89b4bad141dca9e584ca0c2269c2a5ad35512f91eb367b1496c69bd8e0377c5\",\"dweb:/ipfs/QmXPVgB7P8RSGRYVWTf5qzLZbBArjhp6mPj2KLDNC39xgC\"]},\"project:/contracts/interfaces/Benqi/IUnitroller.sol\":{\"keccak256\":\"0x3abbfdaf5b897c1b17aaffd370f9777a8471dce408ef394fecc9c899feb08e2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36da0f0f95ef9ec6abb5ae37e115ee861ab54ca8988e5a6533ff237e844ce02\",\"dweb:/ipfs/QmZ9Wd1ut5t4AQMpzQk2CDvB24BtsAPYEe8ks72ZwwGMD9\"]},\"project:/contracts/interfaces/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0xf11dc6f0d3ea73e334a92a88b006baea6cf5c00b235a42dbfa47c9029b9c14e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7a3a3bb79fc3838d790eec11e292116e81ff721e7bfd549c1a79da8d1cbff2\",\"dweb:/ipfs/QmbmEULJWLn5yS9pEQaN3wSxuqmGNNVeDTECLVD6aKwoLk\"]},\"project:/contracts/interfaces/IZorroControllerXChain.sol\":{\"keccak256\":\"0xd668e8741a79ce8c9531641d439b3e8dc1bd48eb83062137932713788571bd84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37353c74f6188187fb1b7c1227e82517da2c1eed515f6f93ea6cc58ac8c03bb7\",\"dweb:/ipfs/QmdhSX16g4sfTCBwx3PpP4bw5z9dMYRWnjmavnXLU9ZcEX\"]},\"project:/contracts/interfaces/LayerZero/ILayerZeroReceiver.sol\":{\"keccak256\":\"0xbb12f15bdc0ec9cc0aaf509b0252afc0714207c56998dab83c62ffd4a63ae70e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e1f2b57c72757daf5c15ab43f17d232b3323376872ef814d31cff34105438b1\",\"dweb:/ipfs/QmWh1ruhTbYGnaQ1RXWUe84uKXXhTJuRiN485ZRcA48XLz\"]},\"project:/contracts/interfaces/Lending/ILendingToken.sol\":{\"keccak256\":\"0x45ad85de2b54a72284762da24cadd5a695f3a143d109acae569c8e9ae55a3a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7a631c9ffc0e03017028becd66998715a8c02bc83c62ae2f9ee40df72b578b3\",\"dweb:/ipfs/QmR48bzWJhZTp7pvUvQPA4h7hFmnDujr7HiKxcARDpVwvt\"]},\"project:/contracts/interfaces/Stargate/IStargateReceiver.sol\":{\"keccak256\":\"0x44c6f3e0eab72f4fa27f83ef133d9648ee4bf2a5a2057756d96196adeba0339e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d905d65bb9ce0164d2a536956fcc981ddabf3bd0a23cdfcd7c54799e86d82ac3\",\"dweb:/ipfs/QmfU8Jq48az6VeGgY3h6CYBXakvv6NGp7RsANmZcDjWZDg\"]},\"project:/contracts/libraries/PriceFeed.sol\":{\"keccak256\":\"0xbc01335b64576076e0a43c0be771c89ccb5363b426521ce379f560e9d30cfe94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03d5bf8cb030a15ef51faf151654a2ffb2dabfeef04d56079a04289acc139317\",\"dweb:/ipfs/QmYGZw4JJPM4nxcWQzZKsrq8SuDW29Ye4c7enTaEsX1rpi\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x32cac346245d108670fd526a8d05a98c826fc16481b5e1a5f3342ef4bffe8692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b9abe0286f0afa0793191ce077c9e821ee7b0f6f3cf1c60a6c2691262e5970\",\"dweb:/ipfs/QmYqaL5S8TPMmLgxZGM4g7J3DrPASVi9WDNdyLWBqThd34\"]},\"project:/contracts/vaults/VaultApeLending.sol\":{\"keccak256\":\"0xe9d242ca093f2a205d430243c387beeea16c877d4956e616e0de4c5253754390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35a7ecc33ab4d35f026ffba1ac0ec11511f720d4b969dabb68597ce8e16fac1c\",\"dweb:/ipfs/QmdPrbZTGfSzxggvXb1QVH9g6WBzPQsigBPeEHKu8zWMsu\"]},\"project:/contracts/vaults/_VaultBase.sol\":{\"keccak256\":\"0xa49961f769b235995d897db4b7d0fe0db863c3ce9bc3569cec6bd5f209dd8b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca16eaaaefc2fb1f0e7950f0e134937061f8333d4a750f5ed48c84c72b17f773\",\"dweb:/ipfs/QmR5M52na7ctg2U9YjE6jxSZRsMEtq1NgrnmBSWku8uTWG\"]},\"project:/contracts/vaults/_VaultLending.sol\":{\"keccak256\":\"0xc5c7d2794c6fad1993ddce95ac2b0cabfa1eaf920e89967b86317a4bc1482e6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c375f8eab3b76e4fb569395b5539ae464cf2aea6de4ec9325d1a67fcf44a932\",\"dweb:/ipfs/QmRwXfkNFtAGSVcRBLaovrZJnEDZcoPJwiDq4Awbi8bxGu\"]},\"project:/contracts/vaults/actions/VaultActionsBenqiLending.sol\":{\"keccak256\":\"0xa12f51b7626d6a7fbe681eb5b08981fa2bcb945b381287412ff561c5ac54359a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9b1f0be3128e4547a7a96eb3dc645cc20f83d331fc56c37eb27633cc542a87\",\"dweb:/ipfs/Qmdi4RffGDMmXhx3PR9MkYUVhwsq5JrphLLx5RoXgUKpkg\"]},\"project:/contracts/vaults/actions/_VaultActions.sol\":{\"keccak256\":\"0x86a3b3d2ed1b4886f59c66c79c15ed58efc2874095226b80eab8dc366a5d3779\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2110c755edafc00d157f729ad7da87f7acd073a7fcbdfa80987c414a65bedf6a\",\"dweb:/ipfs/QmXAarRzUAXijDkXpjDwyMTcDwiCXx8tw7HYruuBdWAVKQ\"]},\"project:/contracts/vaults/actions/_VaultActionsLending.sol\":{\"keccak256\":\"0xee5f17d335fd0cae8f7f8ed93af8352ef54a81210d42f39708913b03ef1e514f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b59d92841109bd3b3bf8c590f12cc98fbe490b208db82b59b077e7f359f38ac\",\"dweb:/ipfs/QmS7ZFCZmM7BGypNKuF3SCivqmsvcrztdj5nXnFuPdfV3d\"]},\"project:/contracts/vaults/mocks/MockVaultApeLending.sol\":{\"keccak256\":\"0x5330ba3a36de81d2dce1a3d861603c805d1687d514a730b1b57ca27033a62ce2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4f3468f10e1563e182fc6ddb98c0d59b58e9a7187f080bdc8bfd875714ef6a8\",\"dweb:/ipfs/QmebQX5XiHycxBA5C1BjEcBcVRcMYFmLLnGN5E6GHYx347\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060ca8061001f6000396000f3fe6080604052348015600f57600080fd5b50600436106044577c01000000000000000000000000000000000000000000000000000000006000350463e9af029281146049575b600080fd5b605760543660046059565b50565b005b600060208284031215606a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114608d57600080fd5b939250505056fea2646970667358221220472417eda81c2ecfe0b880e0042b389d89bee3015e1e90caada461c4a84374e164736f6c634300080a0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b50600436106044577c01000000000000000000000000000000000000000000000000000000006000350463e9af029281146049575b600080fd5b605760543660046059565b50565b005b600060208284031215606a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114608d57600080fd5b939250505056fea2646970667358221220472417eda81c2ecfe0b880e0042b389d89bee3015e1e90caada461c4a84374e164736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:325:124",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:124",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:124",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:124"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:124"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:124"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:124",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:124"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:124"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:124",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:124"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:124"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:124",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:124",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:124",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:124"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:124"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:124"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:124"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:124"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:124",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:124"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:124"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:124"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:124"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:124"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:124"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:124"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:124",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:124"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:124"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:124",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:124",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:124",
                "type": ""
              }
            ],
            "src": "14:309:124"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 124,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "371:107:119:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "371:107:119:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:52;;;;;;:::i;:::-;;;;;14:309:124;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:124:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../VaultApeLending.sol\";\n\nimport \"../../interfaces/Lending/ILendingToken.sol\";\n\nimport \"../../interfaces/ApeLending/IRainMaker.sol\";\n\nimport \"../../interfaces/ApeLending/IUnitroller.sol\";\n\ncontract MockVaultApeLending is VaultApeLending {\n    // TODO: fill in necessary methods to be able to run tests\n}\n\ncontract MockApeLendingRainMaker is IRainMaker {\n    function claimComp(address holder) external {\n\n    }\n}\n\ncontract MockApeLendingUnitroller is IUnitrollerApeLending {\n    function markets ( address ) external view returns ( bool isListed, uint256 collateralFactorMantissa, uint256 liquidationFactorMantissa, uint256 liquidationIncentiveMantissa, uint256 activeCollateralUSDCap, uint256 activeCollateralCTokenUsage) {\n\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/vaults/mocks/MockVaultApeLending.sol",
  "ast": {
    "absolutePath": "project:/contracts/vaults/mocks/MockVaultApeLending.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "ERC20Upgradeable": [
        2557
      ],
      "IAMMRouter01": [
        13202
      ],
      "IAMMRouter02": [
        13290
      ],
      "IAlpacaVault": [
        12638
      ],
      "IERC20": [
        4955
      ],
      "IERC20MetadataUpgradeable": [
        2660
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IFairLaunch": [
        12603
      ],
      "ILayerZeroReceiver": [
        14474
      ],
      "ILendingToken": [
        14686
      ],
      "IQiTokenSaleDistributor": [
        12785
      ],
      "IRainMaker": [
        12759
      ],
      "IStargateReceiver": [
        14721
      ],
      "IUnitrollerApeLending": [
        12779
      ],
      "IUnitrollerBenqi": [
        12834
      ],
      "IVault": [
        13699
      ],
      "IZorroControllerXChain": [
        14315
      ],
      "IZorroControllerXChainBase": [
        14134
      ],
      "IZorroControllerXChainDeposit": [
        14168
      ],
      "IZorroControllerXChainEarn": [
        14238
      ],
      "IZorroControllerXChainReceiver": [
        14303
      ],
      "IZorroControllerXChainWithdraw": [
        14291
      ],
      "Initializable": [
        1774
      ],
      "MockApeLendingRainMaker": [
        28072
      ],
      "MockApeLendingUnitroller": [
        28093
      ],
      "MockVaultApeLending": [
        28063
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PausableUpgradeable": [
        1885
      ],
      "PriceFeed": [
        15339
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeSwapUni": [
        15545
      ],
      "VaultActions": [
        26154
      ],
      "VaultActionsBenqiLending": [
        24385
      ],
      "VaultActionsLending": [
        26659
      ],
      "VaultApeLending": [
        18277
      ],
      "VaultApeLendingETH": [
        18280
      ],
      "VaultBase": [
        21714
      ],
      "VaultLending": [
        23883
      ]
    },
    "id": 28094,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 28056,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:119"
      },
      {
        "absolutePath": "project:/contracts/vaults/VaultApeLending.sol",
        "file": "../VaultApeLending.sol",
        "id": 28057,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28094,
        "sourceUnit": 18281,
        "src": "58:32:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Lending/ILendingToken.sol",
        "file": "../../interfaces/Lending/ILendingToken.sol",
        "id": 28058,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28094,
        "sourceUnit": 14687,
        "src": "92:52:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ApeLending/IRainMaker.sol",
        "file": "../../interfaces/ApeLending/IRainMaker.sol",
        "id": 28059,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28094,
        "sourceUnit": 12760,
        "src": "146:52:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ApeLending/IUnitroller.sol",
        "file": "../../interfaces/ApeLending/IUnitroller.sol",
        "id": 28060,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 28094,
        "sourceUnit": 12780,
        "src": "200:53:119",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28061,
              "name": "VaultApeLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18277,
              "src": "287:15:119"
            },
            "id": 28062,
            "nodeType": "InheritanceSpecifier",
            "src": "287:15:119"
          }
        ],
        "canonicalName": "MockVaultApeLending",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28063,
        "linearizedBaseContracts": [
          28063,
          18277,
          23883,
          21714,
          1885,
          1944,
          571,
          3169,
          1774,
          13699
        ],
        "name": "MockVaultApeLending",
        "nameLocation": "264:19:119",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 28094,
        "src": "255:114:119",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28064,
              "name": "IRainMaker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12759,
              "src": "407:10:119"
            },
            "id": 28065,
            "nodeType": "InheritanceSpecifier",
            "src": "407:10:119"
          }
        ],
        "canonicalName": "MockApeLendingRainMaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28072,
        "linearizedBaseContracts": [
          28072,
          12759
        ],
        "name": "MockApeLendingRainMaker",
        "nameLocation": "380:23:119",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12758
            ],
            "body": {
              "id": 28070,
              "nodeType": "Block",
              "src": "468:8:119",
              "statements": []
            },
            "functionSelector": "e9af0292",
            "id": 28071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimComp",
            "nameLocation": "433:9:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28067,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "451:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28071,
                  "src": "443:14:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:16:119"
            },
            "returnParameters": {
              "id": 28069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:119"
            },
            "scope": 28072,
            "src": "424:52:119",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28094,
        "src": "371:107:119",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28073,
              "name": "IUnitrollerApeLending",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12779,
              "src": "517:21:119"
            },
            "id": 28074,
            "nodeType": "InheritanceSpecifier",
            "src": "517:21:119"
          }
        ],
        "canonicalName": "MockApeLendingUnitroller",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 28093,
        "linearizedBaseContracts": [
          28093,
          12779
        ],
        "name": "MockApeLendingUnitroller",
        "nameLocation": "489:24:119",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              12778
            ],
            "body": {
              "id": 28091,
              "nodeType": "Block",
              "src": "789:8:119",
              "statements": []
            },
            "functionSelector": "8e8f294b",
            "id": 28092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markets",
            "nameLocation": "554:7:119",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "564:7:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:11:119"
            },
            "returnParameters": {
              "id": 28090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28079,
                  "mutability": "mutable",
                  "name": "isListed",
                  "nameLocation": "603:8:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "598:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28078,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28081,
                  "mutability": "mutable",
                  "name": "collateralFactorMantissa",
                  "nameLocation": "621:24:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "613:32:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28083,
                  "mutability": "mutable",
                  "name": "liquidationFactorMantissa",
                  "nameLocation": "655:25:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "647:33:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28085,
                  "mutability": "mutable",
                  "name": "liquidationIncentiveMantissa",
                  "nameLocation": "690:28:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "682:36:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28087,
                  "mutability": "mutable",
                  "name": "activeCollateralUSDCap",
                  "nameLocation": "728:22:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "720:30:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28089,
                  "mutability": "mutable",
                  "name": "activeCollateralCTokenUsage",
                  "nameLocation": "760:27:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 28092,
                  "src": "752:35:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:192:119"
            },
            "scope": 28093,
            "src": "545:252:119",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 28094,
        "src": "480:319:119",
        "usedErrors": []
      }
    ],
    "src": "33:767:119"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-24T02:03:38.497Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}