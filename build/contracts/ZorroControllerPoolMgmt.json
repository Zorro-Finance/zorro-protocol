{
  "contractName": "ZorroControllerPoolMgmt",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromPid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toPid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BSCMarketTVLUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "USDCToZorroLPPoolToken0Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "USDCToZorroLPPoolToken1Path",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "USDCToZorroPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZorroTotalVaultTVLUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveDefaultStablecoinIndex",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveStablePoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveSyntheticStablecoinIndex",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultMaxMarketMovement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "endpointContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failedLockedBuybackUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failedLockedRevShareUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZorroPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockUSDCController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockedEarningsStatus",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "receiveXChainBurnRewardsRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redepositInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "registerXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registeredXChainEndpoints",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_BSCMarketTVLUSD",
          "type": "uint256"
        }
      ],
      "name": "setBSCMarketTVLUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setBaseRewardRateBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        }
      ],
      "name": "setBlocksPerDay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        }
      ],
      "name": "setChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curveStablePoolAddress",
          "type": "address"
        }
      ],
      "name": "setCurveStablePoolAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultMaxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "setDefaultMaxMarketMovement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setDefaultStablecoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_endpointContract",
          "type": "address"
        }
      ],
      "name": "setEndpointContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setHomeChainZorroController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lockUSDCController",
          "type": "address"
        }
      ],
      "name": "setLockUSDCController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPoolAddress",
          "type": "address"
        }
      ],
      "name": "setPublicPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_syntheticStablecoin",
          "type": "address"
        }
      ],
      "name": "setSyntheticStablecoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "setUSDCToZorroLPPoolToken0Path",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        }
      ],
      "name": "setUSDCToZorroLPPoolToken1Path",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniV2Router",
          "type": "address"
        }
      ],
      "name": "setUniRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroLPPool",
          "type": "address"
        }
      ],
      "name": "setZorroLPPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token0",
          "type": "address"
        }
      ],
      "name": "setZorroLPPoolToken0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        }
      ],
      "name": "setZorroLPPoolToken1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroStakingVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        }
      ],
      "name": "setZorroTotalVaultTVLUSD",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "syntheticStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultStartingAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "unRegisterXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPoolToken0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroLPPoolToken1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroPriceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroPriceOracleFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroPriceOracleJobId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_want",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromPid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toPid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BSCMarketTVLUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"USDCToZorroLPPoolToken0Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"USDCToZorroLPPoolToken1Path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"USDCToZorroPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZorroTotalVaultTVLUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_want\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveDefaultStablecoinIndex\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveStablePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveSyntheticStablecoinIndex\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultMaxMarketMovement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"endpointContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failedLockedBuybackUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failedLockedRevShareUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZorroPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockUSDCController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockedEarningsStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"receiveXChainBurnRewardsRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redepositInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"registerXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredXChainEndpoints\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BSCMarketTVLUSD\",\"type\":\"uint256\"}],\"name\":\"setBSCMarketTVLUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setBaseRewardRateBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"}],\"name\":\"setBlocksPerDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"setChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_curveStablePoolAddress\",\"type\":\"address\"}],\"name\":\"setCurveStablePoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultMaxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"setDefaultMaxMarketMovement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setDefaultStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_endpointContract\",\"type\":\"address\"}],\"name\":\"setEndpointContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setHomeChainZorroController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lockUSDCController\",\"type\":\"address\"}],\"name\":\"setLockUSDCController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPoolAddress\",\"type\":\"address\"}],\"name\":\"setPublicPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_syntheticStablecoin\",\"type\":\"address\"}],\"name\":\"setSyntheticStablecoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"setUSDCToZorroLPPoolToken0Path\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"}],\"name\":\"setUSDCToZorroLPPoolToken1Path\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniV2Router\",\"type\":\"address\"}],\"name\":\"setUniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroLPPool\",\"type\":\"address\"}],\"name\":\"setZorroLPPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"}],\"name\":\"setZorroLPPoolToken0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"setZorroLPPoolToken1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroStakingVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"}],\"name\":\"setZorroTotalVaultTVLUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syntheticStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultStartingAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"unRegisterXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPoolToken0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroLPPoolToken1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroPriceOracleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroPriceOracleJobId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint256,address,bool,address)\":{\"details\":\"DO NOT add the same Want token more than once. Rewards will be messed up if you do. (Only if Want tokens are stored here.)\",\"params\":{\"_allocPoint\":\"The number of allocation points for this pool (aka \\\"multiplier\\\")\",\"_vault\":\"The contract address of the underlying vault\",\"_want\":\"The address of the want token\",\"_withUpdate\":\"Mass update all pools if set to true\"}},\"getZorroPerBlock()\":{\"returns\":{\"_0\":\"Number of Zorro tokens per block\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"massUpdatePools()\":{\"details\":\"Be careful of gas fees!\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"receiveXChainBurnRewardsRequest(uint256)\":{\"params\":{\"_amount\":\"The quantity of ZOR tokens to burn\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"set(uint256,uint256,bool)\":{\"params\":{\"_allocPoint\":\"The number of allocation points for this pool (aka \\\"multiplier\\\")\",\"_pid\":\"The index of the pool ID\",\"_withUpdate\":\"Mass update all pools if set to true\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"add(uint256,address,bool,address)\":{\"notice\":\"Adds a new pool. Can only be called by the owner.\"},\"getZorroPerBlock()\":{\"notice\":\"Determine the number of Zorro to emit per block based on current market parameters\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"massUpdatePools()\":{\"notice\":\"Updates reward variables of all pools\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"receiveXChainBurnRewardsRequest(uint256)\":{\"notice\":\"Receives an authorized burn request from another chain and burns the specified amount of ZOR tokens from the public pool\"},\"set(uint256,uint256,bool)\":{\"notice\":\"Update the given pool's ZORRO allocation point. Can only be called by the owner.\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerPoolMgmt.sol\":\"ZorroControllerPoolMgmt\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Chainlink.sol\":{\"keccak256\":\"0x3e133ddc69d0909fbe338c34b70cbf8dd262c70fd670b3632424c1858de25105\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbfa4cee3ce9fe3f5be6eda7e3304263d77b514be0bf5fadffa24d3f654ad2d\",\"dweb:/ipfs/QmTQmA4AJ9NookAyTg9DP6Mem6X8WSHJ5WjQJvqhE8K9qV\"]},\"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\":{\"keccak256\":\"0xa221ccfa4763977cc78c57e3a83d47f5aaf7c15535a2c20dba5f46af80fb3bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0f668a6f55a546ac1fe7fbf8539878a62811c1b0606fb4fadafb62f661e853\",\"dweb:/ipfs/QmTUmXvjWQno67W4CUdkVyTRAwSKWrko8EPjtizzavNVLJ\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a\",\"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw\"]},\"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xe51365458d82233a55f5ad4492a3b6bf56332d21cad6b0a5f21b8a026fcfd6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40958fa820d41025822fe423111c74d5b8d0dfe1a30ae4fba4f6896a55fc2868\",\"dweb:/ipfs/QmbwYCM5k6h43T6qQV8DEpUxv5uErVSTCD6Fqm5DMLDgNi\"]},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol\":{\"keccak256\":\"0x79a7c77b8f87be6ef02a566765077ed599724b060a209f34f8907eec5615da68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ed9275abc614a37a13f86c148f3a4341d955a6b52a1a655357505e0926caab\",\"dweb:/ipfs/Qmaqgq3HiakdSBAe9NtGXYMxVFBjTkLbzyiiyjJUJ1g1M3\"]},\"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x3a86242e005bad9daf1b4794399a81ba373069355f38c8a07b58e57abc32513a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8fbc2ccf2b3dfc8249306b7dc63624a4ec6f6ee43649d631f7363710c763b6\",\"dweb:/ipfs/QmePqh8R8EZMygYkawshsWArTrVA8VCdamLGV6ZZsVJgTz\"]},\"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x42e5d62984f9d57bab7e32b2c6e3af86f4feb232ea2af6c822032fae88203bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ec80973bbc95f59ce3a46aadd7761df6e4131bda14a01a265d76a8e007dd5d\",\"dweb:/ipfs/QmXwhsxjbkuXSHu6SX6tZxrQCXrdnJ4o2M7b3yFSgcWR1f\"]},\"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol\":{\"keccak256\":\"0x89388a631c16ad993e4d76d8d19e08ae98e1397f5dfdfb5f9c0b91015df4cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88cb96caa94128821daec5478c0f3646902007b81a0604b2e3ab79ea2f40b056\",\"dweb:/ipfs/Qmd1nu9CpgouPmukNQpZThxKgPZAayXxqBfwbDVHfMrCrF\"]},\"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol\":{\"keccak256\":\"0x08bda450d4dc1d17147fd29810234d35e2c437f1a99be733cfa7ee516db08a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d47a793b314afe9cd82fcf05ffe4ebbfa5504c2decc83004edbb3b2069d4f0c3\",\"dweb:/ipfs/Qmd2YLSiS8xeeXqireh6qJgTTwVY2VscZpv2cQBU8gkEJT\"]},\"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol\":{\"keccak256\":\"0x606bda5f3fa27be4cf04f6636dda443b7787b56e87ade988fca2e51d2147613d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63b50d13ca97c4dd62738398bb2e423a36563b827b0af94c0e7a47cf0d4a2e6b\",\"dweb:/ipfs/QmXjy7BmtnPeCLMaMnGGnsxDPGxohfDpYzP8PnUoh6gBGa\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0x39c4a19c361574a996609c63cb958f54b5aaea2a085df1d78e4f212e775bf210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd3ab5851f3cddae0ff1a4361559e132ce4a78857d112efe9eb0008909dacecd\",\"dweb:/ipfs/QmauxyB3qbuVBuJi2iubXtz7QZczRyZKhdb3S4ht35n7RS\"]},\"project:/contracts/controllers/_ZorroControllerPoolMgmt.sol\":{\"keccak256\":\"0x2186924ec3bb6d95cc7a3efb0824c2ed9604f58b97c29c7cfd087559c8099b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8640ccdd1295f8662a9acbe5f0a1cf0b78ec518b8c68b83b709e058167aabd6\",\"dweb:/ipfs/QmXEbAnf8aQb4BwDig9Ne2ebio5mLa1Wo4e6cqGKjQzPzE\"]},\"project:/contracts/cross-chain/XchainEndpoint.sol\":{\"keccak256\":\"0x1d760bcad7734e5594a3d7e578fee814edf293340a89dd1d65b66a24f07f6752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0543a1f1be5e27b21e0dd76181e6be594de6049d9ffe6accfef606c88452bb15\",\"dweb:/ipfs/QmdBYSDh6PZ8B1cz4ayRA5JtErsFjkyjQ2F97dC1edQAzd\"]},\"project:/contracts/helpers/ProvethVerifier.sol\":{\"keccak256\":\"0x764d394d6941abe28bd142f7837b679520540c748e7e7eeeffa9e21cfc6a1104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a36845ac1f6c371342f768baefa07cafbabe9f8866bcc141d6a519328bacff\",\"dweb:/ipfs/QmTPuDCcYdapirurunb6RbjMXhQe68Z9DgyUMNVaSkuRRt\"]},\"project:/contracts/libraries/RLPReader.sol\":{\"keccak256\":\"0x09e7c73e5327ae2321891e96c510d8f05a973dc1255c37289e54fd7a99417eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed386dabcbef31fb23ee6df7171335ee0d83187297372755b75579f0537bf969\",\"dweb:/ipfs/QmfQhU8PHbswpbthNRYqHcM4ybdYr9PEuPhr38LHNhuGjx\"]},\"project:/contracts/tokens/ZorroTokens.sol\":{\"keccak256\":\"0x4261d0a7a12a7aac25de46aa95e8c76b48b5cc5af43ce11b25b3286e62ec341f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2dd327e095887d162a269df44cefec42fabb510249c8a1a5fea8f98e7dc966d\",\"dweb:/ipfs/QmRnGx1FBtyCeNVAgEGYKuwcTKCBT8Qf87K8SVjMBeVwU8\"]}},\"version\":1}",
  "bytecode": "0x608060405260038054600160a060020a03191661dead179055617080600655600160088190556014600955600c805460ff199081169092179055600a600d556103ca601955601d805490911690556000602b553480156200005f57600080fd5b50620000866200007764010000000062000090810204565b64010000000062000094810204565b60018055620000e4565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61264e80620000f46000396000f3fe608060405234801561001057600080fd5b50600436106104a8576000357c0100000000000000000000000000000000000000000000000000000000900480638c157db21161027f578063c8cd3aa31161016e578063ed148bf3116100eb578063f2d05960116100af578063f2d0596014610adf578063f2d0caa914610ae8578063f2fde38b14610afb578063f35e4a6e14610b0e578063fa88fe7b14610b21578063fc39a29e14610b3457600080fd5b8063ed148bf314610a86578063ee4e268714610a99578063ef0e2ff414610aac578063ef12696714610abf578063ef190fec14610acc57600080fd5b8063d7f33a8211610132578063d7f33a8214610a41578063d85c554814610a54578063ddd88fec14610a5d578063e69b35c214610a70578063ec54e4a414610a7957600080fd5b8063c8cd3aa3146109f6578063c9057de514610a09578063cb9c2f6814610a12578063ce9e292814610a1b578063d731234714610a2e57600080fd5b8063a9418d67116101fc578063c27893ef116101c0578063c27893ef14610963578063c29de0d214610976578063c4f79c23146109bd578063c524a056146109d0578063c6d758cb146109e357600080fd5b8063a9418d67146108d7578063b4b4e9eb146108ea578063b614bdba1461092a578063b61bb80a1461093d578063bf9caa801461095057600080fd5b80639b8ad2d6116102435780639b8ad2d6146108675780639cde7a0014610870578063a00c807c14610883578063a4d2b08314610896578063a89802d3146108a957600080fd5b80638c157db21461080a5780638da5cb5b1461081d578063941d3fd01461082e57806394909cc21461084b5780639a8a05921461085e57600080fd5b80634cfea68a1161039b578063693a090b11610318578063715018a6116102dc578063715018a61461079e57806376cc2303146107a65780637bf604d8146107af5780637e49b840146107c25780638b2bc852146107f757600080fd5b8063693a090b1461073f5780636985b934146107525780636c78d49c146107655780636ca8bd651461077857806370d5ae051461078b57600080fd5b80636179ecd11161035f5780636179ecd1146106eb578063630b5ba1146106fe57806364482f7914610706578063668ababb1461071957806368ce004b1461072c57600080fd5b80634cfea68a1461067d57806351eb05a61461068657806353f73f87146106995780635527a6f9146106cf5780635f70edcf146106d857600080fd5b806337541464116104295780634098b0eb116103ed5780634098b0eb14610633578063416d0de714610646578063441e36c61461065957806348cd4cb11461066157806348d57c8e1461066a57600080fd5b806337541464146105c75780633b35b727146105fb5780633b7106881461060e5780633b9ce565146106175780633bbc1ffc1461062057600080fd5b80631526fe27116104705780631526fe271461052057806317caf6f11461056f5780631ca95f941461057857806326fc7c7d146105a1578063353b6c2c146105b457600080fd5b806305bfc28f146104ad578063081e3eda146104c257806308da26fc146104d9578063104a6132146104e25780631479a6df1461050d575b600080fd5b6104c06104bb366004612181565b610b47565b005b6029545b6040519081526020015b60405180910390f35b6104c6600b5481565b6104f56104f0366004612181565b610b82565b604051600160a060020a0390911681526020016104d0565b6104c061051b366004612181565b610bac565b61053361052e366004612181565b610bde565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016104d0565b6104c6602b5481565b6104f5610586366004612181565b601e60205260009081526040902054600160a060020a031681565b6104c06105af3660046121bf565b610c31565b6104c06105c2366004612181565b610c80565b6011546105e8907001000000000000000000000000000000009004600f0b81565b604051600f9190910b81526020016104d0565b6104c0610609366004612181565b610cb2565b6104c6600d5481565b6104c660095481565b6104c061062e366004612181565b610ce4565b6104c0610641366004612181565b610d16565b600f546104f590600160a060020a031681565b6104c6610d48565b6104c660055481565b6020546104f590600160a060020a031681565b6104c660065481565b6104c0610694366004612181565b610e6b565b6104c66106a73660046121dc565b6000918252602a60209081526040808420600160a060020a0393909316845291905290205490565b6104c660085481565b6104c06106e636600461221a565b6110ea565b6104c06106f9366004612181565b6112a4565b6104c06112d6565b6104c061071436600461226d565b611363565b6004546104f590600160a060020a031681565b6104c061073a3660046122bf565b611415565b6015546104f590600160a060020a031681565b6104c0610760366004612181565b611455565b6104c0610773366004612383565b611538565b6104c06107863660046121bf565b611578565b6003546104f590600160a060020a031681565b6104c06115c7565b6104c660235481565b6012546104f590600160a060020a031681565b6107e56107d03660046121bf565b601f6020526000908152604090205460ff1681565b60405160ff90911681526020016104d0565b6014546104f590600160a060020a031681565b6002546104f590600160a060020a031681565b600054600160a060020a03166104f5565b600c5461083b9060ff1681565b60405190151581526020016104d0565b6104c06108593660046121bf565b611600565b6104c6601c5481565b6104c660195481565b6104f561087e366004612181565b61164f565b6104c06108913660046122bf565b61165f565b601a546104f590600160a060020a031681565b6107e56108b73660046123a0565b602160209081526000928352604080842090915290825290205460ff1681565b6104c06108e53660046121bf565b61169f565b6108fd6108f83660046123c2565b611747565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016104d0565b6104f5610938366004612181565b6117a8565b600e546104f590600160a060020a031681565b6104c061095e3660046121bf565b6117b8565b6010546104f590600160a060020a031681565b6109a86109843660046121dc565b602c6020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016104d0565b6104c06109cb3660046121dc565b611807565b6104c06109de3660046121bf565b611862565b6104c06109f13660046123fa565b6118b1565b6026546104f590600160a060020a031681565b6104c6600a5481565b6104c660075481565b6104c0610a293660046121bf565b611979565b6104c0610a3c366004612181565b6119c8565b6104c0610a4f3660046121bf565b6119fa565b6104c660225481565b6104c0610a6b3660046121bf565b611a4b565b6104c660285481565b6011546105e890600f0b81565b6013546104f590600160a060020a031681565b6104c0610aa73660046121bf565b611a9a565b6104c0610aba366004612181565b611ae9565b601d546107e59060ff1681565b6104c0610ada3660046121bf565b611b1b565b6104c660275481565b6104c0610af63660046121bf565b611b6a565b6104c0610b093660046121bf565b611bb8565b6104c0610b1c366004612181565b611c70565b6104c0610b2f3660046121bf565b611ca2565b601b546104f590600160a060020a031681565b600054600160a060020a03163314610b7d5760405160e560020a62461bcd028152600401610b7490612426565b60405180910390fd5b600b55565b60188181548110610b9257600080fd5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a03163314610bd95760405160e560020a62461bcd028152600401610b7490612426565b600855565b60298181548110610bee57600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b600054600160a060020a03163314610c5e5760405160e560020a62461bcd028152600401610b7490612426565b60208054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314610cad5760405160e560020a62461bcd028152600401610b7490612426565b600655565b600054600160a060020a03163314610cdf5760405160e560020a62461bcd028152600401610b7490612426565b600955565b600054600160a060020a03163314610d115760405160e560020a62461bcd028152600401610b7490612426565b600755565b600054600160a060020a03163314610d435760405160e560020a62461bcd028152600401610b7490612426565b600d55565b600080610d86600b54610d80610d6b612710600754611cf190919063ffffffff16565b600a54600d54610d7a91611d04565b90611d04565b90611cf1565b9050600954811115610d9b5750600954610daa565b600854811015610daa57506008545b600254600480546040517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a039182169281019290925260009216906370a0823190602401602060405180830381865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e38919061245b565b90506000610e4c612710610d808486611d04565b9050610e6360065482611cf190919063ffffffff16565b935050505090565b600060298281548110610e8057610e80612474565b9060005260206000209060060201905080600201544311610e9f575050565b6000610eb8826002015443611d1090919063ffffffff16565b905060008111610ec757505050565b6000610ed1610d48565b90506000610ef6602b54610d808660010154610d7a8688611d0490919063ffffffff16565b601b54909150600160a060020a0316301415610f4957600454600254610f2a91600160a060020a0391821691163084611d1c565b6003840154610f399082611dd3565b60038501554360028501556110e3565b6002546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b5050601d5460ff166000908152601e602090815260409182902054601b548351600160a060020a039182166c0100000000000000000000000002818501528451601481830301815260348201865260588083018a9052865180840390910181526078909201865293810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7a04bfc30000000000000000000000000000000000000000000000000000000017905293517fedf54e470000000000000000000000000000000000000000000000000000000081529116945084935063edf54e47926110af92916004016124e5565b600060405180830381600087803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b50505050505b5050505050565b600054600160a060020a031633146111175760405160e560020a62461bcd028152600401610b7490612426565b8115611125576111256112d6565b600060055443116111385760055461113a565b435b602b5490915061114a9086611dd3565b602b556040805160c081018252600160a060020a039586168152602081019687529081019182526000606082018181526080830182815294871660a08401908152602980546001810182559352925160069092027fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caac81018054938916600160a060020a031994851617905597517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caad89015592517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caae88015591517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caaf87015591517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181cab086015590517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181cab1909401805494909316931692909217905550565b600054600160a060020a031633146112d15760405160e560020a62461bcd028152600401610b7490612426565b601955565b60295460005b8181101561135f576040517f51eb05a60000000000000000000000000000000000000000000000000000000081526004810182905230906351eb05a690602401600060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b50505050806113589061253e565b90506112dc565b5050565b600054600160a060020a031633146113905760405160e560020a62461bcd028152600401610b7490612426565b801561139e5761139e6112d6565b6113e1826113db602986815481106113b8576113b8612474565b906000526020600020906006020160010154602b54611d1090919063ffffffff16565b90611dd3565b602b8190555081602984815481106113fb576113fb612474565b906000526020600020906006020160010181905550505050565b600054600160a060020a031633146114425760405160e560020a62461bcd028152600401610b7490612426565b805161135f906016906020840190612107565b336000908152601f602052604090205460ff166114b75760405160e560020a62461bcd02815260206004820152601960248201527f6f6e6c79207265672078636861696e20656e64706f696e7473000000000000006044820152606401610b74565b600254600480546040517f9dc29fac000000000000000000000000000000000000000000000000000000008152600160a060020a03918216928101929092526024820184905290911690639dc29fac90604401600060405180830381600087803b15801561152457600080fd5b505af11580156110e3573d6000803e3d6000fd5b600054600160a060020a031633146115655760405160e560020a62461bcd028152600401610b7490612426565b600c805460ff1916911515919091179055565b600054600160a060020a031633146115a55760405160e560020a62461bcd028152600401610b7490612426565b601a8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146115f45760405160e560020a62461bcd028152600401610b7490612426565b6115fe6000611ddf565b565b600054600160a060020a0316331461162d5760405160e560020a62461bcd028152600401610b7490612426565b60048054600160a060020a031916600160a060020a0392909216919091179055565b60178181548110610b9257600080fd5b600054600160a060020a0316331461168c5760405160e560020a62461bcd028152600401610b7490612426565b805161135f906017906020840190612107565b600054600160a060020a031633146116cc5760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a0381166117255760405160e560020a62461bcd02815260206004820152601060248201527f63616e6e6f7420626520302061646472000000000000000000000000000000006044820152606401610b74565b601b8054600160a060020a031916600160a060020a0392909216919091179055565b602a602052826000526040600020602052816000526040600020818154811061176f57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60168181548110610b9257600080fd5b600054600160a060020a031633146117e55760405160e560020a62461bcd028152600401610b7490612426565b60148054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146118345760405160e560020a62461bcd028152600401610b7490612426565b6000918252601e60205260409091208054600160a060020a031916600160a060020a03909216919091179055565b600054600160a060020a0316331461188f5760405160e560020a62461bcd028152600401610b7490612426565b600e8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146118de5760405160e560020a62461bcd028152600401610b7490612426565b600254600160a060020a03838116911614156119655760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610b74565b61135f600160a060020a0383163383611e2f565b600054600160a060020a031633146119a65760405160e560020a62461bcd028152600401610b7490612426565b60108054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146119f55760405160e560020a62461bcd028152600401610b7490612426565b600a55565b600054600160a060020a03163314611a275760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a03166000908152601f60205260409020805460ff19166001179055565b600054600160a060020a03163314611a785760405160e560020a62461bcd028152600401610b7490612426565b60128054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611ac75760405160e560020a62461bcd028152600401610b7490612426565b60158054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611b165760405160e560020a62461bcd028152600401610b7490612426565b601c55565b600054600160a060020a03163314611b485760405160e560020a62461bcd028152600401610b7490612426565b600f8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611b975760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a03166000908152601f60205260409020805460ff19169055565b600054600160a060020a03163314611be55760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a038116611c645760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b74565b611c6d81611ddf565b50565b600054600160a060020a03163314611c9d5760405160e560020a62461bcd028152600401610b7490612426565b600555565b600054600160a060020a03163314611ccf5760405160e560020a62461bcd028152600401610b7490612426565b60138054600160a060020a031916600160a060020a0392909216919091179055565b6000611cfd8284612559565b9392505050565b6000611cfd828461257e565b6000611cfd828461259d565b604051600160a060020a0380851660248301528316604482015260648101829052611dcd9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e7d565b50505050565b6000611cfd82846125b4565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051600160a060020a038316602482015260448101829052611e789084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d69565b505050565b6000611ed2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316611f659092919063ffffffff16565b805190915015611e785780806020019051810190611ef091906125cc565b611e785760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b74565b6060611f748484600085611f7c565b949350505050565b60603031831115611ff85760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b74565b600160a060020a0385163b6120525760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b74565b60008086600160a060020a0316858760405161206e91906125e9565b60006040518083038185875af1925050503d80600081146120ab576040519150601f19603f3d011682016040523d82523d6000602084013e6120b0565b606091505b50915091506120c08282866120cb565b979650505050505050565b606083156120da575081611cfd565b8251156120ea5782518084602001fd5b8160405160e560020a62461bcd028152600401610b749190612605565b82805482825590600052602060002090810192821561215c579160200282015b8281111561215c5782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190612127565b5061216892915061216c565b5090565b5b80821115612168576000815560010161216d565b60006020828403121561219357600080fd5b5035919050565b600160a060020a0381168114611c6d57600080fd5b80356121ba8161219a565b919050565b6000602082840312156121d157600080fd5b8135611cfd8161219a565b600080604083850312156121ef57600080fd5b8235915060208301356122018161219a565b809150509250929050565b8015158114611c6d57600080fd5b6000806000806080858703121561223057600080fd5b8435935060208501356122428161219a565b925060408501356122528161220c565b915060608501356122628161219a565b939692955090935050565b60008060006060848603121561228257600080fd5b8335925060208401359150604084013561229b8161220c565b809150509250925092565b60e060020a634e487b7102600052604160045260246000fd5b600060208083850312156122d257600080fd5b823567ffffffffffffffff808211156122ea57600080fd5b818501915085601f8301126122fe57600080fd5b813581811115612310576123106122a6565b838102604051601f19603f83011681018181108582111715612334576123346122a6565b60405291825284820192508381018501918883111561235257600080fd5b938501935b8285101561237757612368856121af565b84529385019392850192612357565b98975050505050505050565b60006020828403121561239557600080fd5b8135611cfd8161220c565b600080604083850312156123b357600080fd5b50508035926020909101359150565b6000806000606084860312156123d757600080fd5b8335925060208401356123e98161219a565b929592945050506040919091013590565b6000806040838503121561240d57600080fd5b82356124188161219a565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561246d57600080fd5b5051919050565b60e060020a634e487b7102600052603260045260246000fd5b60005b838110156124a8578181015183820152602001612490565b83811115611dcd5750506000910152565b600081518084526124d181602086016020860161248d565b601f01601f19169290920160200192915050565b6060815260006124f860608301856124b9565b828103602084015261250a81856124b9565b83810360409094019390935250506000815260200192915050565b60e060020a634e487b7102600052601160045260246000fd5b600060001982141561255257612552612525565b5060010190565b6000826125795760e060020a634e487b7102600052601260045260246000fd5b500490565b600081600019048311821515161561259857612598612525565b500290565b6000828210156125af576125af612525565b500390565b600082198211156125c7576125c7612525565b500190565b6000602082840312156125de57600080fd5b8151611cfd8161220c565b600082516125fb81846020870161248d565b9190910192915050565b602081526000611cfd60208301846124b956fea26469706673582212202d1a16b1e96666a72e9555edac80e4d6dfbb0eea867d7c8c4f31b5ad19df323064736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104a8576000357c0100000000000000000000000000000000000000000000000000000000900480638c157db21161027f578063c8cd3aa31161016e578063ed148bf3116100eb578063f2d05960116100af578063f2d0596014610adf578063f2d0caa914610ae8578063f2fde38b14610afb578063f35e4a6e14610b0e578063fa88fe7b14610b21578063fc39a29e14610b3457600080fd5b8063ed148bf314610a86578063ee4e268714610a99578063ef0e2ff414610aac578063ef12696714610abf578063ef190fec14610acc57600080fd5b8063d7f33a8211610132578063d7f33a8214610a41578063d85c554814610a54578063ddd88fec14610a5d578063e69b35c214610a70578063ec54e4a414610a7957600080fd5b8063c8cd3aa3146109f6578063c9057de514610a09578063cb9c2f6814610a12578063ce9e292814610a1b578063d731234714610a2e57600080fd5b8063a9418d67116101fc578063c27893ef116101c0578063c27893ef14610963578063c29de0d214610976578063c4f79c23146109bd578063c524a056146109d0578063c6d758cb146109e357600080fd5b8063a9418d67146108d7578063b4b4e9eb146108ea578063b614bdba1461092a578063b61bb80a1461093d578063bf9caa801461095057600080fd5b80639b8ad2d6116102435780639b8ad2d6146108675780639cde7a0014610870578063a00c807c14610883578063a4d2b08314610896578063a89802d3146108a957600080fd5b80638c157db21461080a5780638da5cb5b1461081d578063941d3fd01461082e57806394909cc21461084b5780639a8a05921461085e57600080fd5b80634cfea68a1161039b578063693a090b11610318578063715018a6116102dc578063715018a61461079e57806376cc2303146107a65780637bf604d8146107af5780637e49b840146107c25780638b2bc852146107f757600080fd5b8063693a090b1461073f5780636985b934146107525780636c78d49c146107655780636ca8bd651461077857806370d5ae051461078b57600080fd5b80636179ecd11161035f5780636179ecd1146106eb578063630b5ba1146106fe57806364482f7914610706578063668ababb1461071957806368ce004b1461072c57600080fd5b80634cfea68a1461067d57806351eb05a61461068657806353f73f87146106995780635527a6f9146106cf5780635f70edcf146106d857600080fd5b806337541464116104295780634098b0eb116103ed5780634098b0eb14610633578063416d0de714610646578063441e36c61461065957806348cd4cb11461066157806348d57c8e1461066a57600080fd5b806337541464146105c75780633b35b727146105fb5780633b7106881461060e5780633b9ce565146106175780633bbc1ffc1461062057600080fd5b80631526fe27116104705780631526fe271461052057806317caf6f11461056f5780631ca95f941461057857806326fc7c7d146105a1578063353b6c2c146105b457600080fd5b806305bfc28f146104ad578063081e3eda146104c257806308da26fc146104d9578063104a6132146104e25780631479a6df1461050d575b600080fd5b6104c06104bb366004612181565b610b47565b005b6029545b6040519081526020015b60405180910390f35b6104c6600b5481565b6104f56104f0366004612181565b610b82565b604051600160a060020a0390911681526020016104d0565b6104c061051b366004612181565b610bac565b61053361052e366004612181565b610bde565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016104d0565b6104c6602b5481565b6104f5610586366004612181565b601e60205260009081526040902054600160a060020a031681565b6104c06105af3660046121bf565b610c31565b6104c06105c2366004612181565b610c80565b6011546105e8907001000000000000000000000000000000009004600f0b81565b604051600f9190910b81526020016104d0565b6104c0610609366004612181565b610cb2565b6104c6600d5481565b6104c660095481565b6104c061062e366004612181565b610ce4565b6104c0610641366004612181565b610d16565b600f546104f590600160a060020a031681565b6104c6610d48565b6104c660055481565b6020546104f590600160a060020a031681565b6104c660065481565b6104c0610694366004612181565b610e6b565b6104c66106a73660046121dc565b6000918252602a60209081526040808420600160a060020a0393909316845291905290205490565b6104c660085481565b6104c06106e636600461221a565b6110ea565b6104c06106f9366004612181565b6112a4565b6104c06112d6565b6104c061071436600461226d565b611363565b6004546104f590600160a060020a031681565b6104c061073a3660046122bf565b611415565b6015546104f590600160a060020a031681565b6104c0610760366004612181565b611455565b6104c0610773366004612383565b611538565b6104c06107863660046121bf565b611578565b6003546104f590600160a060020a031681565b6104c06115c7565b6104c660235481565b6012546104f590600160a060020a031681565b6107e56107d03660046121bf565b601f6020526000908152604090205460ff1681565b60405160ff90911681526020016104d0565b6014546104f590600160a060020a031681565b6002546104f590600160a060020a031681565b600054600160a060020a03166104f5565b600c5461083b9060ff1681565b60405190151581526020016104d0565b6104c06108593660046121bf565b611600565b6104c6601c5481565b6104c660195481565b6104f561087e366004612181565b61164f565b6104c06108913660046122bf565b61165f565b601a546104f590600160a060020a031681565b6107e56108b73660046123a0565b602160209081526000928352604080842090915290825290205460ff1681565b6104c06108e53660046121bf565b61169f565b6108fd6108f83660046123c2565b611747565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016104d0565b6104f5610938366004612181565b6117a8565b600e546104f590600160a060020a031681565b6104c061095e3660046121bf565b6117b8565b6010546104f590600160a060020a031681565b6109a86109843660046121dc565b602c6020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016104d0565b6104c06109cb3660046121dc565b611807565b6104c06109de3660046121bf565b611862565b6104c06109f13660046123fa565b6118b1565b6026546104f590600160a060020a031681565b6104c6600a5481565b6104c660075481565b6104c0610a293660046121bf565b611979565b6104c0610a3c366004612181565b6119c8565b6104c0610a4f3660046121bf565b6119fa565b6104c660225481565b6104c0610a6b3660046121bf565b611a4b565b6104c660285481565b6011546105e890600f0b81565b6013546104f590600160a060020a031681565b6104c0610aa73660046121bf565b611a9a565b6104c0610aba366004612181565b611ae9565b601d546107e59060ff1681565b6104c0610ada3660046121bf565b611b1b565b6104c660275481565b6104c0610af63660046121bf565b611b6a565b6104c0610b093660046121bf565b611bb8565b6104c0610b1c366004612181565b611c70565b6104c0610b2f3660046121bf565b611ca2565b601b546104f590600160a060020a031681565b600054600160a060020a03163314610b7d5760405160e560020a62461bcd028152600401610b7490612426565b60405180910390fd5b600b55565b60188181548110610b9257600080fd5b600091825260209091200154600160a060020a0316905081565b600054600160a060020a03163314610bd95760405160e560020a62461bcd028152600401610b7490612426565b600855565b60298181548110610bee57600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b600054600160a060020a03163314610c5e5760405160e560020a62461bcd028152600401610b7490612426565b60208054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314610cad5760405160e560020a62461bcd028152600401610b7490612426565b600655565b600054600160a060020a03163314610cdf5760405160e560020a62461bcd028152600401610b7490612426565b600955565b600054600160a060020a03163314610d115760405160e560020a62461bcd028152600401610b7490612426565b600755565b600054600160a060020a03163314610d435760405160e560020a62461bcd028152600401610b7490612426565b600d55565b600080610d86600b54610d80610d6b612710600754611cf190919063ffffffff16565b600a54600d54610d7a91611d04565b90611d04565b90611cf1565b9050600954811115610d9b5750600954610daa565b600854811015610daa57506008545b600254600480546040517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a039182169281019290925260009216906370a0823190602401602060405180830381865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e38919061245b565b90506000610e4c612710610d808486611d04565b9050610e6360065482611cf190919063ffffffff16565b935050505090565b600060298281548110610e8057610e80612474565b9060005260206000209060060201905080600201544311610e9f575050565b6000610eb8826002015443611d1090919063ffffffff16565b905060008111610ec757505050565b6000610ed1610d48565b90506000610ef6602b54610d808660010154610d7a8688611d0490919063ffffffff16565b601b54909150600160a060020a0316301415610f4957600454600254610f2a91600160a060020a0391821691163084611d1c565b6003840154610f399082611dd3565b60038501554360028501556110e3565b6002546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b5050601d5460ff166000908152601e602090815260409182902054601b548351600160a060020a039182166c0100000000000000000000000002818501528451601481830301815260348201865260588083018a9052865180840390910181526078909201865293810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7a04bfc30000000000000000000000000000000000000000000000000000000017905293517fedf54e470000000000000000000000000000000000000000000000000000000081529116945084935063edf54e47926110af92916004016124e5565b600060405180830381600087803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b50505050505b5050505050565b600054600160a060020a031633146111175760405160e560020a62461bcd028152600401610b7490612426565b8115611125576111256112d6565b600060055443116111385760055461113a565b435b602b5490915061114a9086611dd3565b602b556040805160c081018252600160a060020a039586168152602081019687529081019182526000606082018181526080830182815294871660a08401908152602980546001810182559352925160069092027fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caac81018054938916600160a060020a031994851617905597517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caad89015592517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caae88015591517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caaf87015591517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181cab086015590517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181cab1909401805494909316931692909217905550565b600054600160a060020a031633146112d15760405160e560020a62461bcd028152600401610b7490612426565b601955565b60295460005b8181101561135f576040517f51eb05a60000000000000000000000000000000000000000000000000000000081526004810182905230906351eb05a690602401600060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b50505050806113589061253e565b90506112dc565b5050565b600054600160a060020a031633146113905760405160e560020a62461bcd028152600401610b7490612426565b801561139e5761139e6112d6565b6113e1826113db602986815481106113b8576113b8612474565b906000526020600020906006020160010154602b54611d1090919063ffffffff16565b90611dd3565b602b8190555081602984815481106113fb576113fb612474565b906000526020600020906006020160010181905550505050565b600054600160a060020a031633146114425760405160e560020a62461bcd028152600401610b7490612426565b805161135f906016906020840190612107565b336000908152601f602052604090205460ff166114b75760405160e560020a62461bcd02815260206004820152601960248201527f6f6e6c79207265672078636861696e20656e64706f696e7473000000000000006044820152606401610b74565b600254600480546040517f9dc29fac000000000000000000000000000000000000000000000000000000008152600160a060020a03918216928101929092526024820184905290911690639dc29fac90604401600060405180830381600087803b15801561152457600080fd5b505af11580156110e3573d6000803e3d6000fd5b600054600160a060020a031633146115655760405160e560020a62461bcd028152600401610b7490612426565b600c805460ff1916911515919091179055565b600054600160a060020a031633146115a55760405160e560020a62461bcd028152600401610b7490612426565b601a8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146115f45760405160e560020a62461bcd028152600401610b7490612426565b6115fe6000611ddf565b565b600054600160a060020a0316331461162d5760405160e560020a62461bcd028152600401610b7490612426565b60048054600160a060020a031916600160a060020a0392909216919091179055565b60178181548110610b9257600080fd5b600054600160a060020a0316331461168c5760405160e560020a62461bcd028152600401610b7490612426565b805161135f906017906020840190612107565b600054600160a060020a031633146116cc5760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a0381166117255760405160e560020a62461bcd02815260206004820152601060248201527f63616e6e6f7420626520302061646472000000000000000000000000000000006044820152606401610b74565b601b8054600160a060020a031916600160a060020a0392909216919091179055565b602a602052826000526040600020602052816000526040600020818154811061176f57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60168181548110610b9257600080fd5b600054600160a060020a031633146117e55760405160e560020a62461bcd028152600401610b7490612426565b60148054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146118345760405160e560020a62461bcd028152600401610b7490612426565b6000918252601e60205260409091208054600160a060020a031916600160a060020a03909216919091179055565b600054600160a060020a0316331461188f5760405160e560020a62461bcd028152600401610b7490612426565b600e8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146118de5760405160e560020a62461bcd028152600401610b7490612426565b600254600160a060020a03838116911614156119655760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b00000000000000000000006064820152608401610b74565b61135f600160a060020a0383163383611e2f565b600054600160a060020a031633146119a65760405160e560020a62461bcd028152600401610b7490612426565b60108054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031633146119f55760405160e560020a62461bcd028152600401610b7490612426565b600a55565b600054600160a060020a03163314611a275760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a03166000908152601f60205260409020805460ff19166001179055565b600054600160a060020a03163314611a785760405160e560020a62461bcd028152600401610b7490612426565b60128054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611ac75760405160e560020a62461bcd028152600401610b7490612426565b60158054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611b165760405160e560020a62461bcd028152600401610b7490612426565b601c55565b600054600160a060020a03163314611b485760405160e560020a62461bcd028152600401610b7490612426565b600f8054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314611b975760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a03166000908152601f60205260409020805460ff19169055565b600054600160a060020a03163314611be55760405160e560020a62461bcd028152600401610b7490612426565b600160a060020a038116611c645760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b74565b611c6d81611ddf565b50565b600054600160a060020a03163314611c9d5760405160e560020a62461bcd028152600401610b7490612426565b600555565b600054600160a060020a03163314611ccf5760405160e560020a62461bcd028152600401610b7490612426565b60138054600160a060020a031916600160a060020a0392909216919091179055565b6000611cfd8284612559565b9392505050565b6000611cfd828461257e565b6000611cfd828461259d565b604051600160a060020a0380851660248301528316604482015260648101829052611dcd9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e7d565b50505050565b6000611cfd82846125b4565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051600160a060020a038316602482015260448101829052611e789084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611d69565b505050565b6000611ed2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316611f659092919063ffffffff16565b805190915015611e785780806020019051810190611ef091906125cc565b611e785760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b74565b6060611f748484600085611f7c565b949350505050565b60603031831115611ff85760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610b74565b600160a060020a0385163b6120525760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b74565b60008086600160a060020a0316858760405161206e91906125e9565b60006040518083038185875af1925050503d80600081146120ab576040519150601f19603f3d011682016040523d82523d6000602084013e6120b0565b606091505b50915091506120c08282866120cb565b979650505050505050565b606083156120da575081611cfd565b8251156120ea5782518084602001fd5b8160405160e560020a62461bcd028152600401610b749190612605565b82805482825590600052602060002090810192821561215c579160200282015b8281111561215c5782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190612127565b5061216892915061216c565b5090565b5b80821115612168576000815560010161216d565b60006020828403121561219357600080fd5b5035919050565b600160a060020a0381168114611c6d57600080fd5b80356121ba8161219a565b919050565b6000602082840312156121d157600080fd5b8135611cfd8161219a565b600080604083850312156121ef57600080fd5b8235915060208301356122018161219a565b809150509250929050565b8015158114611c6d57600080fd5b6000806000806080858703121561223057600080fd5b8435935060208501356122428161219a565b925060408501356122528161220c565b915060608501356122628161219a565b939692955090935050565b60008060006060848603121561228257600080fd5b8335925060208401359150604084013561229b8161220c565b809150509250925092565b60e060020a634e487b7102600052604160045260246000fd5b600060208083850312156122d257600080fd5b823567ffffffffffffffff808211156122ea57600080fd5b818501915085601f8301126122fe57600080fd5b813581811115612310576123106122a6565b838102604051601f19603f83011681018181108582111715612334576123346122a6565b60405291825284820192508381018501918883111561235257600080fd5b938501935b8285101561237757612368856121af565b84529385019392850192612357565b98975050505050505050565b60006020828403121561239557600080fd5b8135611cfd8161220c565b600080604083850312156123b357600080fd5b50508035926020909101359150565b6000806000606084860312156123d757600080fd5b8335925060208401356123e98161219a565b929592945050506040919091013590565b6000806040838503121561240d57600080fd5b82356124188161219a565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561246d57600080fd5b5051919050565b60e060020a634e487b7102600052603260045260246000fd5b60005b838110156124a8578181015183820152602001612490565b83811115611dcd5750506000910152565b600081518084526124d181602086016020860161248d565b601f01601f19169290920160200192915050565b6060815260006124f860608301856124b9565b828103602084015261250a81856124b9565b83810360409094019390935250506000815260200192915050565b60e060020a634e487b7102600052601160045260246000fd5b600060001982141561255257612552612525565b5060010190565b6000826125795760e060020a634e487b7102600052601260045260246000fd5b500490565b600081600019048311821515161561259857612598612525565b500290565b6000828210156125af576125af612525565b500390565b600082198211156125c7576125c7612525565b500190565b6000602082840312156125de57600080fd5b8151611cfd8161220c565b600082516125fb81846020870161248d565b9190910192915050565b602081526000611cfd60208301846124b956fea26469706673582212202d1a16b1e96666a72e9555edac80e4d6dfbb0eea867d7c8c4f31b5ad19df323064736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14651:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:50",
                "type": ""
              }
            ],
            "src": "14:180:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:50",
                "type": ""
              }
            ],
            "src": "199:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "504:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "515:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "492:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "534:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "549:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "557:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "527:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "462:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "473:4:50",
                "type": ""
              }
            ],
            "src": "381:226:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "868:373:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "878:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "890:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:3:50",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "886:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "878:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "914:52:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "924:42:50",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "918:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "982:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "997:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1005:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "975:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "975:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1029:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1040:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1025:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1045:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1018:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1018:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1072:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1083:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1068:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1088:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1061:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1061:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1061:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1115:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1126:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1111:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1111:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1131:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1158:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1169:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1154:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:19:50"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1175:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1147:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1147:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1147:35:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1202:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1213:3:50",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1223:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1231:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1219:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1219:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1191:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1191:44:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$3124_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "797:9:50",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "808:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "816:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "824:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "832:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "840:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "848:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "859:4:50",
                "type": ""
              }
            ],
            "src": "612:629:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1291:109:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1314:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1325:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1332:42:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1321:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1321:54:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1311:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1311:65:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1304:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:73:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1301:93:50"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1280:5:50",
                "type": ""
              }
            ],
            "src": "1246:154:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1454:85:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1464:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1486:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1473:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1464:5:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1527:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1502:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1502:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1502:31:50"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1433:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1444:5:50",
                "type": ""
              }
            ],
            "src": "1405:134:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1614:177:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1660:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1669:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1672:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1662:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1662:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1662:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1635:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1644:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1631:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1631:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1656:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1627:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1627:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1624:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1685:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1711:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1698:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1689:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1755:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1730:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1730:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1730:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1770:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1780:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1770:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1580:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1591:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1603:6:50",
                "type": ""
              }
            ],
            "src": "1544:247:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1895:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1905:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1928:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1905:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1947:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1969:2:50",
                            "type": "",
                            "value": "15"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1973:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "1958:10:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1958:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1940:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1940:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1864:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1875:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1886:4:50",
                "type": ""
              }
            ],
            "src": "1796:191:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2079:228:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2125:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2134:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2137:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2127:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2127:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2127:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2100:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2109:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2096:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2096:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2092:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2089:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2150:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2173:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2160:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2160:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2150:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2192:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2222:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2233:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2218:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2218:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2205:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2196:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2271:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2246:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2246:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2246:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2296:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2037:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2048:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2060:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2068:6:50",
                "type": ""
              }
            ],
            "src": "1992:315:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2354:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2408:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2420:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2410:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2410:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2410:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2377:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2398:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2391:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2391:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2384:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2384:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2374:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2374:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2364:60:50"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2343:5:50",
                "type": ""
              }
            ],
            "src": "2312:118:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2568:474:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2615:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2624:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2627:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2617:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2617:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2617:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2589:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2598:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2585:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2585:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2610:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2581:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2581:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2578:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2640:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2663:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2650:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2640:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2682:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2712:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2723:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2708:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2708:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2695:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2686:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2761:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2736:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2736:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2776:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2786:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2800:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2832:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2843:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2828:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2828:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2815:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2804:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2878:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2856:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2856:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2856:30:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2895:17:50",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2905:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2895:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2921:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2953:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2964:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2949:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2949:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2936:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2936:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2925:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "3002:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2977:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:33:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2977:33:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3019:17:50",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "3029:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$3124t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2510:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2521:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2533:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2541:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2549:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2557:6:50",
                "type": ""
              }
            ],
            "src": "2435:607:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3148:276:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3194:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3203:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3206:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3196:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3196:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3196:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3169:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3178:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3165:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3190:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3161:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3161:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3158:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3219:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3242:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3229:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3229:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3261:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3288:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3299:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3284:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3284:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3271:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3271:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3261:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3312:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3342:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3353:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3325:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3316:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3388:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3366:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:28:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3366:28:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3403:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3413:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3403:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3098:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3109:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3121:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3129:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3137:6:50",
                "type": ""
              }
            ],
            "src": "3047:377:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3461:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3481:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3471:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3471:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3575:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3578:4:50",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3599:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:15:50"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3429:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3713:1027:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3723:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3733:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3727:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3780:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3789:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3792:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3782:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3782:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3782:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3755:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3764:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3751:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3751:23:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3776:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3744:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3805:37:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3832:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3819:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:23:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3809:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3851:28:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3861:18:50",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3855:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3906:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3915:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3918:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3908:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3908:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3908:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3894:6:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3902:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3891:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3888:34:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3931:32:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3945:9:50"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3956:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3941:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3941:22:50"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3935:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4011:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4020:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4023:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4013:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4013:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4013:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3990:2:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3994:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3986:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3986:13:50"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4001:7:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3982:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3982:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3975:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3972:55:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4036:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "4059:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4046:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4046:16:50"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "4040:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4085:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4087:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4087:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4087:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "4077:2:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4081:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4074:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:10:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4071:36:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4116:21:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "4130:2:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4134:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "4126:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:11:50"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "4120:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4146:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4166:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4160:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "4150:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4178:56:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4200:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "4216:2:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4220:2:50",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4212:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4212:11:50"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4229:2:50",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4225:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4225:7:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4208:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4208:25:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4196:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4196:38:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4182:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4293:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4295:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4295:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4295:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4252:10:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4264:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4249:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4249:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4272:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4284:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4269:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4269:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4246:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4246:46:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4243:72:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4331:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4335:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4324:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4324:22:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4355:17:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "4366:6:50"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "4359:3:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4388:6:50"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "4396:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4381:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4381:18:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4381:18:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4408:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4419:6:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4427:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4415:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4415:15:50"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "4408:3:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4439:34:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "4461:2:50"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "4465:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4457:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4457:11:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4470:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4453:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:20:50"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "4443:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4505:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4514:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4517:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4507:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4507:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4507:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4488:6:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4496:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4485:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:19:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4482:39:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4530:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "4545:2:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4549:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4541:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4541:11:50"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "4534:3:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4617:92:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "4638:3:50"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "4662:3:50"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_address",
                                "nodeType": "YulIdentifier",
                                "src": "4643:18:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4643:23:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4631:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4631:36:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4631:36:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4680:19:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "4691:3:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4696:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4687:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4687:12:50"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "4680:3:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4572:3:50"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4577:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4569:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:15:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4585:23:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4587:19:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "4598:3:50"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4603:2:50"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4594:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4594:12:50"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "4587:3:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4565:3:50",
                    "statements": []
                  },
                  "src": "4561:148:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4718:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "4728:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4718:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3679:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3690:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3702:6:50",
                "type": ""
              }
            ],
            "src": "3618:1122:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4812:174:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4858:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4867:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4870:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4860:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4860:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4860:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4833:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4842:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4829:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4829:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4854:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4825:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4825:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4822:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4883:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4909:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4896:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4896:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4887:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4950:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4928:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4928:28:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4928:28:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4965:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4975:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4965:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4778:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4789:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4801:6:50",
                "type": ""
              }
            ],
            "src": "4745:241:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5088:87:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5098:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5110:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5121:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5106:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5098:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5140:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5155:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5163:4:50",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5151:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5151:17:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5133:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5133:36:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5057:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5068:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5079:4:50",
                "type": ""
              }
            ],
            "src": "4991:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5275:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5297:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5308:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5293:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5285:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5327:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5352:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5345:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5345:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5338:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5338:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5320:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5320:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5244:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5255:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5266:4:50",
                "type": ""
              }
            ],
            "src": "5180:187:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5459:161:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5505:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5514:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5517:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5507:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5507:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5507:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5480:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5489:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5476:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5476:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5501:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5472:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5472:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5469:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5530:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5553:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5540:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5540:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5530:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5572:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5599:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5610:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5595:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5595:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5582:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5572:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5417:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5428:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5440:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5448:6:50",
                "type": ""
              }
            ],
            "src": "5372:248:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5729:279:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5775:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5784:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5787:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5777:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5777:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5777:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5750:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5759:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5746:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5746:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5771:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5742:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5742:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5739:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5800:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5823:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5810:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5810:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5800:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5842:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5872:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5883:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5868:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5868:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5855:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5855:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5846:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5921:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5896:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5896:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5936:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5946:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5936:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5960:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5987:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5998:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5983:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5983:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5970:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5970:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5960:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5679:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5690:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5702:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5710:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5718:6:50",
                "type": ""
              }
            ],
            "src": "5625:383:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6254:294:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6264:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6276:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6287:3:50",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6272:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6264:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6307:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6318:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6300:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6300:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6300:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6345:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6356:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6341:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6341:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6361:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6334:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6334:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6334:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6388:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6399:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6384:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6384:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6404:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6377:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6377:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6431:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6442:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6427:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6427:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6447:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6420:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6420:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6420:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6474:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6485:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6470:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6470:19:50"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6491:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6463:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6463:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6463:35:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6518:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6529:3:50",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6514:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6514:19:50"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "6535:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6507:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6507:35:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6183:9:50",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6194:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6202:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6210:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6218:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6226:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6234:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6245:4:50",
                "type": ""
              }
            ],
            "src": "6013:535:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6682:119:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6692:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6704:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6715:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6700:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6692:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6734:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6745:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6727:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6727:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6727:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6772:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6783:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6768:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6768:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6788:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6761:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6761:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6761:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6643:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6654:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6662:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6673:4:50",
                "type": ""
              }
            ],
            "src": "6553:248:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6893:228:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6939:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6948:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6951:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6941:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6941:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6941:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6914:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6923:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6910:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6910:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6935:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6906:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6906:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "6903:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6964:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6990:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6977:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6968:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7034:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7009:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7009:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7009:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7049:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7059:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7049:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7073:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7100:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7111:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7096:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7096:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7083:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7083:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7073:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6851:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6862:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6874:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6882:6:50",
                "type": ""
              }
            ],
            "src": "6806:315:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7227:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7237:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7249:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7260:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7245:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7245:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7237:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7279:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7290:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7272:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7272:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7272:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7196:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7207:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7218:4:50",
                "type": ""
              }
            ],
            "src": "7126:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7482:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7499:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7510:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7492:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7492:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7492:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7533:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7544:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7529:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7529:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7549:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7522:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7522:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7522:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7572:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7583:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7568:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7568:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7588:34:50",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7561:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7561:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7561:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7632:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7644:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7640:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7640:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7632:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7459:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7473:4:50",
                "type": ""
              }
            ],
            "src": "7308:356:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7750:103:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7796:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7805:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7808:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7798:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7798:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7798:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7771:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7780:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7767:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7767:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7792:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7763:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7763:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "7760:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7821:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7837:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7831:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7831:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7821:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7716:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7727:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7739:6:50",
                "type": ""
              }
            ],
            "src": "7669:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7890:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7907:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7910:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7900:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7900:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7900:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8004:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8007:4:50",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7997:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7997:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8028:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8031:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8021:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8021:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8021:15:50"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7858:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8176:168:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8186:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8198:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8209:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8194:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8194:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8186:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8228:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8243:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8251:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8239:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8239:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8221:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8221:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8221:74:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8315:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8326:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8311:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8311:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8331:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8304:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8304:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8304:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8137:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8148:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8156:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8167:4:50",
                "type": ""
              }
            ],
            "src": "8047:297:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8468:147:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8485:3:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8498:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8506:42:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8494:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8494:55:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8551:28:50",
                            "type": "",
                            "value": "0x01000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "8490:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8490:90:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8478:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:103:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8478:103:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8590:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8601:3:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8606:2:50",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8597:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8597:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8590:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8444:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8449:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8460:3:50",
                "type": ""
              }
            ],
            "src": "8349:266:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8673:205:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8683:10:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8692:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8687:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8752:63:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8777:3:50"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "8782:1:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8773:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8773:11:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8796:3:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8801:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8792:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8792:11:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8786:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8786:18:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8766:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8766:39:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8766:39:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8713:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8716:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8710:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8724:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8726:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8735:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8738:2:50",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8731:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8731:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8726:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8706:3:50",
                    "statements": []
                  },
                  "src": "8702:113:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8841:31:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "8854:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "8859:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8850:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8850:16:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8868:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8843:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8843:27:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8843:27:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8830:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8833:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8827:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8827:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "8824:48:50"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "8651:3:50",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "8656:3:50",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8661:6:50",
                "type": ""
              }
            ],
            "src": "8620:258:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8932:208:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8942:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8962:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8956:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8956:12:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8946:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8984:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8989:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8977:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8977:19:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8977:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9031:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9038:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9027:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9027:16:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9049:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9054:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9045:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9045:14:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9061:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9005:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9005:63:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9005:63:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9077:57:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9092:3:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9105:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9113:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9101:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9101:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9122:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9118:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9118:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9097:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9097:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9088:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9088:39:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9129:4:50",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9084:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:50:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9077:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8909:5:50",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8916:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8924:3:50",
                "type": ""
              }
            ],
            "src": "8883:257:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9410:335:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9427:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9438:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9420:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9420:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9420:21:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9450:58:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9481:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9493:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9504:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9489:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9489:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9464:16:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9464:44:50"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9454:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9528:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9539:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9524:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9524:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "9548:6:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9556:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9544:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9544:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9517:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9517:50:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9517:50:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9576:46:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9607:6:50"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9615:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9590:16:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9590:32:50"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "9580:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9642:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9653:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9638:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9638:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "9662:6:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9670:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9658:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9658:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9631:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:50:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:50:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "9697:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9705:1:50",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9690:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9690:17:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9690:17:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9716:23:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "9728:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9736:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9724:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9724:15:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9716:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9371:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9382:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9390:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9401:4:50",
                "type": ""
              }
            ],
            "src": "9145:600:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9782:152:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9799:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9802:77:50",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9792:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9792:88:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9792:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9896:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9899:4:50",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9889:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9889:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9889:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9920:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9923:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9913:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9913:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9913:15:50"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9750:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9986:88:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10017:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10019:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10019:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10019:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10002:5:50"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10013:1:50",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10009:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10009:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9999:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9999:17:50"
                  },
                  "nodeType": "YulIf",
                  "src": "9996:43:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10048:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10059:5:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10066:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10055:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10055:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10048:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9968:5:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9978:3:50",
                "type": ""
              }
            ],
            "src": "9939:135:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10253:175:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10270:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10281:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10263:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10263:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10263:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10304:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10315:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10300:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10300:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10320:2:50",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10293:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10293:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10293:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10343:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10354:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10339:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10339:18:50"
                      },
                      {
                        "hexValue": "6f6e6c79207265672078636861696e20656e64706f696e7473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10359:27:50",
                        "type": "",
                        "value": "only reg xchain endpoints"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10332:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10332:55:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10332:55:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10396:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10408:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10419:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10404:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10404:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10396:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_933513a210d761a3cf5d7550184de0b9bdab57d032881178b4fb3d8a7418c9d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10230:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10244:4:50",
                "type": ""
              }
            ],
            "src": "10079:349:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10607:166:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10624:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10635:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10617:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10617:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10617:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10658:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10669:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10654:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10654:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10674:2:50",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10647:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10647:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10647:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10697:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10708:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10693:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10693:18:50"
                      },
                      {
                        "hexValue": "63616e6e6f7420626520302061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10713:18:50",
                        "type": "",
                        "value": "cannot be 0 addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10686:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10686:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10686:46:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10741:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10753:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10764:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10749:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10749:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10741:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c22ef0bab26555aeecbe3d29bf071bbbe8cdc4468f75014dd3f7d217b713e4d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10584:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10598:4:50",
                "type": ""
              }
            ],
            "src": "10433:340:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10952:243:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10969:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10980:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10962:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10962:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10962:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11003:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11014:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10999:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10999:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11019:2:50",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10992:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10992:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10992:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11042:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11053:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11038:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11038:18:50"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11058:34:50",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11031:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11031:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11031:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11113:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11124:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11109:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11109:18:50"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11129:23:50",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11102:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11102:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11102:51:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11162:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11174:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11185:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11170:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11170:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11162:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10929:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10943:4:50",
                "type": ""
              }
            ],
            "src": "10778:417:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11374:228:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11391:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11402:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11384:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11384:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11384:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11425:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11436:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11421:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11421:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11441:2:50",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11414:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11414:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11414:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11464:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11475:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11460:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11460:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11480:34:50",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11453:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11453:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11453:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11535:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11546:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11531:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11531:18:50"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11551:8:50",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11524:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11524:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11524:36:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11569:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11581:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11592:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11577:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11577:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11569:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11351:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11365:4:50",
                "type": ""
              }
            ],
            "src": "11200:402:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11653:228:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11684:168:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11705:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11708:77:50",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11698:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11698:88:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11698:88:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11806:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11809:4:50",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11799:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11799:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11799:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11834:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11837:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11827:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11827:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11827:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11673:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11666:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11666:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "11663:189:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11861:14:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11870:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11873:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11866:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11866:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11861:1:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11638:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11641:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11647:1:50",
                "type": ""
              }
            ],
            "src": "11607:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11938:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11997:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11999:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11999:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11999:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11969:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11962:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11962:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11955:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11955:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11977:1:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11988:1:50",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11984:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11984:6:50"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11992:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11980:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11980:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11974:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11974:21:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11951:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11951:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "11948:71:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12028:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12043:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12046:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12039:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12039:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12028:7:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11917:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11920:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11926:7:50",
                "type": ""
              }
            ],
            "src": "11886:168:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12108:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12130:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12132:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12132:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12132:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12124:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12127:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12121:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12121:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "12118:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12161:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12173:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12176:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12169:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12169:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12161:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12090:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12093:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12099:4:50",
                "type": ""
              }
            ],
            "src": "12059:125:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12346:241:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12356:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12368:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12379:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12364:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12364:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12356:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12391:52:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12401:42:50",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12395:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12459:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12474:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12482:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12470:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12470:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12452:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12452:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12452:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12506:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12517:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12502:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12502:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12526:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12534:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12522:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12522:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12495:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12495:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12495:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12558:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12569:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12554:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12554:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12574:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12547:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12547:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12547:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12299:9:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12310:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12318:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12326:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12337:4:50",
                "type": ""
              }
            ],
            "src": "12189:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12640:80:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12667:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12669:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12669:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12669:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12656:1:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12663:1:50"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12659:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12659:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12653:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12653:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "12650:39:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12698:16:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12709:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12712:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12705:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12705:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12698:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12623:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12626:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12632:3:50",
                "type": ""
              }
            ],
            "src": "12592:128:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12803:167:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12849:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12858:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12861:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12851:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12851:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12851:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12824:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12833:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12820:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12820:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12845:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12816:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12816:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "12813:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12874:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12893:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12887:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12887:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12878:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12934:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12912:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:28:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12912:28:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12949:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12959:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12949:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12769:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12780:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12792:6:50",
                "type": ""
              }
            ],
            "src": "12725:245:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13149:232:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13166:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13177:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13159:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13159:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13159:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13200:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13211:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13196:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13196:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13216:2:50",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13189:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13189:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13189:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13239:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13250:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13235:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13235:18:50"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13255:34:50",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13228:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13228:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13228:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13310:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13321:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13306:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13306:18:50"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13326:12:50",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13299:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13299:40:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13299:40:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13348:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13360:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13371:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13356:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13348:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13126:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13140:4:50",
                "type": ""
              }
            ],
            "src": "12975:406:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13560:228:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13577:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13588:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13570:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13570:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13570:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13611:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13622:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13607:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13607:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13627:2:50",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13600:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13600:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13600:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13650:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13661:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13646:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13646:18:50"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13666:34:50",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13639:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13639:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13639:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13721:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13732:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13717:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13717:18:50"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13737:8:50",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13710:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13710:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13710:36:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13755:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13767:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13778:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13763:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13763:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13755:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13537:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13551:4:50",
                "type": ""
              }
            ],
            "src": "13386:402:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13967:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13984:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13995:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13977:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13977:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13977:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14018:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14029:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14014:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14014:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14034:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14007:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14007:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14007:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14057:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14068:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14053:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14053:18:50"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14073:31:50",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14046:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14046:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14046:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14114:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14126:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14137:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14122:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14122:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14114:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13944:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13958:4:50",
                "type": ""
              }
            ],
            "src": "13793:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14288:137:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14298:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14318:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14312:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14312:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14302:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14360:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14368:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14356:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14356:17:50"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14375:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14380:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14334:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14334:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14334:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14396:23:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14407:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14412:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14403:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14403:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14396:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14264:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14269:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14280:3:50",
                "type": ""
              }
            ],
            "src": "14151:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14551:98:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14568:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14579:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14561:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14561:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14561:21:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14591:52:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14616:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14628:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14639:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14624:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14624:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14599:16:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14599:44:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14591:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14520:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14531:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14542:4:50",
                "type": ""
              }
            ],
            "src": "14430:219:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$3124_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(15, value0))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$3124t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, mul(and(value0, 0xffffffffffffffffffffffffffffffffffffffff), 0x01000000000000000000000000))\n        end := add(pos, 20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, 32)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_933513a210d761a3cf5d7550184de0b9bdab57d032881178b4fb3d8a7418c9d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"only reg xchain endpoints\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c22ef0bab26555aeecbe3d29bf071bbbe8cdc4468f75014dd3f7d217b713e4d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"cannot be 0 addr\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "154:2709:27:-:0;;;2957:71:25;;;-1:-1:-1;;;;;;2957:71:25;2986:42;2957:71;;;3142:5;3112:35;;2957:71;3231:61;;;;3371:2;3311:62;;3472:41;;;-1:-1:-1;;3472:41:25;;;;;;;;3604:2;3561:45;;4854:3;4812:45;;5292:28;;;;;;;;2957:71;6891:34;;154:2709:27;;;;;;;;;-1:-1:-1;921:32:12;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;1701:1:14;1806:22;;154:2709:27;;640:96:20;719:10;;640:96::o;2270:187:12:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:12;;;-1:-1:-1;;;;;;2378:17:12;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;154:2709:27:-;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;11471:91;11540:8;:15;11471:91;;;345:25:50;;;333:2;318:18;11471:91:25;;;;;;;;3430:36;;;;;;4742:32;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;545:55:50;;;527:74;;515:2;500:18;4742:32:25;381:226:50;8191:158:25;;;;;;:::i;:::-;;:::i;6554:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;993:15:50;;;975:34;;1040:2;1025:18;;1018:34;;;;1068:18;;1061:34;;;;1126:2;1111:18;;1104:34;;;;1169:3;1154:19;;1147:35;1219:15;;;1213:3;1198:19;;1191:44;901:3;886:19;6554:26:25;612:629:50;6891:34:25;;;;;;5366:52;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5366:52:25;;;9245:136;;;;;;:::i;:::-;;:::i;8074:112::-;;;;;;:::i;:::-;;:::i;4016:43::-;;;;;;;;;;;;;;;1969:2:50;1958:22;;;;1940:41;;1928:2;1913:18;4016:43:25;1796:191:50;8354:158:25;;;;;;:::i;:::-;;:::i;3561:45::-;;;;;;3311:62;;;;;;7897:172;;;;;;:::i;:::-;;:::i;7446:164::-;;;;;;:::i;:::-;;:::i;3714:34::-;;;;;-1:-1:-1;;;;;3714:34:25;;;12075:1361;;;:::i;3081:25::-;;;;;;5658:33;;;;;-1:-1:-1;;;;;5658:33:25;;;3112:35;;;;;;13579:2527;;;;;;:::i;:::-;;:::i;11759:137::-;;;;;;:::i;:::-;11832:7;11858:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;11858:24:25;;;;;;;;;;;:31;;11759:137;3231:61;;;;;;777:942:27;;;;;;:::i;:::-;;:::i;10868:160:25:-;;;;;;:::i;:::-;;:::i;2623:238:27:-;;;:::i;2024:502::-;;;;;;:::i;:::-;;:::i;3034:25:25:-;;;;;-1:-1:-1;;;;;3034:25:25;;;10588:135;;;;;;:::i;:::-;;:::i;4408:31::-;;;;;-1:-1:-1;;;;;4408:31:25;;;16307:142;;;;;;:::i;:::-;;:::i;8517:121::-;;;;;;:::i;:::-;;:::i;10088:132::-;;;;;;:::i;:::-;;:::i;2957:71::-;;;;;-1:-1:-1;;;;;2957:71:25;;;1668:101:12;;;:::i;6083:39:25:-;;;;;;4150:26;;;;;-1:-1:-1;;;;;4150:26:25;;;5468:58;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5163:4:50;5151:17;;;5133:36;;5121:2;5106:18;5468:58:25;4991:184:50;4310:32:25;;;;;-1:-1:-1;;;;;4310:32:25;;;2931:20;;;;;-1:-1:-1;;;;;2931:20:25;;;1036:85:12;1082:7;1108:6;-1:-1:-1;;;;;1108:6:12;1036:85;;3472:41:25;;;;;;;;;;;;5345:14:50;;5338:22;5320:41;;5308:2;5293:18;3472:41:25;5180:187:50;7323:118:25;;;;;;:::i;:::-;;:::i;5210:22::-;;;;;;4812:45;;;;;;4625:44;;;;;;:::i;:::-;;:::i;10728:135::-;;;;;;:::i;:::-;;:::i;4974:32::-;;;;;-1:-1:-1;;;;;4974:32:25;;;5697:73;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;9502:238;;;;;;:::i;:::-;;:::i;6708:72::-;;;;;;:::i;:::-;;:::i;:::-;;;;6300:25:50;;;6356:2;6341:18;;6334:34;;;;6384:18;;;6377:34;;;;6442:2;6427:18;;6420:34;6485:3;6470:19;;6463:35;6529:3;6514:19;;6507:35;6287:3;6272:19;6708:72:25;6013:535:50;4508:44:25;;;;;;:::i;:::-;;:::i;3631:32::-;;;;;-1:-1:-1;;;;;3631:32:25;;;9973:110;;;;;;:::i;:::-;;:::i;3815:37::-;;;;;-1:-1:-1;;;;;3815:37:25;;;7113:74;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6727:25:50;;;6783:2;6768:18;;6761:34;;;;6700:18;7113:74:25;6553:248:50;8643:158:25;;;;;;:::i;:::-;;:::i;8806:132::-;;;;;;:::i;:::-;;:::i;17216:256::-;;;;;;:::i;:::-;;:::i;6409:31::-;;;;;-1:-1:-1;;;;;6409:31:25;;;3393:30;;;;;;3168:42;;;;;;9088:152;;;;;;:::i;:::-;;:::i;7615:124::-;;;;;;:::i;:::-;;:::i;10322:127::-;;;;;;:::i;:::-;;:::i;5934:38::-;;;;;;9745:108;;;;;;:::i;:::-;;:::i;6486:36::-;;;;;;3908:41;;;;;;;;;4215:32;;;;;-1:-1:-1;;;;;4215:32:25;;;9386:111;;;;;;:::i;:::-;;:::i;10225:92::-;;;;;;:::i;:::-;;:::i;5292:28::-;;;;;;;;;8943:140;;;;;;:::i;:::-;;:::i;6446:34::-;;;;;;10454:129;;;;;;:::i;:::-;;:::i;1918:198:12:-;;;;;;:::i;:::-;;:::i;7212:106:25:-;;;;;;:::i;:::-;;:::i;9858:110::-;;;;;;:::i;:::-;;:::i;5079:39::-;;;;;-1:-1:-1;;;;;5079:39:25;;;7744:148;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;;;;;;;;;7839:21:25::1;:46:::0;7744:148::o;4742:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4742:32:25;;-1:-1:-1;4742:32:25;:::o;8191:158::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8291:42:25::1;:51:::0;8191:158::o;6554:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6554:26:25;;;;-1:-1:-1;6554:26:25;;;;;;;;:::o;9245:136::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9334:18:25::1;:40:::0;;-1:-1:-1;;;;;;9334:40:25::1;-1:-1:-1::0;;;;;9334:40:25;;;::::1;::::0;;;::::1;::::0;;9245:136::o;8074:112::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8151:12:25::1;:28:::0;8074:112::o;8354:158::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8454:42:25::1;:51:::0;8354:158::o;7897:172::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8004:27:25::1;:58:::0;7897:172::o;7446:164::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;7549:25:25::1;:54:::0;7446:164::o;12075:1361::-;12124:7;12283:47;12333:117;12428:21;;12333:90;12384:38;12416:5;12384:27;;:31;;:38;;;;:::i;:::-;12363:15;;12333:25;;:46;;:29;:46::i;:::-;:50;;:90::i;:::-;:94;;:117::i;:::-;12283:167;;12557:42;;12515:39;:84;12511:404;;;-1:-1:-1;12657:42:25;;12511:404;;;12762:42;;12720:39;:84;12716:199;;;-1:-1:-1;12862:42:25;;12716:199;13032:5;;13049:10;;;13025:35;;;;;-1:-1:-1;;;;;13049:10:25;;;13025:35;;;527:74:50;;;;12983:39:25;;13032:5;;13025:23;;500:18:50;;13025:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12983:77;-1:-1:-1;13191:40:25;13234:87;13315:5;13234:76;12983:77;13270:39;13234:35;:76::i;:87::-;13191:130;;13379:50;13416:12;;13379:32;:36;;:50;;;;:::i;:::-;13372:57;;;;;12075:1361;:::o;13579:2527::-;13899:21;13923:8;13932:4;13923:14;;;;;;;;:::i;:::-;;;;;;;;;;;13899:38;;14026:4;:20;;;14010:12;:36;14006:73;;14062:7;13579:2527;:::o;14006:73::-;14191:21;14215:38;14232:4;:20;;;14215:12;:16;;:38;;;;:::i;:::-;14191:62;;14335:1;14318:13;:18;14314:55;;14352:7;;13579:2527;:::o;14314:55::-;14432:21;14456:18;:16;:18::i;:::-;14432:42;;14573:19;14595:74;14653:15;;14595:53;14632:4;:15;;;14595:32;14613:13;14595;:17;;:32;;;;:::i;:74::-;14777:24;;14573:96;;-1:-1:-1;;;;;;14777:24:25;14768:4;14760:41;14756:1344;;;14992:10;;14968:5;;14961:70;;-1:-1:-1;;;;;14968:5:25;;;;14992:10;15012:4;15019:11;14961:30;:70::i;:::-;15160:20;;;;:37;;15185:11;15160:24;:37::i;:::-;15137:20;;;:60;15306:12;15283:20;;;:35;14756:1344;;;15471:5;;15465:45;;;;;15491:4;15465:45;;;8221:74:50;8311:18;;;8304:34;;;-1:-1:-1;;;;;15471:5:25;;;;15465:17;;8194:18:50;;15465:45:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15615:11:25;;;;15561:33;15597:30;;;:17;:30;;;;;;;;;;15924:24;;15907:42;;-1:-1:-1;;;;;15924:24:25;;;8551:28:50;8490:90;15907:42:25;;;8478:103:50;15907:42:25;;;;;;;;;8597:12:50;;;15907:42:25;;15967:88;;;;345:25:50;;;15967:88:25;;;;;;;;;;318:18:50;;;;15967:88:25;;;;;;;;;;;;;15826:263;;;;;15597:30;;;-1:-1:-1;15597:30:25;;-1:-1:-1;15826:63:25;;:263;;15907:42;15826:263;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15335:765;14756:1344;13620:2486;;;;13579:2527;:::o;777:942:27:-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;981:11:27::1;977:59;;;1008:17;:15;:17::i;:::-;1154:23;1195:10;;1180:12;:25;:53;;1223:10;;1180:53;;;1208:12;1180:53;1338:15;::::0;1154:79;;-1:-1:-1;1338:32:27::1;::::0;1358:11;1338:19:::1;:32::i;:::-;1320:15;:50:::0;1445:257:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1445:257:27;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;1445:257:27;;;;;;;;;;;;;;::::1;::::0;;;;;;1418:8:::1;:294:::0;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;1418:294:27;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;777:942:27:o;10868:160:25:-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10969:24:25::1;:52:::0;10868:160::o;2623:238:27:-;2684:8;:15;2667:14;2767:88;2795:6;2789:3;:12;2767:88;;;2824:20;;;;;;;;345:25:50;;;2824:4:27;;:15;;318:18:50;;2824:20:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:5;;;;:::i;:::-;;;2767:88;;;;2657:204;2623:238::o;2024:502::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;2204:11:27::1;2200:59;;;2231:17;:15;:17::i;:::-;2360:63;2411:11;2360:46;2380:8;2389:4;2380:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;2360:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:63::i;:::-;2342:15;:81;;;;2508:11;2480:8;2489:4;2480:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:39;;;;2024:502:::0;;;:::o;10588:135:25:-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10681:35:25;;::::1;::::0;:27:::1;::::0;:35:::1;::::0;::::1;::::0;::::1;:::i;16307:142::-:0;719:10:20;1135:1:25;1093:39;;;:25;:39;;;;;;;;1072:115;;;;-1:-1:-1;;;;;1072:115:25;;10281:2:50;1072:115:25;;;10263:21:50;10320:2;10300:18;;;10293:30;10359:27;10339:18;;;10332:55;10404:18;;1072:115:25;10079:349:50;1072:115:25;16410:5:::1;::::0;16422:10:::1;::::0;;16404:38:::1;::::0;;;;-1:-1:-1;;;;;16422:10:25;;::::1;16404:38:::0;;::::1;8221:74:50::0;;;;8311:18;;;8304:34;;;16410:5:25;;::::1;::::0;16404:17:::1;::::0;8194:18:50;;16404:38:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8517:121:::0;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8597:22:25::1;:34:::0;;-1:-1:-1;;8597:34:25::1;::::0;::::1;;::::0;;;::::1;::::0;;8517:121::o;10088:132::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10175:17:25::1;:38:::0;;-1:-1:-1;;;;;;10175:38:25::1;-1:-1:-1::0;;;;;10175:38:25;;;::::1;::::0;;;::::1;::::0;;10088:132::o;1668:101:12:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7323:118:25:-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;7403:10:25::1;:31:::0;;-1:-1:-1;;;;;;7403:31:25::1;-1:-1:-1::0;;;;;7403:31:25;;;::::1;::::0;;;::::1;::::0;;7323:118::o;4625:44::-;;;;;;;;;;;;10728:135;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10821:35:25;;::::1;::::0;:27:::1;::::0;:35:::1;::::0;::::1;::::0;::::1;:::i;9502:238::-:0;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;9611:39:25;::::1;9603:68;;;::::0;-1:-1:-1;;;;;9603:68:25;;10635:2:50;9603:68:25::1;::::0;::::1;10617:21:50::0;10674:2;10654:18;;;10647:30;10713:18;10693;;;10686:46;10749:18;;9603:68:25::1;10433:340:50::0;9603:68:25::1;9681:24;:52:::0;;-1:-1:-1;;;;;;9681:52:25::1;-1:-1:-1::0;;;;;9681:52:25;;;::::1;::::0;;;::::1;::::0;;9502:238::o;6708:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6708:72:25;;-1:-1:-1;6708:72:25;-1:-1:-1;6708:72:25;;;:::o;4508:44::-;;;;;;;;;;;;9973:110;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10049:17:25::1;:27:::0;;-1:-1:-1;;;;;;10049:27:25::1;-1:-1:-1::0;;;;;10049:27:25;;;::::1;::::0;;;::::1;::::0;;9973:110::o;8643:158::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8747:27:25::1;::::0;;;:17:::1;:27;::::0;;;;;:47;;-1:-1:-1;;;;;;8747:47:25::1;-1:-1:-1::0;;;;;8747:47:25;;::::1;::::0;;;::::1;::::0;;8643:158::o;8806:132::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;8893:17:25::1;:38:::0;;-1:-1:-1;;;;;;8893:38:25::1;-1:-1:-1::0;;;;;8893:38:25;;;::::1;::::0;;;::::1;::::0;;8806:132::o;17216:256::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;17344:5:25::1;::::0;-1:-1:-1;;;;;17334:15:25;;::::1;17344:5:::0;::::1;17334:15;;17326:81;;;::::0;-1:-1:-1;;;;;17326:81:25;;10980:2:50;17326:81:25::1;::::0;::::1;10962:21:50::0;11019:2;10999:18;;;10992:30;11058:34;11038:18;;;11031:62;11129:23;11109:18;;;11102:51;11170:19;;17326:81:25::1;10778:417:50::0;17326:81:25::1;17417:48;-1:-1:-1::0;;;;;17417:27:25;::::1;17445:10;17457:7:::0;17417:27:::1;:48::i;9088:152::-:0;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9185:22:25::1;:48:::0;;-1:-1:-1;;;;;;9185:48:25::1;-1:-1:-1::0;;;;;9185:48:25;;;::::1;::::0;;;::::1;::::0;;9088:152::o;7615:124::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;7698:15:25::1;:34:::0;7615:124::o;10322:127::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;10402:36:25::1;;::::0;;;:25:::1;:36;::::0;;;;:40;;-1:-1:-1;;10402:40:25::1;10441:1;10402:40;::::0;;10322:127::o;9745:108::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9820:11:25::1;:26:::0;;-1:-1:-1;;;;;;9820:26:25::1;-1:-1:-1::0;;;;;9820:26:25;;;::::1;::::0;;;::::1;::::0;;9745:108::o;9386:111::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9459:16:25::1;:31:::0;;-1:-1:-1;;;;;;9459:31:25::1;-1:-1:-1::0;;;;;9459:31:25;;;::::1;::::0;;;::::1;::::0;;9386:111::o;10225:92::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;10292:7:25::1;:18:::0;10225:92::o;8943:140::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9034:19:25::1;:42:::0;;-1:-1:-1;;;;;;9034:42:25::1;-1:-1:-1::0;;;;;9034:42:25;;;::::1;::::0;;;::::1;::::0;;8943:140::o;10454:129::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;10536:36:25::1;10575:1;10536:36:::0;;;:25:::1;:36;::::0;;;;:40;;-1:-1:-1;;10536:40:25::1;::::0;;10454:129::o;1918:198:12:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:12;::::1;1998:73;;;::::0;-1:-1:-1;;;;;1998:73:12;;11402:2:50;1998:73:12::1;::::0;::::1;11384:21:50::0;11441:2;11421:18;;;11414:30;11480:34;11460:18;;;11453:62;11551:8;11531:18;;;11524:36;11577:19;;1998:73:12::1;11200:402:50::0;1998:73:12::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7212:106:25:-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;7286:10:25::1;:25:::0;7212:106::o;9858:110::-;1082:7:12;1108:6;-1:-1:-1;;;;;1108:6:12;719:10:20;1248:23:12;1240:68;;;;-1:-1:-1;;;;;1240:68:12;;;;;;;:::i;:::-;9934:17:25::1;:27:::0;;-1:-1:-1;;;;;;9934:27:25::1;-1:-1:-1::0;;;;;9934:27:25;;;::::1;::::0;;;::::1;::::0;;9858:110::o;3836:96:22:-;3894:7;3920:5;3924:1;3920;:5;:::i;:::-;3913:12;3836:96;-1:-1:-1;;;3836:96:22:o;3451:::-;3509:7;3535:5;3539:1;3535;:5;:::i;3108:96::-;3166:7;3192:5;3196:1;3192;:5;:::i;912:241:18:-;1077:68;;-1:-1:-1;;;;;12470:15:50;;;1077:68:18;;;12452:34:50;12522:15;;12502:18;;;12495:43;12554:18;;;12547:34;;;1050:96:18;;1070:5;;1100:27;;12364:18:50;;1077:68:18;;;;-1:-1:-1;;1077:68:18;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;2741:96:22:-;2799:7;2825:5;2829:1;2825;:5;:::i;2270:187:12:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:12;;;-1:-1:-1;;;;;;2378:17:12;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;701:205:18:-;840:58;;-1:-1:-1;;;;;8239:55:50;;840:58:18;;;8221:74:50;8311:18;;;8304:34;;;813:86:18;;833:5;;863:23;;8194:18:50;;840:58:18;8047:297:50;813:86:18;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:18;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:18;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;;;3811:85:18;;13177:2:50;3811:85:18;;;13159:21:50;13216:2;13196:18;;;13189:30;13255:34;13235:18;;;13228:62;13326:12;13306:18;;;13299:40;13356:19;;3811:85:18;12975:406:50;3861:223:19;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:19:o;4948:499::-;5113:12;5153:4;5145:21;:30;-1:-1:-1;5145:30:19;5137:81;;;;-1:-1:-1;;;;;5137:81:19;;13588:2:50;5137:81:19;;;13570:21:50;13627:2;13607:18;;;13600:30;13666:34;13646:18;;;13639:62;13737:8;13717:18;;;13710:36;13763:19;;5137:81:19;13386:402:50;5137:81:19;-1:-1:-1;;;;;1465:19:19;;;5228:60;;;;-1:-1:-1;;;;;5228:60:19;;13995:2:50;5228:60:19;;;13977:21:50;14034:2;14014:18;;;14007:30;14073:31;14053:18;;;14046:59;14122:18;;5228:60:19;13793:353:50;5228:60:19;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:19;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:19:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:19;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;;;8202:20:19;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:50;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:50;;14:180;-1:-1:-1;14:180:50:o;1246:154::-;-1:-1:-1;;;;;1325:5:50;1321:54;1314:5;1311:65;1301:93;;1390:1;1387;1380:12;1405:134;1473:20;;1502:31;1473:20;1502:31;:::i;:::-;1405:134;;;:::o;1544:247::-;1603:6;1656:2;1644:9;1635:7;1631:23;1627:32;1624:52;;;1672:1;1669;1662:12;1624:52;1711:9;1698:23;1730:31;1755:5;1730:31;:::i;1992:315::-;2060:6;2068;2121:2;2109:9;2100:7;2096:23;2092:32;2089:52;;;2137:1;2134;2127:12;2089:52;2173:9;2160:23;2150:33;;2233:2;2222:9;2218:18;2205:32;2246:31;2271:5;2246:31;:::i;:::-;2296:5;2286:15;;;1992:315;;;;;:::o;2312:118::-;2398:5;2391:13;2384:21;2377:5;2374:32;2364:60;;2420:1;2417;2410:12;2435:607;2533:6;2541;2549;2557;2610:3;2598:9;2589:7;2585:23;2581:33;2578:53;;;2627:1;2624;2617:12;2578:53;2663:9;2650:23;2640:33;;2723:2;2712:9;2708:18;2695:32;2736:31;2761:5;2736:31;:::i;:::-;2786:5;-1:-1:-1;2843:2:50;2828:18;;2815:32;2856:30;2815:32;2856:30;:::i;:::-;2905:7;-1:-1:-1;2964:2:50;2949:18;;2936:32;2977:33;2936:32;2977:33;:::i;:::-;2435:607;;;;-1:-1:-1;2435:607:50;;-1:-1:-1;;2435:607:50:o;3047:377::-;3121:6;3129;3137;3190:2;3178:9;3169:7;3165:23;3161:32;3158:52;;;3206:1;3203;3196:12;3158:52;3242:9;3229:23;3219:33;;3299:2;3288:9;3284:18;3271:32;3261:42;;3353:2;3342:9;3338:18;3325:32;3366:28;3388:5;3366:28;:::i;:::-;3413:5;3403:15;;;3047:377;;;;;:::o;3429:184::-;-1:-1:-1;;;;;3478:1:50;3471:88;3578:4;3575:1;3568:15;3602:4;3599:1;3592:15;3618:1122;3702:6;3733:2;3776;3764:9;3755:7;3751:23;3747:32;3744:52;;;3792:1;3789;3782:12;3744:52;3832:9;3819:23;3861:18;3902:2;3894:6;3891:14;3888:34;;;3918:1;3915;3908:12;3888:34;3956:6;3945:9;3941:22;3931:32;;4001:7;3994:4;3990:2;3986:13;3982:27;3972:55;;4023:1;4020;4013:12;3972:55;4059:2;4046:16;4081:2;4077;4074:10;4071:36;;;4087:18;;:::i;:::-;4134:2;4130;4126:11;4166:2;4160:9;4229:2;4225:7;4220:2;4216;4212:11;4208:25;4200:6;4196:38;4284:6;4272:10;4269:22;4264:2;4252:10;4249:18;4246:46;4243:72;;;4295:18;;:::i;:::-;4331:2;4324:22;4381:18;;;4415:15;;;;-1:-1:-1;4457:11:50;;;4453:20;;;4485:19;;;4482:39;;;4517:1;4514;4507:12;4482:39;4541:11;;;;4561:148;4577:6;4572:3;4569:15;4561:148;;;4643:23;4662:3;4643:23;:::i;:::-;4631:36;;4594:12;;;;4687;;;;4561:148;;;4728:6;3618:1122;-1:-1:-1;;;;;;;;3618:1122:50:o;4745:241::-;4801:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:52;;;4870:1;4867;4860:12;4822:52;4909:9;4896:23;4928:28;4950:5;4928:28;:::i;5372:248::-;5440:6;5448;5501:2;5489:9;5480:7;5476:23;5472:32;5469:52;;;5517:1;5514;5507:12;5469:52;-1:-1:-1;;5540:23:50;;;5610:2;5595:18;;;5582:32;;-1:-1:-1;5372:248:50:o;5625:383::-;5702:6;5710;5718;5771:2;5759:9;5750:7;5746:23;5742:32;5739:52;;;5787:1;5784;5777:12;5739:52;5823:9;5810:23;5800:33;;5883:2;5872:9;5868:18;5855:32;5896:31;5921:5;5896:31;:::i;:::-;5625:383;;5946:5;;-1:-1:-1;;;5998:2:50;5983:18;;;;5970:32;;5625:383::o;6806:315::-;6874:6;6882;6935:2;6923:9;6914:7;6910:23;6906:32;6903:52;;;6951:1;6948;6941:12;6903:52;6990:9;6977:23;7009:31;7034:5;7009:31;:::i;:::-;7059:5;7111:2;7096:18;;;;7083:32;;-1:-1:-1;;;6806:315:50:o;7308:356::-;7510:2;7492:21;;;7529:18;;;7522:30;7588:34;7583:2;7568:18;;7561:62;7655:2;7640:18;;7308:356::o;7669:184::-;7739:6;7792:2;7780:9;7771:7;7767:23;7763:32;7760:52;;;7808:1;7805;7798:12;7760:52;-1:-1:-1;7831:16:50;;7669:184;-1:-1:-1;7669:184:50:o;7858:::-;-1:-1:-1;;;;;7907:1:50;7900:88;8007:4;8004:1;7997:15;8031:4;8028:1;8021:15;8620:258;8692:1;8702:113;8716:6;8713:1;8710:13;8702:113;;;8792:11;;;8786:18;8773:11;;;8766:39;8738:2;8731:10;8702:113;;;8833:6;8830:1;8827:13;8824:48;;;-1:-1:-1;;8868:1:50;8850:16;;8843:27;8620:258::o;8883:257::-;8924:3;8962:5;8956:12;8989:6;8984:3;8977:19;9005:63;9061:6;9054:4;9049:3;9045:14;9038:4;9031:5;9027:16;9005:63;:::i;:::-;9122:2;9101:15;-1:-1:-1;;9097:29:50;9088:39;;;;9129:4;9084:50;;8883:257;-1:-1:-1;;8883:257:50:o;9145:600::-;9438:2;9427:9;9420:21;9401:4;9464:44;9504:2;9493:9;9489:18;9481:6;9464:44;:::i;:::-;9556:9;9548:6;9544:22;9539:2;9528:9;9524:18;9517:50;9590:32;9615:6;9607;9590:32;:::i;:::-;9658:22;;;9653:2;9638:18;;;9631:50;;;;-1:-1:-1;;9705:1:50;9690:17;;9736:2;9724:15;;9145:600;-1:-1:-1;;9145:600:50:o;9750:184::-;-1:-1:-1;;;;;9799:1:50;9792:88;9899:4;9896:1;9889:15;9923:4;9920:1;9913:15;9939:135;9978:3;-1:-1:-1;;9999:17:50;;9996:43;;;10019:18;;:::i;:::-;-1:-1:-1;10066:1:50;10055:13;;9939:135::o;11607:274::-;11647:1;11673;11663:189;;-1:-1:-1;;;;;11705:1:50;11698:88;11809:4;11806:1;11799:15;11837:4;11834:1;11827:15;11663:189;-1:-1:-1;11866:9:50;;11607:274::o;11886:168::-;11926:7;11992:1;11988;11984:6;11980:14;11977:1;11974:21;11969:1;11962:9;11955:17;11951:45;11948:71;;;11999:18;;:::i;:::-;-1:-1:-1;12039:9:50;;11886:168::o;12059:125::-;12099:4;12127:1;12124;12121:8;12118:34;;;12132:18;;:::i;:::-;-1:-1:-1;12169:9:50;;12059:125::o;12592:128::-;12632:3;12663:1;12659:6;12656:1;12653:13;12650:39;;;12669:18;;:::i;:::-;-1:-1:-1;12705:9:50;;12592:128::o;12725:245::-;12792:6;12845:2;12833:9;12824:7;12820:23;12816:32;12813:52;;;12861:1;12858;12851:12;12813:52;12893:9;12887:16;12912:28;12934:5;12912:28;:::i;14151:274::-;14280:3;14318:6;14312:13;14334:53;14380:6;14375:3;14368:4;14360:6;14356:17;14334:53;:::i;:::-;14403:16;;;;;14151:274;-1:-1:-1;;14151:274:50:o;14430:219::-;14579:2;14568:9;14561:21;14542:4;14599:44;14639:2;14628:9;14624:18;14616:6;14599:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract ZorroControllerPoolMgmt is ZorroControllerBase {\n    /* Libraries */\n    using SafeMath for uint256;\n    \n    /* Pool management */\n\n    /// @notice Adds a new pool. Can only be called by the owner.\n    /// @dev DO NOT add the same Want token more than once. Rewards will be messed up if you do. (Only if Want tokens are stored here.)\n    /// @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n    /// @param _want The address of the want token\n    /// @param _withUpdate  Mass update all pools if set to true\n    /// @param _vault The contract address of the underlying vault\n    function add(\n        uint256 _allocPoint,\n        IERC20 _want,\n        bool _withUpdate,\n        address _vault\n    ) public onlyOwner {\n        // If _withUpdate provided, update all pools\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        // Last reward block set to current block, or the start block if the startBlock hasn't been provided\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        // Increment the total allocation points by the provided _allocPoint\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        // Push to the poolInfo array\n        poolInfo.push(\n            PoolInfo({\n                want: _want,\n                allocPoint: _allocPoint,\n                lastRewardBlock: lastRewardBlock,\n                accZORRORewards: 0,\n                totalTrancheContributions: 0,\n                vault: _vault\n            })\n        );\n    }\n\n    /// @notice Update the given pool's ZORRO allocation point. Can only be called by the owner.\n    /// @param _pid The index of the pool ID\n    /// @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n    /// @param _withUpdate  Mass update all pools if set to true\n    function set(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) public onlyOwner {\n        // If _withUpdate provided, update all pools\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        // Adjust the total allocation points by the provided _allocPoint\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        // Update the key params for this pool\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    /// @notice Updates reward variables of all pools\n    /// @dev Be careful of gas fees!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        // Iterate through each pool and run updatePool()\n        for (uint256 pid = 0; pid < length; ++pid) {\n            this.updatePool(pid);\n        }\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerPoolMgmt.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerPoolMgmt.sol",
    "exportedSymbols": {
      "Address": [
        3668
      ],
      "AggregatorV3Interface": [
        907
      ],
      "BufferChainlink": [
        1764
      ],
      "CBORChainlink": [
        2211
      ],
      "Chainlink": [
        268
      ],
      "ChainlinkClient": [
        861
      ],
      "ChainlinkRequestInterface": [
        940
      ],
      "Context": [
        3690
      ],
      "ENSInterface": [
        1020
      ],
      "ENSResolver_Chainlink": [
        2221
      ],
      "ERC20": [
        3046
      ],
      "IERC20": [
        3124
      ],
      "IERC20Metadata": [
        3149
      ],
      "LinkTokenInterface": [
        1115
      ],
      "Math": [
        3778
      ],
      "OperatorInterface": [
        1195
      ],
      "OracleInterface": [
        1234
      ],
      "Ownable": [
        2326
      ],
      "Pausable": [
        2418
      ],
      "PointerInterface": [
        1242
      ],
      "ProvethVerifier": [
        10781
      ],
      "RLPReader": [
        12177
      ],
      "ReentrancyGuard": [
        2458
      ],
      "SafeERC20": [
        3373
      ],
      "SafeMath": [
        4090
      ],
      "XChainBaseLayer": [
        7893
      ],
      "XChainEndpoint": [
        8530
      ],
      "ZUSDC": [
        12674
      ],
      "Zorro": [
        12624
      ],
      "ZorroControllerBase": [
        5353
      ],
      "ZorroControllerOwnable": [
        12574
      ],
      "ZorroControllerPoolMgmt": [
        7621
      ]
    },
    "id": 7622,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7493,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:27"
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7622,
        "sourceUnit": 5354,
        "src": "57:36:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7622,
        "sourceUnit": 4091,
        "src": "95:57:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7496,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5353,
              "src": "190:19:27"
            },
            "id": 7497,
            "nodeType": "InheritanceSpecifier",
            "src": "190:19:27"
          }
        ],
        "canonicalName": "ZorroControllerPoolMgmt",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7621,
        "linearizedBaseContracts": [
          7621,
          5353,
          2458,
          2326,
          3690
        ],
        "name": "ZorroControllerPoolMgmt",
        "nameLocation": "163:23:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7500,
            "libraryName": {
              "id": 7498,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4090,
              "src": "242:8:27"
            },
            "nodeType": "UsingForDirective",
            "src": "236:27:27",
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "255:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 7552,
              "nodeType": "Block",
              "src": "914:805:27",
              "statements": [
                {
                  "condition": {
                    "id": 7515,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7508,
                    "src": "981:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7520,
                  "nodeType": "IfStatement",
                  "src": "977:59:27",
                  "trueBody": {
                    "id": 7519,
                    "nodeType": "Block",
                    "src": "994:42:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7516,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7620,
                            "src": "1008:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 7517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1008:17:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7518,
                        "nodeType": "ExpressionStatement",
                        "src": "1008:17:27"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7522,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nameLocation": "1162:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "1154:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7521,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1154:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7531,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 7523,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1180:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "1180:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 7525,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "1195:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1180:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 7529,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "1223:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1180:53:27",
                    "trueExpression": {
                      "expression": {
                        "id": 7527,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1208:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1208:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1154:79:27"
                },
                {
                  "expression": {
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7532,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "1320:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7535,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7503,
                          "src": "1358:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7533,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4667,
                          "src": "1338:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3954,
                        "src": "1338:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1338:32:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1320:50:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:50:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7543,
                            "name": "_want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7506,
                            "src": "1478:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3124",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 7544,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7503,
                            "src": "1513:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 7545,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7522,
                            "src": "1559:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 7546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1609:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 7547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1655:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 7548,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7510,
                            "src": "1681:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3124",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7542,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "1445:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$4546_storage_ptr_$",
                            "typeString": "type(struct ZorroControllerBase.PoolInfo storage pointer)"
                          }
                        },
                        "id": 7549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "want",
                          "allocPoint",
                          "lastRewardBlock",
                          "accZORRORewards",
                          "totalTrancheContributions",
                          "vault"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1445:257:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_memory_ptr",
                          "typeString": "struct ZorroControllerBase.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_memory_ptr",
                          "typeString": "struct ZorroControllerBase.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "id": 7539,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4656,
                        "src": "1418:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                          "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1418:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$4546_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ZorroControllerBase.PoolInfo storage ref[] storage pointer,struct ZorroControllerBase.PoolInfo storage ref)"
                      }
                    },
                    "id": 7550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:294:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7551,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:294:27"
                }
              ]
            },
            "documentation": {
              "id": 7501,
              "nodeType": "StructuredDocumentation",
              "src": "300:472:27",
              "text": "@notice Adds a new pool. Can only be called by the owner.\n @dev DO NOT add the same Want token more than once. Rewards will be messed up if you do. (Only if Want tokens are stored here.)\n @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n @param _want The address of the want token\n @param _withUpdate  Mass update all pools if set to true\n @param _vault The contract address of the underlying vault"
            },
            "functionSelector": "5f70edcf",
            "id": 7553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7512,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2268,
                  "src": "904:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "904:9:27"
              }
            ],
            "name": "add",
            "nameLocation": "786:3:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7503,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "807:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "799:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7506,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "835:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "828:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3124",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7505,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7504,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3124,
                      "src": "828:6:27"
                    },
                    "referencedDeclaration": 3124,
                    "src": "828:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3124",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7508,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "855:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "850:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "884:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "876:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:107:27"
            },
            "returnParameters": {
              "id": 7514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:0:27"
            },
            "scope": 7621,
            "src": "777:942:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7591,
              "nodeType": "Block",
              "src": "2137:389:27",
              "statements": [
                {
                  "condition": {
                    "id": 7565,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7560,
                    "src": "2204:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7570,
                  "nodeType": "IfStatement",
                  "src": "2200:59:27",
                  "trueBody": {
                    "id": 7569,
                    "nodeType": "Block",
                    "src": "2217:42:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7566,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7620,
                            "src": "2231:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 7567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:17:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7568,
                        "nodeType": "ExpressionStatement",
                        "src": "2231:17:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7571,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "2342:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7580,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7558,
                          "src": "2411:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7574,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4656,
                                  "src": "2380:8:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                                    "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 7576,
                                "indexExpression": {
                                  "id": 7575,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7556,
                                  "src": "2389:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2380:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4546_storage",
                                  "typeString": "struct ZorroControllerBase.PoolInfo storage ref"
                                }
                              },
                              "id": 7577,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4537,
                              "src": "2380:25:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7572,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4667,
                              "src": "2360:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3969,
                            "src": "2360:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2360:46:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3954,
                        "src": "2360:50:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2360:63:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2342:81:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7583,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:81:27"
                },
                {
                  "expression": {
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7584,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4656,
                          "src": "2480:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                            "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 7586,
                        "indexExpression": {
                          "id": 7585,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7556,
                          "src": "2489:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2480:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_storage",
                          "typeString": "struct ZorroControllerBase.PoolInfo storage ref"
                        }
                      },
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4537,
                      "src": "2480:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7588,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7558,
                      "src": "2508:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2480:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:39:27"
                }
              ]
            },
            "documentation": {
              "id": 7554,
              "nodeType": "StructuredDocumentation",
              "src": "1725:294:27",
              "text": "@notice Update the given pool's ZORRO allocation point. Can only be called by the owner.\n @param _pid The index of the pool ID\n @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n @param _withUpdate  Mass update all pools if set to true"
            },
            "functionSelector": "64482f79",
            "id": 7592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7562,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2268,
                  "src": "2127:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:9:27"
              }
            ],
            "name": "set",
            "nameLocation": "2033:3:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7556,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2054:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2046:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7558,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "2076:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2068:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7560,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "2102:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2097:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:83:27"
            },
            "returnParameters": {
              "id": 7564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:27"
            },
            "scope": 7621,
            "src": "2024:502:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7619,
              "nodeType": "Block",
              "src": "2657:204:27",
              "statements": [
                {
                  "assignments": [
                    7597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7597,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2675:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7619,
                      "src": "2667:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2667:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7600,
                  "initialValue": {
                    "expression": {
                      "id": 7598,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4656,
                      "src": "2684:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                        "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2684:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2667:32:27"
                },
                {
                  "body": {
                    "id": 7617,
                    "nodeType": "Block",
                    "src": "2810:45:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7614,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7602,
                              "src": "2840:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7611,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2824:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZorroControllerPoolMgmt_$7621",
                                "typeString": "contract ZorroControllerPoolMgmt"
                              }
                            },
                            "id": 7613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updatePool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "2824:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 7615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2824:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7616,
                        "nodeType": "ExpressionStatement",
                        "src": "2824:20:27"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7605,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7602,
                      "src": "2789:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7606,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7597,
                      "src": "2795:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2789:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "initializationExpression": {
                    "assignments": [
                      7602
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7602,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "2780:3:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 7618,
                        "src": "2772:11:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7604,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2786:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2772:15:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2803:5:27",
                      "subExpression": {
                        "id": 7608,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7602,
                        "src": "2805:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7610,
                    "nodeType": "ExpressionStatement",
                    "src": "2803:5:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "2767:88:27"
                }
              ]
            },
            "documentation": {
              "id": 7593,
              "nodeType": "StructuredDocumentation",
              "src": "2532:86:27",
              "text": "@notice Updates reward variables of all pools\n @dev Be careful of gas fees!"
            },
            "functionSelector": "630b5ba1",
            "id": 7620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nameLocation": "2632:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:2:27"
            },
            "returnParameters": {
              "id": 7595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:27"
            },
            "scope": 7621,
            "src": "2623:238:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7622,
        "src": "154:2709:27",
        "usedErrors": []
      }
    ],
    "src": "32:2832:27"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerPoolMgmt.sol",
    "exportedSymbols": {
      "Address": [
        3668
      ],
      "AggregatorV3Interface": [
        907
      ],
      "BufferChainlink": [
        1764
      ],
      "CBORChainlink": [
        2211
      ],
      "Chainlink": [
        268
      ],
      "ChainlinkClient": [
        861
      ],
      "ChainlinkRequestInterface": [
        940
      ],
      "Context": [
        3690
      ],
      "ENSInterface": [
        1020
      ],
      "ENSResolver_Chainlink": [
        2221
      ],
      "ERC20": [
        3046
      ],
      "IERC20": [
        3124
      ],
      "IERC20Metadata": [
        3149
      ],
      "LinkTokenInterface": [
        1115
      ],
      "Math": [
        3778
      ],
      "OperatorInterface": [
        1195
      ],
      "OracleInterface": [
        1234
      ],
      "Ownable": [
        2326
      ],
      "Pausable": [
        2418
      ],
      "PointerInterface": [
        1242
      ],
      "ProvethVerifier": [
        10781
      ],
      "RLPReader": [
        12177
      ],
      "ReentrancyGuard": [
        2458
      ],
      "SafeERC20": [
        3373
      ],
      "SafeMath": [
        4090
      ],
      "XChainBaseLayer": [
        7893
      ],
      "XChainEndpoint": [
        8530
      ],
      "ZUSDC": [
        12674
      ],
      "Zorro": [
        12624
      ],
      "ZorroControllerBase": [
        5353
      ],
      "ZorroControllerOwnable": [
        12574
      ],
      "ZorroControllerPoolMgmt": [
        7621
      ]
    },
    "id": 7622,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7493,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:27"
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7622,
        "sourceUnit": 5354,
        "src": "57:36:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7622,
        "sourceUnit": 4091,
        "src": "95:57:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7496,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5353,
              "src": "190:19:27"
            },
            "id": 7497,
            "nodeType": "InheritanceSpecifier",
            "src": "190:19:27"
          }
        ],
        "canonicalName": "ZorroControllerPoolMgmt",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7621,
        "linearizedBaseContracts": [
          7621,
          5353,
          2458,
          2326,
          3690
        ],
        "name": "ZorroControllerPoolMgmt",
        "nameLocation": "163:23:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7500,
            "libraryName": {
              "id": 7498,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4090,
              "src": "242:8:27"
            },
            "nodeType": "UsingForDirective",
            "src": "236:27:27",
            "typeName": {
              "id": 7499,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "255:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 7552,
              "nodeType": "Block",
              "src": "914:805:27",
              "statements": [
                {
                  "condition": {
                    "id": 7515,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7508,
                    "src": "981:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7520,
                  "nodeType": "IfStatement",
                  "src": "977:59:27",
                  "trueBody": {
                    "id": 7519,
                    "nodeType": "Block",
                    "src": "994:42:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7516,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7620,
                            "src": "1008:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 7517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1008:17:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7518,
                        "nodeType": "ExpressionStatement",
                        "src": "1008:17:27"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    7522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7522,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nameLocation": "1162:15:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7552,
                      "src": "1154:23:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7521,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1154:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7531,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 7523,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1180:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "1180:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 7525,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "1195:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1180:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 7529,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "1223:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1180:53:27",
                    "trueExpression": {
                      "expression": {
                        "id": 7527,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1208:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 7528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1208:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1154:79:27"
                },
                {
                  "expression": {
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7532,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "1320:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7535,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7503,
                          "src": "1358:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7533,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4667,
                          "src": "1338:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3954,
                        "src": "1338:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1338:32:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1320:50:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:50:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7543,
                            "name": "_want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7506,
                            "src": "1478:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3124",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 7544,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7503,
                            "src": "1513:11:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 7545,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7522,
                            "src": "1559:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 7546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1609:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 7547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1655:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 7548,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7510,
                            "src": "1681:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3124",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7542,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4546,
                          "src": "1445:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$4546_storage_ptr_$",
                            "typeString": "type(struct ZorroControllerBase.PoolInfo storage pointer)"
                          }
                        },
                        "id": 7549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "want",
                          "allocPoint",
                          "lastRewardBlock",
                          "accZORRORewards",
                          "totalTrancheContributions",
                          "vault"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1445:257:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_memory_ptr",
                          "typeString": "struct ZorroControllerBase.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_memory_ptr",
                          "typeString": "struct ZorroControllerBase.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "id": 7539,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4656,
                        "src": "1418:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                          "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1418:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$4546_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct ZorroControllerBase.PoolInfo storage ref[] storage pointer,struct ZorroControllerBase.PoolInfo storage ref)"
                      }
                    },
                    "id": 7550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:294:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7551,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:294:27"
                }
              ]
            },
            "documentation": {
              "id": 7501,
              "nodeType": "StructuredDocumentation",
              "src": "300:472:27",
              "text": "@notice Adds a new pool. Can only be called by the owner.\n @dev DO NOT add the same Want token more than once. Rewards will be messed up if you do. (Only if Want tokens are stored here.)\n @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n @param _want The address of the want token\n @param _withUpdate  Mass update all pools if set to true\n @param _vault The contract address of the underlying vault"
            },
            "functionSelector": "5f70edcf",
            "id": 7553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7512,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2268,
                  "src": "904:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "904:9:27"
              }
            ],
            "name": "add",
            "nameLocation": "786:3:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7503,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "807:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "799:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7506,
                  "mutability": "mutable",
                  "name": "_want",
                  "nameLocation": "835:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "828:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3124",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7505,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7504,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3124,
                      "src": "828:6:27"
                    },
                    "referencedDeclaration": 3124,
                    "src": "828:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3124",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7508,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "855:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "850:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "884:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7553,
                  "src": "876:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:107:27"
            },
            "returnParameters": {
              "id": 7514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:0:27"
            },
            "scope": 7621,
            "src": "777:942:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7591,
              "nodeType": "Block",
              "src": "2137:389:27",
              "statements": [
                {
                  "condition": {
                    "id": 7565,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7560,
                    "src": "2204:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7570,
                  "nodeType": "IfStatement",
                  "src": "2200:59:27",
                  "trueBody": {
                    "id": 7569,
                    "nodeType": "Block",
                    "src": "2217:42:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7566,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7620,
                            "src": "2231:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 7567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2231:17:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7568,
                        "nodeType": "ExpressionStatement",
                        "src": "2231:17:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7571,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4667,
                      "src": "2342:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7580,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7558,
                          "src": "2411:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7574,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4656,
                                  "src": "2380:8:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                                    "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 7576,
                                "indexExpression": {
                                  "id": 7575,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7556,
                                  "src": "2389:4:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2380:14:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4546_storage",
                                  "typeString": "struct ZorroControllerBase.PoolInfo storage ref"
                                }
                              },
                              "id": 7577,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4537,
                              "src": "2380:25:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7572,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4667,
                              "src": "2360:15:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3969,
                            "src": "2360:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2360:46:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3954,
                        "src": "2360:50:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2360:63:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2342:81:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7583,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:81:27"
                },
                {
                  "expression": {
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7584,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4656,
                          "src": "2480:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                            "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 7586,
                        "indexExpression": {
                          "id": 7585,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7556,
                          "src": "2489:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2480:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4546_storage",
                          "typeString": "struct ZorroControllerBase.PoolInfo storage ref"
                        }
                      },
                      "id": 7587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4537,
                      "src": "2480:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7588,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7558,
                      "src": "2508:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2480:39:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:39:27"
                }
              ]
            },
            "documentation": {
              "id": 7554,
              "nodeType": "StructuredDocumentation",
              "src": "1725:294:27",
              "text": "@notice Update the given pool's ZORRO allocation point. Can only be called by the owner.\n @param _pid The index of the pool ID\n @param _allocPoint The number of allocation points for this pool (aka \"multiplier\")\n @param _withUpdate  Mass update all pools if set to true"
            },
            "functionSelector": "64482f79",
            "id": 7592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7562,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2268,
                  "src": "2127:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:9:27"
              }
            ],
            "name": "set",
            "nameLocation": "2033:3:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7556,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2054:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2046:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7558,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nameLocation": "2076:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2068:19:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7560,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nameLocation": "2102:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 7592,
                  "src": "2097:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:83:27"
            },
            "returnParameters": {
              "id": 7564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:27"
            },
            "scope": 7621,
            "src": "2024:502:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7619,
              "nodeType": "Block",
              "src": "2657:204:27",
              "statements": [
                {
                  "assignments": [
                    7597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7597,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2675:6:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 7619,
                      "src": "2667:14:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2667:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7600,
                  "initialValue": {
                    "expression": {
                      "id": 7598,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4656,
                      "src": "2684:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4546_storage_$dyn_storage",
                        "typeString": "struct ZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2684:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2667:32:27"
                },
                {
                  "body": {
                    "id": 7617,
                    "nodeType": "Block",
                    "src": "2810:45:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7614,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7602,
                              "src": "2840:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7611,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2824:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZorroControllerPoolMgmt_$7621",
                                "typeString": "contract ZorroControllerPoolMgmt"
                              }
                            },
                            "id": 7613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updatePool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5266,
                            "src": "2824:15:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 7615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2824:20:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7616,
                        "nodeType": "ExpressionStatement",
                        "src": "2824:20:27"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7605,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7602,
                      "src": "2789:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7606,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7597,
                      "src": "2795:6:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2789:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "initializationExpression": {
                    "assignments": [
                      7602
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7602,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "2780:3:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 7618,
                        "src": "2772:11:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7604,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2786:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2772:15:27"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2803:5:27",
                      "subExpression": {
                        "id": 7608,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7602,
                        "src": "2805:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7610,
                    "nodeType": "ExpressionStatement",
                    "src": "2803:5:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "2767:88:27"
                }
              ]
            },
            "documentation": {
              "id": 7593,
              "nodeType": "StructuredDocumentation",
              "src": "2532:86:27",
              "text": "@notice Updates reward variables of all pools\n @dev Be careful of gas fees!"
            },
            "functionSelector": "630b5ba1",
            "id": 7620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nameLocation": "2632:15:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:2:27"
            },
            "returnParameters": {
              "id": 7595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2657:0:27"
            },
            "scope": 7621,
            "src": "2623:238:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7622,
        "src": "154:2709:27",
        "usedErrors": []
      }
    ],
    "src": "32:2832:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-20T20:43:56.117Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "add(uint256,address,bool,address)": {
        "details": "DO NOT add the same Want token more than once. Rewards will be messed up if you do. (Only if Want tokens are stored here.)",
        "params": {
          "_allocPoint": "The number of allocation points for this pool (aka \"multiplier\")",
          "_vault": "The contract address of the underlying vault",
          "_want": "The address of the want token",
          "_withUpdate": "Mass update all pools if set to true"
        }
      },
      "getZorroPerBlock()": {
        "returns": {
          "_0": "Number of Zorro tokens per block"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "massUpdatePools()": {
        "details": "Be careful of gas fees!"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "receiveXChainBurnRewardsRequest(uint256)": {
        "params": {
          "_amount": "The quantity of ZOR tokens to burn"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "set(uint256,uint256,bool)": {
        "params": {
          "_allocPoint": "The number of allocation points for this pool (aka \"multiplier\")",
          "_pid": "The index of the pool ID",
          "_withUpdate": "Mass update all pools if set to true"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "add(uint256,address,bool,address)": {
        "notice": "Adds a new pool. Can only be called by the owner."
      },
      "getZorroPerBlock()": {
        "notice": "Determine the number of Zorro to emit per block based on current market parameters"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "massUpdatePools()": {
        "notice": "Updates reward variables of all pools"
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "receiveXChainBurnRewardsRequest(uint256)": {
        "notice": "Receives an authorized burn request from another chain and burns the specified amount of ZOR tokens from the public pool"
      },
      "set(uint256,uint256,bool)": {
        "notice": "Update the given pool's ZORRO allocation point. Can only be called by the owner."
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      }
    },
    "version": 1
  }
}