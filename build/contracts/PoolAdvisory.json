{
  "contractName": "PoolAdvisory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "advisors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cliffSeconds",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "durationSeconds",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestingWallets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_cliffSeconds",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_durationSeconds",
          "type": "uint64"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_advisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "registerAdvisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advisors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliffSeconds\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"durationSeconds\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_cliffSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_durationSeconds\",\"type\":\"uint64\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_advisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"registerAdvisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Follows a factory method to create vesting wallets for each new advisor\",\"kind\":\"dev\",\"methods\":{\"initialize(address,uint64,uint64)\":{\"params\":{\"_cliffSeconds\":\"The min time (cliff) before vested tokens can be redeemed\",\"_durationSeconds\":\"The total vesting period for tokens\",\"_zorroTokenAddress\":\"The Zorro token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerAdvisor(address,uint256)\":{\"details\":\"Starts vesting immediately\",\"params\":{\"_advisor\":\"The beneficiary address representing the advisor\",\"_amount\":\"The total amount of ZOR to vest for this advisor\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PoolAdvisory: The advisory pool contract (for advisors).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,uint64,uint64)\":{\"notice\":\"Constructor\"},\"registerAdvisor(address,uint256)\":{\"notice\":\"Registers a new advisor and creates a corresponding vesting wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/finance/PoolAdvisory.sol\":\"PoolAdvisory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/finance/VestingWallet.sol\":{\"keccak256\":\"0xeafe284c0deea23cb4bff99292901015a2525145bf23ddd711eaa85ca305ef8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0df02706c9bc4b4dce60631fe9e4a24a82474d139344d0cb8fa9fb5aacab0be\",\"dweb:/ipfs/QmUB2tQdY93Uh96ncqJKBpA8GecdoAdZS4oFTsGV8wbLtK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab84f13e6e6e0823854a0cddd49e96df052092d5919f95587607f0ed28a64cb6\",\"dweb:/ipfs/QmbNtqAq23ZDjCzHukQaa7B3y6rcobscm6FZF5PMQXcnVr\"]},\"project:/contracts/finance/PoolAdvisory.sol\":{\"keccak256\":\"0x5d11c0d063c46c24a05e77893b3a84423445f1412d064a81a30fbf126c2dbdea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://314c6eed468333a3a187c4ce090b7e32d589cf4bf766f1b081754ef4cd3d79e1\",\"dweb:/ipfs/QmR81Gp5HYoh7rtoyQeHayxGbQGYCxGHFChYRBPFSEnX74\"]},\"project:/contracts/finance/PoolTeam.sol\":{\"keccak256\":\"0x54c5f5f7b6782ca8f020e43316ee27b0d6aaaeaa043b57f26554d5123cae5e6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65f10a8739b9d9d48e3bd2a11e6d78e2dbac65d616f715eea071537a2f02bfc1\",\"dweb:/ipfs/QmbECMqKnYcaKZHfWpyUCVp3XBjHkmRyPoGwcpbpK6RnFB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611e62806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000c8576000357c010000000000000000000000000000000000000000000000000000000090048063989a8366116200008b578063989a8366146200017a5780639acba2af1462000191578063baf3510714620001a6578063d42f5f3c14620001d2578063f2fde38b14620001e957600080fd5b8063715018a614620000cd5780637ac3687014620000d95780638341ee7214620000f05780638c157db2146200013b5780638da5cb5b1462000168575b600080fd5b620000d762000200565b005b620000d7620000ea36600462000ad7565b62000247565b6099546200011d9074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b6099546200014f90600160a060020a031681565b604051600160a060020a03909116815260200162000132565b603354600160a060020a03166200014f565b620000d76200018b36600462000b1d565b62000475565b609a546200011d9067ffffffffffffffff1681565b6200014f620001b736600462000b67565b609860205260009081526040902054600160a060020a031681565b6200014f620001e336600462000b85565b620005c9565b620000d7620001fa36600462000b67565b620005f4565b603354600160a060020a03163314620002395760405160e560020a62461bcd028152600401620002309062000b9f565b60405180910390fd5b620002456000620006b3565b565b603354600160a060020a03163314620002775760405160e560020a62461bcd028152600401620002309062000b9f565b6099546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa158015620002da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000300919062000bd4565b905081811015620003575760405160e560020a62461bcd02815260206004820152601d60248201527f457863656564732061647669736f72792073686172657320617661696c000000604482015260640162000230565b609a546099546040516000928692429267ffffffffffffffff9283169274010000000000000000000000000000000000000000909204909116906200039c9062000aac565b600160a060020a03909416845267ffffffffffffffff92831660208501529082166040840152166060820152608001604051809103906000f080158015620003e8573d6000803e3d6000fd5b5060978054600181019091557f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff901805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03888116918217909355600090815260986020526040902080549091168383161790556099549192506200046f9116828562000712565b50505050565b600054610100900460ff16620004925760005460ff161562000496565b303b155b6200050d5760405160e560020a62461bcd02815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840162000230565b600054610100900460ff1615801562000530576000805461ffff19166101011790555b6099805467ffffffffffffffff80861674010000000000000000000000000000000000000000027fffffffff00000000000000000000000000000000000000000000000000000000909216600160a060020a0388161791909117909155609a805491841667ffffffffffffffff19909216919091179055620005b162000799565b80156200046f576000805461ff001916905550505050565b60978181548110620005da57600080fd5b600091825260209091200154600160a060020a0316905081565b603354600160a060020a03163314620006245760405160e560020a62461bcd028152600401620002309062000b9f565b600160a060020a038116620006a55760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840162000230565b620006b081620006b3565b50565b60338054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905262000794908490620007d0565b505050565b600054610100900460ff16620007c65760405160e560020a62461bcd028152600401620002309062000bee565b62000245620008bf565b600062000827826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316620008f79092919063ffffffff16565b80519091501562000794578080602001905181019062000848919062000c4b565b620007945760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840162000230565b600054610100900460ff16620008ec5760405160e560020a62461bcd028152600401620002309062000bee565b6200024533620006b3565b606062000908848460008562000912565b90505b9392505050565b60603031831115620009905760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840162000230565b600160a060020a0385163b620009ec5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000230565b60008086600160a060020a0316858760405162000a0a919062000c9e565b60006040518083038185875af1925050503d806000811462000a49576040519150601f19603f3d011682016040523d82523d6000602084013e62000a4e565b606091505b509150915062000a6082828662000a6b565b979650505050505050565b6060831562000a7c5750816200090b565b82511562000a8d5782518084602001fd5b8160405160e560020a62461bcd02815260040162000230919062000cbc565b61113b8062000cf283390190565b8035600160a060020a038116811462000ad257600080fd5b919050565b6000806040838503121562000aeb57600080fd5b62000af68362000aba565b946020939093013593505050565b803567ffffffffffffffff8116811462000ad257600080fd5b60008060006060848603121562000b3357600080fd5b62000b3e8462000aba565b925062000b4e6020850162000b04565b915062000b5e6040850162000b04565b90509250925092565b60006020828403121562000b7a57600080fd5b6200090b8262000aba565b60006020828403121562000b9857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121562000be757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201527f6e697469616c697a696e67000000000000000000000000000000000000000000606082015260800190565b60006020828403121562000c5e57600080fd5b815180151581146200090b57600080fd5b60005b8381101562000c8c57818101518382015260200162000c72565b838111156200046f5750506000910152565b6000825162000cb281846020870162000c6f565b9190910192915050565b602081526000825180602084015262000cdd81604085016020870162000c6f565b601f01601f1916919091016040019291505056fe60e06040526040516200113b3803806200113b83398101604081905262000026916200020a565b838383600160a060020a038316620000c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600160a060020a039092166080526001604060020a0390811660a0521660c0526200010b620000fc64010000000062000197810204565b6401000000006200019b810204565b816001604060020a03166003541062000181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f636c69666620746f6f206c6172676500000000000000000000000000000000006044820152606401620000bc565b6001604060020a03166003555062000274915050565b3390565b60028054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001604060020a03811681146200020557600080fd5b919050565b600080600080608085870312156200022157600080fd5b8451600160a060020a03811681146200023957600080fd5b93506200024960208601620001ed565b92506200025960408601620001ed565b91506200026960608601620001ed565b905092959194509250565b60805160a05160c051610e7b620002c0600039600081816101310152818161063e015261069301526000610511015260008181610190015281816104e101526107960152610e7b6000f3fe6080604052600436106100e3576000357c0100000000000000000000000000000000000000000000000000000000900480638341ee721161009c578063961325211161007657806396132521146102465780639852595c1461025b578063be9a655514610291578063f2fde38b146102a657600080fd5b80638341ee72146101fd57806386d1a69f146102135780638da5cb5b1461022857600080fd5b80630a17b06b146100ef5780630fb5a6b414610122578063191655871461015f57806338af3eed14610181578063715018a6146101c8578063810ec23b146101dd57600080fd5b366100ea57005b600080fd5b3480156100fb57600080fd5b5061010f61010a366004610c53565b6102c6565b6040519081526020015b60405180910390f35b34801561012e57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661010f565b34801561016b57600080fd5b5061017f61017a366004610c85565b6102eb565b005b34801561018d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b604051600160a060020a039091168152602001610119565b3480156101d457600080fd5b5061017f610362565b3480156101e957600080fd5b5061010f6101f8366004610ca0565b6103cb565b34801561020957600080fd5b5061010f60035481565b34801561021f57600080fd5b5061017f61047a565b34801561023457600080fd5b50600254600160a060020a03166101b0565b34801561025257600080fd5b5060005461010f565b34801561026757600080fd5b5061010f610276366004610c85565b600160a060020a031660009081526001602052604090205490565b34801561029d57600080fd5b5061010f610506565b3480156102b257600080fd5b5061017f6102c1366004610c85565b610534565b60006102e56102d460005490565b6102df903031610d02565b83610619565b92915050565b6003546102f6610506565b6103009042610d1a565b10156103565760405160e560020a62461bcd02815260206004820152601560248201527f636c696666206e6f74207965742072656163686564000000000000000000000060448201526064015b60405180910390fd5b61035f816106f3565b50565b600254600160a060020a031633146103bf5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b6103c960006107bf565b565b600160a060020a038216600090815260016020526040812054610473906040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038616906370a0823190602401602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190610d31565b6102df9190610d02565b9392505050565b60008054610487426102c6565b6104919190610d1a565b9050806000808282546104a49190610d02565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161035f7f00000000000000000000000000000000000000000000000000000000000000008261081e565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b600254600160a060020a031633146105915760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b600160a060020a0381166106105760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161034d565b61035f816107bf565b6000610623610506565b8267ffffffffffffffff16101561063c575060006102e5565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661066f610506565b6106799190610d02565b8267ffffffffffffffff1611156106915750816102e5565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106c4610506565b6106d89067ffffffffffffffff8516610d1a565b6106e29085610d4a565b6106ec9190610d69565b90506102e5565b600160a060020a03811660009081526001602052604081205461071683426103cb565b6107209190610d1a565b600160a060020a03831660009081526001602052604081208054929350839290919061074d908490610d02565b9091555050604051818152600160a060020a038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26107bb827f000000000000000000000000000000000000000000000000000000000000000083610943565b5050565b60028054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b30318111156108725760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161034d565b600082600160a060020a03168260405160006040518083038185875af1925050503d80600081146108bf576040519150601f19603f3d011682016040523d82523d6000602084013e6108c4565b606091505b505090508061093e5760405160e560020a62461bcd02815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161034d565b505050565b60408051600160a060020a03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261093e92869291600091610a01918516908490610a94565b80519091501561093e5780806020019051810190610a1f9190610da4565b61093e5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161034d565b6060610aa38484600085610aab565b949350505050565b60603031831115610b275760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161034d565b600160a060020a0385163b610b815760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034d565b60008086600160a060020a03168587604051610b9d9190610df6565b60006040518083038185875af1925050503d8060008114610bda576040519150601f19603f3d011682016040523d82523d6000602084013e610bdf565b606091505b5091509150610bef828286610bfa565b979650505050505050565b60608315610c09575081610473565b825115610c195782518084602001fd5b8160405160e560020a62461bcd02815260040161034d9190610e12565b803567ffffffffffffffff81168114610c4e57600080fd5b919050565b600060208284031215610c6557600080fd5b61047382610c36565b8035600160a060020a0381168114610c4e57600080fd5b600060208284031215610c9757600080fd5b61047382610c6e565b60008060408385031215610cb357600080fd5b610cbc83610c6e565b9150610cca60208401610c36565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610d1557610d15610cd3565b500190565b600082821015610d2c57610d2c610cd3565b500390565b600060208284031215610d4357600080fd5b5051919050565b6000816000190483118215151615610d6457610d64610cd3565b500290565b600082610d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610db657600080fd5b8151801515811461047357600080fd5b60005b83811015610de1578181015183820152602001610dc9565b83811115610df0576000848401525b50505050565b60008251610e08818460208701610dc6565b9190910192915050565b6020815260008251806020840152610e31816040850160208701610dc6565b601f01601f1916919091016040019291505056fea26469706673582212209a18a19b1119ea6b311862fc75ad6983305dbd464fe54abcd4309c65b1e7a38c64736f6c634300080a0033a2646970667358221220b1248fad686430967a73aa1a91eb1a0f59ddecc31aa76129a704a365862200ad64736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c8576000357c010000000000000000000000000000000000000000000000000000000090048063989a8366116200008b578063989a8366146200017a5780639acba2af1462000191578063baf3510714620001a6578063d42f5f3c14620001d2578063f2fde38b14620001e957600080fd5b8063715018a614620000cd5780637ac3687014620000d95780638341ee7214620000f05780638c157db2146200013b5780638da5cb5b1462000168575b600080fd5b620000d762000200565b005b620000d7620000ea36600462000ad7565b62000247565b6099546200011d9074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020015b60405180910390f35b6099546200014f90600160a060020a031681565b604051600160a060020a03909116815260200162000132565b603354600160a060020a03166200014f565b620000d76200018b36600462000b1d565b62000475565b609a546200011d9067ffffffffffffffff1681565b6200014f620001b736600462000b67565b609860205260009081526040902054600160a060020a031681565b6200014f620001e336600462000b85565b620005c9565b620000d7620001fa36600462000b67565b620005f4565b603354600160a060020a03163314620002395760405160e560020a62461bcd028152600401620002309062000b9f565b60405180910390fd5b620002456000620006b3565b565b603354600160a060020a03163314620002775760405160e560020a62461bcd028152600401620002309062000b9f565b6099546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa158015620002da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000300919062000bd4565b905081811015620003575760405160e560020a62461bcd02815260206004820152601d60248201527f457863656564732061647669736f72792073686172657320617661696c000000604482015260640162000230565b609a546099546040516000928692429267ffffffffffffffff9283169274010000000000000000000000000000000000000000909204909116906200039c9062000aac565b600160a060020a03909416845267ffffffffffffffff92831660208501529082166040840152166060820152608001604051809103906000f080158015620003e8573d6000803e3d6000fd5b5060978054600181019091557f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff901805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03888116918217909355600090815260986020526040902080549091168383161790556099549192506200046f9116828562000712565b50505050565b600054610100900460ff16620004925760005460ff161562000496565b303b155b6200050d5760405160e560020a62461bcd02815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840162000230565b600054610100900460ff1615801562000530576000805461ffff19166101011790555b6099805467ffffffffffffffff80861674010000000000000000000000000000000000000000027fffffffff00000000000000000000000000000000000000000000000000000000909216600160a060020a0388161791909117909155609a805491841667ffffffffffffffff19909216919091179055620005b162000799565b80156200046f576000805461ff001916905550505050565b60978181548110620005da57600080fd5b600091825260209091200154600160a060020a0316905081565b603354600160a060020a03163314620006245760405160e560020a62461bcd028152600401620002309062000b9f565b600160a060020a038116620006a55760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840162000230565b620006b081620006b3565b50565b60338054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60408051600160a060020a038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905262000794908490620007d0565b505050565b600054610100900460ff16620007c65760405160e560020a62461bcd028152600401620002309062000bee565b62000245620008bf565b600062000827826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316620008f79092919063ffffffff16565b80519091501562000794578080602001905181019062000848919062000c4b565b620007945760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840162000230565b600054610100900460ff16620008ec5760405160e560020a62461bcd028152600401620002309062000bee565b6200024533620006b3565b606062000908848460008562000912565b90505b9392505050565b60603031831115620009905760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840162000230565b600160a060020a0385163b620009ec5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000230565b60008086600160a060020a0316858760405162000a0a919062000c9e565b60006040518083038185875af1925050503d806000811462000a49576040519150601f19603f3d011682016040523d82523d6000602084013e62000a4e565b606091505b509150915062000a6082828662000a6b565b979650505050505050565b6060831562000a7c5750816200090b565b82511562000a8d5782518084602001fd5b8160405160e560020a62461bcd02815260040162000230919062000cbc565b61113b8062000cf283390190565b8035600160a060020a038116811462000ad257600080fd5b919050565b6000806040838503121562000aeb57600080fd5b62000af68362000aba565b946020939093013593505050565b803567ffffffffffffffff8116811462000ad257600080fd5b60008060006060848603121562000b3357600080fd5b62000b3e8462000aba565b925062000b4e6020850162000b04565b915062000b5e6040850162000b04565b90509250925092565b60006020828403121562000b7a57600080fd5b6200090b8262000aba565b60006020828403121562000b9857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121562000be757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201527f6e697469616c697a696e67000000000000000000000000000000000000000000606082015260800190565b60006020828403121562000c5e57600080fd5b815180151581146200090b57600080fd5b60005b8381101562000c8c57818101518382015260200162000c72565b838111156200046f5750506000910152565b6000825162000cb281846020870162000c6f565b9190910192915050565b602081526000825180602084015262000cdd81604085016020870162000c6f565b601f01601f1916919091016040019291505056fe60e06040526040516200113b3803806200113b83398101604081905262000026916200020a565b838383600160a060020a038316620000c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600160a060020a039092166080526001604060020a0390811660a0521660c0526200010b620000fc64010000000062000197810204565b6401000000006200019b810204565b816001604060020a03166003541062000181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f636c69666620746f6f206c6172676500000000000000000000000000000000006044820152606401620000bc565b6001604060020a03166003555062000274915050565b3390565b60028054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001604060020a03811681146200020557600080fd5b919050565b600080600080608085870312156200022157600080fd5b8451600160a060020a03811681146200023957600080fd5b93506200024960208601620001ed565b92506200025960408601620001ed565b91506200026960608601620001ed565b905092959194509250565b60805160a05160c051610e7b620002c0600039600081816101310152818161063e015261069301526000610511015260008181610190015281816104e101526107960152610e7b6000f3fe6080604052600436106100e3576000357c0100000000000000000000000000000000000000000000000000000000900480638341ee721161009c578063961325211161007657806396132521146102465780639852595c1461025b578063be9a655514610291578063f2fde38b146102a657600080fd5b80638341ee72146101fd57806386d1a69f146102135780638da5cb5b1461022857600080fd5b80630a17b06b146100ef5780630fb5a6b414610122578063191655871461015f57806338af3eed14610181578063715018a6146101c8578063810ec23b146101dd57600080fd5b366100ea57005b600080fd5b3480156100fb57600080fd5b5061010f61010a366004610c53565b6102c6565b6040519081526020015b60405180910390f35b34801561012e57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661010f565b34801561016b57600080fd5b5061017f61017a366004610c85565b6102eb565b005b34801561018d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b604051600160a060020a039091168152602001610119565b3480156101d457600080fd5b5061017f610362565b3480156101e957600080fd5b5061010f6101f8366004610ca0565b6103cb565b34801561020957600080fd5b5061010f60035481565b34801561021f57600080fd5b5061017f61047a565b34801561023457600080fd5b50600254600160a060020a03166101b0565b34801561025257600080fd5b5060005461010f565b34801561026757600080fd5b5061010f610276366004610c85565b600160a060020a031660009081526001602052604090205490565b34801561029d57600080fd5b5061010f610506565b3480156102b257600080fd5b5061017f6102c1366004610c85565b610534565b60006102e56102d460005490565b6102df903031610d02565b83610619565b92915050565b6003546102f6610506565b6103009042610d1a565b10156103565760405160e560020a62461bcd02815260206004820152601560248201527f636c696666206e6f74207965742072656163686564000000000000000000000060448201526064015b60405180910390fd5b61035f816106f3565b50565b600254600160a060020a031633146103bf5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b6103c960006107bf565b565b600160a060020a038216600090815260016020526040812054610473906040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038616906370a0823190602401602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190610d31565b6102df9190610d02565b9392505050565b60008054610487426102c6565b6104919190610d1a565b9050806000808282546104a49190610d02565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a161035f7f00000000000000000000000000000000000000000000000000000000000000008261081e565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b600254600160a060020a031633146105915760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b600160a060020a0381166106105760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161034d565b61035f816107bf565b6000610623610506565b8267ffffffffffffffff16101561063c575060006102e5565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661066f610506565b6106799190610d02565b8267ffffffffffffffff1611156106915750816102e5565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166106c4610506565b6106d89067ffffffffffffffff8516610d1a565b6106e29085610d4a565b6106ec9190610d69565b90506102e5565b600160a060020a03811660009081526001602052604081205461071683426103cb565b6107209190610d1a565b600160a060020a03831660009081526001602052604081208054929350839290919061074d908490610d02565b9091555050604051818152600160a060020a038316907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26107bb827f000000000000000000000000000000000000000000000000000000000000000083610943565b5050565b60028054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b30318111156108725760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161034d565b600082600160a060020a03168260405160006040518083038185875af1925050503d80600081146108bf576040519150601f19603f3d011682016040523d82523d6000602084013e6108c4565b606091505b505090508061093e5760405160e560020a62461bcd02815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161034d565b505050565b60408051600160a060020a03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261093e92869291600091610a01918516908490610a94565b80519091501561093e5780806020019051810190610a1f9190610da4565b61093e5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161034d565b6060610aa38484600085610aab565b949350505050565b60603031831115610b275760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161034d565b600160a060020a0385163b610b815760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034d565b60008086600160a060020a03168587604051610b9d9190610df6565b60006040518083038185875af1925050503d8060008114610bda576040519150601f19603f3d011682016040523d82523d6000602084013e610bdf565b606091505b5091509150610bef828286610bfa565b979650505050505050565b60608315610c09575081610473565b825115610c195782518084602001fd5b8160405160e560020a62461bcd02815260040161034d9190610e12565b803567ffffffffffffffff81168114610c4e57600080fd5b919050565b600060208284031215610c6557600080fd5b61047382610c36565b8035600160a060020a0381168114610c4e57600080fd5b600060208284031215610c9757600080fd5b61047382610c6e565b60008060408385031215610cb357600080fd5b610cbc83610c6e565b9150610cca60208401610c36565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610d1557610d15610cd3565b500190565b600082821015610d2c57610d2c610cd3565b500390565b600060208284031215610d4357600080fd5b5051919050565b6000816000190483118215151615610d6457610d64610cd3565b500290565b600082610d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215610db657600080fd5b8151801515811461047357600080fd5b60005b83811015610de1578181015183820152602001610dc9565b83811115610df0576000848401525b50505050565b60008251610e08818460208701610dc6565b9190910192915050565b6020815260008251806020840152610e31816040850160208701610dc6565b601f01601f1916919091016040019291505056fea26469706673582212209a18a19b1119ea6b311862fc75ad6983305dbd464fe54abcd4309c65b1e7a38c64736f6c634300080a0033a2646970667358221220b1248fad686430967a73aa1a91eb1a0f59ddecc31aa76129a704a365862200ad64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7129:132",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:132",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:132"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:132"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:132"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:132"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:132",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:132"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:132"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:132"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:132"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:132",
                "type": ""
              }
            ],
            "src": "14:196:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:167:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "348:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "357:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "360:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "350:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "350:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "350:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "323:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:2:132",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "312:52:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "373:39:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "402:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "383:18:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:29:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "373:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "421:42:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "448:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "459:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "444:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "431:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:32:132"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "421:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "271:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "283:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "291:6:132",
                "type": ""
              }
            ],
            "src": "215:254:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:101:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "583:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "595:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "606:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "591:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "583:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "625:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "648:18:132",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "636:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "636:31:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "618:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "618:50:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "618:50:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "542:9:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "553:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "564:4:132",
                "type": ""
              }
            ],
            "src": "474:200:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:125:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "790:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "802:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "813:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "798:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "798:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "790:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "832:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "847:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "855:42:132",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:55:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:74:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "825:74:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "749:9:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "760:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "771:4:132",
                "type": ""
              }
            ],
            "src": "679:226:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "958:123:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "968:29:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "990:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "977:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "977:20:132"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "968:5:132"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1059:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1068:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1071:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1061:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1061:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1061:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1019:5:132"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1030:5:132"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1037:18:132",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1026:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1026:30:132"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1016:2:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:41:132"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1009:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:49:132"
                  },
                  "nodeType": "YulIf",
                  "src": "1006:69:132"
                }
              ]
            },
            "name": "abi_decode_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "937:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "948:5:132",
                "type": ""
              }
            ],
            "src": "910:171:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1188:228:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1234:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1243:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1246:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1236:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1236:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1236:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1209:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1218:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1205:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1205:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1201:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "1198:52:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1259:39:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1288:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1269:18:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:29:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1259:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1307:47:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1339:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1350:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "1317:17:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:37:132"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:132"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1363:47:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1395:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1406:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1391:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:18:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "1373:17:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:37:132"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1363:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint64t_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1138:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1149:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1169:6:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1177:6:132",
                "type": ""
              }
            ],
            "src": "1086:330:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1491:116:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1537:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1546:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1549:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1539:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1539:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1539:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1512:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1521:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1508:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1508:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1533:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1504:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "1501:52:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1562:39:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1591:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1572:18:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1572:29:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1562:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1457:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1468:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1480:6:132",
                "type": ""
              }
            ],
            "src": "1421:186:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1682:110:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1728:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1737:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1740:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1730:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1730:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1730:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1703:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1712:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1699:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1699:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1724:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1695:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "1692:52:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1753:33:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1776:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1763:12:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1763:23:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1753:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1648:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1659:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1671:6:132",
                "type": ""
              }
            ],
            "src": "1612:180:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1971:182:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1988:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1999:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1981:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1981:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2022:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2033:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2018:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2018:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2038:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2011:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2011:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2061:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2072:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2057:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2057:18:132"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2077:34:132",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2050:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2050:62:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2121:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2133:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2144:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2129:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2121:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1948:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1962:4:132",
                "type": ""
              }
            ],
            "src": "1797:356:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2239:103:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2285:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2294:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2297:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2287:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2287:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2287:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2260:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2269:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2256:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2256:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2252:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2252:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "2249:52:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2310:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2326:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2320:5:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2320:16:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2205:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2216:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2228:6:132",
                "type": ""
              }
            ],
            "src": "2158:184:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:179:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2538:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2549:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2531:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2531:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2531:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2572:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2583:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2568:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2568:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2588:2:132",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2561:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2561:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2611:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2622:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:18:132"
                      },
                      {
                        "hexValue": "457863656564732061647669736f72792073686172657320617661696c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2627:31:132",
                        "type": "",
                        "value": "Exceeds advisory shares avail"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:59:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:59:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2668:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2680:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2691:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2676:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2668:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d231668485d55e85c6d4c756d12cbbf506018b7a339d20f22db682444100ac31__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2498:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2512:4:132",
                "type": ""
              }
            ],
            "src": "2347:353:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2884:319:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2894:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2906:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2902:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2894:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2937:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2952:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2960:42:132",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2948:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2948:55:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2930:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:74:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2930:74:132"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3013:28:132",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3023:18:132",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3017:2:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3061:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3072:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3081:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3089:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3077:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3050:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3113:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3124:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3109:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3109:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3133:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3141:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3129:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3129:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3102:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3102:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3102:43:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3165:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3176:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3161:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3161:18:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3185:6:132"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3193:2:132"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3181:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3181:15:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3154:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:43:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3154:43:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint64_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2829:9:132",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2840:6:132",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2848:6:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2856:6:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2864:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2875:4:132",
                "type": ""
              }
            ],
            "src": "2705:498:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3382:236:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3399:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3410:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3433:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3444:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3429:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3429:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3449:2:132",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3422:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3422:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3472:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3483:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3468:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3468:18:132"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3488:34:132",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3461:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3461:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3461:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3543:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3554:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3539:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3539:18:132"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3559:16:132",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3532:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:44:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3532:44:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3585:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3597:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3608:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3593:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3593:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3585:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3359:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3373:4:132",
                "type": ""
              }
            ],
            "src": "3208:410:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3797:228:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3814:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3825:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3807:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3807:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3848:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3859:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3844:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3864:2:132",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3837:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3837:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3837:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3887:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3898:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3883:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3883:18:132"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3903:34:132",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3876:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3876:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3958:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3969:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3954:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3954:18:132"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3974:8:132",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3947:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3947:36:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3947:36:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3992:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4004:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4015:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4000:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4000:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3992:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3774:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3788:4:132",
                "type": ""
              }
            ],
            "src": "3623:402:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4159:168:132",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4169:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4181:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:2:132",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4177:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4169:4:132"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4211:9:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4226:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4234:42:132",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4222:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4222:55:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4204:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4204:74:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4204:74:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4298:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4309:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4294:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4294:18:132"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4314:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4287:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4287:34:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4287:34:132"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4120:9:132",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4131:6:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4139:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4150:4:132",
                "type": ""
              }
            ],
            "src": "4030:297:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4506:233:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4523:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4534:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4516:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4516:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4557:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4568:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4553:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4553:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4573:2:132",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4546:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4546:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4546:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4596:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4607:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4592:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4592:18:132"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4612:34:132",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4585:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4585:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4585:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4667:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4678:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4663:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4663:18:132"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4683:13:132",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4656:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4656:41:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4656:41:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4706:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4718:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4729:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4714:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4706:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4483:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4497:4:132",
                "type": ""
              }
            ],
            "src": "4332:407:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4822:199:132",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4868:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4877:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4880:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4870:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4870:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4870:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4843:7:132"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4852:9:132"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:23:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4864:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4835:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4835:32:132"
                  },
                  "nodeType": "YulIf",
                  "src": "4832:52:132"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4893:29:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4912:9:132"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4906:5:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4906:16:132"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4897:5:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4975:16:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4984:1:132",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4987:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4977:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4977:12:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4977:12:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4944:5:132"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4965:5:132"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4958:6:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4958:13:132"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4951:6:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4951:21:132"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4941:2:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:32:132"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4934:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4934:40:132"
                  },
                  "nodeType": "YulIf",
                  "src": "4931:60:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5000:15:132",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5010:5:132"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5000:6:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4788:9:132",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4799:7:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4811:6:132",
                "type": ""
              }
            ],
            "src": "4744:277:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5200:232:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5217:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5228:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5210:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5210:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5251:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5262:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5247:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5267:2:132",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5240:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5240:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5290:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5301:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5286:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5286:18:132"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5306:34:132",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5279:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5279:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5279:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5361:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5372:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5357:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5357:18:132"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5377:12:132",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5350:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5350:40:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5350:40:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5399:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5411:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5422:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5407:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5407:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5399:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5177:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5191:4:132",
                "type": ""
              }
            ],
            "src": "5026:406:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5611:228:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5628:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5639:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5621:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5621:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5621:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5662:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5678:2:132",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5651:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5651:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5651:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5701:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5712:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5697:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5697:18:132"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5717:34:132",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5690:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5690:62:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5690:62:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5772:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5783:2:132",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5768:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5768:18:132"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5788:8:132",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5761:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5761:36:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5761:36:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5806:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5818:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5829:3:132",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5814:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:19:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5806:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5588:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5602:4:132",
                "type": ""
              }
            ],
            "src": "5437:402:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6018:179:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6035:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6046:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:21:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6069:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6080:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:18:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6085:2:132",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6058:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6058:30:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6058:30:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6108:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6119:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6104:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6104:18:132"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6124:31:132",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6097:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6097:59:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6097:59:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6165:26:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6177:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6188:2:132",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6173:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6173:18:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6165:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5995:9:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6009:4:132",
                "type": ""
              }
            ],
            "src": "5844:353:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6255:205:132",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6265:10:132",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6274:1:132",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6269:1:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6334:63:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6359:3:132"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6364:1:132"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6355:3:132"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6355:11:132"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6378:3:132"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6383:1:132"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6374:3:132"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6374:11:132"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6368:5:132"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6368:18:132"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6348:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6348:39:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6348:39:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6295:1:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6298:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6292:2:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6292:13:132"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6306:19:132",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6308:15:132",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6317:1:132"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6320:2:132",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6313:3:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6313:10:132"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6308:1:132"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6288:3:132",
                    "statements": []
                  },
                  "src": "6284:113:132"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6423:31:132",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6436:3:132"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6441:6:132"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6432:3:132"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6432:16:132"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6450:1:132",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6425:6:132"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6425:27:132"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6425:27:132"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6412:1:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6415:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6409:2:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6409:13:132"
                  },
                  "nodeType": "YulIf",
                  "src": "6406:48:132"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6233:3:132",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6238:3:132",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6243:6:132",
                "type": ""
              }
            ],
            "src": "6202:258:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6602:137:132",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6612:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6632:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6626:5:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6626:13:132"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6616:6:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6674:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:4:132",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6670:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6670:17:132"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6689:3:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6694:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6648:21:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6648:53:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6648:53:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6710:23:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6721:3:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6726:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6717:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6717:16:132"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6710:3:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6578:3:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6583:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6594:3:132",
                "type": ""
              }
            ],
            "src": "6465:274:132"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6865:262:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6882:9:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6893:2:132",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6875:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6875:21:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6875:21:132"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6905:27:132",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6925:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6919:5:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6919:13:132"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6909:6:132",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6952:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6963:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6948:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6948:18:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6968:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6941:6:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6941:34:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6941:34:132"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7010:6:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7018:2:132",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7006:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7006:15:132"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7027:9:132"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7038:2:132",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7023:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7023:18:132"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7043:6:132"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6984:21:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6984:66:132"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6984:66:132"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7059:62:132",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7075:9:132"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7094:6:132"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7102:2:132",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7090:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7090:15:132"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7111:2:132",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7107:3:132"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7107:7:132"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7086:3:132"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7086:29:132"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7071:3:132"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7071:45:132"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7118:2:132",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7067:3:132"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7067:54:132"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7059:4:132"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6834:9:132",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6845:6:132",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6856:4:132",
                "type": ""
              }
            ],
            "src": "6744:383:132"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint64t_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint64(add(headStart, 32))\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_d231668485d55e85c6d4c756d12cbbf506018b7a339d20f22db682444100ac31__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Exceeds advisory shares avail\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_uint64_t_uint64__to_t_address_t_uint64_t_uint64_t_uint64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        let _1 := 0xffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 132,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "481:2281:46:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "481:2281:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:101:3;;;:::i;:::-;;1951:809:46;;;;;;:::i;:::-;;:::i;1560:26::-;;;;;;;;;;;;;;;648:18:132;636:31;;;618:50;;606:2;591:18;1560:26:46;;;;;;;;1510:20;;;;;-1:-1:-1;;;;;1510:20:46;;;;;;-1:-1:-1;;;;;843:55:132;;;825:74;;813:2;798:18;1510:20:46;679:226:132;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;912:406:46;;;;;;:::i;:::-;;:::i;1608:29::-;;;;;;;;;1399:49;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1399:49:46;;;1341:25;;;;;;:::i;:::-;;:::i;2158:198:3:-;;;;;;:::i;:::-;;:::i;1908:101::-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;;;;;;;;;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;1951:809:46:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;2160:5:46::1;::::0;2142:49:::1;::::0;;;;2185:4:::1;2142:49;::::0;::::1;825:74:132::0;2124:15:46::1;::::0;-1:-1:-1;;;;;2160:5:46::1;::::0;2142:34:::1;::::0;798:18:132;;2142:49:46::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2124:67;;2220:7;2209;:18;;2201:60;;;::::0;-1:-1:-1;;;;;2201:60:46;;2549:2:132;2201:60:46::1;::::0;::::1;2531:21:132::0;2588:2;2568:18;;;2561:30;2627:31;2607:18;;;2600:59;2676:18;;2201:60:46::1;2347:353:132::0;2201:60:46::1;2455:15;::::0;2488:12:::1;::::0;2349:165:::1;::::0;2309:16:::1;::::0;2388:8;;2421:15:::1;::::0;2455::::1;::::0;;::::1;::::0;2488:12;;;::::1;::::0;;::::1;::::0;2349:165:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;2948:55:132;;;2930:74;;3023:18;3077:15;;;3072:2;3057:18;;3050:43;3129:15;;;3124:2;3109:18;;3102:43;3181:15;3176:2;3161:18;;3154:43;2917:3;2902:19;2349:165:46::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2577:8:46::1;:23:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;2577:23:46;;::::1;-1:-1:-1::0;;;;;2577:23:46;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;2610:24:46;;;:14:::1;2577:23;2610:24:::0;;;;:35;;;;::::1;::::0;;::::1;;::::0;;2715:5:::1;::::0;2610:35;;-1:-1:-1;2697:56:46::1;::::0;2715:5:::1;2610:35:::0;2745:7;2697:37:::1;:56::i;:::-;2030:730;;1951:809:::0;;:::o;912:406::-;2369:13:6;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:13;:23;2385:16:6;2361:107;;;;-1:-1:-1;;;;;2361:107:6;;3410:2:132;2361:107:6;;;3392:21:132;3449:2;3429:18;;;3422:30;3488:34;3468:18;;;3461:62;3559:16;3539:18;;;3532:44;3593:19;;2361:107:6;3208:410:132;2361:107:6;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:6;;;;;2525:98;1101:5:46::1;:26:::0;;1167:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;1101:26:46;::::1;1167:28:::0;;;;::::1;::::0;;;1205:15:::1;:34:::0;;;;::::1;-1:-1:-1::0;;1205:34:46;;::::1;::::0;;;::::1;::::0;;1295:16:::1;:14;:16::i;:::-;2649:14:6::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:6;;;2080:637;912:406:46;;;:::o;1341:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1341:25:46;;-1:-1:-1;1341:25:46;:::o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;3825:2:132;2238:73:3::1;::::0;::::1;3807:21:132::0;3864:2;3844:18;;;3837:30;3903:34;3883:18;;;3876:62;3974:8;3954:18;;;3947:36;4000:19;;2238:73:3::1;3623:402:132::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;2510:187::-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;745:216:12:-;895:58;;;-1:-1:-1;;;;;4222:55:132;;895:58:12;;;4204:74:132;4294:18;;;;4287:34;;;895:58:12;;;;;;;;;;4177:18:132;;;;895:58:12;;;;;;;;;;918:23;895:58;;;868:86;;888:5;;868:19;:86::i;:::-;745:216;;;:::o;988:95:3:-;2952:13:6;;;;;;;2944:69;;;;-1:-1:-1;;;;;2944:69:6;;;;;;;:::i;:::-;1050:26:3::1;:24;:26::i;3306:717:12:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;5228:2:132;3921:85:12;;;5210:21:132;5267:2;5247:18;;;5240:30;5306:34;5286:18;;;5279:62;5377:12;5357:18;;;5350:40;5407:19;;3921:85:12;5026:406:132;1089:111:3;2952:13:6;;;;;;;2944:69;;;;-1:-1:-1;;;;;2944:69:6;;;;;;;:::i;:::-;1161:32:3::1;929:10:14::0;1161:18:3::1;:32::i;3872:223:13:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;5639:2:132;5148:81:13;;;5621:21:132;5678:2;5658:18;;;5651:30;5717:34;5697:18;;;5690:62;5788:8;5768:18;;;5761:36;5814:19;;5148:81:13;5437:402:132;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;6046:2:132;5239:60:13;;;6028:21:132;6085:2;6065:18;;;6058:30;6124:31;6104:18;;;6097:59;6173:18;;5239:60:13;5844:353:132;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:196:132:-;82:20;;-1:-1:-1;;;;;131:54:132;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:132:o;910:171::-;977:20;;1037:18;1026:30;;1016:41;;1006:69;;1071:1;1068;1061:12;1086:330;1161:6;1169;1177;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;1269:29;1288:9;1269:29;:::i;:::-;1259:39;;1317:37;1350:2;1339:9;1335:18;1317:37;:::i;:::-;1307:47;;1373:37;1406:2;1395:9;1391:18;1373:37;:::i;:::-;1363:47;;1086:330;;;;;:::o;1421:186::-;1480:6;1533:2;1521:9;1512:7;1508:23;1504:32;1501:52;;;1549:1;1546;1539:12;1501:52;1572:29;1591:9;1572:29;:::i;1612:180::-;1671:6;1724:2;1712:9;1703:7;1699:23;1695:32;1692:52;;;1740:1;1737;1730:12;1692:52;-1:-1:-1;1763:23:132;;1612:180;-1:-1:-1;1612:180:132:o;1797:356::-;1999:2;1981:21;;;2018:18;;;2011:30;2077:34;2072:2;2057:18;;2050:62;2144:2;2129:18;;1797:356::o;2158:184::-;2228:6;2281:2;2269:9;2260:7;2256:23;2252:32;2249:52;;;2297:1;2294;2287:12;2249:52;-1:-1:-1;2320:16:132;;2158:184;-1:-1:-1;2158:184:132:o;4332:407::-;4534:2;4516:21;;;4573:2;4553:18;;;4546:30;4612:34;4607:2;4592:18;;4585:62;4683:13;4678:2;4663:18;;4656:41;4729:3;4714:19;;4332:407::o;4744:277::-;4811:6;4864:2;4852:9;4843:7;4839:23;4835:32;4832:52;;;4880:1;4877;4870:12;4832:52;4912:9;4906:16;4965:5;4958:13;4951:21;4944:5;4941:32;4931:60;;4987:1;4984;4977:12;6202:258;6274:1;6284:113;6298:6;6295:1;6292:13;6284:113;;;6374:11;;;6368:18;6355:11;;;6348:39;6320:2;6313:10;6284:113;;;6415:6;6412:1;6409:13;6406:48;;;-1:-1:-1;;6450:1:132;6432:16;;6425:27;6202:258::o;6465:274::-;6594:3;6632:6;6626:13;6648:53;6694:6;6689:3;6682:4;6674:6;6670:17;6648:53;:::i;:::-;6717:16;;;;;6465:274;-1:-1:-1;;6465:274:132:o;6744:383::-;6893:2;6882:9;6875:21;6856:4;6925:6;6919:13;6968:6;6963:2;6952:9;6948:18;6941:34;6984:66;7043:6;7038:2;7027:9;7023:18;7018:2;7010:6;7006:15;6984:66;:::i;:::-;7111:2;7090:15;-1:-1:-1;;7086:29:132;7071:45;;;;7118:2;7067:54;;6744:383;-1:-1:-1;;6744:383:132:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\nimport \"./PoolTeam.sol\";\n\n/// @title PoolAdvisory: The advisory pool contract (for advisors).\n/// @dev Follows a factory method to create vesting wallets for each new advisor\ncontract PoolAdvisory is Initializable, OwnableUpgradeable, ReentrancyGuardUpgradeable {\n    /* Libraries */\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* Constructor */\n    /// @notice Constructor\n    /// @param _zorroTokenAddress The Zorro token address\n    /// @param _cliffSeconds The min time (cliff) before vested tokens can be redeemed\n    /// @param _durationSeconds The total vesting period for tokens\n    function initialize(\n        address _zorroTokenAddress,\n        uint64 _cliffSeconds,\n        uint64 _durationSeconds\n    ) public initializer {\n        // Set Zorro token address\n        ZORRO = _zorroTokenAddress;\n        // Set vesting params\n        cliffSeconds = _cliffSeconds;\n        durationSeconds = _durationSeconds;\n\n        // Set owner to deployer (initially)\n        __Ownable_init();\n    }\n\n    /* State */\n\n    address[] public advisors; // All registered advisors\n    mapping(address => address) public vestingWallets; // Mapping of advisors to their VestingWallet addresses\n    address public ZORRO; // Address of ZOR token\n    uint64 public cliffSeconds; // Cliff period\n    uint64 public durationSeconds; // Vesting period\n\n    /* Functions */\n\n    /// @notice Registers a new advisor and creates a corresponding vesting wallet\n    /// @dev Starts vesting immediately\n    /// @param _advisor The beneficiary address representing the advisor\n    /// @param _amount The total amount of ZOR to vest for this advisor\n    function registerAdvisor(address _advisor, uint256 _amount) external onlyOwner {\n        // Calc existing ZOR balance on contract. Make sure _amount does not exceed\n        uint256 _balZOR = IERC20Upgradeable(ZORRO).balanceOf(address(this));\n        require(_balZOR >= _amount, \"Exceeds advisory shares avail\");\n\n        // Instantiate VestingWallet\n        address _vWallet = address(\n            new TeamVestingWallet(\n                _advisor,\n                uint64(block.timestamp),\n                durationSeconds,\n                cliffSeconds\n            )\n        );\n\n        // Save factory params in storage\n        advisors.push(_advisor);\n        vestingWallets[_advisor] = _vWallet;\n\n        // Transfer funds to new wallet \n        IERC20Upgradeable(ZORRO).safeTransfer(_vWallet, _amount);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/finance/PoolAdvisory.sol",
  "ast": {
    "absolutePath": "project:/contracts/finance/PoolAdvisory.sol",
    "exportedSymbols": {
      "Address": [
        5499
      ],
      "AddressUpgradeable": [
        3127
      ],
      "Context": [
        5521
      ],
      "ContextUpgradeable": [
        3169
      ],
      "IERC20": [
        4955
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "Initializable": [
        1774
      ],
      "Math": [
        5609
      ],
      "Ownable": [
        3997
      ],
      "OwnableUpgradeable": [
        571
      ],
      "PoolAdvisory": [
        12066
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20": [
        5204
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "TeamVestingWallet": [
        12224
      ],
      "VestingWallet": [
        4289
      ]
    },
    "id": 12067,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11941,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 11942,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12067,
        "sourceUnit": 2885,
        "src": "58:88:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 11943,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12067,
        "sourceUnit": 2636,
        "src": "148:79:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 11944,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12067,
        "sourceUnit": 572,
        "src": "229:75:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/finance/PoolTeam.sol",
        "file": "./PoolTeam.sol",
        "id": 11945,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12067,
        "sourceUnit": 12225,
        "src": "306:24:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11947,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1774,
              "src": "506:13:46"
            },
            "id": 11948,
            "nodeType": "InheritanceSpecifier",
            "src": "506:13:46"
          },
          {
            "baseName": {
              "id": 11949,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 571,
              "src": "521:18:46"
            },
            "id": 11950,
            "nodeType": "InheritanceSpecifier",
            "src": "521:18:46"
          },
          {
            "baseName": {
              "id": 11951,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1944,
              "src": "541:26:46"
            },
            "id": 11952,
            "nodeType": "InheritanceSpecifier",
            "src": "541:26:46"
          }
        ],
        "canonicalName": "PoolAdvisory",
        "contractDependencies": [
          12224
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 11946,
          "nodeType": "StructuredDocumentation",
          "src": "332:149:46",
          "text": "@title PoolAdvisory: The advisory pool contract (for advisors).\n @dev Follows a factory method to create vesting wallets for each new advisor"
        },
        "fullyImplemented": true,
        "id": 12066,
        "linearizedBaseContracts": [
          12066,
          1944,
          571,
          3169,
          1774
        ],
        "name": "PoolAdvisory",
        "nameLocation": "490:12:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11956,
            "libraryName": {
              "id": 11953,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "600:20:46"
            },
            "nodeType": "UsingForDirective",
            "src": "594:49:46",
            "typeName": {
              "id": 11955,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11954,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "625:17:46"
              },
              "referencedDeclaration": 2635,
              "src": "625:17:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "body": {
              "id": 11983,
              "nodeType": "Block",
              "src": "1056:262:46",
              "statements": [
                {
                  "expression": {
                    "id": 11970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11968,
                      "name": "ZORRO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11993,
                      "src": "1101:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11969,
                      "name": "_zorroTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11959,
                      "src": "1109:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1101:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11971,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:26:46"
                },
                {
                  "expression": {
                    "id": 11974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11972,
                      "name": "cliffSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11995,
                      "src": "1167:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11973,
                      "name": "_cliffSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11961,
                      "src": "1182:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1167:28:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 11975,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:28:46"
                },
                {
                  "expression": {
                    "id": 11978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11976,
                      "name": "durationSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11997,
                      "src": "1205:15:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11977,
                      "name": "_durationSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11963,
                      "src": "1223:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1205:34:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 11979,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:34:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11980,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "1295:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11982,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:16:46"
                }
              ]
            },
            "documentation": {
              "id": 11957,
              "nodeType": "StructuredDocumentation",
              "src": "671:236:46",
              "text": "@notice Constructor\n @param _zorroTokenAddress The Zorro token address\n @param _cliffSeconds The min time (cliff) before vested tokens can be redeemed\n @param _durationSeconds The total vesting period for tokens"
            },
            "functionSelector": "989a8366",
            "id": 11984,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11966,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11965,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1748,
                  "src": "1044:11:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:11:46"
              }
            ],
            "name": "initialize",
            "nameLocation": "921:10:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11959,
                  "mutability": "mutable",
                  "name": "_zorroTokenAddress",
                  "nameLocation": "949:18:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11984,
                  "src": "941:26:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11961,
                  "mutability": "mutable",
                  "name": "_cliffSeconds",
                  "nameLocation": "984:13:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11984,
                  "src": "977:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 11960,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11963,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nameLocation": "1014:16:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11984,
                  "src": "1007:23:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 11962,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:105:46"
            },
            "returnParameters": {
              "id": 11967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:46"
            },
            "scope": 12066,
            "src": "912:406:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d42f5f3c",
            "id": 11987,
            "mutability": "mutable",
            "name": "advisors",
            "nameLocation": "1358:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12066,
            "src": "1341:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11985,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1341:7:46",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11986,
              "nodeType": "ArrayTypeName",
              "src": "1341:9:46",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "baf35107",
            "id": 11991,
            "mutability": "mutable",
            "name": "vestingWallets",
            "nameLocation": "1434:14:46",
            "nodeType": "VariableDeclaration",
            "scope": 12066,
            "src": "1399:49:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 11990,
              "keyType": {
                "id": 11988,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1407:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1399:27:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 11989,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1418:7:46",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8c157db2",
            "id": 11993,
            "mutability": "mutable",
            "name": "ZORRO",
            "nameLocation": "1525:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 12066,
            "src": "1510:20:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11992,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1510:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8341ee72",
            "id": 11995,
            "mutability": "mutable",
            "name": "cliffSeconds",
            "nameLocation": "1574:12:46",
            "nodeType": "VariableDeclaration",
            "scope": 12066,
            "src": "1560:26:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 11994,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1560:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9acba2af",
            "id": 11997,
            "mutability": "mutable",
            "name": "durationSeconds",
            "nameLocation": "1622:15:46",
            "nodeType": "VariableDeclaration",
            "scope": 12066,
            "src": "1608:29:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 11996,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1608:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12064,
              "nodeType": "Block",
              "src": "2030:730:46",
              "statements": [
                {
                  "assignments": [
                    12008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12008,
                      "mutability": "mutable",
                      "name": "_balZOR",
                      "nameLocation": "2132:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12064,
                      "src": "2124:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2124:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12018,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12015,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2185:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolAdvisory_$12066",
                              "typeString": "contract PoolAdvisory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolAdvisory_$12066",
                              "typeString": "contract PoolAdvisory"
                            }
                          ],
                          "id": 12014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2177:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12013,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2177:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2177:13:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12010,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "2160:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12009,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2142:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 12011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2142:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 12012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "2142:34:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2142:49:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2124:67:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12020,
                          "name": "_balZOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12008,
                          "src": "2209:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 12021,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "2220:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2209:18:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "457863656564732061647669736f72792073686172657320617661696c",
                        "id": 12023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2229:31:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d231668485d55e85c6d4c756d12cbbf506018b7a339d20f22db682444100ac31",
                          "typeString": "literal_string \"Exceeds advisory shares avail\""
                        },
                        "value": "Exceeds advisory shares avail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d231668485d55e85c6d4c756d12cbbf506018b7a339d20f22db682444100ac31",
                          "typeString": "literal_string \"Exceeds advisory shares avail\""
                        }
                      ],
                      "id": 12019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2201:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:60:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12025,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:60:46"
                },
                {
                  "assignments": [
                    12027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12027,
                      "mutability": "mutable",
                      "name": "_vWallet",
                      "nameLocation": "2317:8:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12064,
                      "src": "2309:16:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2309:7:46",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12043,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12033,
                            "name": "_advisor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12000,
                            "src": "2388:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 12036,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "2421:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 12037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2421:15:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 12035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2414:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 12034,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "2414:6:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2414:23:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 12039,
                            "name": "durationSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11997,
                            "src": "2455:15:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 12040,
                            "name": "cliffSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11995,
                            "src": "2488:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "id": 12032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2349:21:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_uint64_$_t_uint64_$_t_uint64_$returns$_t_contract$_TeamVestingWallet_$12224_$",
                            "typeString": "function (address,uint64,uint64,uint64) payable returns (contract TeamVestingWallet)"
                          },
                          "typeName": {
                            "id": 12031,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 12030,
                              "name": "TeamVestingWallet",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 12224,
                              "src": "2353:17:46"
                            },
                            "referencedDeclaration": 12224,
                            "src": "2353:17:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TeamVestingWallet_$12224",
                              "typeString": "contract TeamVestingWallet"
                            }
                          }
                        },
                        "id": 12041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2349:165:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TeamVestingWallet_$12224",
                          "typeString": "contract TeamVestingWallet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TeamVestingWallet_$12224",
                          "typeString": "contract TeamVestingWallet"
                        }
                      ],
                      "id": 12029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2328:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 12028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2328:7:46",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 12042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2328:196:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:215:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12047,
                        "name": "_advisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12000,
                        "src": "2591:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12044,
                        "name": "advisors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11987,
                        "src": "2577:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 12046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2577:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 12048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:23:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12049,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:23:46"
                },
                {
                  "expression": {
                    "id": 12054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12050,
                        "name": "vestingWallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11991,
                        "src": "2610:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 12052,
                      "indexExpression": {
                        "id": 12051,
                        "name": "_advisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12000,
                        "src": "2625:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2610:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12053,
                      "name": "_vWallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12027,
                      "src": "2637:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2610:35:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12055,
                  "nodeType": "ExpressionStatement",
                  "src": "2610:35:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12060,
                        "name": "_vWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12027,
                        "src": "2735:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12061,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12002,
                        "src": "2745:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12057,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11993,
                            "src": "2715:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12056,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2697:17:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 12058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2697:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 12059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "2697:37:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 12062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2697:56:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12063,
                  "nodeType": "ExpressionStatement",
                  "src": "2697:56:46"
                }
              ]
            },
            "documentation": {
              "id": 11998,
              "nodeType": "StructuredDocumentation",
              "src": "1683:263:46",
              "text": "@notice Registers a new advisor and creates a corresponding vesting wallet\n @dev Starts vesting immediately\n @param _advisor The beneficiary address representing the advisor\n @param _amount The total amount of ZOR to vest for this advisor"
            },
            "functionSelector": "7ac36870",
            "id": 12065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12005,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12004,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "2020:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "2020:9:46"
              }
            ],
            "name": "registerAdvisor",
            "nameLocation": "1960:15:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12000,
                  "mutability": "mutable",
                  "name": "_advisor",
                  "nameLocation": "1984:8:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12065,
                  "src": "1976:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12002,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2002:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12065,
                  "src": "1994:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1975:35:46"
            },
            "returnParameters": {
              "id": 12006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2030:0:46"
            },
            "scope": 12066,
            "src": "1951:809:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12067,
        "src": "481:2281:46",
        "usedErrors": []
      }
    ],
    "src": "33:2730:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3E85dd4959a87800a5b35C7c8b012363626c11d2",
      "transactionHash": "0x51fd5a28c5aa6d4cd06e0f423d01fb24b61e81cd4ae8f05c647926fcd4a3169d"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-06T13:37:04.234Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Follows a factory method to create vesting wallets for each new advisor",
    "kind": "dev",
    "methods": {
      "initialize(address,uint64,uint64)": {
        "params": {
          "_cliffSeconds": "The min time (cliff) before vested tokens can be redeemed",
          "_durationSeconds": "The total vesting period for tokens",
          "_zorroTokenAddress": "The Zorro token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerAdvisor(address,uint256)": {
        "details": "Starts vesting immediately",
        "params": {
          "_advisor": "The beneficiary address representing the advisor",
          "_amount": "The total amount of ZOR to vest for this advisor"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "PoolAdvisory: The advisory pool contract (for advisors).",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initialize(address,uint64,uint64)": {
        "notice": "Constructor"
      },
      "registerAdvisor(address,uint256)": {
        "notice": "Registers a new advisor and creates a corresponding vesting wallet"
      }
    },
    "version": 1
  }
}