{
  "contractName": "TokenLockController",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedOperators",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockableToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "addAllowedOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "removeAllowedOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lockFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unlockFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"addAllowedOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedOperators\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lockFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockableToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeAllowedOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unlockFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedOperator(address)\":{\"params\":{\"_newOperator\":\"The address of the new operator to add\"}},\"lockFunds(address,uint256)\":{\"details\":\"Assumes that approval has already been given to this contract to transfer the ERC20 token\",\"params\":{\"_account\":\"The address whose funds should be locked. \",\"_amount\":\"The amount of the token to lock\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeAllowedOperator(address)\":{\"params\":{\"_operator\":\"The address of the new operator to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockFunds(address,uint256,address)\":{\"params\":{\"_account\":\"The address whose funds should be unlocked. \",\"_amount\":\"The amount of the token to lock\",\"_recipient\":\"If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\"},\"returns\":{\"_0\":\"The amount unlocked\"}}},\"title\":\"TokenLockController. Contract for securely locking, unlocking, and burning tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedOperator(address)\":{\"notice\":\"Add an allowed operator to the allowedOperators mapping\"},\"lockFunds(address,uint256)\":{\"notice\":\"Lock funds to this contract's ledger\"},\"removeAllowedOperator(address)\":{\"notice\":\"Remove an allowed operator from the allowedOperators mapping\"},\"unlockFunds(address,uint256,address)\":{\"notice\":\"Unlock funds from this contract's ledger for a given user account and transfer to user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/TokenLockController.sol\":\"TokenLockController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/tokens/TokenLockController.sol\":{\"keccak256\":\"0x572ab7b7abbf5376b6d4a590d292a3d8e2d51c784689d4d3a77e0b926767f9e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb861c5c2fa97c983090354e2fea208c4f96321c5662e2788facd6bce14b3c16\",\"dweb:/ipfs/QmaxzQnyNWTAN6gmKg3au3ic9nzi2sSiRvVQ9MogiEE1u3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610d74380380610d7483398101604081905261002f9161022b565b61005161004364010000000061007d810204565b640100000000610081810204565b6000805460a060020a60ff021916905560018055610077816401000000006100d1810204565b5061025b565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100e264010000000061007d810204565b600160a060020a03166100fc64010000000061021c810204565b600160a060020a031614610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600160a060020a038116610207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610168565b61021981640100000000610081810204565b50565b600054600160a060020a031690565b60006020828403121561023d57600080fd5b8151600160a060020a038116811461025457600080fd5b9392505050565b610b0a8061026a6000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161008e5780638da5cb5b146101855780638da7a37814610196578063a6674f88146101a9578063b86247d7146101de578063dd955883146101fe578063f2fde38b1461021157600080fd5b806312e382b4146100d6578063190050ae146100eb57806345fab369146100fe5780635c975abb1461012457806370d5ae0514610152578063715018a61461017d575b600080fd5b6100e96100e4366004610943565b610224565b005b6100e96100f936600461096d565b6102bf565b61011161010c366004610988565b610310565b6040519081526020015b60405180910390f35b60005474010000000000000000000000000000000000000000900460ff16604051901515815260200161011b565b60055461016590600160a060020a031681565b604051600160a060020a03909116815260200161011b565b6100e9610462565b600054600160a060020a0316610165565b6100e96101a436600461096d565b61049b565b6101cc6101b736600461096d565b60036020526000908152604090205460ff1681565b60405160ff909116815260200161011b565b6101116101ec36600461096d565b60046020526000908152604090205481565b60025461016590600160a060020a031681565b6100e961021f36600461096d565b6104e9565b3360009081526003602052604090205460ff1661028b5760405160e560020a62461bcd02815260206004820152600e60248201527f496e76616c69642063616c6c657200000000000000000000000000000000000060448201526064015b60405180910390fd5b6002546102a390600160a060020a03168330846105a1565b600160a060020a03909116600090815260046020526040902055565b600054600160a060020a031633146102ec5760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a03166000908152600360205260409020805460ff19166001179055565b3360009081526003602052604081205460ff166103725760405160e560020a62461bcd02815260206004820152600e60248201527f496e76616c69642063616c6c65720000000000000000000000000000000000006044820152606401610282565b600160a060020a03841660009081526004602052604090205483818111156103975750805b6103a1828261062f565b600160a060020a03808816600090815260046020526040902091909155841615610457576002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610431573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045591906109f9565b505b9150505b9392505050565b600054600160a060020a0316331461048f5760405160e560020a62461bcd028152600401610282906109c4565b610499600061063b565b565b600054600160a060020a031633146104c85760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a03166000908152600360205260409020805460ff19169055565b600054600160a060020a031633146105165760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a0381166105955760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610282565b61059e8161063b565b50565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610629908590610698565b50505050565b600061045b8284610a1b565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106ed826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166107859092919063ffffffff16565b805190915015610780578080602001905181019061070b91906109f9565b6107805760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610282565b505050565b6060610794848460008561079c565b949350505050565b606030318311156108185760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610282565b600160a060020a0385163b6108725760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610282565b60008086600160a060020a0316858760405161088e9190610a85565b60006040518083038185875af1925050503d80600081146108cb576040519150601f19603f3d011682016040523d82523d6000602084013e6108d0565b606091505b50915091506108e08282866108eb565b979650505050505050565b606083156108fa57508161045b565b82511561090a5782518084602001fd5b8160405160e560020a62461bcd0281526004016102829190610aa1565b8035600160a060020a038116811461093e57600080fd5b919050565b6000806040838503121561095657600080fd5b61095f83610927565b946020939093013593505050565b60006020828403121561097f57600080fd5b61045b82610927565b60008060006060848603121561099d57600080fd5b6109a684610927565b9250602084013591506109bb60408501610927565b90509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a0b57600080fd5b8151801515811461045b57600080fd5b600082821015610a54577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b60005b83811015610a74578181015183820152602001610a5c565b838111156106295750506000910152565b60008251610a97818460208701610a59565b9190910192915050565b6020815260008251806020840152610ac0816040850160208701610a59565b601f01601f1916919091016040019291505056fea2646970667358221220d8f368b29870817c99289b32b11653001861b8f87a62cb5265f53822977a8b9264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d1576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161008e5780638da5cb5b146101855780638da7a37814610196578063a6674f88146101a9578063b86247d7146101de578063dd955883146101fe578063f2fde38b1461021157600080fd5b806312e382b4146100d6578063190050ae146100eb57806345fab369146100fe5780635c975abb1461012457806370d5ae0514610152578063715018a61461017d575b600080fd5b6100e96100e4366004610943565b610224565b005b6100e96100f936600461096d565b6102bf565b61011161010c366004610988565b610310565b6040519081526020015b60405180910390f35b60005474010000000000000000000000000000000000000000900460ff16604051901515815260200161011b565b60055461016590600160a060020a031681565b604051600160a060020a03909116815260200161011b565b6100e9610462565b600054600160a060020a0316610165565b6100e96101a436600461096d565b61049b565b6101cc6101b736600461096d565b60036020526000908152604090205460ff1681565b60405160ff909116815260200161011b565b6101116101ec36600461096d565b60046020526000908152604090205481565b60025461016590600160a060020a031681565b6100e961021f36600461096d565b6104e9565b3360009081526003602052604090205460ff1661028b5760405160e560020a62461bcd02815260206004820152600e60248201527f496e76616c69642063616c6c657200000000000000000000000000000000000060448201526064015b60405180910390fd5b6002546102a390600160a060020a03168330846105a1565b600160a060020a03909116600090815260046020526040902055565b600054600160a060020a031633146102ec5760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a03166000908152600360205260409020805460ff19166001179055565b3360009081526003602052604081205460ff166103725760405160e560020a62461bcd02815260206004820152600e60248201527f496e76616c69642063616c6c65720000000000000000000000000000000000006044820152606401610282565b600160a060020a03841660009081526004602052604090205483818111156103975750805b6103a1828261062f565b600160a060020a03808816600090815260046020526040902091909155841615610457576002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610431573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045591906109f9565b505b9150505b9392505050565b600054600160a060020a0316331461048f5760405160e560020a62461bcd028152600401610282906109c4565b610499600061063b565b565b600054600160a060020a031633146104c85760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a03166000908152600360205260409020805460ff19169055565b600054600160a060020a031633146105165760405160e560020a62461bcd028152600401610282906109c4565b600160a060020a0381166105955760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610282565b61059e8161063b565b50565b60408051600160a060020a0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610629908590610698565b50505050565b600061045b8284610a1b565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106ed826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166107859092919063ffffffff16565b805190915015610780578080602001905181019061070b91906109f9565b6107805760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610282565b505050565b6060610794848460008561079c565b949350505050565b606030318311156108185760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610282565b600160a060020a0385163b6108725760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610282565b60008086600160a060020a0316858760405161088e9190610a85565b60006040518083038185875af1925050503d80600081146108cb576040519150601f19603f3d011682016040523d82523d6000602084013e6108d0565b606091505b50915091506108e08282866108eb565b979650505050505050565b606083156108fa57508161045b565b82511561090a5782518084602001fd5b8160405160e560020a62461bcd0281526004016102829190610aa1565b8035600160a060020a038116811461093e57600080fd5b919050565b6000806040838503121561095657600080fd5b61095f83610927565b946020939093013593505050565b60006020828403121561097f57600080fd5b61045b82610927565b60008060006060848603121561099d57600080fd5b6109a684610927565b9250602084013591506109bb60408501610927565b90509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a0b57600080fd5b8151801515811461045b57600080fd5b600082821015610a54577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b60005b83811015610a74578181015183820152602001610a5c565b838111156106295750506000910152565b60008251610a97818460208701610a59565b9190910192915050565b6020815260008251806020840152610ac0816040850160208701610a59565b601f01601f1916919091016040019291505056fea2646970667358221220d8f368b29870817c99289b32b11653001861b8f87a62cb5265f53822977a8b9264736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1074:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:1:50",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "246:3:50",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:50",
                "type": ""
              }
            ],
            "src": "14:290:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:34:50",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "633:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "633:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:50",
                "type": ""
              }
            ],
            "src": "309:356:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "844:228:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "861:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "854:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "895:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "906:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "891:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "891:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "911:2:50",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "884:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "950:34:50",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "923:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "923:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1005:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1016:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1001:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1001:18:50"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1021:8:50",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "994:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:36:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1039:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1062:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1047:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1039:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "821:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "835:4:50",
                "type": ""
              }
            ],
            "src": "670:402:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6277:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:50"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:50"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:50",
                "type": ""
              }
            ],
            "src": "14:196:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:167:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "348:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "357:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "360:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "350:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "350:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "350:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "323:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "312:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "373:39:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "402:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "383:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:29:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "373:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "421:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "448:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "459:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "444:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "431:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "421:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "271:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "283:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "291:6:50",
                "type": ""
              }
            ],
            "src": "215:254:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "590:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "602:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "592:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "565:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "574:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "561:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "561:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "586:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "557:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "554:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:39:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "644:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:29:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "521:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "533:6:50",
                "type": ""
              }
            ],
            "src": "474:186:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:224:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "779:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:39:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "869:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "850:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:29:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "840:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "888:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "915:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "926:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "898:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "888:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "939:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "972:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "983:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "968:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "968:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "949:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:38:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "939:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "719:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "730:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "742:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "750:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "758:6:50",
                "type": ""
              }
            ],
            "src": "665:328:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1099:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1109:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1121:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1117:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1109:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1151:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1162:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1144:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1144:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1090:4:50",
                "type": ""
              }
            ],
            "src": "998:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1275:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1285:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1297:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1308:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1285:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1327:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1352:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1345:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1345:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1338:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1338:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1320:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1320:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1320:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1244:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1255:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1266:4:50",
                "type": ""
              }
            ],
            "src": "1180:187:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1483:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1495:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1506:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1491:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1491:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1483:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1525:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1540:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1548:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1518:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1442:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1453:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1464:4:50",
                "type": ""
              }
            ],
            "src": "1372:226:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1700:87:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1710:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1722:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1733:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1718:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1710:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1752:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1767:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1775:4:50",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1763:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1763:17:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1745:36:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1669:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1680:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1691:4:50",
                "type": ""
              }
            ],
            "src": "1603:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1966:164:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1983:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1994:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1976:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1976:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2017:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2028:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2013:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2013:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2033:2:50",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2006:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2006:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2056:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2067:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2052:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2052:18:50"
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2072:16:50",
                        "type": "",
                        "value": "Invalid caller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2045:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2045:44:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2098:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2110:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2106:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2098:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1943:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1957:4:50",
                "type": ""
              }
            ],
            "src": "1792:338:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2309:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2326:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2337:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2319:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2319:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2319:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2360:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2371:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2356:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2356:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2376:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2349:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2349:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2349:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2399:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2410:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2395:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2395:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2415:34:50",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2388:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2388:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2471:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2467:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2459:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2286:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2300:4:50",
                "type": ""
              }
            ],
            "src": "2135:356:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2625:168:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2635:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2647:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2658:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2643:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2643:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2635:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2677:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2692:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2700:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2688:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2688:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2670:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2670:74:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2764:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2775:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2760:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2760:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2780:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2753:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2753:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2586:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2597:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2605:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2616:4:50",
                "type": ""
              }
            ],
            "src": "2496:297:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2876:199:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2922:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2931:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2934:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2924:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2924:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2924:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2897:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2906:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2893:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2893:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2918:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2889:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2889:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2886:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2947:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2966:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2960:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2951:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3029:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3038:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3041:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3031:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3031:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3031:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2998:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3019:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3012:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3012:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3005:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3005:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2995:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2995:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2988:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2988:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2985:60:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3054:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3064:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3054:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2842:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2853:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2865:6:50",
                "type": ""
              }
            ],
            "src": "2798:277:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3254:228:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3271:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3282:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3264:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3264:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3305:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3316:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3301:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3301:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3321:2:50",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3294:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3294:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3294:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3344:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3355:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3340:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3340:18:50"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3360:34:50",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3333:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3333:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3333:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3415:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3426:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3411:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3411:18:50"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3431:8:50",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3404:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3404:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3404:36:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3449:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3461:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3472:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3457:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3457:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3449:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3231:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3245:4:50",
                "type": ""
              }
            ],
            "src": "3080:402:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3644:241:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3654:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3666:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3677:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3662:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3662:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3654:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3689:52:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3699:42:50",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3693:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3757:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3772:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3780:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3768:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3768:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3804:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3815:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3800:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3800:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3824:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3832:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3820:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3820:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3793:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3793:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3856:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3867:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3872:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3845:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3845:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3845:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3597:9:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3608:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3616:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3624:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3635:4:50",
                "type": ""
              }
            ],
            "src": "3487:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3939:230:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3969:168:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3990:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3993:77:50",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3983:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3983:88:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3983:88:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4091:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4094:4:50",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4084:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4084:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4084:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4119:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4122:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4112:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4112:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4112:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3955:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3958:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3952:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3952:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3949:188:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4146:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4158:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4161:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4154:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4146:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3921:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3924:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3930:4:50",
                "type": ""
              }
            ],
            "src": "3890:279:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4348:232:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4365:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4358:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4358:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4358:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4399:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4410:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4395:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4415:2:50",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4388:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4388:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4438:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4449:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4434:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4434:18:50"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4454:34:50",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4427:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4427:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4509:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4520:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4505:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4505:18:50"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4525:12:50",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4498:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4498:40:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4498:40:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4547:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4559:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4570:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4555:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4555:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4547:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4325:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4339:4:50",
                "type": ""
              }
            ],
            "src": "4174:406:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4759:228:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4776:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4787:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4769:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4769:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4769:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4810:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4821:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4806:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4806:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4826:2:50",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4799:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4799:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4799:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4849:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4860:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4845:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4845:18:50"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4865:34:50",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4838:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4838:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4838:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4920:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4931:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4916:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4916:18:50"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4936:8:50",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4909:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4909:36:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4909:36:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4954:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4966:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4977:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4962:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4962:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4954:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4736:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4750:4:50",
                "type": ""
              }
            ],
            "src": "4585:402:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5166:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5183:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5194:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5176:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5176:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5176:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5217:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5228:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5213:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5213:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5233:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5206:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5206:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5206:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5256:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5267:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5252:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5252:18:50"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5272:31:50",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5245:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5245:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5245:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5313:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5325:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5321:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5321:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5313:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5143:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5157:4:50",
                "type": ""
              }
            ],
            "src": "4992:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5403:205:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5413:10:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5422:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5417:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5482:63:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5507:3:50"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5512:1:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5503:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5503:11:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5526:3:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5531:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5522:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5522:11:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5516:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5516:18:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5496:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5496:39:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5496:39:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5443:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5446:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5440:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5454:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5456:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5465:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5468:2:50",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5461:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5461:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5456:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5436:3:50",
                    "statements": []
                  },
                  "src": "5432:113:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5571:31:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5584:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5589:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5580:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5580:16:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5598:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5573:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5573:27:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5573:27:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5560:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5563:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5557:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5554:48:50"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5381:3:50",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5386:3:50",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5391:6:50",
                "type": ""
              }
            ],
            "src": "5350:258:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5750:137:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5760:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5780:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5774:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5764:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5822:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5830:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5818:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5818:17:50"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5837:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5842:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5796:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5796:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5858:23:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5869:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5874:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5865:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5865:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5858:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5726:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5731:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5742:3:50",
                "type": ""
              }
            ],
            "src": "5613:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6013:262:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6030:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6041:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:21:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6053:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6073:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6067:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6057:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6100:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6111:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6096:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6096:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6116:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6089:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6089:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6089:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6158:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6166:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6154:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6154:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6175:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6186:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6171:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6171:18:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6191:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6132:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:66:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6132:66:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6207:62:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6223:9:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6242:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6250:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6238:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6238:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6259:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6255:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6255:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6234:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6234:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6219:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6219:45:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6266:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6215:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6215:54:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6207:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5982:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5993:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6004:4:50",
                "type": ""
              }
            ],
            "src": "5892:383:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "511:3138:44:-:0;;;690:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:11;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;991:5:12;981:15;;-1:-1:-1;;;;;;981:15:12;;;;1806:22:13;;781:25:44;799:6;781:17;;;;:25;:::i;:::-;690:121;511:3138;;640:96:19;719:10;;640:96::o;2270:187:11:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;;;;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1918:198::-;1259:12;:10;;;;:12;:::i;:::-;-1:-1:-1;;;;;1248:23:11;:7;:5;;;;:7;:::i;:::-;-1:-1:-1;;;;;1248:23:11;;1240:68;;;;;;;511:2:50;1240:68:11;;;493:21:50;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;1240:68:11;;;;;;;;;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;::::1;::::0;;872:2:50;1998:73:11::1;::::0;::::1;854:21:50::0;911:2;891:18;;;884:30;950:34;930:18;;;923:62;1021:8;1001:18;;;994:36;1047:19;;1998:73:11::1;670:402:50::0;1998:73:11::1;2081:28;2100:8:::0;2081:18:::1;;::::0;::::1;:28;:::i;:::-;1918:198:::0;:::o;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;;1036:85::o;14:290:50:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:50;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:50:o;670:402::-;511:3138:44;;;;;;",
  "deployedSourceMap": "511:3138:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2239:270;;;;;;:::i;:::-;;:::i;:::-;;1567:112;;;;;;:::i;:::-;;:::i;2904:743::-;;;;;;:::i;:::-;;:::i;:::-;;;1144:25:50;;;1132:2;1117:18;2904:743:44;;;;;;;;1098:84:12;1145:4;1168:7;;;;;;1098:84;;1345:14:50;;1338:22;1320:41;;1308:2;1293:18;1098:84:12;1180:187:50;1374:26:44;;;;;-1:-1:-1;;;;;1374:26:44;;;;;;-1:-1:-1;;;;;1536:55:50;;;1518:74;;1506:2;1491:18;1374:26:44;1372:226:50;1668:101:11;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;1036:85;;1823:109:44;;;;;;:::i;:::-;;:::i;1100:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1775:4:50;1763:17;;;1745:36;;1733:2;1718:18;1100:49:44;1603:184:50;1244:46:44;;;;;;:::i;:::-;;;;;;;;;;;;;;1020:28;;;;;-1:-1:-1;;;;;1020:28:44;;;1918:198:11;;;;;;:::i;:::-;;:::i;2239:270:44:-;952:10;966:1;935:28;;;:16;:28;;;;;;;;927:59;;;;-1:-1:-1;;;;;927:59:44;;1994:2:50;927:59:44;;;1976:21:50;2033:2;2013:18;;;2006:30;2072:16;2052:18;;;2045:44;2106:18;;927:59:44;;;;;;;;;2374:13:::1;::::0;2367:72:::1;::::0;-1:-1:-1;;;;;2374:13:44::1;2406:8:::0;2424:4:::1;2431:7:::0;2367:38:::1;:72::i;:::-;-1:-1:-1::0;;;;;2473:21:44;;::::1;;::::0;;;:11:::1;:21;::::0;;;;:31;2239:270::o;1567:112::-;1082:7:11;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1640:30:44::1;;::::0;;;:16:::1;:30;::::0;;;;:34;;-1:-1:-1;;1640:34:44::1;1673:1;1640:34;::::0;;1567:112::o;2904:743::-;952:10;3017:7;935:28;;;:16;:28;;;;;;;;927:59;;;;-1:-1:-1;;;;;927:59:44;;1994:2:50;927:59:44;;;1976:21:50;2033:2;2013:18;;;2006:30;2072:16;2052:18;;;2045:44;2106:18;;927:59:44;1792:338:50;927:59:44;-1:-1:-1;;;;;3099:21:44;::::1;3072:24;3099:21:::0;;;:11:::1;:21;::::0;;;;;3152:7;3246:26;;::::1;3242:81;;;-1:-1:-1::0;3300:16:44;3242:81:::1;3384:37;:16:::0;3405:15;3384:20:::1;:37::i;:::-;-1:-1:-1::0;;;;;3360:21:44;;::::1;;::::0;;;:11:::1;:21;::::0;;;;:61;;;;3485:24;::::1;::::0;3481:104:::1;;3526:13;::::0;3519:59:::1;::::0;;;;-1:-1:-1;;;;;2688:55:50;;;3519:59:44::1;::::0;::::1;2670:74:50::0;2760:18;;;2753:34;;;3526:13:44;;::::1;::::0;3519:30:::1;::::0;2643:18:50;;3519:59:44::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3481:104;3627:15:::0;-1:-1:-1;;992:1:44::1;2904:743:::0;;;;;:::o;1668:101:11:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1823:109:44:-;1082:7:11;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1896:27:44::1;1926:1;1896:27:::0;;;:16:::1;:27;::::0;;;;:31;;-1:-1:-1;;1896:31:44::1;::::0;;1823:109::o;1918:198:11:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;-1:-1:-1;;;;;1998:73:11;;3282:2:50;1998:73:11::1;::::0;::::1;3264:21:50::0;3321:2;3301:18;;;3294:30;3360:34;3340:18;;;3333:62;3431:8;3411:18;;;3404:36;3457:19;;1998:73:11::1;3080:402:50::0;1998:73:11::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;912:241:17:-;1077:68;;;-1:-1:-1;;;;;3768:15:50;;;1077:68:17;;;3750:34:50;3820:15;;3800:18;;;3793:43;3852:18;;;;3845:34;;;1077:68:17;;;;;;;;;;3662:18:50;;;;1077:68:17;;;;;;;;;;1100:27;1077:68;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3108:96:21:-;3166:7;3192:5;3196:1;3192;:5;:::i;2270:187:11:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:17:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:17;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:17;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;;;3811:85:17;;4376:2:50;3811:85:17;;;4358:21:50;4415:2;4395:18;;;4388:30;4454:34;4434:18;;;4427:62;4525:12;4505:18;;;4498:40;4555:19;;3811:85:17;4174:406:50;3811:85:17;3277:636;3207:706;;:::o;3861:223:18:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:18:o;4948:499::-;5113:12;5153:4;5145:21;:30;-1:-1:-1;5145:30:18;5137:81;;;;-1:-1:-1;;;;;5137:81:18;;4787:2:50;5137:81:18;;;4769:21:50;4826:2;4806:18;;;4799:30;4865:34;4845:18;;;4838:62;4936:8;4916:18;;;4909:36;4962:19;;5137:81:18;4585:402:50;5137:81:18;-1:-1:-1;;;;;1465:19:18;;;5228:60;;;;-1:-1:-1;;;;;5228:60:18;;5194:2:50;5228:60:18;;;5176:21:50;5233:2;5213:18;;;5206:30;5272:31;5252:18;;;5245:59;5321:18;;5228:60:18;4992:353:50;5228:60:18;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:18;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:18:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:18;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;;;8202:20:18;;;;;;;;:::i;14:196:50:-;82:20;;-1:-1:-1;;;;;131:54:50;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:50:o;474:186::-;533:6;586:2;574:9;565:7;561:23;557:32;554:52;;;602:1;599;592:12;554:52;625:29;644:9;625:29;:::i;665:328::-;742:6;750;758;811:2;799:9;790:7;786:23;782:32;779:52;;;827:1;824;817:12;779:52;850:29;869:9;850:29;:::i;:::-;840:39;;926:2;915:9;911:18;898:32;888:42;;949:38;983:2;972:9;968:18;949:38;:::i;:::-;939:48;;665:328;;;;;:::o;2135:356::-;2337:2;2319:21;;;2356:18;;;2349:30;2415:34;2410:2;2395:18;;2388:62;2482:2;2467:18;;2135:356::o;2798:277::-;2865:6;2918:2;2906:9;2897:7;2893:23;2889:32;2886:52;;;2934:1;2931;2924:12;2886:52;2966:9;2960:16;3019:5;3012:13;3005:21;2998:5;2995:32;2985:60;;3041:1;3038;3031:12;3890:279;3930:4;3958:1;3955;3952:8;3949:188;;;3993:77;3990:1;3983:88;4094:4;4091:1;4084:15;4122:4;4119:1;4112:15;3949:188;-1:-1:-1;4154:9:50;;3890:279::o;5350:258::-;5422:1;5432:113;5446:6;5443:1;5440:13;5432:113;;;5522:11;;;5516:18;5503:11;;;5496:39;5468:2;5461:10;5432:113;;;5563:6;5560:1;5557:13;5554:48;;;-1:-1:-1;;5598:1:50;5580:16;;5573:27;5350:258::o;5613:274::-;5742:3;5780:6;5774:13;5796:53;5842:6;5837:3;5830:4;5822:6;5818:17;5796:53;:::i;:::-;5865:16;;;;;5613:274;-1:-1:-1;;5613:274:50:o;5892:383::-;6041:2;6030:9;6023:21;6004:4;6073:6;6067:13;6116:6;6111:2;6100:9;6096:18;6089:34;6132:66;6191:6;6186:2;6175:9;6171:18;6166:2;6158:6;6154:15;6132:66;:::i;:::-;6259:2;6238:15;-1:-1:-1;;6234:29:50;6219:45;;;;6266:2;6215:54;;5892:383;-1:-1:-1;;5892:383:50:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\n/// @title TokenLockController. Contract for securely locking, unlocking, and burning tokens\ncontract TokenLockController is Ownable, Pausable, ReentrancyGuard {\n  /* \n  Libraries\n  */\n  using SafeERC20 for IERC20;\n  using SafeMath for uint256;\n\n  /*\n  Constructor\n  */\n  constructor(address _owner) {\n    // Immediately transfer ownership to specified owner\n    transferOwnership(_owner);\n  }\n\n  /*\n  Modifiers\n  */\n  /// @notice Requires caller to be in allowed list\n  modifier onlyAllowedOperators() {\n    require(allowedOperators[msg.sender] > 0, \"Invalid caller\");\n    _;\n  }\n\n  /*\n  State\n  */\n  address public lockableToken; // The ERC20 token's address that can be burned\n  mapping(address => uint8) public allowedOperators; // Allowed callers of this contract. Mapping: contract address => 1 or 0. 1 means allowed.\n  mapping(address => uint256) public lockedFunds; // Ledger of locked amount by account. Mapping: wallet address => amount locked\n  address public burnAddress;\n\n  /*\n  Setters/Config\n  */\n  /// @notice Add an allowed operator to the allowedOperators mapping\n  /// @param _newOperator The address of the new operator to add\n  function addAllowedOperator(address _newOperator) public onlyOwner {\n    allowedOperators[_newOperator] = 1;\n  }\n\n  /// @notice Remove an allowed operator from the allowedOperators mapping\n  /// @param _operator The address of the new operator to remove\n  function removeAllowedOperator(address _operator) public onlyOwner {\n    allowedOperators[_operator] = 0;\n  } \n\n  /*\n  Financial functions\n  */\n  /// @notice Lock funds to this contract's ledger\n  /// @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n  /// @param _account The address whose funds should be locked. \n  /// @param _amount The amount of the token to lock\n  function lockFunds(address _account, uint256 _amount) public onlyAllowedOperators {\n    //  Transfer funds to this contract\n    IERC20(lockableToken).safeTransferFrom(_account, address(this), _amount);\n    // Lock funds on ledger\n    lockedFunds[_account] = _amount;\n  }\n\n  /// @notice Unlock funds from this contract's ledger for a given user account and transfer to user\n  /// @param _account The address whose funds should be unlocked. \n  /// @param _amount The amount of the token to lock\n  /// @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n  /// @return The amount unlocked\n  function unlockFunds(address _account, uint256 _amount, address _recipient) public onlyAllowedOperators returns (uint256) {\n    // Determine currently locked funds\n    uint256 _currentlyLocked = lockedFunds[_account];\n    uint256 _amountToUnlock = _amount;\n    // Ensure that only funds up to the max currently locked can be unlocked\n    if (_amount > _currentlyLocked) {\n      _amountToUnlock = _currentlyLocked;\n    }\n    // Unlock funds from ledger\n    lockedFunds[_account] = _currentlyLocked.sub(_amountToUnlock);\n    // Transfer funds back to account (if applicable)\n    if (_recipient != address(0)) {\n      IERC20(lockableToken).transfer(_recipient, _amountToUnlock);\n    }\n    // Return amount unlocked\n    return _amountToUnlock;\n  }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/TokenLockController.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/TokenLockController.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "IERC20": [
        3078
      ],
      "Ownable": [
        2280
      ],
      "Pausable": [
        2372
      ],
      "ReentrancyGuard": [
        2412
      ],
      "SafeERC20": [
        3327
      ],
      "SafeMath": [
        4044
      ],
      "TokenLockController": [
        13387
      ]
    },
    "id": 13388,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13209,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:44"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 13210,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 3328,
        "src": "58:65:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 3079,
        "src": "125:56:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13212,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2281,
        "src": "183:52:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 13213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2373,
        "src": "237:55:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 13214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2413,
        "src": "294:62:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 13215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 4045,
        "src": "358:57:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13217,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "543:7:44"
            },
            "id": 13218,
            "nodeType": "InheritanceSpecifier",
            "src": "543:7:44"
          },
          {
            "baseName": {
              "id": 13219,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2372,
              "src": "552:8:44"
            },
            "id": 13220,
            "nodeType": "InheritanceSpecifier",
            "src": "552:8:44"
          },
          {
            "baseName": {
              "id": 13221,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "562:15:44"
            },
            "id": 13222,
            "nodeType": "InheritanceSpecifier",
            "src": "562:15:44"
          }
        ],
        "canonicalName": "TokenLockController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13216,
          "nodeType": "StructuredDocumentation",
          "src": "418:93:44",
          "text": "@title TokenLockController. Contract for securely locking, unlocking, and burning tokens"
        },
        "fullyImplemented": true,
        "id": 13387,
        "linearizedBaseContracts": [
          13387,
          2412,
          2372,
          2280,
          3644
        ],
        "name": "TokenLockController",
        "nameLocation": "520:19:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13226,
            "libraryName": {
              "id": 13223,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3327,
              "src": "611:9:44"
            },
            "nodeType": "UsingForDirective",
            "src": "605:27:44",
            "typeName": {
              "id": 13225,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13224,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3078,
                "src": "625:6:44"
              },
              "referencedDeclaration": 3078,
              "src": "625:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3078",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 13229,
            "libraryName": {
              "id": 13227,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "641:8:44"
            },
            "nodeType": "UsingForDirective",
            "src": "635:27:44",
            "typeName": {
              "id": 13228,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 13238,
              "nodeType": "Block",
              "src": "718:93:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13235,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13231,
                        "src": "799:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13234,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2259,
                      "src": "781:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13237,
                  "nodeType": "ExpressionStatement",
                  "src": "781:25:44"
                }
              ]
            },
            "id": 13239,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13231,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "710:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13239,
                  "src": "702:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:16:44"
            },
            "returnParameters": {
              "id": 13233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:44"
            },
            "scope": 13387,
            "src": "690:121:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13253,
              "nodeType": "Block",
              "src": "921:77:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 13248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 13243,
                            "name": "allowedOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13260,
                            "src": "935:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 13246,
                          "indexExpression": {
                            "expression": {
                              "id": 13244,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "952:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "952:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "935:28:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "966:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "935:32:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "id": 13249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        },
                        "value": "Invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        }
                      ],
                      "id": 13242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "927:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:59:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13251,
                  "nodeType": "ExpressionStatement",
                  "src": "927:59:44"
                },
                {
                  "id": 13252,
                  "nodeType": "PlaceholderStatement",
                  "src": "992:1:44"
                }
              ]
            },
            "documentation": {
              "id": 13240,
              "nodeType": "StructuredDocumentation",
              "src": "837:49:44",
              "text": "@notice Requires caller to be in allowed list"
            },
            "id": 13254,
            "name": "onlyAllowedOperators",
            "nameLocation": "898:20:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:2:44"
            },
            "src": "889:109:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dd955883",
            "id": 13256,
            "mutability": "mutable",
            "name": "lockableToken",
            "nameLocation": "1035:13:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1020:28:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13255,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1020:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a6674f88",
            "id": 13260,
            "mutability": "mutable",
            "name": "allowedOperators",
            "nameLocation": "1133:16:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1100:49:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 13259,
              "keyType": {
                "id": 13257,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1108:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1100:25:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 13258,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1119:5:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b86247d7",
            "id": 13264,
            "mutability": "mutable",
            "name": "lockedFunds",
            "nameLocation": "1279:11:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1244:46:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 13263,
              "keyType": {
                "id": 13261,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1244:27:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13262,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1263:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 13266,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1389:11:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1374:26:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1374:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13280,
              "nodeType": "Block",
              "src": "1634:45:44",
              "statements": [
                {
                  "expression": {
                    "id": 13278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13274,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "1640:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 13276,
                      "indexExpression": {
                        "id": 13275,
                        "name": "_newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13269,
                        "src": "1657:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:30:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 13277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1673:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1640:34:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13279,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:34:44"
                }
              ]
            },
            "documentation": {
              "id": 13267,
              "nodeType": "StructuredDocumentation",
              "src": "1432:132:44",
              "text": "@notice Add an allowed operator to the allowedOperators mapping\n @param _newOperator The address of the new operator to add"
            },
            "functionSelector": "190050ae",
            "id": 13281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13272,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13271,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1624:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1624:9:44"
              }
            ],
            "name": "addAllowedOperator",
            "nameLocation": "1576:18:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13269,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "1603:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13281,
                  "src": "1595:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:22:44"
            },
            "returnParameters": {
              "id": 13273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:44"
            },
            "scope": 13387,
            "src": "1567:112:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13295,
              "nodeType": "Block",
              "src": "1890:42:44",
              "statements": [
                {
                  "expression": {
                    "id": 13293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13289,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "1896:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 13291,
                      "indexExpression": {
                        "id": 13290,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13284,
                        "src": "1913:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1896:27:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 13292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1926:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1896:31:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13294,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:31:44"
                }
              ]
            },
            "documentation": {
              "id": 13282,
              "nodeType": "StructuredDocumentation",
              "src": "1683:137:44",
              "text": "@notice Remove an allowed operator from the allowedOperators mapping\n @param _operator The address of the new operator to remove"
            },
            "functionSelector": "8da7a378",
            "id": 13296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1880:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1880:9:44"
              }
            ],
            "name": "removeAllowedOperator",
            "nameLocation": "1832:21:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13284,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1862:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13296,
                  "src": "1854:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:19:44"
            },
            "returnParameters": {
              "id": 13288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:44"
            },
            "scope": 13387,
            "src": "1823:109:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13324,
              "nodeType": "Block",
              "src": "2321:188:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13310,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13299,
                        "src": "2406:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13313,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2424:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$13387",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$13387",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 13312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2416:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2416:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2416:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13301,
                        "src": "2431:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13307,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13256,
                            "src": "2374:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13306,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "2367:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 13308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2367:21:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3160,
                      "src": "2367:38:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 13316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:72:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13317,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:72:44"
                },
                {
                  "expression": {
                    "id": 13322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13318,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13264,
                        "src": "2473:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13320,
                      "indexExpression": {
                        "id": 13319,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13299,
                        "src": "2485:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2473:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13321,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13301,
                      "src": "2497:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2473:31:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13323,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:31:44"
                }
              ]
            },
            "documentation": {
              "id": 13297,
              "nodeType": "StructuredDocumentation",
              "src": "1969:267:44",
              "text": "@notice Lock funds to this contract's ledger\n @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n @param _account The address whose funds should be locked. \n @param _amount The amount of the token to lock"
            },
            "functionSelector": "12e382b4",
            "id": 13325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13303,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13254,
                  "src": "2300:20:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2300:20:44"
              }
            ],
            "name": "lockFunds",
            "nameLocation": "2248:9:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13299,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2266:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13325,
                  "src": "2258:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2258:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13301,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2284:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13325,
                  "src": "2276:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2257:35:44"
            },
            "returnParameters": {
              "id": 13305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:44"
            },
            "scope": 13387,
            "src": "2239:270:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13385,
              "nodeType": "Block",
              "src": "3026:621:44",
              "statements": [
                {
                  "assignments": [
                    13340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13340,
                      "mutability": "mutable",
                      "name": "_currentlyLocked",
                      "nameLocation": "3080:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13385,
                      "src": "3072:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3072:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13344,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13341,
                      "name": "lockedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13264,
                      "src": "3099:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13343,
                    "indexExpression": {
                      "id": 13342,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13328,
                      "src": "3111:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3099:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3072:48:44"
                },
                {
                  "assignments": [
                    13346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13346,
                      "mutability": "mutable",
                      "name": "_amountToUnlock",
                      "nameLocation": "3134:15:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13385,
                      "src": "3126:23:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13348,
                  "initialValue": {
                    "id": 13347,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13330,
                    "src": "3152:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:33:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13349,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13330,
                      "src": "3246:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 13350,
                      "name": "_currentlyLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13340,
                      "src": "3256:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3246:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13357,
                  "nodeType": "IfStatement",
                  "src": "3242:81:44",
                  "trueBody": {
                    "id": 13356,
                    "nodeType": "Block",
                    "src": "3274:49:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 13354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13352,
                            "name": "_amountToUnlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13346,
                            "src": "3282:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 13353,
                            "name": "_currentlyLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13340,
                            "src": "3300:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3282:34:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13355,
                        "nodeType": "ExpressionStatement",
                        "src": "3282:34:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13358,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13264,
                        "src": "3360:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13360,
                      "indexExpression": {
                        "id": 13359,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13328,
                        "src": "3372:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3360:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13363,
                          "name": "_amountToUnlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13346,
                          "src": "3405:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 13361,
                          "name": "_currentlyLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13340,
                          "src": "3384:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3923,
                        "src": "3384:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3384:37:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3360:61:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13366,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:61:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13367,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13332,
                      "src": "3485:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 13370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3507:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3499:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3499:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3499:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3485:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13382,
                  "nodeType": "IfStatement",
                  "src": "3481:104:44",
                  "trueBody": {
                    "id": 13381,
                    "nodeType": "Block",
                    "src": "3511:74:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13377,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13332,
                              "src": "3550:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 13378,
                              "name": "_amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13346,
                              "src": "3562:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 13374,
                                  "name": "lockableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13256,
                                  "src": "3526:13:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 13373,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3078,
                                "src": "3519:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 13375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3519:21:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3078",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 13376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3027,
                            "src": "3519:30:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 13379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3519:59:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13380,
                        "nodeType": "ExpressionStatement",
                        "src": "3519:59:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13383,
                    "name": "_amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13346,
                    "src": "3627:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13338,
                  "id": 13384,
                  "nodeType": "Return",
                  "src": "3620:22:44"
                }
              ]
            },
            "documentation": {
              "id": 13326,
              "nodeType": "StructuredDocumentation",
              "src": "2513:388:44",
              "text": "@notice Unlock funds from this contract's ledger for a given user account and transfer to user\n @param _account The address whose funds should be unlocked. \n @param _amount The amount of the token to lock\n @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n @return The amount unlocked"
            },
            "functionSelector": "45fab369",
            "id": 13386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13334,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13254,
                  "src": "2987:20:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2987:20:44"
              }
            ],
            "name": "unlockFunds",
            "nameLocation": "2913:11:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13328,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2933:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2925:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13330,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2951:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2943:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13332,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2968:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2960:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2924:55:44"
            },
            "returnParameters": {
              "id": 13338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "3017:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:9:44"
            },
            "scope": 13387,
            "src": "2904:743:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13388,
        "src": "511:3138:44",
        "usedErrors": []
      }
    ],
    "src": "33:3617:44"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/TokenLockController.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "IERC20": [
        3078
      ],
      "Ownable": [
        2280
      ],
      "Pausable": [
        2372
      ],
      "ReentrancyGuard": [
        2412
      ],
      "SafeERC20": [
        3327
      ],
      "SafeMath": [
        4044
      ],
      "TokenLockController": [
        13387
      ]
    },
    "id": 13388,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13209,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:44"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 13210,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 3328,
        "src": "58:65:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 3079,
        "src": "125:56:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13212,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2281,
        "src": "183:52:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 13213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2373,
        "src": "237:55:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 13214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 2413,
        "src": "294:62:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 13215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13388,
        "sourceUnit": 4045,
        "src": "358:57:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13217,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "543:7:44"
            },
            "id": 13218,
            "nodeType": "InheritanceSpecifier",
            "src": "543:7:44"
          },
          {
            "baseName": {
              "id": 13219,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2372,
              "src": "552:8:44"
            },
            "id": 13220,
            "nodeType": "InheritanceSpecifier",
            "src": "552:8:44"
          },
          {
            "baseName": {
              "id": 13221,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "562:15:44"
            },
            "id": 13222,
            "nodeType": "InheritanceSpecifier",
            "src": "562:15:44"
          }
        ],
        "canonicalName": "TokenLockController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13216,
          "nodeType": "StructuredDocumentation",
          "src": "418:93:44",
          "text": "@title TokenLockController. Contract for securely locking, unlocking, and burning tokens"
        },
        "fullyImplemented": true,
        "id": 13387,
        "linearizedBaseContracts": [
          13387,
          2412,
          2372,
          2280,
          3644
        ],
        "name": "TokenLockController",
        "nameLocation": "520:19:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13226,
            "libraryName": {
              "id": 13223,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3327,
              "src": "611:9:44"
            },
            "nodeType": "UsingForDirective",
            "src": "605:27:44",
            "typeName": {
              "id": 13225,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13224,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3078,
                "src": "625:6:44"
              },
              "referencedDeclaration": 3078,
              "src": "625:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3078",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 13229,
            "libraryName": {
              "id": 13227,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "641:8:44"
            },
            "nodeType": "UsingForDirective",
            "src": "635:27:44",
            "typeName": {
              "id": 13228,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "654:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 13238,
              "nodeType": "Block",
              "src": "718:93:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13235,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13231,
                        "src": "799:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13234,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2259,
                      "src": "781:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:25:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13237,
                  "nodeType": "ExpressionStatement",
                  "src": "781:25:44"
                }
              ]
            },
            "id": 13239,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13231,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "710:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13239,
                  "src": "702:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:16:44"
            },
            "returnParameters": {
              "id": 13233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:44"
            },
            "scope": 13387,
            "src": "690:121:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13253,
              "nodeType": "Block",
              "src": "921:77:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 13248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 13243,
                            "name": "allowedOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13260,
                            "src": "935:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 13246,
                          "indexExpression": {
                            "expression": {
                              "id": 13244,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "952:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 13245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "952:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "935:28:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "966:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "935:32:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "id": 13249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        },
                        "value": "Invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        }
                      ],
                      "id": 13242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "927:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:59:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13251,
                  "nodeType": "ExpressionStatement",
                  "src": "927:59:44"
                },
                {
                  "id": 13252,
                  "nodeType": "PlaceholderStatement",
                  "src": "992:1:44"
                }
              ]
            },
            "documentation": {
              "id": 13240,
              "nodeType": "StructuredDocumentation",
              "src": "837:49:44",
              "text": "@notice Requires caller to be in allowed list"
            },
            "id": 13254,
            "name": "onlyAllowedOperators",
            "nameLocation": "898:20:44",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:2:44"
            },
            "src": "889:109:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dd955883",
            "id": 13256,
            "mutability": "mutable",
            "name": "lockableToken",
            "nameLocation": "1035:13:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1020:28:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13255,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1020:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a6674f88",
            "id": 13260,
            "mutability": "mutable",
            "name": "allowedOperators",
            "nameLocation": "1133:16:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1100:49:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 13259,
              "keyType": {
                "id": 13257,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1108:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1100:25:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 13258,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1119:5:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b86247d7",
            "id": 13264,
            "mutability": "mutable",
            "name": "lockedFunds",
            "nameLocation": "1279:11:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1244:46:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 13263,
              "keyType": {
                "id": 13261,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1244:27:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13262,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1263:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 13266,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1389:11:44",
            "nodeType": "VariableDeclaration",
            "scope": 13387,
            "src": "1374:26:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1374:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13280,
              "nodeType": "Block",
              "src": "1634:45:44",
              "statements": [
                {
                  "expression": {
                    "id": 13278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13274,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "1640:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 13276,
                      "indexExpression": {
                        "id": 13275,
                        "name": "_newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13269,
                        "src": "1657:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:30:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 13277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1673:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1640:34:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13279,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:34:44"
                }
              ]
            },
            "documentation": {
              "id": 13267,
              "nodeType": "StructuredDocumentation",
              "src": "1432:132:44",
              "text": "@notice Add an allowed operator to the allowedOperators mapping\n @param _newOperator The address of the new operator to add"
            },
            "functionSelector": "190050ae",
            "id": 13281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13272,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13271,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1624:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1624:9:44"
              }
            ],
            "name": "addAllowedOperator",
            "nameLocation": "1576:18:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13269,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "1603:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13281,
                  "src": "1595:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:22:44"
            },
            "returnParameters": {
              "id": 13273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:44"
            },
            "scope": 13387,
            "src": "1567:112:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13295,
              "nodeType": "Block",
              "src": "1890:42:44",
              "statements": [
                {
                  "expression": {
                    "id": 13293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13289,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13260,
                        "src": "1896:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 13291,
                      "indexExpression": {
                        "id": 13290,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13284,
                        "src": "1913:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1896:27:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 13292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1926:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1896:31:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13294,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:31:44"
                }
              ]
            },
            "documentation": {
              "id": 13282,
              "nodeType": "StructuredDocumentation",
              "src": "1683:137:44",
              "text": "@notice Remove an allowed operator from the allowedOperators mapping\n @param _operator The address of the new operator to remove"
            },
            "functionSelector": "8da7a378",
            "id": 13296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1880:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1880:9:44"
              }
            ],
            "name": "removeAllowedOperator",
            "nameLocation": "1832:21:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13284,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1862:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13296,
                  "src": "1854:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:19:44"
            },
            "returnParameters": {
              "id": 13288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:44"
            },
            "scope": 13387,
            "src": "1823:109:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13324,
              "nodeType": "Block",
              "src": "2321:188:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13310,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13299,
                        "src": "2406:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13313,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2424:4:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$13387",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$13387",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 13312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2416:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2416:7:44",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2416:13:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13301,
                        "src": "2431:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 13307,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13256,
                            "src": "2374:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13306,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "2367:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 13308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2367:21:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3160,
                      "src": "2367:38:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 13316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:72:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13317,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:72:44"
                },
                {
                  "expression": {
                    "id": 13322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13318,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13264,
                        "src": "2473:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13320,
                      "indexExpression": {
                        "id": 13319,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13299,
                        "src": "2485:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2473:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13321,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13301,
                      "src": "2497:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2473:31:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13323,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:31:44"
                }
              ]
            },
            "documentation": {
              "id": 13297,
              "nodeType": "StructuredDocumentation",
              "src": "1969:267:44",
              "text": "@notice Lock funds to this contract's ledger\n @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n @param _account The address whose funds should be locked. \n @param _amount The amount of the token to lock"
            },
            "functionSelector": "12e382b4",
            "id": 13325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13303,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13254,
                  "src": "2300:20:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2300:20:44"
              }
            ],
            "name": "lockFunds",
            "nameLocation": "2248:9:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13299,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2266:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13325,
                  "src": "2258:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2258:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13301,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2284:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13325,
                  "src": "2276:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2257:35:44"
            },
            "returnParameters": {
              "id": 13305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:44"
            },
            "scope": 13387,
            "src": "2239:270:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13385,
              "nodeType": "Block",
              "src": "3026:621:44",
              "statements": [
                {
                  "assignments": [
                    13340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13340,
                      "mutability": "mutable",
                      "name": "_currentlyLocked",
                      "nameLocation": "3080:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13385,
                      "src": "3072:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3072:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13344,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13341,
                      "name": "lockedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13264,
                      "src": "3099:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 13343,
                    "indexExpression": {
                      "id": 13342,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13328,
                      "src": "3111:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3099:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3072:48:44"
                },
                {
                  "assignments": [
                    13346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13346,
                      "mutability": "mutable",
                      "name": "_amountToUnlock",
                      "nameLocation": "3134:15:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 13385,
                      "src": "3126:23:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3126:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13348,
                  "initialValue": {
                    "id": 13347,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13330,
                    "src": "3152:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:33:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13349,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13330,
                      "src": "3246:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 13350,
                      "name": "_currentlyLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13340,
                      "src": "3256:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3246:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13357,
                  "nodeType": "IfStatement",
                  "src": "3242:81:44",
                  "trueBody": {
                    "id": 13356,
                    "nodeType": "Block",
                    "src": "3274:49:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 13354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13352,
                            "name": "_amountToUnlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13346,
                            "src": "3282:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 13353,
                            "name": "_currentlyLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13340,
                            "src": "3300:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3282:34:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13355,
                        "nodeType": "ExpressionStatement",
                        "src": "3282:34:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13358,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13264,
                        "src": "3360:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13360,
                      "indexExpression": {
                        "id": 13359,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13328,
                        "src": "3372:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3360:21:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13363,
                          "name": "_amountToUnlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13346,
                          "src": "3405:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 13361,
                          "name": "_currentlyLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13340,
                          "src": "3384:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3923,
                        "src": "3384:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3384:37:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3360:61:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13366,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:61:44"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 13372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13367,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13332,
                      "src": "3485:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 13370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3507:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 13369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3499:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3499:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3499:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3485:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13382,
                  "nodeType": "IfStatement",
                  "src": "3481:104:44",
                  "trueBody": {
                    "id": 13381,
                    "nodeType": "Block",
                    "src": "3511:74:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 13377,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13332,
                              "src": "3550:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 13378,
                              "name": "_amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13346,
                              "src": "3562:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 13374,
                                  "name": "lockableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13256,
                                  "src": "3526:13:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 13373,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3078,
                                "src": "3519:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 13375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3519:21:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3078",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 13376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3027,
                            "src": "3519:30:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 13379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3519:59:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13380,
                        "nodeType": "ExpressionStatement",
                        "src": "3519:59:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13383,
                    "name": "_amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13346,
                    "src": "3627:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13338,
                  "id": 13384,
                  "nodeType": "Return",
                  "src": "3620:22:44"
                }
              ]
            },
            "documentation": {
              "id": 13326,
              "nodeType": "StructuredDocumentation",
              "src": "2513:388:44",
              "text": "@notice Unlock funds from this contract's ledger for a given user account and transfer to user\n @param _account The address whose funds should be unlocked. \n @param _amount The amount of the token to lock\n @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n @return The amount unlocked"
            },
            "functionSelector": "45fab369",
            "id": 13386,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13335,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13334,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13254,
                  "src": "2987:20:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2987:20:44"
              }
            ],
            "name": "unlockFunds",
            "nameLocation": "2913:11:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13328,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2933:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2925:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13330,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2951:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2943:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13332,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2968:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "2960:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2924:55:44"
            },
            "returnParameters": {
              "id": 13338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13386,
                  "src": "3017:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:9:44"
            },
            "scope": 13387,
            "src": "2904:743:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13388,
        "src": "511:3138:44",
        "usedErrors": []
      }
    ],
    "src": "33:3617:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-09T01:28:26.692Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedOperator(address)": {
        "params": {
          "_newOperator": "The address of the new operator to add"
        }
      },
      "lockFunds(address,uint256)": {
        "details": "Assumes that approval has already been given to this contract to transfer the ERC20 token",
        "params": {
          "_account": "The address whose funds should be locked. ",
          "_amount": "The amount of the token to lock"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeAllowedOperator(address)": {
        "params": {
          "_operator": "The address of the new operator to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockFunds(address,uint256,address)": {
        "params": {
          "_account": "The address whose funds should be unlocked. ",
          "_amount": "The amount of the token to lock",
          "_recipient": "If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)"
        },
        "returns": {
          "_0": "The amount unlocked"
        }
      }
    },
    "title": "TokenLockController. Contract for securely locking, unlocking, and burning tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedOperator(address)": {
        "notice": "Add an allowed operator to the allowedOperators mapping"
      },
      "lockFunds(address,uint256)": {
        "notice": "Lock funds to this contract's ledger"
      },
      "removeAllowedOperator(address)": {
        "notice": "Remove an allowed operator from the allowedOperators mapping"
      },
      "unlockFunds(address,uint256,address)": {
        "notice": "Unlock funds from this contract's ledger for a given user account and transfer to user"
      }
    },
    "version": 1
  }
}