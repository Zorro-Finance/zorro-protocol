{
  "contractName": "TokenLockController",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedOperators",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockableToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "addAllowedOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "removeAllowedOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lockFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "unlockFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"addAllowedOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedOperators\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lockFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockableToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeAllowedOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"unlockFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedOperator(address)\":{\"params\":{\"_newOperator\":\"The address of the new operator to add\"}},\"burnFunds(uint256)\":{\"params\":{\"_amount\":\"The amount of the token to burn\"},\"returns\":{\"_0\":\"The amount burned\"}},\"lockFunds(address,uint256)\":{\"details\":\"Assumes that approval has already been given to this contract to transfer the ERC20 token\",\"params\":{\"_account\":\"The address whose funds should be locked. \",\"_amount\":\"The amount of the token to lock\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeAllowedOperator(address)\":{\"params\":{\"_operator\":\"The address of the new operator to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockFunds(address,uint256,address)\":{\"params\":{\"_account\":\"The address whose funds should be unlocked. \",\"_amount\":\"The amount of the token to lock\",\"_recipient\":\"If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\"},\"returns\":{\"_0\":\"The amount unlocked\"}}},\"title\":\"TokenLockController. Contract for securely locking, unlocking, and burning tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedOperator(address)\":{\"notice\":\"Add an allowed operator to the allowedOperators mapping\"},\"burnFunds(uint256)\":{\"notice\":\"Burn funds that are held on this contract\"},\"lockFunds(address,uint256)\":{\"notice\":\"Lock funds to this contract's ledger\"},\"removeAllowedOperator(address)\":{\"notice\":\"Remove an allowed operator from the allowedOperators mapping\"},\"unlockFunds(address,uint256,address)\":{\"notice\":\"Unlock funds from this contract's ledger for a given user account and transfer to user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/TokenLockController.sol\":\"TokenLockController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/tokens/TokenLockController.sol\":{\"keccak256\":\"0xb100e4658367a45b8ea19b061289c62ac59e374c1688608f2d7c66f8ac344426\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad484e75f457641137c0b9d2dbb4d619efb762199ac86e59765dc10bbe035eb\",\"dweb:/ipfs/Qmctf4WPt19hpJ9ALbn76hq5CbLSipRx6VBDceC51ncf1T\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f6838038062000f68833981016040819052620000349162000240565b6200005a6200004b64010000000062000089810204565b6401000000006200008d810204565b6000805460a060020a60ff0219169055600180556200008281640100000000620000dd810204565b5062000272565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000f064010000000062000089810204565b600160a060020a03166200010c64010000000062000231810204565b600160a060020a03161462000182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600160a060020a0381166200021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840162000179565b6200022e816401000000006200008d810204565b50565b600054600160a060020a031690565b6000602082840312156200025357600080fd5b8151600160a060020a03811681146200026b57600080fd5b9392505050565b610ce680620002826000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100a9578063a6674f8811610083578063a6674f88146101d7578063b86247d71461020c578063dd9558831461022c578063f2fde38b1461023f57600080fd5b8063715018a6146101ab5780638da5cb5b146101b35780638da7a378146101c457600080fd5b806312e382b4146100f1578063190050ae146101065780631995333b1461011957806345fab3691461013f5780635c975abb1461015257806370d5ae0514610180575b600080fd5b6101046100ff366004610ab6565b610252565b005b610104610114366004610ae0565b6102c1565b61012c610127366004610afb565b610312565b6040519081526020015b60405180910390f35b61012c61014d366004610b14565b610446565b60005474010000000000000000000000000000000000000000900460ff166040519015158152602001610136565b60055461019390600160a060020a031681565b604051600160a060020a039091168152602001610136565b610104610568565b600054600160a060020a0316610193565b6101046101d2366004610ae0565b6105a1565b6101fa6101e5366004610ae0565b60036020526000908152604090205460ff1681565b60405160ff9091168152602001610136565b61012c61021a366004610ae0565b60046020526000908152604090205481565b60025461019390600160a060020a031681565b61010461024d366004610ae0565b6105ef565b3360009081526003602052604090205460ff1661028d5760405160e560020a62461bcd02815260040161028490610b50565b60405180910390fd5b6002546102a590600160a060020a03168330846106a7565b600160a060020a03909116600090815260046020526040902055565b600054600160a060020a031633146102ee5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03166000908152600360205260409020805460ff19166001179055565b3360009081526003602052604081205460ff166103445760405160e560020a62461bcd02815260040161028490610b50565b6002546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190610bbc565b90508083111561041f5760405160e560020a62461bcd02815260206004820152601b60248201527f43616e6e6f74206275726e206d6f7265207468616e20617661696c00000000006044820152606401610284565b60055460025461043c91600160a060020a0391821691168561075e565b829150505b919050565b3360009081526003602052604081205460ff166104785760405160e560020a62461bcd02815260040161028490610b50565b600160a060020a038416600090815260046020526040902054838181111561049d5750805b6104a782826107ac565b600160a060020a0380881660009081526004602052604090209190915584161561055d576002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610bd5565b505b9150505b9392505050565b600054600160a060020a031633146105955760405160e560020a62461bcd02815260040161028490610b87565b61059f60006107b8565b565b600054600160a060020a031633146105ce5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03166000908152600360205260409020805460ff19169055565b600054600160a060020a0316331461061c5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03811661069b5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610284565b6106a4816107b8565b50565b604051600160a060020a03808516602483015283166044820152606481018290526107589085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610815565b50505050565b604051600160a060020a0383166024820152604481018290526107a79084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016106f4565b505050565b60006105618284610bf7565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061086a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166108fd9092919063ffffffff16565b8051909150156107a757808060200190518101906108889190610bd5565b6107a75760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610284565b606061090c8484600085610914565b949350505050565b606030318311156109905760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610284565b600160a060020a0385163b6109ea5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b60008086600160a060020a03168587604051610a069190610c61565b60006040518083038185875af1925050503d8060008114610a43576040519150601f19603f3d011682016040523d82523d6000602084013e610a48565b606091505b5091509150610a58828286610a63565b979650505050505050565b60608315610a72575081610561565b825115610a825782518084602001fd5b8160405160e560020a62461bcd0281526004016102849190610c7d565b8035600160a060020a038116811461044157600080fd5b60008060408385031215610ac957600080fd5b610ad283610a9f565b946020939093013593505050565b600060208284031215610af257600080fd5b61056182610a9f565b600060208284031215610b0d57600080fd5b5035919050565b600080600060608486031215610b2957600080fd5b610b3284610a9f565b925060208401359150610b4760408501610a9f565b90509250925092565b6020808252600e908201527f496e76616c69642063616c6c6572000000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bce57600080fd5b5051919050565b600060208284031215610be757600080fd5b8151801515811461056157600080fd5b600082821015610c30577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b60005b83811015610c50578181015183820152602001610c38565b838111156107585750506000910152565b60008251610c73818460208701610c35565b9190910192915050565b6020815260008251806020840152610c9c816040850160208701610c35565b601f01601f1916919091016040019291505056fea26469706673582212206a65b919b9d8d407dbe1d83a7f59cfc8c6aca3872bbed329398a37d1ce83816064736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c010000000000000000000000000000000000000000000000000000000090048063715018a6116100a9578063a6674f8811610083578063a6674f88146101d7578063b86247d71461020c578063dd9558831461022c578063f2fde38b1461023f57600080fd5b8063715018a6146101ab5780638da5cb5b146101b35780638da7a378146101c457600080fd5b806312e382b4146100f1578063190050ae146101065780631995333b1461011957806345fab3691461013f5780635c975abb1461015257806370d5ae0514610180575b600080fd5b6101046100ff366004610ab6565b610252565b005b610104610114366004610ae0565b6102c1565b61012c610127366004610afb565b610312565b6040519081526020015b60405180910390f35b61012c61014d366004610b14565b610446565b60005474010000000000000000000000000000000000000000900460ff166040519015158152602001610136565b60055461019390600160a060020a031681565b604051600160a060020a039091168152602001610136565b610104610568565b600054600160a060020a0316610193565b6101046101d2366004610ae0565b6105a1565b6101fa6101e5366004610ae0565b60036020526000908152604090205460ff1681565b60405160ff9091168152602001610136565b61012c61021a366004610ae0565b60046020526000908152604090205481565b60025461019390600160a060020a031681565b61010461024d366004610ae0565b6105ef565b3360009081526003602052604090205460ff1661028d5760405160e560020a62461bcd02815260040161028490610b50565b60405180910390fd5b6002546102a590600160a060020a03168330846106a7565b600160a060020a03909116600090815260046020526040902055565b600054600160a060020a031633146102ee5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03166000908152600360205260409020805460ff19166001179055565b3360009081526003602052604081205460ff166103445760405160e560020a62461bcd02815260040161028490610b50565b6002546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091600160a060020a0316906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190610bbc565b90508083111561041f5760405160e560020a62461bcd02815260206004820152601b60248201527f43616e6e6f74206275726e206d6f7265207468616e20617661696c00000000006044820152606401610284565b60055460025461043c91600160a060020a0391821691168561075e565b829150505b919050565b3360009081526003602052604081205460ff166104785760405160e560020a62461bcd02815260040161028490610b50565b600160a060020a038416600090815260046020526040902054838181111561049d5750805b6104a782826107ac565b600160a060020a0380881660009081526004602052604090209190915584161561055d576002546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610bd5565b505b9150505b9392505050565b600054600160a060020a031633146105955760405160e560020a62461bcd02815260040161028490610b87565b61059f60006107b8565b565b600054600160a060020a031633146105ce5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03166000908152600360205260409020805460ff19169055565b600054600160a060020a0316331461061c5760405160e560020a62461bcd02815260040161028490610b87565b600160a060020a03811661069b5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610284565b6106a4816107b8565b50565b604051600160a060020a03808516602483015283166044820152606481018290526107589085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610815565b50505050565b604051600160a060020a0383166024820152604481018290526107a79084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016106f4565b505050565b60006105618284610bf7565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061086a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a03166108fd9092919063ffffffff16565b8051909150156107a757808060200190518101906108889190610bd5565b6107a75760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610284565b606061090c8484600085610914565b949350505050565b606030318311156109905760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610284565b600160a060020a0385163b6109ea5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b60008086600160a060020a03168587604051610a069190610c61565b60006040518083038185875af1925050503d8060008114610a43576040519150601f19603f3d011682016040523d82523d6000602084013e610a48565b606091505b5091509150610a58828286610a63565b979650505050505050565b60608315610a72575081610561565b825115610a825782518084602001fd5b8160405160e560020a62461bcd0281526004016102849190610c7d565b8035600160a060020a038116811461044157600080fd5b60008060408385031215610ac957600080fd5b610ad283610a9f565b946020939093013593505050565b600060208284031215610af257600080fd5b61056182610a9f565b600060208284031215610b0d57600080fd5b5035919050565b600080600060608486031215610b2957600080fd5b610b3284610a9f565b925060208401359150610b4760408501610a9f565b90509250925092565b6020808252600e908201527f496e76616c69642063616c6c6572000000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bce57600080fd5b5051919050565b600060208284031215610be757600080fd5b8151801515811461056157600080fd5b600082821015610c30577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b60005b83811015610c50578181015183820152602001610c38565b838111156107585750506000910152565b60008251610c73818460208701610c35565b9190910192915050565b6020815260008251806020840152610c9c816040850160208701610c35565b601f01601f1916919091016040019291505056fea26469706673582212206a65b919b9d8d407dbe1d83a7f59cfc8c6aca3872bbed329398a37d1ce83816064736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1074:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:63"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:1:63",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "246:3:63",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:63"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:63",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:63"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:63",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:63",
                "type": ""
              }
            ],
            "src": "14:290:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:182:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:34:63",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:62:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "633:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "633:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:63",
                "type": ""
              }
            ],
            "src": "309:356:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "844:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "861:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "854:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "854:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "895:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "906:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "891:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "891:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "911:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "884:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "950:34:63",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "923:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "923:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1005:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1016:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1001:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1001:18:63"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1021:8:63",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "994:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1039:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1062:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1047:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1039:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "821:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "835:4:63",
                "type": ""
              }
            ],
            "src": "670:402:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7007:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:63"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:63"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:63",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:63"
                  },
                  "nodeType": "YulIf",
                  "src": "111:93:63"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:63",
                "type": ""
              }
            ],
            "src": "14:196:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:167:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "348:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "357:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "360:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "350:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "350:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "350:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "323:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "319:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "319:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "315:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "312:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "373:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "402:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "383:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "373:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "421:42:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "448:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "459:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "444:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "431:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:32:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "421:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "271:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "283:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "291:6:63",
                "type": ""
              }
            ],
            "src": "215:254:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:116:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "590:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "602:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "592:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "565:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "574:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "561:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "561:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "586:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "557:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "554:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "644:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "521:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "533:6:63",
                "type": ""
              }
            ],
            "src": "474:186:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:110:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "781:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "790:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "793:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "783:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "783:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "783:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "756:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "765:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "777:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "748:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "745:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "806:33:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "829:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "816:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:23:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "806:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "701:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "712:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "724:6:63",
                "type": ""
              }
            ],
            "src": "665:180:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:76:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "961:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "973:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "984:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "961:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1003:9:63"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1014:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "996:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:25:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "996:25:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "920:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "931:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "942:4:63",
                "type": ""
              }
            ],
            "src": "850:177:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1136:224:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1182:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1191:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1194:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1184:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1184:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1184:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1157:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1166:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1153:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1153:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1149:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1146:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1207:39:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1236:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1217:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1217:29:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1207:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1255:42:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1282:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1293:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1278:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1265:12:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:32:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1255:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1306:48:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1339:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1350:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1316:18:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:38:63"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1086:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1097:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1109:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1117:6:63",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1125:6:63",
                "type": ""
              }
            ],
            "src": "1032:328:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1460:92:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1470:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1482:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1493:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1478:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1478:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1470:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1512:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1537:6:63"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1530:14:63"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1523:6:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1523:22:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1505:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1505:41:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1505:41:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1429:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1440:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1451:4:63",
                "type": ""
              }
            ],
            "src": "1365:187:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1658:125:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1668:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1680:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1691:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1668:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1710:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1725:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:42:63",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:55:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1703:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:74:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:74:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1627:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1638:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1649:4:63",
                "type": ""
              }
            ],
            "src": "1557:226:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1885:87:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1895:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1918:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1903:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1903:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1895:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1937:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1952:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1960:4:63",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1948:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:17:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1930:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1930:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1930:36:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1854:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1865:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1876:4:63",
                "type": ""
              }
            ],
            "src": "1788:184:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2151:164:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2168:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2179:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2161:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2161:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2161:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2202:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2213:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2198:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2198:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:2:63",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2191:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2241:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2252:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2237:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2237:18:63"
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2257:16:63",
                        "type": "",
                        "value": "Invalid caller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2230:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2230:44:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2230:44:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2283:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2295:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2291:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2283:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2128:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2142:4:63",
                "type": ""
              }
            ],
            "src": "1977:338:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2494:182:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2511:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2522:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2545:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2556:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2541:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2541:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2561:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2534:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2534:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2534:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2584:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2595:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2580:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2580:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2600:34:63",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2573:62:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2644:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2656:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2667:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2652:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2644:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2471:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2485:4:63",
                "type": ""
              }
            ],
            "src": "2320:356:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2762:103:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2808:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2817:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2820:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2810:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2810:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2810:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2783:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2792:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2779:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2804:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2775:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2775:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "2772:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2833:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2849:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2843:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2843:16:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2728:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2739:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2751:6:63",
                "type": ""
              }
            ],
            "src": "2681:184:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3044:177:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3061:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3072:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3054:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3054:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3054:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3095:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3106:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3091:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3091:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:2:63",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3084:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3084:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3134:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3145:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3130:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3130:18:63"
                      },
                      {
                        "hexValue": "43616e6e6f74206275726e206d6f7265207468616e20617661696c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3150:29:63",
                        "type": "",
                        "value": "Cannot burn more than avail"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3123:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3123:57:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3123:57:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3189:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3201:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3212:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3197:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3189:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3021:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3035:4:63",
                "type": ""
              }
            ],
            "src": "2870:351:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3355:168:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3365:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3377:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3388:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3373:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3373:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3365:4:63"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3407:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3422:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3430:42:63",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3418:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3418:55:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3400:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3400:74:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3400:74:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3494:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3505:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3490:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3490:18:63"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3510:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3483:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3483:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3483:34:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3316:9:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3327:6:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3335:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3346:4:63",
                "type": ""
              }
            ],
            "src": "3226:297:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3606:199:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3652:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3661:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3664:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3654:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3654:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3654:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3627:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3636:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3623:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3623:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3648:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3619:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3619:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "3616:52:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3677:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3696:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3690:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:16:63"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3681:5:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3759:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3768:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3771:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3761:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3761:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3761:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3728:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3749:5:63"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3742:6:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3742:13:63"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3735:6:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3735:21:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3725:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3725:32:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3718:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3718:40:63"
                  },
                  "nodeType": "YulIf",
                  "src": "3715:60:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3784:15:63",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3794:5:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3784:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3572:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3583:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3595:6:63",
                "type": ""
              }
            ],
            "src": "3528:277:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3984:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4001:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4012:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3994:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3994:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4035:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4046:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4031:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4031:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4024:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4024:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4024:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4074:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4085:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4070:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4070:18:63"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4090:34:63",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4063:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4063:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4063:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4145:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4156:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4141:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4141:18:63"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4161:8:63",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4134:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4134:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4134:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4179:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4191:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4202:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4187:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4187:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4179:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3961:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3975:4:63",
                "type": ""
              }
            ],
            "src": "3810:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4374:241:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4384:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4396:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4407:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4392:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4392:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4384:4:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4419:52:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4429:42:63",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4423:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4487:9:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4502:6:63"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4510:2:63"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4498:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4498:15:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4480:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4480:34:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4534:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4545:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4530:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4530:18:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4554:6:63"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4562:2:63"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:15:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4523:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:43:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4523:43:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4586:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4597:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4582:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4582:18:63"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4602:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4575:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4575:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4575:34:63"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4327:9:63",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4338:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4346:6:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4354:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4365:4:63",
                "type": ""
              }
            ],
            "src": "4217:398:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4669:230:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4699:168:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4720:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4723:77:63",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4713:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4713:88:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4713:88:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4821:1:63",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4824:4:63",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4814:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4814:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4814:15:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4849:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4852:4:63",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4842:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4842:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4842:15:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4685:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4688:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4682:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4682:8:63"
                  },
                  "nodeType": "YulIf",
                  "src": "4679:188:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4876:17:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4888:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4891:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4884:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4884:9:63"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4876:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4651:1:63",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4654:1:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4660:4:63",
                "type": ""
              }
            ],
            "src": "4620:279:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5078:232:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5095:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5106:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5088:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5088:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5088:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5129:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5140:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5125:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5125:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5145:2:63",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5118:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5118:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5118:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5168:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5179:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5164:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5164:18:63"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5184:34:63",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5157:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5157:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5157:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5239:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5250:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5235:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5235:18:63"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5255:12:63",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5228:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5228:40:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5228:40:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5277:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5289:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5300:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5285:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5285:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5277:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5055:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5069:4:63",
                "type": ""
              }
            ],
            "src": "4904:406:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5489:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5506:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5517:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5499:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5499:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5499:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5540:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5551:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5536:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5536:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5556:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5529:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5529:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5529:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5579:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5590:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5575:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5575:18:63"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5595:34:63",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5568:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5568:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5650:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5661:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5646:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5646:18:63"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5666:8:63",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5639:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5639:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5639:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5684:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5696:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5707:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5692:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5692:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5684:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5466:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5480:4:63",
                "type": ""
              }
            ],
            "src": "5315:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5896:179:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5913:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5924:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5906:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5906:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5906:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5947:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5958:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5943:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5943:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5963:2:63",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5936:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5936:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5936:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5986:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5997:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5982:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5982:18:63"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6002:31:63",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5975:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5975:59:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5975:59:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6043:26:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6055:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6066:2:63",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6051:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6051:18:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6043:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5873:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5887:4:63",
                "type": ""
              }
            ],
            "src": "5722:353:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6133:205:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6143:10:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6152:1:63",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6147:1:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6212:63:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6237:3:63"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6242:1:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6233:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6233:11:63"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6256:3:63"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6261:1:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6252:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6252:11:63"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6246:5:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6246:18:63"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6226:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6226:39:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6226:39:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6173:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6176:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6170:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6170:13:63"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6184:19:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6186:15:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6195:1:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6198:2:63",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6191:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6191:10:63"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6186:1:63"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6166:3:63",
                    "statements": []
                  },
                  "src": "6162:113:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6301:31:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6314:3:63"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6319:6:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6310:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6310:16:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6328:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6303:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6303:27:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6303:27:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6290:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6293:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6287:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6287:13:63"
                  },
                  "nodeType": "YulIf",
                  "src": "6284:48:63"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6111:3:63",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6116:3:63",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6121:6:63",
                "type": ""
              }
            ],
            "src": "6080:258:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6480:137:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6490:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6510:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6504:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6504:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6494:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6552:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6560:4:63",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6548:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6548:17:63"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6567:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6572:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6526:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:53:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6526:53:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6588:23:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6599:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6604:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6595:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6595:16:63"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6588:3:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6456:3:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6461:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6472:3:63",
                "type": ""
              }
            ],
            "src": "6343:274:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6743:262:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6760:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6771:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6753:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6753:21:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6783:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6803:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6797:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6797:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6787:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6830:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6841:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6826:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6826:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6846:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6819:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6819:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6819:34:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6888:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6896:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6884:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6884:15:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6905:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6916:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6901:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6901:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6921:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6862:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:66:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:66:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6937:62:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6953:9:63"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6972:6:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6980:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6968:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6968:15:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6989:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6985:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6985:7:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6964:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6964:29:63"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6949:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6949:45:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6996:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6945:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6945:54:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6937:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6712:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6723:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6734:4:63",
                "type": ""
              }
            ],
            "src": "6622:383:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot burn more than avail\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "576:3796:57:-:0;;;755:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:11;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;991:5:12;981:15;;-1:-1:-1;;;;;;981:15:12;;;;1806:22:13;;874:25:57;892:6;874:17;;;;:25;:::i;:::-;755:149;576:3796;;640:96:19;719:10;;640:96::o;2270:187:11:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;;;;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1918:198::-;1259:12;:10;;;;:12;:::i;:::-;-1:-1:-1;;;;;1248:23:11;:7;:5;;;;:7;:::i;:::-;-1:-1:-1;;;;;1248:23:11;;1240:68;;;;;;;511:2:63;1240:68:11;;;493:21:63;;;530:18;;;523:30;589:34;569:18;;;562:62;641:18;;1240:68:11;;;;;;;;;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;::::1;::::0;;872:2:63;1998:73:11::1;::::0;::::1;854:21:63::0;911:2;891:18;;;884:30;950:34;930:18;;;923:62;1021:8;1001:18;;;994:36;1047:19;;1998:73:11::1;670:402:63::0;1998:73:11::1;2081:28;2100:8:::0;2081:18:::1;;::::0;::::1;:28;:::i;:::-;1918:198:::0;:::o;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;;1036:85::o;14:290:63:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:63;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:63:o;670:402::-;576:3796:57;;;;;;",
  "deployedSourceMap": "576:3796:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:270;;;;;;:::i;:::-;;:::i;:::-;;1660:112;;;;;;:::i;:::-;;:::i;3885:485::-;;;;;;:::i;:::-;;:::i;:::-;;;996:25:63;;;984:2;969:18;3885:485:57;;;;;;;;2997:743;;;;;;:::i;:::-;;:::i;1098:84:12:-;1145:4;1168:7;;;;;;1098:84;;1530:14:63;;1523:22;1505:41;;1493:2;1478:18;1098:84:12;1365:187:63;1467:26:57;;;;;-1:-1:-1;;;;;1467:26:57;;;;;;-1:-1:-1;;;;;1721:55:63;;;1703:74;;1691:2;1676:18;1467:26:57;1557:226:63;1668:101:11;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;1036:85;;1916:109:57;;;;;;:::i;:::-;;:::i;1193:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1960:4:63;1948:17;;;1930:36;;1918:2;1903:18;1193:49:57;1788:184:63;1337:46:57;;;;;;:::i;:::-;;;;;;;;;;;;;;1113:28;;;;;-1:-1:-1;;;;;1113:28:57;;;1918:198:11;;;;;;:::i;:::-;;:::i;2332:270:57:-;1045:10;1059:1;1028:28;;;:16;:28;;;;;;;;1020:59;;;;-1:-1:-1;;;;;1020:59:57;;;;;;;:::i;:::-;;;;;;;;;2467:13:::1;::::0;2460:72:::1;::::0;-1:-1:-1;;;;;2467:13:57::1;2499:8:::0;2517:4:::1;2524:7:::0;2460:38:::1;:72::i;:::-;-1:-1:-1::0;;;;;2566:21:57;;::::1;;::::0;;;:11:::1;:21;::::0;;;;:31;2332:270::o;1660:112::-;1082:7:11;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1733:30:57::1;;::::0;;;:16:::1;:30;::::0;;;;:34;;-1:-1:-1;;1733:34:57::1;1766:1;1733:34;::::0;;1660:112::o;3885:485::-;1045:10;3958:7;1028:28;;;:16;:28;;;;;;;;1020:59;;;;-1:-1:-1;;;;;1020:59:57;;;;;;;:::i;:::-;4046:13:::1;::::0;4039:46:::1;::::0;;;;4079:4:::1;4039:46;::::0;::::1;1703:74:63::0;4017:19:57::1;::::0;-1:-1:-1;;;;;4046:13:57::1;::::0;4039:31:::1;::::0;1676:18:63;;4039:46:57::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4017:68;;4178:11;4167:7;:22;;4159:62;;;::::0;-1:-1:-1;;;;;4159:62:57;;3072:2:63;4159:62:57::1;::::0;::::1;3054:21:63::0;3111:2;3091:18;;;3084:30;3150:29;3130:18;;;3123:57;3197:18;;4159:62:57::1;2870:351:63::0;4159:62:57::1;4296:11;::::0;4268:13:::1;::::0;4261:56:::1;::::0;-1:-1:-1;;;;;4268:13:57;;::::1;::::0;4296:11:::1;4309:7:::0;4261:34:::1;:56::i;:::-;4358:7;4351:14;;;1085:1;3885:485:::0;;;:::o;2997:743::-;1045:10;3110:7;1028:28;;;:16;:28;;;;;;;;1020:59;;;;-1:-1:-1;;;;;1020:59:57;;;;;;;:::i;:::-;-1:-1:-1;;;;;3192:21:57;::::1;3165:24;3192:21:::0;;;:11:::1;:21;::::0;;;;;3245:7;3339:26;;::::1;3335:81;;;-1:-1:-1::0;3393:16:57;3335:81:::1;3477:37;:16:::0;3498:15;3477:20:::1;:37::i;:::-;-1:-1:-1::0;;;;;3453:21:57;;::::1;;::::0;;;:11:::1;:21;::::0;;;;:61;;;;3578:24;::::1;::::0;3574:104:::1;;3619:13;::::0;3612:59:::1;::::0;;;;-1:-1:-1;;;;;3418:55:63;;;3612:59:57::1;::::0;::::1;3400:74:63::0;3490:18;;;3483:34;;;3619:13:57;;::::1;::::0;3612:30:::1;::::0;3373:18:63;;3612:59:57::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3574:104;3720:15:::0;-1:-1:-1;;1085:1:57::1;2997:743:::0;;;;;:::o;1668:101:11:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1916:109:57:-;1082:7:11;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1989:27:57::1;2019:1;1989:27:::0;;;:16:::1;:27;::::0;;;;:31;;-1:-1:-1;;1989:31:57::1;::::0;;1916:109::o;1918:198:11:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:11;719:10:19;1248:23:11;1240:68;;;;-1:-1:-1;;;;;1240:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:11;::::1;1998:73;;;::::0;-1:-1:-1;;;;;1998:73:11;;4012:2:63;1998:73:11::1;::::0;::::1;3994:21:63::0;4051:2;4031:18;;;4024:30;4090:34;4070:18;;;4063:62;4161:8;4141:18;;;4134:36;4187:19;;1998:73:11::1;3810:402:63::0;1998:73:11::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;912:241:17:-;1077:68;;-1:-1:-1;;;;;4498:15:63;;;1077:68:17;;;4480:34:63;4550:15;;4530:18;;;4523:43;4582:18;;;4575:34;;;1050:96:17;;1070:5;;1100:27;;4392:18:63;;1077:68:17;;;;-1:-1:-1;;1077:68:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;701:205::-;840:58;;-1:-1:-1;;;;;3418:55:63;;840:58:17;;;3400:74:63;3490:18;;;3483:34;;;813:86:17;;833:5;;863:23;;3373:18:63;;840:58:17;3226:297:63;813:86:17;701:205;;;:::o;3108:96:21:-;3166:7;3192:5;3196:1;3192;:5;:::i;2270:187:11:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:11;;;-1:-1:-1;;2378:17:11;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:17:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:17;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:17;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;;;3811:85:17;;5106:2:63;3811:85:17;;;5088:21:63;5145:2;5125:18;;;5118:30;5184:34;5164:18;;;5157:62;5255:12;5235:18;;;5228:40;5285:19;;3811:85:17;4904:406:63;3861:223:18;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:18:o;4948:499::-;5113:12;5153:4;5145:21;:30;-1:-1:-1;5145:30:18;5137:81;;;;-1:-1:-1;;;;;5137:81:18;;5517:2:63;5137:81:18;;;5499:21:63;5556:2;5536:18;;;5529:30;5595:34;5575:18;;;5568:62;5666:8;5646:18;;;5639:36;5692:19;;5137:81:18;5315:402:63;5137:81:18;-1:-1:-1;;;;;1465:19:18;;;5228:60;;;;-1:-1:-1;;;;;5228:60:18;;5924:2:63;5228:60:18;;;5906:21:63;5963:2;5943:18;;;5936:30;6002:31;5982:18;;;5975:59;6051:18;;5228:60:18;5722:353:63;5228:60:18;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:18;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:18:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:18;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;;;8202:20:18;;;;;;;;:::i;14:196:63:-;82:20;;-1:-1:-1;;;;;131:54:63;;121:65;;111:93;;200:1;197;190:12;215:254;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:63:o;474:186::-;533:6;586:2;574:9;565:7;561:23;557:32;554:52;;;602:1;599;592:12;554:52;625:29;644:9;625:29;:::i;665:180::-;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;-1:-1:-1;816:23:63;;665:180;-1:-1:-1;665:180:63:o;1032:328::-;1109:6;1117;1125;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1217:29;1236:9;1217:29;:::i;:::-;1207:39;;1293:2;1282:9;1278:18;1265:32;1255:42;;1316:38;1350:2;1339:9;1335:18;1316:38;:::i;:::-;1306:48;;1032:328;;;;;:::o;1977:338::-;2179:2;2161:21;;;2218:2;2198:18;;;2191:30;2257:16;2252:2;2237:18;;2230:44;2306:2;2291:18;;1977:338::o;2320:356::-;2522:2;2504:21;;;2541:18;;;2534:30;2600:34;2595:2;2580:18;;2573:62;2667:2;2652:18;;2320:356::o;2681:184::-;2751:6;2804:2;2792:9;2783:7;2779:23;2775:32;2772:52;;;2820:1;2817;2810:12;2772:52;-1:-1:-1;2843:16:63;;2681:184;-1:-1:-1;2681:184:63:o;3528:277::-;3595:6;3648:2;3636:9;3627:7;3623:23;3619:32;3616:52;;;3664:1;3661;3654:12;3616:52;3696:9;3690:16;3749:5;3742:13;3735:21;3728:5;3725:32;3715:60;;3771:1;3768;3761:12;4620:279;4660:4;4688:1;4685;4682:8;4679:188;;;4723:77;4720:1;4713:88;4824:4;4821:1;4814:15;4852:4;4849:1;4842:15;4679:188;-1:-1:-1;4884:9:63;;4620:279::o;6080:258::-;6152:1;6162:113;6176:6;6173:1;6170:13;6162:113;;;6252:11;;;6246:18;6233:11;;;6226:39;6198:2;6191:10;6162:113;;;6293:6;6290:1;6287:13;6284:48;;;-1:-1:-1;;6328:1:63;6310:16;;6303:27;6080:258::o;6343:274::-;6472:3;6510:6;6504:13;6526:53;6572:6;6567:3;6560:4;6552:6;6548:17;6526:53;:::i;:::-;6595:16;;;;;6343:274;-1:-1:-1;;6343:274:63:o;6622:383::-;6771:2;6760:9;6753:21;6734:4;6803:6;6797:13;6846:6;6841:2;6830:9;6826:18;6819:34;6862:66;6921:6;6916:2;6905:9;6901:18;6896:2;6888:6;6884:15;6862:66;:::i;:::-;6989:2;6968:15;-1:-1:-1;;6964:29:63;6949:45;;;;6996:2;6945:54;;6622:383;-1:-1:-1;;6622:383:63:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n// TODO: Need modifer that only allows certain contracts to call\n\n/// @title TokenLockController. Contract for securely locking, unlocking, and burning tokens\ncontract TokenLockController is Ownable, Pausable, ReentrancyGuard {\n  /* \n  Libraries\n  */\n  using SafeERC20 for IERC20;\n  using SafeMath for uint256;\n\n  /*\n  Constructor\n  */\n  constructor(address _owner) {\n    // TODO - complete this\n    // Immediately transfer ownership to specified owner\n    transferOwnership(_owner);\n  }\n\n  /*\n  Modifiers\n  */\n  /// @notice Requires caller to be in allowed list\n  modifier onlyAllowedOperators() {\n    require(allowedOperators[msg.sender] > 0, \"Invalid caller\");\n    _;\n  }\n\n  /*\n  State\n  */\n  address public lockableToken; // The ERC20 token's address that can be burned\n  mapping(address => uint8) public allowedOperators; // Allowed callers of this contract. Mapping: contract address => 1 or 0. 1 means allowed.\n  mapping(address => uint256) public lockedFunds; // Ledger of locked amount by account. Mapping: wallet address => amount locked\n  address public burnAddress;\n\n  /*\n  Setters/Config\n  */\n  /// @notice Add an allowed operator to the allowedOperators mapping\n  /// @param _newOperator The address of the new operator to add\n  function addAllowedOperator(address _newOperator) public onlyOwner {\n    allowedOperators[_newOperator] = 1;\n  }\n\n  /// @notice Remove an allowed operator from the allowedOperators mapping\n  /// @param _operator The address of the new operator to remove\n  function removeAllowedOperator(address _operator) public onlyOwner {\n    allowedOperators[_operator] = 0;\n  } \n\n  /*\n  Financial functions\n  */\n  /// @notice Lock funds to this contract's ledger\n  /// @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n  /// @param _account The address whose funds should be locked. \n  /// @param _amount The amount of the token to lock\n  function lockFunds(address _account, uint256 _amount) public onlyAllowedOperators {\n    //  Transfer funds to this contract\n    IERC20(lockableToken).safeTransferFrom(_account, address(this), _amount);\n    // Lock funds on ledger\n    lockedFunds[_account] = _amount;\n  }\n\n  /// @notice Unlock funds from this contract's ledger for a given user account and transfer to user\n  /// @param _account The address whose funds should be unlocked. \n  /// @param _amount The amount of the token to lock\n  /// @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n  /// @return The amount unlocked\n  function unlockFunds(address _account, uint256 _amount, address _recipient) public onlyAllowedOperators returns (uint256) {\n    // Determine currently locked funds\n    uint256 _currentlyLocked = lockedFunds[_account];\n    uint256 _amountToUnlock = _amount;\n    // Ensure that only funds up to the max currently locked can be unlocked\n    if (_amount > _currentlyLocked) {\n      _amountToUnlock = _currentlyLocked;\n    }\n    // Unlock funds from ledger\n    lockedFunds[_account] = _currentlyLocked.sub(_amountToUnlock);\n    // Transfer funds back to account (if applicable)\n    if (_recipient != address(0)) {\n      IERC20(lockableToken).transfer(_recipient, _amountToUnlock);\n    }\n    // Return amount unlocked\n    return _amountToUnlock;\n  }\n\n  /// @notice Burn funds that are held on this contract\n  /// @param _amount The amount of the token to burn\n  /// @return The amount burned\n  function burnFunds(uint256 _amount) public onlyAllowedOperators returns (uint256) {\n    // Get current balance on this contract\n    uint256 _currentBal = IERC20(lockableToken).balanceOf(address(this));\n    // Amount to burn must be less than total held by this contract\n    require(_amount <= _currentBal, \"Cannot burn more than avail\");\n    // Send funds to burn address\n    IERC20(lockableToken).safeTransfer(burnAddress, _amount);\n    // Return amount burned\n    return _amount;\n  }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/TokenLockController.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/TokenLockController.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "IERC20": [
        3078
      ],
      "Ownable": [
        2280
      ],
      "Pausable": [
        2372
      ],
      "ReentrancyGuard": [
        2412
      ],
      "SafeERC20": [
        3327
      ],
      "SafeMath": [
        4044
      ],
      "TokenLockController": [
        15510
      ]
    },
    "id": 15511,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15292,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:57"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 3328,
        "src": "58:65:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 15294,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 3079,
        "src": "125:56:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 15295,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2281,
        "src": "183:52:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 15296,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2373,
        "src": "237:55:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 15297,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2413,
        "src": "294:62:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 15298,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 4045,
        "src": "358:57:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15300,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "608:7:57"
            },
            "id": 15301,
            "nodeType": "InheritanceSpecifier",
            "src": "608:7:57"
          },
          {
            "baseName": {
              "id": 15302,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2372,
              "src": "617:8:57"
            },
            "id": 15303,
            "nodeType": "InheritanceSpecifier",
            "src": "617:8:57"
          },
          {
            "baseName": {
              "id": 15304,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "627:15:57"
            },
            "id": 15305,
            "nodeType": "InheritanceSpecifier",
            "src": "627:15:57"
          }
        ],
        "canonicalName": "TokenLockController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15299,
          "nodeType": "StructuredDocumentation",
          "src": "483:93:57",
          "text": "@title TokenLockController. Contract for securely locking, unlocking, and burning tokens"
        },
        "fullyImplemented": true,
        "id": 15510,
        "linearizedBaseContracts": [
          15510,
          2412,
          2372,
          2280,
          3644
        ],
        "name": "TokenLockController",
        "nameLocation": "585:19:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15309,
            "libraryName": {
              "id": 15306,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3327,
              "src": "676:9:57"
            },
            "nodeType": "UsingForDirective",
            "src": "670:27:57",
            "typeName": {
              "id": 15308,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15307,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3078,
                "src": "690:6:57"
              },
              "referencedDeclaration": 3078,
              "src": "690:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3078",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 15312,
            "libraryName": {
              "id": 15310,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "706:8:57"
            },
            "nodeType": "UsingForDirective",
            "src": "700:27:57",
            "typeName": {
              "id": 15311,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 15321,
              "nodeType": "Block",
              "src": "783:121:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15318,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15314,
                        "src": "892:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15317,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2259,
                      "src": "874:17:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:25:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15320,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:57"
                }
              ]
            },
            "id": 15322,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15314,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "775:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15322,
                  "src": "767:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:16:57"
            },
            "returnParameters": {
              "id": 15316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:57"
            },
            "scope": 15510,
            "src": "755:149:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15336,
              "nodeType": "Block",
              "src": "1014:77:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 15331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 15326,
                            "name": "allowedOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15343,
                            "src": "1028:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 15329,
                          "indexExpression": {
                            "expression": {
                              "id": 15327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1045:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1045:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1028:28:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1059:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1028:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "id": 15332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1062:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        },
                        "value": "Invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        }
                      ],
                      "id": 15325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1020:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:59:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15334,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:59:57"
                },
                {
                  "id": 15335,
                  "nodeType": "PlaceholderStatement",
                  "src": "1085:1:57"
                }
              ]
            },
            "documentation": {
              "id": 15323,
              "nodeType": "StructuredDocumentation",
              "src": "930:49:57",
              "text": "@notice Requires caller to be in allowed list"
            },
            "id": 15337,
            "name": "onlyAllowedOperators",
            "nameLocation": "991:20:57",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:57"
            },
            "src": "982:109:57",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dd955883",
            "id": 15339,
            "mutability": "mutable",
            "name": "lockableToken",
            "nameLocation": "1128:13:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1113:28:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15338,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1113:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a6674f88",
            "id": 15343,
            "mutability": "mutable",
            "name": "allowedOperators",
            "nameLocation": "1226:16:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1193:49:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 15342,
              "keyType": {
                "id": 15340,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1201:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1193:25:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 15341,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1212:5:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b86247d7",
            "id": 15347,
            "mutability": "mutable",
            "name": "lockedFunds",
            "nameLocation": "1372:11:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1337:46:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15346,
              "keyType": {
                "id": 15344,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1345:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1337:27:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15345,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1356:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 15349,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1482:11:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1467:26:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15348,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1467:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15363,
              "nodeType": "Block",
              "src": "1727:45:57",
              "statements": [
                {
                  "expression": {
                    "id": 15361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15357,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15343,
                        "src": "1733:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 15359,
                      "indexExpression": {
                        "id": 15358,
                        "name": "_newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15352,
                        "src": "1750:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1733:30:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 15360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1766:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1733:34:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15362,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:34:57"
                }
              ]
            },
            "documentation": {
              "id": 15350,
              "nodeType": "StructuredDocumentation",
              "src": "1525:132:57",
              "text": "@notice Add an allowed operator to the allowedOperators mapping\n @param _newOperator The address of the new operator to add"
            },
            "functionSelector": "190050ae",
            "id": 15364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15354,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1717:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1717:9:57"
              }
            ],
            "name": "addAllowedOperator",
            "nameLocation": "1669:18:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15352,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "1696:12:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15364,
                  "src": "1688:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:22:57"
            },
            "returnParameters": {
              "id": 15356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:57"
            },
            "scope": 15510,
            "src": "1660:112:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15378,
              "nodeType": "Block",
              "src": "1983:42:57",
              "statements": [
                {
                  "expression": {
                    "id": 15376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15372,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15343,
                        "src": "1989:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 15374,
                      "indexExpression": {
                        "id": 15373,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15367,
                        "src": "2006:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1989:27:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 15375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2019:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1989:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15377,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:31:57"
                }
              ]
            },
            "documentation": {
              "id": 15365,
              "nodeType": "StructuredDocumentation",
              "src": "1776:137:57",
              "text": "@notice Remove an allowed operator from the allowedOperators mapping\n @param _operator The address of the new operator to remove"
            },
            "functionSelector": "8da7a378",
            "id": 15379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15369,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1973:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1973:9:57"
              }
            ],
            "name": "removeAllowedOperator",
            "nameLocation": "1925:21:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15367,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1955:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15379,
                  "src": "1947:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:19:57"
            },
            "returnParameters": {
              "id": 15371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:0:57"
            },
            "scope": 15510,
            "src": "1916:109:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15407,
              "nodeType": "Block",
              "src": "2414:188:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15393,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "2499:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15396,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2517:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 15395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2509:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2509:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2509:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15398,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15384,
                        "src": "2524:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15390,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "2467:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15389,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "2460:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2460:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3160,
                      "src": "2460:38:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 15399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:72:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15400,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:72:57"
                },
                {
                  "expression": {
                    "id": 15405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15401,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15347,
                        "src": "2566:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15403,
                      "indexExpression": {
                        "id": 15402,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "2578:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2566:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15404,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15384,
                      "src": "2590:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2566:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15406,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:31:57"
                }
              ]
            },
            "documentation": {
              "id": 15380,
              "nodeType": "StructuredDocumentation",
              "src": "2062:267:57",
              "text": "@notice Lock funds to this contract's ledger\n @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n @param _account The address whose funds should be locked. \n @param _amount The amount of the token to lock"
            },
            "functionSelector": "12e382b4",
            "id": 15408,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15386,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "2393:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2393:20:57"
              }
            ],
            "name": "lockFunds",
            "nameLocation": "2341:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15382,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2359:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15408,
                  "src": "2351:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15384,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2377:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15408,
                  "src": "2369:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:35:57"
            },
            "returnParameters": {
              "id": 15388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:57"
            },
            "scope": 15510,
            "src": "2332:270:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15468,
              "nodeType": "Block",
              "src": "3119:621:57",
              "statements": [
                {
                  "assignments": [
                    15423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15423,
                      "mutability": "mutable",
                      "name": "_currentlyLocked",
                      "nameLocation": "3173:16:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15468,
                      "src": "3165:24:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3165:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15427,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15424,
                      "name": "lockedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15347,
                      "src": "3192:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 15426,
                    "indexExpression": {
                      "id": 15425,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15411,
                      "src": "3204:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3192:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3165:48:57"
                },
                {
                  "assignments": [
                    15429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15429,
                      "mutability": "mutable",
                      "name": "_amountToUnlock",
                      "nameLocation": "3227:15:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15468,
                      "src": "3219:23:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15431,
                  "initialValue": {
                    "id": 15430,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15413,
                    "src": "3245:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3219:33:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15432,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15413,
                      "src": "3339:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 15433,
                      "name": "_currentlyLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15423,
                      "src": "3349:16:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3339:26:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15440,
                  "nodeType": "IfStatement",
                  "src": "3335:81:57",
                  "trueBody": {
                    "id": 15439,
                    "nodeType": "Block",
                    "src": "3367:49:57",
                    "statements": [
                      {
                        "expression": {
                          "id": 15437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15435,
                            "name": "_amountToUnlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15429,
                            "src": "3375:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 15436,
                            "name": "_currentlyLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15423,
                            "src": "3393:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3375:34:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15438,
                        "nodeType": "ExpressionStatement",
                        "src": "3375:34:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15441,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15347,
                        "src": "3453:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15443,
                      "indexExpression": {
                        "id": 15442,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15411,
                        "src": "3465:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3453:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15446,
                          "name": "_amountToUnlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15429,
                          "src": "3498:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 15444,
                          "name": "_currentlyLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15423,
                          "src": "3477:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3923,
                        "src": "3477:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3477:37:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3453:61:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15449,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:61:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 15455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15450,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15415,
                      "src": "3578:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 15453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3600:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 15452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3592:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 15451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3592:7:57",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3592:10:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3578:24:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15465,
                  "nodeType": "IfStatement",
                  "src": "3574:104:57",
                  "trueBody": {
                    "id": 15464,
                    "nodeType": "Block",
                    "src": "3604:74:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15460,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15415,
                              "src": "3643:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15461,
                              "name": "_amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15429,
                              "src": "3655:15:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 15457,
                                  "name": "lockableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15339,
                                  "src": "3619:13:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15456,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3078,
                                "src": "3612:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3612:21:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3078",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 15459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3027,
                            "src": "3612:30:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 15462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3612:59:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15463,
                        "nodeType": "ExpressionStatement",
                        "src": "3612:59:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15466,
                    "name": "_amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15429,
                    "src": "3720:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15421,
                  "id": 15467,
                  "nodeType": "Return",
                  "src": "3713:22:57"
                }
              ]
            },
            "documentation": {
              "id": 15409,
              "nodeType": "StructuredDocumentation",
              "src": "2606:388:57",
              "text": "@notice Unlock funds from this contract's ledger for a given user account and transfer to user\n @param _account The address whose funds should be unlocked. \n @param _amount The amount of the token to lock\n @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n @return The amount unlocked"
            },
            "functionSelector": "45fab369",
            "id": 15469,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15417,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "3080:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3080:20:57"
              }
            ],
            "name": "unlockFunds",
            "nameLocation": "3006:11:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15411,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3026:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3018:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3018:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15413,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3044:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3036:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15415,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "3061:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3053:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3017:55:57"
            },
            "returnParameters": {
              "id": 15421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3110:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:9:57"
            },
            "scope": 15510,
            "src": "2997:743:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15508,
              "nodeType": "Block",
              "src": "3967:403:57",
              "statements": [
                {
                  "assignments": [
                    15480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15480,
                      "mutability": "mutable",
                      "name": "_currentBal",
                      "nameLocation": "4025:11:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15508,
                      "src": "4017:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4017:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15487,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4079:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 15486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4071:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15485,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4071:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15482,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "4046:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15481,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "4039:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4039:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3017,
                      "src": "4039:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 15489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4017:68:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15492,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15472,
                          "src": "4167:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 15493,
                          "name": "_currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15480,
                          "src": "4178:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4167:22:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206275726e206d6f7265207468616e20617661696c",
                        "id": 15495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4191:29:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd",
                          "typeString": "literal_string \"Cannot burn more than avail\""
                        },
                        "value": "Cannot burn more than avail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd",
                          "typeString": "literal_string \"Cannot burn more than avail\""
                        }
                      ],
                      "id": 15491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4159:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:62:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15497,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15502,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15349,
                        "src": "4296:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15503,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15472,
                        "src": "4309:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15499,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "4268:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15498,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "4261:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4261:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3134,
                      "src": "4261:34:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 15504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4261:56:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15505,
                  "nodeType": "ExpressionStatement",
                  "src": "4261:56:57"
                },
                {
                  "expression": {
                    "id": 15506,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15472,
                    "src": "4358:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15478,
                  "id": 15507,
                  "nodeType": "Return",
                  "src": "4351:14:57"
                }
              ]
            },
            "documentation": {
              "id": 15470,
              "nodeType": "StructuredDocumentation",
              "src": "3744:138:57",
              "text": "@notice Burn funds that are held on this contract\n @param _amount The amount of the token to burn\n @return The amount burned"
            },
            "functionSelector": "1995333b",
            "id": 15509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15474,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "3928:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3928:20:57"
              }
            ],
            "name": "burnFunds",
            "nameLocation": "3894:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15472,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3912:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15509,
                  "src": "3904:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3903:17:57"
            },
            "returnParameters": {
              "id": 15478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15509,
                  "src": "3958:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:9:57"
            },
            "scope": 15510,
            "src": "3885:485:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15511,
        "src": "576:3796:57",
        "usedErrors": []
      }
    ],
    "src": "33:4340:57"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/TokenLockController.sol",
    "exportedSymbols": {
      "Address": [
        3622
      ],
      "Context": [
        3644
      ],
      "IERC20": [
        3078
      ],
      "Ownable": [
        2280
      ],
      "Pausable": [
        2372
      ],
      "ReentrancyGuard": [
        2412
      ],
      "SafeERC20": [
        3327
      ],
      "SafeMath": [
        4044
      ],
      "TokenLockController": [
        15510
      ]
    },
    "id": 15511,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15292,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:57"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15293,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 3328,
        "src": "58:65:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 15294,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 3079,
        "src": "125:56:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 15295,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2281,
        "src": "183:52:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 15296,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2373,
        "src": "237:55:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 15297,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 2413,
        "src": "294:62:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 15298,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15511,
        "sourceUnit": 4045,
        "src": "358:57:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15300,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2280,
              "src": "608:7:57"
            },
            "id": 15301,
            "nodeType": "InheritanceSpecifier",
            "src": "608:7:57"
          },
          {
            "baseName": {
              "id": 15302,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2372,
              "src": "617:8:57"
            },
            "id": 15303,
            "nodeType": "InheritanceSpecifier",
            "src": "617:8:57"
          },
          {
            "baseName": {
              "id": 15304,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2412,
              "src": "627:15:57"
            },
            "id": 15305,
            "nodeType": "InheritanceSpecifier",
            "src": "627:15:57"
          }
        ],
        "canonicalName": "TokenLockController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15299,
          "nodeType": "StructuredDocumentation",
          "src": "483:93:57",
          "text": "@title TokenLockController. Contract for securely locking, unlocking, and burning tokens"
        },
        "fullyImplemented": true,
        "id": 15510,
        "linearizedBaseContracts": [
          15510,
          2412,
          2372,
          2280,
          3644
        ],
        "name": "TokenLockController",
        "nameLocation": "585:19:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15309,
            "libraryName": {
              "id": 15306,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3327,
              "src": "676:9:57"
            },
            "nodeType": "UsingForDirective",
            "src": "670:27:57",
            "typeName": {
              "id": 15308,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15307,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3078,
                "src": "690:6:57"
              },
              "referencedDeclaration": 3078,
              "src": "690:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3078",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 15312,
            "libraryName": {
              "id": 15310,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "706:8:57"
            },
            "nodeType": "UsingForDirective",
            "src": "700:27:57",
            "typeName": {
              "id": 15311,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 15321,
              "nodeType": "Block",
              "src": "783:121:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15318,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15314,
                        "src": "892:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15317,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2259,
                      "src": "874:17:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:25:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15320,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:57"
                }
              ]
            },
            "id": 15322,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15314,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "775:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15322,
                  "src": "767:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:16:57"
            },
            "returnParameters": {
              "id": 15316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:57"
            },
            "scope": 15510,
            "src": "755:149:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15336,
              "nodeType": "Block",
              "src": "1014:77:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 15331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 15326,
                            "name": "allowedOperators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15343,
                            "src": "1028:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 15329,
                          "indexExpression": {
                            "expression": {
                              "id": 15327,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1045:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 15328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1045:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1028:28:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1059:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1028:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642063616c6c6572",
                        "id": 15332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1062:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        },
                        "value": "Invalid caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3cc0c4db7b38441b1cb57a51be162bb1a7a6913b425065f8c4c12b279a823379",
                          "typeString": "literal_string \"Invalid caller\""
                        }
                      ],
                      "id": 15325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1020:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:59:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15334,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:59:57"
                },
                {
                  "id": 15335,
                  "nodeType": "PlaceholderStatement",
                  "src": "1085:1:57"
                }
              ]
            },
            "documentation": {
              "id": 15323,
              "nodeType": "StructuredDocumentation",
              "src": "930:49:57",
              "text": "@notice Requires caller to be in allowed list"
            },
            "id": 15337,
            "name": "onlyAllowedOperators",
            "nameLocation": "991:20:57",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:57"
            },
            "src": "982:109:57",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "dd955883",
            "id": 15339,
            "mutability": "mutable",
            "name": "lockableToken",
            "nameLocation": "1128:13:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1113:28:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15338,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1113:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a6674f88",
            "id": 15343,
            "mutability": "mutable",
            "name": "allowedOperators",
            "nameLocation": "1226:16:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1193:49:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 15342,
              "keyType": {
                "id": 15340,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1201:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1193:25:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 15341,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1212:5:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b86247d7",
            "id": 15347,
            "mutability": "mutable",
            "name": "lockedFunds",
            "nameLocation": "1372:11:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1337:46:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15346,
              "keyType": {
                "id": 15344,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1345:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1337:27:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15345,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1356:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70d5ae05",
            "id": 15349,
            "mutability": "mutable",
            "name": "burnAddress",
            "nameLocation": "1482:11:57",
            "nodeType": "VariableDeclaration",
            "scope": 15510,
            "src": "1467:26:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15348,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1467:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15363,
              "nodeType": "Block",
              "src": "1727:45:57",
              "statements": [
                {
                  "expression": {
                    "id": 15361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15357,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15343,
                        "src": "1733:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 15359,
                      "indexExpression": {
                        "id": 15358,
                        "name": "_newOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15352,
                        "src": "1750:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1733:30:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 15360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1766:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1733:34:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15362,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:34:57"
                }
              ]
            },
            "documentation": {
              "id": 15350,
              "nodeType": "StructuredDocumentation",
              "src": "1525:132:57",
              "text": "@notice Add an allowed operator to the allowedOperators mapping\n @param _newOperator The address of the new operator to add"
            },
            "functionSelector": "190050ae",
            "id": 15364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15354,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1717:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1717:9:57"
              }
            ],
            "name": "addAllowedOperator",
            "nameLocation": "1669:18:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15352,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "1696:12:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15364,
                  "src": "1688:20:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:22:57"
            },
            "returnParameters": {
              "id": 15356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:57"
            },
            "scope": 15510,
            "src": "1660:112:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15378,
              "nodeType": "Block",
              "src": "1983:42:57",
              "statements": [
                {
                  "expression": {
                    "id": 15376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15372,
                        "name": "allowedOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15343,
                        "src": "1989:16:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 15374,
                      "indexExpression": {
                        "id": 15373,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15367,
                        "src": "2006:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1989:27:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 15375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2019:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1989:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15377,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:31:57"
                }
              ]
            },
            "documentation": {
              "id": 15365,
              "nodeType": "StructuredDocumentation",
              "src": "1776:137:57",
              "text": "@notice Remove an allowed operator from the allowedOperators mapping\n @param _operator The address of the new operator to remove"
            },
            "functionSelector": "8da7a378",
            "id": 15379,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15369,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2222,
                  "src": "1973:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1973:9:57"
              }
            ],
            "name": "removeAllowedOperator",
            "nameLocation": "1925:21:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15367,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1955:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15379,
                  "src": "1947:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:19:57"
            },
            "returnParameters": {
              "id": 15371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1983:0:57"
            },
            "scope": 15510,
            "src": "1916:109:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15407,
              "nodeType": "Block",
              "src": "2414:188:57",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15393,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "2499:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15396,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2517:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 15395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2509:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2509:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2509:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15398,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15384,
                        "src": "2524:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15390,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "2467:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15389,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "2460:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2460:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3160,
                      "src": "2460:38:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 15399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2460:72:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15400,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:72:57"
                },
                {
                  "expression": {
                    "id": 15405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15401,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15347,
                        "src": "2566:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15403,
                      "indexExpression": {
                        "id": 15402,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "2578:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2566:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15404,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15384,
                      "src": "2590:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2566:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15406,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:31:57"
                }
              ]
            },
            "documentation": {
              "id": 15380,
              "nodeType": "StructuredDocumentation",
              "src": "2062:267:57",
              "text": "@notice Lock funds to this contract's ledger\n @dev Assumes that approval has already been given to this contract to transfer the ERC20 token\n @param _account The address whose funds should be locked. \n @param _amount The amount of the token to lock"
            },
            "functionSelector": "12e382b4",
            "id": 15408,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15386,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "2393:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "2393:20:57"
              }
            ],
            "name": "lockFunds",
            "nameLocation": "2341:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15382,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2359:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15408,
                  "src": "2351:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15384,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2377:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15408,
                  "src": "2369:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:35:57"
            },
            "returnParameters": {
              "id": 15388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:57"
            },
            "scope": 15510,
            "src": "2332:270:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15468,
              "nodeType": "Block",
              "src": "3119:621:57",
              "statements": [
                {
                  "assignments": [
                    15423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15423,
                      "mutability": "mutable",
                      "name": "_currentlyLocked",
                      "nameLocation": "3173:16:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15468,
                      "src": "3165:24:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15422,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3165:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15427,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15424,
                      "name": "lockedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15347,
                      "src": "3192:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 15426,
                    "indexExpression": {
                      "id": 15425,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15411,
                      "src": "3204:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3192:21:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3165:48:57"
                },
                {
                  "assignments": [
                    15429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15429,
                      "mutability": "mutable",
                      "name": "_amountToUnlock",
                      "nameLocation": "3227:15:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15468,
                      "src": "3219:23:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15431,
                  "initialValue": {
                    "id": 15430,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15413,
                    "src": "3245:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3219:33:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15432,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15413,
                      "src": "3339:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 15433,
                      "name": "_currentlyLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15423,
                      "src": "3349:16:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3339:26:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15440,
                  "nodeType": "IfStatement",
                  "src": "3335:81:57",
                  "trueBody": {
                    "id": 15439,
                    "nodeType": "Block",
                    "src": "3367:49:57",
                    "statements": [
                      {
                        "expression": {
                          "id": 15437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15435,
                            "name": "_amountToUnlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15429,
                            "src": "3375:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 15436,
                            "name": "_currentlyLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15423,
                            "src": "3393:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3375:34:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15438,
                        "nodeType": "ExpressionStatement",
                        "src": "3375:34:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15441,
                        "name": "lockedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15347,
                        "src": "3453:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 15443,
                      "indexExpression": {
                        "id": 15442,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15411,
                        "src": "3465:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3453:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15446,
                          "name": "_amountToUnlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15429,
                          "src": "3498:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 15444,
                          "name": "_currentlyLocked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15423,
                          "src": "3477:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3923,
                        "src": "3477:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3477:37:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3453:61:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15449,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:61:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 15455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15450,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15415,
                      "src": "3578:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 15453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3600:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 15452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3592:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 15451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3592:7:57",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3592:10:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3578:24:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15465,
                  "nodeType": "IfStatement",
                  "src": "3574:104:57",
                  "trueBody": {
                    "id": 15464,
                    "nodeType": "Block",
                    "src": "3604:74:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15460,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15415,
                              "src": "3643:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15461,
                              "name": "_amountToUnlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15429,
                              "src": "3655:15:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 15457,
                                  "name": "lockableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15339,
                                  "src": "3619:13:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15456,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3078,
                                "src": "3612:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3612:21:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3078",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 15459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3027,
                            "src": "3612:30:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 15462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3612:59:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15463,
                        "nodeType": "ExpressionStatement",
                        "src": "3612:59:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15466,
                    "name": "_amountToUnlock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15429,
                    "src": "3720:15:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15421,
                  "id": 15467,
                  "nodeType": "Return",
                  "src": "3713:22:57"
                }
              ]
            },
            "documentation": {
              "id": 15409,
              "nodeType": "StructuredDocumentation",
              "src": "2606:388:57",
              "text": "@notice Unlock funds from this contract's ledger for a given user account and transfer to user\n @param _account The address whose funds should be unlocked. \n @param _amount The amount of the token to lock\n @param _recipient If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)\n @return The amount unlocked"
            },
            "functionSelector": "45fab369",
            "id": 15469,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15417,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "3080:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3080:20:57"
              }
            ],
            "name": "unlockFunds",
            "nameLocation": "3006:11:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15411,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3026:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3018:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3018:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15413,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3044:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3036:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15415,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "3061:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3053:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3017:55:57"
            },
            "returnParameters": {
              "id": 15421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15469,
                  "src": "3110:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:9:57"
            },
            "scope": 15510,
            "src": "2997:743:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15508,
              "nodeType": "Block",
              "src": "3967:403:57",
              "statements": [
                {
                  "assignments": [
                    15480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15480,
                      "mutability": "mutable",
                      "name": "_currentBal",
                      "nameLocation": "4025:11:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 15508,
                      "src": "4017:19:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4017:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15487,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4079:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLockController_$15510",
                              "typeString": "contract TokenLockController"
                            }
                          ],
                          "id": 15486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4071:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15485,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4071:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15482,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "4046:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15481,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "4039:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4039:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3017,
                      "src": "4039:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 15489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4039:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4017:68:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15492,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15472,
                          "src": "4167:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 15493,
                          "name": "_currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15480,
                          "src": "4178:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4167:22:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74206275726e206d6f7265207468616e20617661696c",
                        "id": 15495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4191:29:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd",
                          "typeString": "literal_string \"Cannot burn more than avail\""
                        },
                        "value": "Cannot burn more than avail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dbd09198dbef483a41a18e660653bd58e3c5420dac55f17ec7624b643784cdd",
                          "typeString": "literal_string \"Cannot burn more than avail\""
                        }
                      ],
                      "id": 15491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4159:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:62:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15497,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15502,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15349,
                        "src": "4296:11:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15503,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15472,
                        "src": "4309:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15499,
                            "name": "lockableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15339,
                            "src": "4268:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15498,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3078,
                          "src": "4261:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3078_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 15500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4261:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3078",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3134,
                      "src": "4261:34:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3078_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3078_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 15504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4261:56:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15505,
                  "nodeType": "ExpressionStatement",
                  "src": "4261:56:57"
                },
                {
                  "expression": {
                    "id": 15506,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15472,
                    "src": "4358:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15478,
                  "id": 15507,
                  "nodeType": "Return",
                  "src": "4351:14:57"
                }
              ]
            },
            "documentation": {
              "id": 15470,
              "nodeType": "StructuredDocumentation",
              "src": "3744:138:57",
              "text": "@notice Burn funds that are held on this contract\n @param _amount The amount of the token to burn\n @return The amount burned"
            },
            "functionSelector": "1995333b",
            "id": 15509,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15474,
                  "name": "onlyAllowedOperators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15337,
                  "src": "3928:20:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "3928:20:57"
              }
            ],
            "name": "burnFunds",
            "nameLocation": "3894:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15472,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3912:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 15509,
                  "src": "3904:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3903:17:57"
            },
            "returnParameters": {
              "id": 15478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15509,
                  "src": "3958:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:9:57"
            },
            "scope": 15510,
            "src": "3885:485:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15511,
        "src": "576:3796:57",
        "usedErrors": []
      }
    ],
    "src": "33:4340:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-01T15:24:52.988Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedOperator(address)": {
        "params": {
          "_newOperator": "The address of the new operator to add"
        }
      },
      "burnFunds(uint256)": {
        "params": {
          "_amount": "The amount of the token to burn"
        },
        "returns": {
          "_0": "The amount burned"
        }
      },
      "lockFunds(address,uint256)": {
        "details": "Assumes that approval has already been given to this contract to transfer the ERC20 token",
        "params": {
          "_account": "The address whose funds should be locked. ",
          "_amount": "The amount of the token to lock"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeAllowedOperator(address)": {
        "params": {
          "_operator": "The address of the new operator to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockFunds(address,uint256,address)": {
        "params": {
          "_account": "The address whose funds should be unlocked. ",
          "_amount": "The amount of the token to lock",
          "_recipient": "If set, will transfer unlocked funds to the address set. If not, will not do any transfers (useful for burning)"
        },
        "returns": {
          "_0": "The amount unlocked"
        }
      }
    },
    "title": "TokenLockController. Contract for securely locking, unlocking, and burning tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedOperator(address)": {
        "notice": "Add an allowed operator to the allowedOperators mapping"
      },
      "burnFunds(uint256)": {
        "notice": "Burn funds that are held on this contract"
      },
      "lockFunds(address,uint256)": {
        "notice": "Lock funds to this contract's ledger"
      },
      "removeAllowedOperator(address)": {
        "notice": "Remove an allowed operator from the allowedOperators mapping"
      },
      "unlockFunds(address,uint256,address)": {
        "notice": "Unlock funds from this contract's ledger for a given user account and transfer to user"
      }
    },
    "version": 1
  }
}