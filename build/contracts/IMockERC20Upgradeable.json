{
  "contractName": "IMockERC20Upgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/mocks/MockToken.sol\":\"IMockERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7160017c8d2373a33a6d7e45368d60d7d582ea1695a098de8356c94dab2ec3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9057befea40d1fc42ccb4a6d3d8428e8e1a21c3f08bf7032a280049b0167b145\",\"dweb:/ipfs/QmQx7oAxLJs17wcG2pZN4PW9xKgo7AW92SttiJ7dWCGmTt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"project:/contracts/tokens/mocks/MockToken.sol\":{\"keccak256\":\"0x01ea776c2aa891accad0055d5e8e9a00a53033f3e6e14124733986c06fb90b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938e37380343196e423f454cea5f3674c2cc8c99fc630bb18bd7307ec62ba08e\",\"dweb:/ipfs/QmU7E9Gofu1dhdFqmW3zpWEsiY1SZombtY62ivzWjYcXjb\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\n\ninterface IMockERC20Upgradeable is IERC20Upgradeable {\n    function mint(address _account, uint256 _amount) external;\n}\n\ncontract MockERC20Upgradeable is IMockERC20Upgradeable, ERC20Upgradeable {\n    function mint(address _account, uint256 _amount) public {\n        _mint(_account, _amount);\n    }\n}\n\ncontract MockUSDC is MockERC20Upgradeable {}",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/tokens/mocks/MockToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1596
      ],
      "ContextUpgradeable": [
        1638
      ],
      "ERC20Upgradeable": [
        1026
      ],
      "IERC20MetadataUpgradeable": [
        1129
      ],
      "IERC20Upgradeable": [
        1104
      ],
      "IMockERC20Upgradeable": [
        16243
      ],
      "Initializable": [
        243
      ],
      "MockERC20Upgradeable": [
        16261
      ],
      "MockUSDC": [
        16264
      ]
    },
    "id": 16265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16231,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 16232,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16265,
        "sourceUnit": 1027,
        "src": "58:78:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 16233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16265,
        "sourceUnit": 1105,
        "src": "138:79:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16234,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1104,
              "src": "254:17:75"
            },
            "id": 16235,
            "nodeType": "InheritanceSpecifier",
            "src": "254:17:75"
          }
        ],
        "canonicalName": "IMockERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 16243,
        "linearizedBaseContracts": [
          16243,
          1104
        ],
        "name": "IMockERC20Upgradeable",
        "nameLocation": "229:21:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 16242,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "287:4:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16237,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "300:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16242,
                  "src": "292:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16239,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "318:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16242,
                  "src": "310:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:35:75"
            },
            "returnParameters": {
              "id": 16241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:75"
            },
            "scope": 16243,
            "src": "278:58:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16265,
        "src": "219:119:75",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16244,
              "name": "IMockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16243,
              "src": "373:21:75"
            },
            "id": 16245,
            "nodeType": "InheritanceSpecifier",
            "src": "373:21:75"
          },
          {
            "baseName": {
              "id": 16246,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1026,
              "src": "396:16:75"
            },
            "id": 16247,
            "nodeType": "InheritanceSpecifier",
            "src": "396:16:75"
          }
        ],
        "canonicalName": "MockERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16261,
        "linearizedBaseContracts": [
          16261,
          1026,
          1129,
          16243,
          1104,
          1638,
          243
        ],
        "name": "MockERC20Upgradeable",
        "nameLocation": "349:20:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              16242
            ],
            "body": {
              "id": 16259,
              "nodeType": "Block",
              "src": "475:41:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16255,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16249,
                        "src": "491:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16256,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16251,
                        "src": "501:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16254,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "485:5:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:24:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16258,
                  "nodeType": "ExpressionStatement",
                  "src": "485:24:75"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 16260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "428:4:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16249,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "441:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16260,
                  "src": "433:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16251,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "459:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16260,
                  "src": "451:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:35:75"
            },
            "returnParameters": {
              "id": 16253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:75"
            },
            "scope": 16261,
            "src": "419:97:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 16265,
        "src": "340:178:75",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16262,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16261,
              "src": "541:20:75"
            },
            "id": 16263,
            "nodeType": "InheritanceSpecifier",
            "src": "541:20:75"
          }
        ],
        "canonicalName": "MockUSDC",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16264,
        "linearizedBaseContracts": [
          16264,
          16261,
          1026,
          1129,
          16243,
          1104,
          1638,
          243
        ],
        "name": "MockUSDC",
        "nameLocation": "529:8:75",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 16265,
        "src": "520:44:75",
        "usedErrors": []
      }
    ],
    "src": "33:531:75"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/mocks/MockToken.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1596
      ],
      "ContextUpgradeable": [
        1638
      ],
      "ERC20Upgradeable": [
        1026
      ],
      "IERC20MetadataUpgradeable": [
        1129
      ],
      "IERC20Upgradeable": [
        1104
      ],
      "IMockERC20Upgradeable": [
        16243
      ],
      "Initializable": [
        243
      ],
      "MockERC20Upgradeable": [
        16261
      ],
      "MockUSDC": [
        16264
      ]
    },
    "id": 16265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16231,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 16232,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16265,
        "sourceUnit": 1027,
        "src": "58:78:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 16233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16265,
        "sourceUnit": 1105,
        "src": "138:79:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16234,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1104,
              "src": "254:17:75"
            },
            "id": 16235,
            "nodeType": "InheritanceSpecifier",
            "src": "254:17:75"
          }
        ],
        "canonicalName": "IMockERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 16243,
        "linearizedBaseContracts": [
          16243,
          1104
        ],
        "name": "IMockERC20Upgradeable",
        "nameLocation": "229:21:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "40c10f19",
            "id": 16242,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "287:4:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16237,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "300:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16242,
                  "src": "292:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16239,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "318:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16242,
                  "src": "310:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "291:35:75"
            },
            "returnParameters": {
              "id": 16241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:75"
            },
            "scope": 16243,
            "src": "278:58:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 16265,
        "src": "219:119:75",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16244,
              "name": "IMockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16243,
              "src": "373:21:75"
            },
            "id": 16245,
            "nodeType": "InheritanceSpecifier",
            "src": "373:21:75"
          },
          {
            "baseName": {
              "id": 16246,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1026,
              "src": "396:16:75"
            },
            "id": 16247,
            "nodeType": "InheritanceSpecifier",
            "src": "396:16:75"
          }
        ],
        "canonicalName": "MockERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16261,
        "linearizedBaseContracts": [
          16261,
          1026,
          1129,
          16243,
          1104,
          1638,
          243
        ],
        "name": "MockERC20Upgradeable",
        "nameLocation": "349:20:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              16242
            ],
            "body": {
              "id": 16259,
              "nodeType": "Block",
              "src": "475:41:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16255,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16249,
                        "src": "491:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16256,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16251,
                        "src": "501:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16254,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "485:5:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:24:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16258,
                  "nodeType": "ExpressionStatement",
                  "src": "485:24:75"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 16260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "428:4:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16249,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "441:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16260,
                  "src": "433:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16251,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "459:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 16260,
                  "src": "451:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:35:75"
            },
            "returnParameters": {
              "id": 16253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:75"
            },
            "scope": 16261,
            "src": "419:97:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 16265,
        "src": "340:178:75",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16262,
              "name": "MockERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16261,
              "src": "541:20:75"
            },
            "id": 16263,
            "nodeType": "InheritanceSpecifier",
            "src": "541:20:75"
          }
        ],
        "canonicalName": "MockUSDC",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 16264,
        "linearizedBaseContracts": [
          16264,
          16261,
          1026,
          1129,
          16243,
          1104,
          1638,
          243
        ],
        "name": "MockUSDC",
        "nameLocation": "529:8:75",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 16265,
        "src": "520:44:75",
        "usedErrors": []
      }
    ],
    "src": "33:531:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-11-03T01:56:36.866Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}