{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromVid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toVid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerActions",
          "type": "address"
        }
      ],
      "name": "setControllerActions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        }
      ],
      "name": "updateVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromVid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toVid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromVid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toVid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerActions\",\"type\":\"address\"}],\"name\":\"setControllerActions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromVid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toVid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"}],\"name\":\"updateVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultMapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_vid\":\"index of vault\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vid\":\"index of vault to deposit into\",\"_weeksCommitted\":\"how many weeks to commit to the vault (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_vid\":\"index of vault to deposit into\",\"_weeksCommitted\":\"how many weeks to commit to the vault (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_user\":\"wallet address of user\",\"_vid\":\"Index of vault in vaultInfo array\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromTrancheId\":\"index of tranche FROM\",\"_fromVid\":\"index of vault FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toVid\":\"index of vault TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateVault(uint256)\":{\"params\":{\"_vid\":\"index of vault in vaultInfo array\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"vaultLength()\":{\"returns\":{\"vaultCount\":\"number of vaults\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_vid\":\"index of vault\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault to deposit into\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_trancheId\":\"index of tranche\",\"_vid\":\"index of vault to deposit into\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setControllerActions(address)\":{\"notice\":\"Setter: Set controller actions contract address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given vault\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updateVault(uint256)\":{\"notice\":\"Update reward variables of the given vault to be up-to-date.\"},\"vaultLength()\":{\"notice\":\"Number of vaults in the Zorro protocol\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a vault\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a vault and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0x37c1fb189df08c222afd8bc1ab077f0c055435439886492a3af89d3a213b1294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9afdaa2918a2ab23a56dc0bde217d6ca596e79b0465e290a48c312a09bbb793\",\"dweb:/ipfs/Qmf3XZvucoVisJQKAnuV1UTUgXdJA4FMXPr56TiUhmyM8N\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0x6215e99032df0687d2ebf5746be1533e36a51753bc16650eaa15a8966ef6d1bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4621e817506a2bb3d1f3af0adeea33a3fbcaa2d0c04033db97f36c8605eb6179\",\"dweb:/ipfs/QmRdNYQX8KtpCgacDqSq1e1uNsj6LDCYs3EKdu8L8BwWJJ\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x6657020ec1e3526ef6838d4f65a27bb76d72d39e66dde1a3b51bb36c5494d6dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ff6caa48d110a395e6f704837b54ea2085774c4492ed147dc6a7ec1f7dd9b3\",\"dweb:/ipfs/Qmbup1JMn8dcCarheQao9JncZr3FhsKbscc2Xmw82mxeEg\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter01.sol\":{\"keccak256\":\"0xedff0a1c8dd8eac392692f031406c459891a88a09d996629e3a56a9b8e003915\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7bb31e6c73608c55b6a40f6a4ccb4d592acb6f402fad3b12e78f6314e6da491e\",\"dweb:/ipfs/QmVTMhwncB1MwGJabKKtfcRzyHtnkueAx8XrB4yLrv6Xci\"]},\"project:/contracts/interfaces/Uniswap/IAMMRouter02.sol\":{\"keccak256\":\"0x6ff071388c7b300cb602534f249a4a1e63e97ae3870945ebc477d8cf03d36e24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32dbfb0f88caff1dc0859b430d30b9bc8c301ce073d26d3c1d92eea481007d12\",\"dweb:/ipfs/QmP8giHQSDYVt9qxyMjnVawFCi8gTCrgCKhZrywiwCiZ9x\"]},\"project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\":{\"keccak256\":\"0x95bda45ac60370f6cf11608ab4c4c5c2801093b7af93593e19d7d5fc2979f042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72c3dec17debfdbcea5806d63ca290dcf99b7b53bff2e1c930fdc6e572d43f04\",\"dweb:/ipfs/QmVffK55p7VuCLB2j7QzEGkmbYU9Q2o1t8ikAGm7hR2Gmc\"]},\"project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol\":{\"keccak256\":\"0xa0516cd798548ad39bfbb96a6cbe792f9fd00a125b13d3851f21cc485f716762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://775a52cfad896349e44dde94cd9646dc8198d96092d63890dcd3bae211045e6d\",\"dweb:/ipfs/QmR2s3zkjQADN4ir3NN22dUuaA9pc9NxJkS1eh1waQmPCE\"]},\"project:/contracts/interfaces/Zorro/IZorro.sol\":{\"keccak256\":\"0x284b2d31511ea30be2fad6dd9d82ee9fe9b2f83781771085f1efbbe61f35f90e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adf06657f42401bb5e1c2fbb01df2c1eb214f4c0701f6aebf2d2dbb8388c31bb\",\"dweb:/ipfs/QmQ7Y8tbTD7phUfDmr97fv4D8NUkf8QXAyVwuMVoSzAVio\"]},\"project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol\":{\"keccak256\":\"0x816005771e6f06fc6a18a41af8671d7ebe99681d8cb2c9babbf26bb32200c4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd5cee78aa86e75195e8e268b4025720e04472d5339b6482ee517a9f6328caf\",\"dweb:/ipfs/QmTMDQxGE2Sh4nnpPjwweupjA88i6JTxsctxNjTRj7pU4Z\"]},\"project:/contracts/interfaces/Zorro/Vaults/IVault.sol\":{\"keccak256\":\"0xc5bd1d4836597fa313219d6acd5ef766514359d844f629afbdcde767f7cd12e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c527b7d9277b52bed051848acc6c5458ada7bd2788b48e5541e53495f7b5feb\",\"dweb:/ipfs/QmZ9p3bMAA4bo6Zb9FQhNfZXq3MJXhdcF5pQa19pb6E4At\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]},\"project:/contracts/libraries/SafeSwap.sol\":{\"keccak256\":\"0x12474ac6678158bda55a1ce0fb982a920253ab3b72084bb8b3219f1bbdf66a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a157fa3130e187f4354a5398eb8271ba2733642b3e7e49bfd51d24de874d6c25\",\"dweb:/ipfs/QmXT3Z4rEHhJLzVZpccJeseefLQXkxXRcvc76KhvSDby68\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061397c806100206000396000f3fe608060405234801561001057600080fd5b50600436106103915760003560e060020a90048063715018a6116101e2578063b4b4e9eb11610113578063cb9c2f68116100b1578063f2fde38b11610080578063f2fde38b146107fa578063f35e4a6e1461080d578063f63cce3714610820578063fc39a29e1461083357600080fd5b8063cb9c2f68146107c2578063cff38dd4146107cb578063ed43633f146107de578063ef126967146107f157600080fd5b8063c13260a5116100ed578063c13260a514610780578063c293614214610793578063c4e94f221461079c578063c6d758cb146107af57600080fd5b8063b4b4e9eb14610724578063b61bb80a14610764578063b95cc6811461077757600080fd5b8063941d3fd0116101805780639cebd3711161015a5780639cebd371146106ed578063a13346c6146106f6578063a1be201d146106fe578063a4d2b0831461071157600080fd5b8063941d3fd01461069c578063958e2d31146106d15780639a8a0592146106e457600080fd5b8063823c43d0116101bc578063823c43d0146106165780638c157db2146106295780638da5cb5b1461063c578063929060d81461064d57600080fd5b8063715018a6146105e8578063745af0a8146105f05780637e37c7691461060357600080fd5b80633bbc1ffc116102c75780635296683211610265578063668ababb11610234578063668ababb1461059c5780636b8eb2e5146105af5780636c78d49c146105c257806370d5ae05146105d557600080fd5b8063529668321461056457806353f73f871461056d5780635527a6f9146105805780635c63fa871461058957600080fd5b806348cd4cb1116102a157806348cd4cb11461052c5780634b0e7216146105355780634cfea68a146105485780635051d3711461055157600080fd5b80633bbc1ffc146104de57806340abd8fc146104f15780634780f9f51461051957600080fd5b8063332e5a7b1161033457806338495d661161030e57806338495d66146104a657806339e80a88146104b95780633b710688146104cc5780633b9ce565146104d557600080fd5b8063332e5a7b1461046057806333cfcd3b1461047357806337cb2ef21461048657600080fd5b806317caf6f11161037057806317caf6f1146103c65780631b8fb692146103e25780632b68772c146103f55780632e31283d146103fd57600080fd5b8062aeef8a1461039657806309b79b3c146103ab5780630aa0988e146103b3575b600080fd5b6103a96103a43660046130f3565b610846565b005b6103a96108e5565b6103a96103c1366004613134565b610949565b6103cf60a45481565b6040519081526020015b60405180910390f35b6103a96103f036600461316d565b6109a4565b60aa546103cf565b61044861040b366004613238565b60ad6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103d9565b60af5461044890600160a060020a031681565b6103cf610481366004613296565b610a77565b6103cf6104943660046132cf565b60ab6020526000908152604090205481565b6103cf6104b43660046132ec565b610b14565b60b05461044890600160a060020a031681565b6103cf60a35481565b6103cf60a15481565b6103a96104ec3660046132ec565b610d07565b6105046104ff366004613305565b610d66565b604080519283526020830191909152016103d9565b6103a9610527366004613385565b610e01565b6103cf609c5481565b6103a96105433660046132cf565b610e93565b6103cf609d5481565b6103a961055f3660046132cf565b610ee2565b6103cf60a55481565b6103cf61057b36600461316d565b610f31565b6103cf60a05481565b6103a96105973660046133b7565b610f5b565b60995461044890600160a060020a031681565b6103a96105bd3660046133e5565b610fb2565b6103a96105d0366004613420565b611082565b609b5461044890600160a060020a031681565b6103a96110ef565b6103cf6105fe36600461343d565b611128565b6103a9610611366004613385565b6111a2565b60ae5461044890600160a060020a031681565b60975461044890600160a060020a031681565b603354600160a060020a0316610448565b61066061065b3660046132ec565b611318565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103d9565b60af546106c19074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103d9565b6103a96106df3660046132ec565b61136b565b6103cf60a75481565b6103cf60a25481565b6103a96114b1565b6103a961070c3660046132cf565b61152f565b609a5461044890600160a060020a031681565b61073761073236600461347c565b61157e565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103d9565b60985461044890600160a060020a031681565b6103cf60a65481565b6103a961078e3660046134b4565b6115df565b6103cf609e5481565b6103a96107aa3660046132cf565b611686565b6103a96107bd3660046134d6565b6116d5565b6103cf609f5481565b6103a96107d9366004613502565b61179d565b6103a96107ec366004613580565b611832565b6103cf60a85481565b6103a96108083660046132cf565b6118ab565b6103a961081b3660046132ec565b611963565b6103a961082e366004613134565b6119e8565b60a95461044890600160a060020a031681565b600260655414156108755760405160e560020a62461bcd02815260040161086c9061360d565b60405180910390fd5b6002606581905550600060aa848154811061089257610892613644565b6000918252602090912060069091020180549091506108bc90600160a060020a0316333086611a70565b6108d9843360405180602001604052806000815250868642611b27565b50506001606555505050565b60ae54600160a060020a031633600160a060020a03161461091b5760405160e560020a62461bcd02815260040161086c9061365d565b60a85460a75414156109425760405160e560020a62461bcd02815260040161086c90613694565b600060a555565b603354600160a060020a031633146109765760405160e560020a62461bcd02815260040161086c906136cb565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60b054600160a060020a031633600160a060020a0316146109da5760405160e560020a62461bcd02815260040161086c90613700565b60a85460a75414156109f4576109f08282611e5b565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a5b57600080fd5b505af1158015610a6f573d6000803e3d6000fd5b505050505050565b600060026065541415610a9f5760405160e560020a62461bcd02815260040161086c9061360d565b60026065819055506000610ac785336040518060200160405280600081525087876000611e79565b9050610b0633826000015160aa8881548110610ae557610ae5613644565b6000918252602090912060069091020154600160a060020a031691906125a3565b516001606555949350505050565b60008060aa8381548110610b2a57610b2a613644565b9060005260206000209060060201905080600201544311610b4e5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190613737565b905080610bee575043600290910155506000919050565b6000826002015443610c009190613769565b9050600060a4548460010154609e5484610c1a9190613780565b610c249190613780565b610c2e919061379f565b60a954909150600160a060020a0316301415610c5757610c4e8130611e5b565b60009450610ce0565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610cbc57600080fd5b505af1158015610cd0573d6000803e3d6000fd5b50505050809450610ce0856125f1565b808460030154610cf091906137c4565b600385015550504360029092019190915550919050565b603354600160a060020a03163314610d345760405160e560020a62461bcd02815260040161086c906136cb565b60a954600160a060020a03163014610d615760405160e560020a62461bcd02815260040161086c906137dc565b609f55565b60b0546000908190600160a060020a031633600160a060020a031614610da15760405160e560020a62461bcd02815260040161086c90613700565b610db1888888888888600161262c565b90925090508115610dd357609854610dd390600160a060020a031633846125a3565b8015610df657609b54609754610df691600160a060020a039182169116836125a3565b965096945050505050565b60026065541415610e275760405160e560020a62461bcd02815260040161086c9061360d565b6002606581905550600060aa8581548110610e4457610e44613644565b6000918252602090912060056006909202010154609854600160a060020a039182169250610e759116338387611a70565b6108d985336040518060200160405280600081525087874288612754565b603354600160a060020a03163314610ec05760405160e560020a62461bcd02815260040161086c906136cb565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610f0f5760405160e560020a62461bcd02815260040161086c906136cb565b60ae8054600160a060020a031916600160a060020a0392909216919091179055565b600082815260ac60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610f885760405160e560020a62461bcd02815260040161086c906136cb565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ae54600160a060020a031633600160a060020a031614610fe85760405160e560020a62461bcd02815260040161086c9061365d565b6000610ff683612710613780565b848660a3546110059190613780565b61100f9190613780565b611019919061379f565b905060a15481111561102e575060a15461103d565b60a05481101561103d575060a0545b609d5461104c87612710613780565b6110569190613780565b60a2546110638385613780565b61106d9190613780565b611077919061379f565b609e55505050505050565b603354600160a060020a031633146110af5760405160e560020a62461bcd02815260040161086c906136cb565b60af8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a0316331461111c5760405160e560020a62461bcd02815260040161086c906136cb565b6111266000612840565b565b6000600260655414156111505760405160e560020a62461bcd02815260040161086c9061360d565b60026065819055506000611179336040518060200160405280600081525088888888600061262c565b5060985490915061119490600160a060020a031633836125a3565b600160655595945050505050565b600260655414156111c85760405160e560020a62461bcd02815260040161086c9061360d565b6002606555600084815260ac6020908152604080832033845290915281208054859081106111f8576111f8613644565b600091825260208083206003600690930201919091015487835260ac825260408084203385529092529082208054919350908690811061123a5761123a613644565b9060005260206000209060060201600401549050600061127033604051806020016040528060008152508989600089600061262c565b5090506112b360aa868154811061128957611289613644565b6000918252602090912060056006909202010154609854600160a060020a039081169116836125a3565b6112d18533604051806020016040528060008152508487878a612754565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b60aa818154811061132857600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b600260655414156113915760405160e560020a62461bcd02815260040161086c9061360d565b600260655560006113a28233610f31565b905060005b818110156113de576113cd83336040518060200160405280600081525084600080611e79565b506113d781613813565b90506113a7565b50600060aa83815481106113f4576113f4613644565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114879190613737565b905080156114a7576114a7338260aa8681548110610ae557610ae5613644565b5050600160655550565b60ae54600160a060020a031633600160a060020a0316146114e75760405160e560020a62461bcd02815260040161086c9061365d565b60a85460a754141561150e5760405160e560020a62461bcd02815260040161086c90613694565b609b5460a65460975461094292600160a060020a03918216929116906125a3565b603354600160a060020a0316331461155c5760405160e560020a62461bcd02815260040161086c906136cb565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b60ac60205282600052604060002060205281600052604060002081815481106115a657600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ae54600160a060020a031633600160a060020a0316146116155760405160e560020a62461bcd02815260040161086c9061365d565b60a954600160a060020a031630146116425760405160e560020a62461bcd02815260040161086c906137dc565b609b5461166f90600160a060020a031661165c8385613769565b609754600160a060020a031691906125a3565b609a546109f0908290600160a060020a0316611e5b565b603354600160a060020a031633146116b35760405160e560020a62461bcd02815260040161086c906136cb565b60b08054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146117025760405160e560020a62461bcd02815260040161086c906136cb565b609754600160a060020a03838116911614156117895760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161086c565b6109f0600160a060020a03831633836125a3565b60b054600160a060020a031633600160a060020a0316146117d35760405160e560020a62461bcd02815260040161086c90613700565b600060aa88815481106117e8576117e8613644565b6000918252602090912060056006909202010154609854600160a060020a0391821692506118199116338388611a70565b61182888888888888888612754565b5050505050505050565b603354600160a060020a0316331461185f5760405160e560020a62461bcd02815260040161086c906136cb565b609d859055838360008161187557611875613644565b602002919091013560a055508383600181811061189457611894613644565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146118d85760405160e560020a62461bcd02815260040161086c906136cb565b600160a060020a0381166119575760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161086c565b61196081612840565b50565b603354600160a060020a031633146119905760405160e560020a62461bcd02815260040161086c906136cb565b609c54156119e35760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161086c565b609c55565b603354600160a060020a03163314611a155760405160e560020a62461bcd02815260040161086c906136cb565b60a954600160a060020a03163014611a425760405160e560020a62461bcd02815260040161086c906137dc565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611b219085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612892565b50505050565b60008060aa8881548110611b3d57611b3d613644565b9060005260206000209060060201905060008511611ba05760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161086c565b611ba988610b14565b91506000611bb7888861297a565b60058301548354919250611bd891600160a060020a03908116911688612a23565b600060aa8a81548110611bed57611bed613644565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c869190613737565b60af546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d349190613737565b60af546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc79190613737565b905080856004016000828254611ddd91906137c4565b90915550611df290508c858c84868d8d612b07565b8b8a604051611e01919061385a565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611e4491815260200190565b60405180910390a450505050509695505050505050565b6099546097546109f091600160a060020a0391821691168385611a70565b6040805180820190915260008082526020820152600160a060020a038616158015611ea5575060008551115b80611ec25750600160a060020a03861615801590611ec257508451155b611f115760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161086c565b6000611f1f8886888a612cc2565b9050600060aa8981548110611f3657611f36613644565b906000526020600020906006020190506000826000015111611f9d5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161086c565b6000816004015411611ff45760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161086c565b60a0820151156120495760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161086c565b61205289610b14565b50600082604001518260040154836003015485600001516120739190613780565b61207d919061379f565b6120879190613769565b905080156121e95760af54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa15801561212e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121529190613876565b91509150861561219f576020860182905260a85460a754141561219057801561218b57609a5461218b90600160a060020a031682612e65565b6121e6565b801561218b5761218b81612f14565b81156121af576121af8b83612e65565b60a85460a75414156121d757801561218b57609a5461218b90600160a060020a031682612e65565b80156121e6576121e681612f14565b50505b856125965760006121fa8a8a61297a565b9050600060aa8c8154811061221157612211613644565b906000526020600020906006020160050160009054906101000a9004600160a060020a031690506000819050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015612280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a49190613737565b87602001516122b39190613780565b82600160a060020a031663677379e56040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612318919061389a565b6040517ff55850b4000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152919091169063f55850b490602401602060405180830381865afa158015612379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239d9190613737565b88516123ae9064e8d4a51000613780565b6123b89190613780565b6123c2919061379f565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af1158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124499190613737565b50508551600486015461245f9350909150613769565b60048481019190915583546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa1580156124c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ec9190613737565b855260008b815260ac60209081526040808320600160a060020a0385168452909152902080544291908a90811061252557612525613644565b90600052602060002090600602016005018190555050898860405161254a919061385a565b6040805191829003822087518b8452602084015291600160a060020a038d16917fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d9910160405180910390a45b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526125ec9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611abd565b505050565b60a85460a75414156126185760405160e560020a62461bcd02815260040161086c90613694565b8060a55461262691906137c4565b60a55550565b600080600060aa888154811061264457612644613644565b60009182526020822060056006909202010154600160a060020a03169150612670898c8c8b8b8a611e79565b90506126af82826000015160aa8c8154811061268e5761268e613644565b6000918252602090912060069091020154600160a060020a03169190612a23565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af1158015612719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061273d9190613737565b935080602001519250505097509795505050505050565b600060aa888154811061276957612769613644565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af11580156127e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280c9190613737565b9050612826828260aa8c8154811061268e5761268e613644565b612834898989848989611b27565b50505050505050505050565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006128e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612f4f9092919063ffffffff16565b8051909150156125ec578080602001905181019061290591906138b7565b6125ec5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161086c565b81600160a060020a038116610f55576000825111612a035760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161086c565b612a0c826138d4565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab19190613737565b612abb91906137c4565b604051600160a060020a038516602482015260448101829052909150611b219085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611abd565b600060aa8881548110612b1c57612b1c613644565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612ba5908a90613780565b612baf919061379f565b815260208082018790526040808301879052600060609384018190528d815260ac8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612cb7578760ad60008b815260200190815260200160002088604051612c5e919061385a565b908152602001604051809103902060006001612c7a8d8d610f31565b612c849190613769565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612cfb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612d9a57600085815260ac60209081526040808320600160a060020a03861684529091529020805485908110612d3e57612d3e613644565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612e5d565b600085815260ad60205260408082209051612db690869061385a565b908152604080516020928190038301902060008881529083528181205489825260ac8452828220600160a060020a0390911680835293522080549192509086908110612e0457612e04613644565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eef9190613737565b905080831115612efd578091505b609754611b2190600160a060020a031685846125a3565b60a85460a7541415612f3b5760405160e560020a62461bcd02815260040161086c90613694565b8060a654612f4991906137c4565b60a65550565b6060612f5e8484600085612f68565b90505b9392505050565b60603031831115612fe45760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161086c565b600160a060020a0385163b61303e5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086c565b60008086600160a060020a0316858760405161305a919061385a565b60006040518083038185875af1925050503d8060008114613097576040519150601f19603f3d011682016040523d82523d6000602084013e61309c565b606091505b50915091506130ac8282866130b7565b979650505050505050565b606083156130c6575081612f61565b8251156130d65782518084602001fd5b8160405160e560020a62461bcd02815260040161086c9190613913565b60008060006060848603121561310857600080fd5b505081359360208301359350604090920135919050565b600160a060020a038116811461196057600080fd5b6000806040838503121561314757600080fd5b82356131528161311f565b915060208301356131628161311f565b809150509250929050565b6000806040838503121561318057600080fd5b8235915060208301356131628161311f565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126131bc57600080fd5b813567ffffffffffffffff808211156131d7576131d7613192565b604051601f8301601f19908116603f011681019082821181831017156131ff576131ff613192565b8160405283815286602085880101111561321857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561324d57600080fd5b83359250602084013567ffffffffffffffff81111561326b57600080fd5b613277868287016131ab565b925050604084013590509250925092565b801515811461196057600080fd5b6000806000606084860312156132ab57600080fd5b833592506020840135915060408401356132c481613288565b809150509250925092565b6000602082840312156132e157600080fd5b8135612f618161311f565b6000602082840312156132fe57600080fd5b5035919050565b60008060008060008060c0878903121561331e57600080fd5b86356133298161311f565b9550602087013567ffffffffffffffff81111561334557600080fd5b61335189828a016131ab565b9550506040870135935060608701359250608087013561337081613288565b8092505060a087013590509295509295509295565b6000806000806080858703121561339b57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156133cc57600080fd5b833592506020840135915060408401356132c48161311f565b600080600080600060a086880312156133fd57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561343257600080fd5b8135612f6181613288565b6000806000806080858703121561345357600080fd5b8435935060208501359250604085013561346c81613288565b9396929550929360600135925050565b60008060006060848603121561349157600080fd5b8335925060208401356134a38161311f565b929592945050506040919091013590565b600080604083850312156134c757600080fd5b50508035926020909101359150565b600080604083850312156134e957600080fd5b82356134f48161311f565b946020939093013593505050565b600080600080600080600060e0888a03121561351d57600080fd5b87359650602088013561352f8161311f565b9550604088013567ffffffffffffffff81111561354b57600080fd5b6135578a828b016131ab565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561359857600080fd5b85359450602086013567ffffffffffffffff808211156135b757600080fd5b818801915088601f8301126135cb57600080fd5b8135818111156135da57600080fd5b89602080830285010111156135ee57600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b60006020828403121561374957600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561377b5761377b613750565b500390565b600081600019048311821515161561379a5761379a613750565b500290565b6000826137bf5760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156137d7576137d7613750565b500190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b600060001982141561382757613827613750565b5060010190565b60005b83811015613849578181015183820152602001613831565b83811115611b215750506000910152565b6000825161386c81846020870161382e565b9190910192915050565b6000806040838503121561388957600080fd5b505080516020909101519092909150565b6000602082840312156138ac57600080fd5b8151612f618161311f565b6000602082840312156138c957600080fd5b8151612f6181613288565b805160208201516bffffffffffffffffffffffff19808216929190601483101561390b57808360140360080260020a820283161693505b505050919050565b602081526000825180602084015261393281604085016020870161382e565b601f01601f1916919091016040019291505056fea2646970667358221220ae8b2aefa74aad658cb557c73bd00babdc8aa92ad2f460c2381d9a74318665da64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103915760003560e060020a90048063715018a6116101e2578063b4b4e9eb11610113578063cb9c2f68116100b1578063f2fde38b11610080578063f2fde38b146107fa578063f35e4a6e1461080d578063f63cce3714610820578063fc39a29e1461083357600080fd5b8063cb9c2f68146107c2578063cff38dd4146107cb578063ed43633f146107de578063ef126967146107f157600080fd5b8063c13260a5116100ed578063c13260a514610780578063c293614214610793578063c4e94f221461079c578063c6d758cb146107af57600080fd5b8063b4b4e9eb14610724578063b61bb80a14610764578063b95cc6811461077757600080fd5b8063941d3fd0116101805780639cebd3711161015a5780639cebd371146106ed578063a13346c6146106f6578063a1be201d146106fe578063a4d2b0831461071157600080fd5b8063941d3fd01461069c578063958e2d31146106d15780639a8a0592146106e457600080fd5b8063823c43d0116101bc578063823c43d0146106165780638c157db2146106295780638da5cb5b1461063c578063929060d81461064d57600080fd5b8063715018a6146105e8578063745af0a8146105f05780637e37c7691461060357600080fd5b80633bbc1ffc116102c75780635296683211610265578063668ababb11610234578063668ababb1461059c5780636b8eb2e5146105af5780636c78d49c146105c257806370d5ae05146105d557600080fd5b8063529668321461056457806353f73f871461056d5780635527a6f9146105805780635c63fa871461058957600080fd5b806348cd4cb1116102a157806348cd4cb11461052c5780634b0e7216146105355780634cfea68a146105485780635051d3711461055157600080fd5b80633bbc1ffc146104de57806340abd8fc146104f15780634780f9f51461051957600080fd5b8063332e5a7b1161033457806338495d661161030e57806338495d66146104a657806339e80a88146104b95780633b710688146104cc5780633b9ce565146104d557600080fd5b8063332e5a7b1461046057806333cfcd3b1461047357806337cb2ef21461048657600080fd5b806317caf6f11161037057806317caf6f1146103c65780631b8fb692146103e25780632b68772c146103f55780632e31283d146103fd57600080fd5b8062aeef8a1461039657806309b79b3c146103ab5780630aa0988e146103b3575b600080fd5b6103a96103a43660046130f3565b610846565b005b6103a96108e5565b6103a96103c1366004613134565b610949565b6103cf60a45481565b6040519081526020015b60405180910390f35b6103a96103f036600461316d565b6109a4565b60aa546103cf565b61044861040b366004613238565b60ad6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103d9565b60af5461044890600160a060020a031681565b6103cf610481366004613296565b610a77565b6103cf6104943660046132cf565b60ab6020526000908152604090205481565b6103cf6104b43660046132ec565b610b14565b60b05461044890600160a060020a031681565b6103cf60a35481565b6103cf60a15481565b6103a96104ec3660046132ec565b610d07565b6105046104ff366004613305565b610d66565b604080519283526020830191909152016103d9565b6103a9610527366004613385565b610e01565b6103cf609c5481565b6103a96105433660046132cf565b610e93565b6103cf609d5481565b6103a961055f3660046132cf565b610ee2565b6103cf60a55481565b6103cf61057b36600461316d565b610f31565b6103cf60a05481565b6103a96105973660046133b7565b610f5b565b60995461044890600160a060020a031681565b6103a96105bd3660046133e5565b610fb2565b6103a96105d0366004613420565b611082565b609b5461044890600160a060020a031681565b6103a96110ef565b6103cf6105fe36600461343d565b611128565b6103a9610611366004613385565b6111a2565b60ae5461044890600160a060020a031681565b60975461044890600160a060020a031681565b603354600160a060020a0316610448565b61066061065b3660046132ec565b611318565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103d9565b60af546106c19074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103d9565b6103a96106df3660046132ec565b61136b565b6103cf60a75481565b6103cf60a25481565b6103a96114b1565b6103a961070c3660046132cf565b61152f565b609a5461044890600160a060020a031681565b61073761073236600461347c565b61157e565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103d9565b60985461044890600160a060020a031681565b6103cf60a65481565b6103a961078e3660046134b4565b6115df565b6103cf609e5481565b6103a96107aa3660046132cf565b611686565b6103a96107bd3660046134d6565b6116d5565b6103cf609f5481565b6103a96107d9366004613502565b61179d565b6103a96107ec366004613580565b611832565b6103cf60a85481565b6103a96108083660046132cf565b6118ab565b6103a961081b3660046132ec565b611963565b6103a961082e366004613134565b6119e8565b60a95461044890600160a060020a031681565b600260655414156108755760405160e560020a62461bcd02815260040161086c9061360d565b60405180910390fd5b6002606581905550600060aa848154811061089257610892613644565b6000918252602090912060069091020180549091506108bc90600160a060020a0316333086611a70565b6108d9843360405180602001604052806000815250868642611b27565b50506001606555505050565b60ae54600160a060020a031633600160a060020a03161461091b5760405160e560020a62461bcd02815260040161086c9061365d565b60a85460a75414156109425760405160e560020a62461bcd02815260040161086c90613694565b600060a555565b603354600160a060020a031633146109765760405160e560020a62461bcd02815260040161086c906136cb565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60b054600160a060020a031633600160a060020a0316146109da5760405160e560020a62461bcd02815260040161086c90613700565b60a85460a75414156109f4576109f08282611e5b565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a5b57600080fd5b505af1158015610a6f573d6000803e3d6000fd5b505050505050565b600060026065541415610a9f5760405160e560020a62461bcd02815260040161086c9061360d565b60026065819055506000610ac785336040518060200160405280600081525087876000611e79565b9050610b0633826000015160aa8881548110610ae557610ae5613644565b6000918252602090912060069091020154600160a060020a031691906125a3565b516001606555949350505050565b60008060aa8381548110610b2a57610b2a613644565b9060005260206000209060060201905080600201544311610b4e5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190613737565b905080610bee575043600290910155506000919050565b6000826002015443610c009190613769565b9050600060a4548460010154609e5484610c1a9190613780565b610c249190613780565b610c2e919061379f565b60a954909150600160a060020a0316301415610c5757610c4e8130611e5b565b60009450610ce0565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610cbc57600080fd5b505af1158015610cd0573d6000803e3d6000fd5b50505050809450610ce0856125f1565b808460030154610cf091906137c4565b600385015550504360029092019190915550919050565b603354600160a060020a03163314610d345760405160e560020a62461bcd02815260040161086c906136cb565b60a954600160a060020a03163014610d615760405160e560020a62461bcd02815260040161086c906137dc565b609f55565b60b0546000908190600160a060020a031633600160a060020a031614610da15760405160e560020a62461bcd02815260040161086c90613700565b610db1888888888888600161262c565b90925090508115610dd357609854610dd390600160a060020a031633846125a3565b8015610df657609b54609754610df691600160a060020a039182169116836125a3565b965096945050505050565b60026065541415610e275760405160e560020a62461bcd02815260040161086c9061360d565b6002606581905550600060aa8581548110610e4457610e44613644565b6000918252602090912060056006909202010154609854600160a060020a039182169250610e759116338387611a70565b6108d985336040518060200160405280600081525087874288612754565b603354600160a060020a03163314610ec05760405160e560020a62461bcd02815260040161086c906136cb565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610f0f5760405160e560020a62461bcd02815260040161086c906136cb565b60ae8054600160a060020a031916600160a060020a0392909216919091179055565b600082815260ac60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610f885760405160e560020a62461bcd02815260040161086c906136cb565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ae54600160a060020a031633600160a060020a031614610fe85760405160e560020a62461bcd02815260040161086c9061365d565b6000610ff683612710613780565b848660a3546110059190613780565b61100f9190613780565b611019919061379f565b905060a15481111561102e575060a15461103d565b60a05481101561103d575060a0545b609d5461104c87612710613780565b6110569190613780565b60a2546110638385613780565b61106d9190613780565b611077919061379f565b609e55505050505050565b603354600160a060020a031633146110af5760405160e560020a62461bcd02815260040161086c906136cb565b60af8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a0316331461111c5760405160e560020a62461bcd02815260040161086c906136cb565b6111266000612840565b565b6000600260655414156111505760405160e560020a62461bcd02815260040161086c9061360d565b60026065819055506000611179336040518060200160405280600081525088888888600061262c565b5060985490915061119490600160a060020a031633836125a3565b600160655595945050505050565b600260655414156111c85760405160e560020a62461bcd02815260040161086c9061360d565b6002606555600084815260ac6020908152604080832033845290915281208054859081106111f8576111f8613644565b600091825260208083206003600690930201919091015487835260ac825260408084203385529092529082208054919350908690811061123a5761123a613644565b9060005260206000209060060201600401549050600061127033604051806020016040528060008152508989600089600061262c565b5090506112b360aa868154811061128957611289613644565b6000918252602090912060056006909202010154609854600160a060020a039081169116836125a3565b6112d18533604051806020016040528060008152508487878a612754565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b60aa818154811061132857600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b600260655414156113915760405160e560020a62461bcd02815260040161086c9061360d565b600260655560006113a28233610f31565b905060005b818110156113de576113cd83336040518060200160405280600081525084600080611e79565b506113d781613813565b90506113a7565b50600060aa83815481106113f4576113f4613644565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114879190613737565b905080156114a7576114a7338260aa8681548110610ae557610ae5613644565b5050600160655550565b60ae54600160a060020a031633600160a060020a0316146114e75760405160e560020a62461bcd02815260040161086c9061365d565b60a85460a754141561150e5760405160e560020a62461bcd02815260040161086c90613694565b609b5460a65460975461094292600160a060020a03918216929116906125a3565b603354600160a060020a0316331461155c5760405160e560020a62461bcd02815260040161086c906136cb565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b60ac60205282600052604060002060205281600052604060002081815481106115a657600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ae54600160a060020a031633600160a060020a0316146116155760405160e560020a62461bcd02815260040161086c9061365d565b60a954600160a060020a031630146116425760405160e560020a62461bcd02815260040161086c906137dc565b609b5461166f90600160a060020a031661165c8385613769565b609754600160a060020a031691906125a3565b609a546109f0908290600160a060020a0316611e5b565b603354600160a060020a031633146116b35760405160e560020a62461bcd02815260040161086c906136cb565b60b08054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146117025760405160e560020a62461bcd02815260040161086c906136cb565b609754600160a060020a03838116911614156117895760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161086c565b6109f0600160a060020a03831633836125a3565b60b054600160a060020a031633600160a060020a0316146117d35760405160e560020a62461bcd02815260040161086c90613700565b600060aa88815481106117e8576117e8613644565b6000918252602090912060056006909202010154609854600160a060020a0391821692506118199116338388611a70565b61182888888888888888612754565b5050505050505050565b603354600160a060020a0316331461185f5760405160e560020a62461bcd02815260040161086c906136cb565b609d859055838360008161187557611875613644565b602002919091013560a055508383600181811061189457611894613644565b602002919091013560a1555060a35560a255505050565b603354600160a060020a031633146118d85760405160e560020a62461bcd02815260040161086c906136cb565b600160a060020a0381166119575760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161086c565b61196081612840565b50565b603354600160a060020a031633146119905760405160e560020a62461bcd02815260040161086c906136cb565b609c54156119e35760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161086c565b609c55565b603354600160a060020a03163314611a155760405160e560020a62461bcd02815260040161086c906136cb565b60a954600160a060020a03163014611a425760405160e560020a62461bcd02815260040161086c906137dc565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611b219085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612892565b50505050565b60008060aa8881548110611b3d57611b3d613644565b9060005260206000209060060201905060008511611ba05760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161086c565b611ba988610b14565b91506000611bb7888861297a565b60058301548354919250611bd891600160a060020a03908116911688612a23565b600060aa8a81548110611bed57611bed613644565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c869190613737565b60af546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d349190613737565b60af546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611da3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc79190613737565b905080856004016000828254611ddd91906137c4565b90915550611df290508c858c84868d8d612b07565b8b8a604051611e01919061385a565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611e4491815260200190565b60405180910390a450505050509695505050505050565b6099546097546109f091600160a060020a0391821691168385611a70565b6040805180820190915260008082526020820152600160a060020a038616158015611ea5575060008551115b80611ec25750600160a060020a03861615801590611ec257508451155b611f115760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161086c565b6000611f1f8886888a612cc2565b9050600060aa8981548110611f3657611f36613644565b906000526020600020906006020190506000826000015111611f9d5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161086c565b6000816004015411611ff45760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161086c565b60a0820151156120495760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161086c565b61205289610b14565b50600082604001518260040154836003015485600001516120739190613780565b61207d919061379f565b6120879190613769565b905080156121e95760af54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa15801561212e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121529190613876565b91509150861561219f576020860182905260a85460a754141561219057801561218b57609a5461218b90600160a060020a031682612e65565b6121e6565b801561218b5761218b81612f14565b81156121af576121af8b83612e65565b60a85460a75414156121d757801561218b57609a5461218b90600160a060020a031682612e65565b80156121e6576121e681612f14565b50505b856125965760006121fa8a8a61297a565b9050600060aa8c8154811061221157612211613644565b906000526020600020906006020160050160009054906101000a9004600160a060020a031690506000819050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa158015612280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a49190613737565b87602001516122b39190613780565b82600160a060020a031663677379e56040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612318919061389a565b6040517ff55850b4000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152919091169063f55850b490602401602060405180830381865afa158015612379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239d9190613737565b88516123ae9064e8d4a51000613780565b6123b89190613780565b6123c2919061379f565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af1158015612425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124499190613737565b50508551600486015461245f9350909150613769565b60048481019190915583546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa1580156124c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ec9190613737565b855260008b815260ac60209081526040808320600160a060020a0385168452909152902080544291908a90811061252557612525613644565b90600052602060002090600602016005018190555050898860405161254a919061385a565b6040805191829003822087518b8452602084015291600160a060020a038d16917fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d9910160405180910390a45b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526125ec9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611abd565b505050565b60a85460a75414156126185760405160e560020a62461bcd02815260040161086c90613694565b8060a55461262691906137c4565b60a55550565b600080600060aa888154811061264457612644613644565b60009182526020822060056006909202010154600160a060020a03169150612670898c8c8b8b8a611e79565b90506126af82826000015160aa8c8154811061268e5761268e613644565b6000918252602090912060069091020154600160a060020a03169190612a23565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af1158015612719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061273d9190613737565b935080602001519250505097509795505050505050565b600060aa888154811061276957612769613644565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af11580156127e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280c9190613737565b9050612826828260aa8c8154811061268e5761268e613644565b612834898989848989611b27565b50505050505050505050565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006128e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612f4f9092919063ffffffff16565b8051909150156125ec578080602001905181019061290591906138b7565b6125ec5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161086c565b81600160a060020a038116610f55576000825111612a035760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161086c565b612a0c826138d4565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab19190613737565b612abb91906137c4565b604051600160a060020a038516602482015260448101829052909150611b219085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611abd565b600060aa8881548110612b1c57612b1c613644565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612ba5908a90613780565b612baf919061379f565b815260208082018790526040808301879052600060609384018190528d815260ac8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612cb7578760ad60008b815260200190815260200160002088604051612c5e919061385a565b908152602001604051809103902060006001612c7a8d8d610f31565b612c849190613769565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612cfb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612d9a57600085815260ac60209081526040808320600160a060020a03861684529091529020805485908110612d3e57612d3e613644565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612e5d565b600085815260ad60205260408082209051612db690869061385a565b908152604080516020928190038301902060008881529083528181205489825260ac8452828220600160a060020a0390911680835293522080549192509086908110612e0457612e04613644565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eef9190613737565b905080831115612efd578091505b609754611b2190600160a060020a031685846125a3565b60a85460a7541415612f3b5760405160e560020a62461bcd02815260040161086c90613694565b8060a654612f4991906137c4565b60a65550565b6060612f5e8484600085612f68565b90505b9392505050565b60603031831115612fe45760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161086c565b600160a060020a0385163b61303e5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161086c565b60008086600160a060020a0316858760405161305a919061385a565b60006040518083038185875af1925050503d8060008114613097576040519150601f19603f3d011682016040523d82523d6000602084013e61309c565b606091505b50915091506130ac8282866130b7565b979650505050505050565b606083156130c6575081612f61565b8251156130d65782518084602001fd5b8160405160e560020a62461bcd02815260040161086c9190613913565b60008060006060848603121561310857600080fd5b505081359360208301359350604090920135919050565b600160a060020a038116811461196057600080fd5b6000806040838503121561314757600080fd5b82356131528161311f565b915060208301356131628161311f565b809150509250929050565b6000806040838503121561318057600080fd5b8235915060208301356131628161311f565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126131bc57600080fd5b813567ffffffffffffffff808211156131d7576131d7613192565b604051601f8301601f19908116603f011681019082821181831017156131ff576131ff613192565b8160405283815286602085880101111561321857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561324d57600080fd5b83359250602084013567ffffffffffffffff81111561326b57600080fd5b613277868287016131ab565b925050604084013590509250925092565b801515811461196057600080fd5b6000806000606084860312156132ab57600080fd5b833592506020840135915060408401356132c481613288565b809150509250925092565b6000602082840312156132e157600080fd5b8135612f618161311f565b6000602082840312156132fe57600080fd5b5035919050565b60008060008060008060c0878903121561331e57600080fd5b86356133298161311f565b9550602087013567ffffffffffffffff81111561334557600080fd5b61335189828a016131ab565b9550506040870135935060608701359250608087013561337081613288565b8092505060a087013590509295509295509295565b6000806000806080858703121561339b57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156133cc57600080fd5b833592506020840135915060408401356132c48161311f565b600080600080600060a086880312156133fd57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561343257600080fd5b8135612f6181613288565b6000806000806080858703121561345357600080fd5b8435935060208501359250604085013561346c81613288565b9396929550929360600135925050565b60008060006060848603121561349157600080fd5b8335925060208401356134a38161311f565b929592945050506040919091013590565b600080604083850312156134c757600080fd5b50508035926020909101359150565b600080604083850312156134e957600080fd5b82356134f48161311f565b946020939093013593505050565b600080600080600080600060e0888a03121561351d57600080fd5b87359650602088013561352f8161311f565b9550604088013567ffffffffffffffff81111561354b57600080fd5b6135578a828b016131ab565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561359857600080fd5b85359450602086013567ffffffffffffffff808211156135b757600080fd5b818801915088601f8301126135cb57600080fd5b8135818111156135da57600080fd5b89602080830285010111156135ee57600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b60006020828403121561374957600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561377b5761377b613750565b500390565b600081600019048311821515161561379a5761379a613750565b500290565b6000826137bf5760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156137d7576137d7613750565b500190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b600060001982141561382757613827613750565b5060010190565b60005b83811015613849578181015183820152602001613831565b83811115611b215750506000910152565b6000825161386c81846020870161382e565b9190910192915050565b6000806040838503121561388957600080fd5b505080516020909101519092909150565b6000602082840312156138ac57600080fd5b8151612f618161311f565b6000602082840312156138c957600080fd5b8151612f6181613288565b805160208201516bffffffffffffffffffffffff19808216929190601483101561390b57808360140360080260020a820283161693505b505050919050565b602081526000825180602084015261393281604085016020870161382e565b601f01601f1916919091016040019291505056fea2646970667358221220ae8b2aefa74aad658cb557c73bd00babdc8aa92ad2f460c2381d9a74318665da64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22963:127",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:127",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:127",
                "type": ""
              }
            ],
            "src": "14:316:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:109:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "467:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "476:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "479:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "469:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "469:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "469:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "403:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "414:5:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "421:42:127",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "410:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "410:54:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "400:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:65:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "393:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:73:127"
                  },
                  "nodeType": "YulIf",
                  "src": "390:93:127"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "369:5:127",
                "type": ""
              }
            ],
            "src": "335:154:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "581:301:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "602:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "611:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "623:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "594:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "591:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "678:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "665:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "665:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "656:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "722:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "697:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "737:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "747:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "761:47:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "804:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "776:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:127"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "765:7:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "842:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "817:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:33:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "817:33:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "859:17:127",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "869:7:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "859:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "539:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "550:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "562:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "570:6:127",
                "type": ""
              }
            ],
            "src": "494:388:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "988:76:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "998:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1010:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1021:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1006:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "998:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1040:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1051:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1033:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1033:25:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "957:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "968:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "979:4:127",
                "type": ""
              }
            ],
            "src": "887:177:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1156:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1202:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1211:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1214:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1204:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1204:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1204:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1177:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1186:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1173:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1173:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1198:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1169:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1166:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1250:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1237:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1269:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1299:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1310:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1295:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1295:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1282:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1273:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1348:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1323:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1323:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1363:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1373:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1363:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1114:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1125:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1137:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1145:6:127",
                "type": ""
              }
            ],
            "src": "1069:315:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1421:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1438:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1441:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1431:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1431:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1431:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1535:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1538:4:127",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1562:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1552:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1552:15:127"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1389:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1630:666:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1658:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1666:4:127",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1654:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1654:17:127"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1673:3:127"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:27:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1643:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1643:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1640:55:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1704:30:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1727:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1714:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:20:127"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1708:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1743:28:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1753:18:127",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1747:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1794:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1796:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1796:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1796:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1786:2:127"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1790:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1783:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:10:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1780:36:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1825:17:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1839:2:127",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1835:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1835:7:127"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1829:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1851:23:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1871:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1865:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1865:9:127"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1855:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1883:71:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1905:6:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1929:2:127"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1933:4:127",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1925:3:127"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1925:13:127"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1940:2:127"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1921:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1921:22:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1945:2:127",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1917:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1917:31:127"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1950:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1913:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1913:40:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1901:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:53:127"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1887:10:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2013:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2015:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2015:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2015:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1972:10:127"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1984:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1969:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1969:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1992:10:127"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2004:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1989:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1989:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1966:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1966:46:127"
                  },
                  "nodeType": "YulIf",
                  "src": "1963:72:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2051:2:127",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2055:10:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2044:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:22:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2044:22:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2082:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2090:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:18:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2075:18:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2150:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2153:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2143:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2116:6:127"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2124:2:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2112:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2112:15:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2129:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2108:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2108:26:127"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2136:3:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2105:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:55:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2183:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2191:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2179:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:17:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2202:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2210:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2198:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2198:17:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2217:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2166:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2244:6:127"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2252:2:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2240:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2240:15:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2257:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2236:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2236:26:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2264:1:127",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2229:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2229:37:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2229:37:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2275:15:127",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2284:6:127"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2275:5:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1604:6:127",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1612:3:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1620:5:127",
                "type": ""
              }
            ],
            "src": "1578:718:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2414:343:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2460:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2469:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2472:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2462:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2462:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2462:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2435:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2444:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2431:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2431:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2456:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2427:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2424:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2485:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2508:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2495:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2485:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2527:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2558:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2569:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2554:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2554:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2541:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2531:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2616:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2625:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2628:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2618:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2618:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2618:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2588:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2596:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2585:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2585:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "2582:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2641:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2672:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2668:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2668:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2692:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2651:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2641:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2709:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2736:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2747:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2719:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2719:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2709:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2364:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2375:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2387:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2395:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2403:6:127",
                "type": ""
              }
            ],
            "src": "2301:456:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:125:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2873:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2885:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2896:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2881:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2881:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2873:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2915:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2930:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2938:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2926:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2926:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2908:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2908:74:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2832:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2843:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2854:4:127",
                "type": ""
              }
            ],
            "src": "2762:226:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3035:76:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3089:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3098:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3101:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3091:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3091:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3091:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3058:5:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3079:5:127"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3072:6:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3072:13:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3065:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3065:21:127"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3055:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:32:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3048:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3048:40:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3045:60:127"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3024:5:127",
                "type": ""
              }
            ],
            "src": "2993:118:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3217:276:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3263:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3272:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3275:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3265:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3265:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3265:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3238:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3247:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3234:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3234:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3259:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3230:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3230:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3227:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3288:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3311:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3298:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3288:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3330:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3357:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3368:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3353:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3353:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3340:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3330:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3381:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3411:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3422:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3407:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3407:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3394:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3394:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3385:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3457:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3435:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3435:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3435:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3482:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3472:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3167:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3178:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3190:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3198:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3206:6:127",
                "type": ""
              }
            ],
            "src": "3116:377:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3568:177:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3614:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3623:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3626:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3616:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3616:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3616:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3589:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3598:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3585:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3585:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3610:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3581:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3581:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3578:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3639:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3665:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3652:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3652:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3643:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3709:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3684:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3684:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3684:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3724:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3734:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3724:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3534:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3545:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3557:6:127",
                "type": ""
              }
            ],
            "src": "3498:247:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3820:110:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3866:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3875:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3878:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3868:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3868:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3868:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3841:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3850:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3837:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3837:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3862:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3833:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "3830:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3891:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3914:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3901:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3891:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3786:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3797:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3809:6:127",
                "type": ""
              }
            ],
            "src": "3750:180:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4096:636:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4143:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4152:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4155:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4145:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4145:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4145:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4117:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4126:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4113:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4113:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4138:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4109:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4106:53:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4168:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4194:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4181:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4172:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4238:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4213:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4213:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4213:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4253:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4263:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4253:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4277:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4308:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4319:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4304:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4304:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4291:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4281:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4366:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4375:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4378:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4368:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4368:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4368:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4338:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4346:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4335:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "4332:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4391:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4422:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4433:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4418:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4418:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4442:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4401:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4401:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4391:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4459:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4486:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4497:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4482:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4482:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4469:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4459:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4510:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4537:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4548:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4533:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4520:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4520:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4510:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4561:48:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4593:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4604:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4589:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4589:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4576:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4576:33:127"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4565:7:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4640:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4618:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4618:30:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4657:17:127",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4667:7:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4657:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4683:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4710:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4721:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4706:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4706:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4693:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4693:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4683:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4022:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4033:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4045:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4053:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4061:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4069:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4077:6:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4085:6:127",
                "type": ""
              }
            ],
            "src": "3935:797:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4866:119:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4876:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4888:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4899:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4884:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4884:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4876:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4918:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4929:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4911:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4911:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4911:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4956:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4967:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4952:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4952:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4972:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4945:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4945:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4945:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4827:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4838:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4846:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4857:4:127",
                "type": ""
              }
            ],
            "src": "4737:248:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5111:264:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5158:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5167:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5170:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5160:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5160:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5160:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5132:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5141:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5128:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5128:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5153:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5124:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5124:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "5121:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5183:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5206:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5193:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5193:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5183:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5225:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5252:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5263:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5248:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5248:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5235:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5235:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5225:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5276:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5303:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5314:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5299:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5299:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5286:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5286:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5276:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5327:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5354:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5365:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5350:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5350:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5337:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5327:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5053:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5064:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5076:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5084:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5092:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5100:6:127",
                "type": ""
              }
            ],
            "src": "4990:385:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5484:279:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5530:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5539:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5542:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5532:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5532:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5532:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5505:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5514:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5501:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5501:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5526:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5497:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5497:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "5494:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5555:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5578:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5565:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5565:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5555:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5597:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5624:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5635:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5620:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5620:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5607:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5597:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5648:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5678:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5689:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5674:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5674:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5661:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5652:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5727:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5702:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5702:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5742:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5752:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5742:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5434:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5445:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5457:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5465:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5473:6:127",
                "type": ""
              }
            ],
            "src": "5380:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5906:316:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5953:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5962:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5965:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5955:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5955:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5955:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5927:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5936:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5923:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5923:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5948:3:127",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5919:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5919:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "5916:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5978:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6001:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5988:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5978:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6020:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6047:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6058:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6043:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6043:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6030:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6030:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6020:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6071:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6098:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6109:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6094:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6094:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6081:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6071:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6122:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6149:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6160:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6145:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6145:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6132:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6122:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6173:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6200:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6211:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6196:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6196:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6183:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6183:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6173:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5840:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5851:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5863:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5871:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5879:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5887:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5895:6:127",
                "type": ""
              }
            ],
            "src": "5768:454:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6294:174:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6340:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6349:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6352:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6342:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6342:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6342:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6315:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6324:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6311:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6311:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6336:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6307:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6307:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "6304:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6365:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6391:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6378:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6369:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6432:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6410:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6410:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6410:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6447:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6457:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6447:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6260:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6271:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6283:6:127",
                "type": ""
              }
            ],
            "src": "6227:241:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6591:328:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6638:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6647:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6650:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6640:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6640:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6640:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6612:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6621:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6608:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6608:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6633:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6604:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "6601:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6663:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6686:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6673:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6673:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6663:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6705:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6732:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6743:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6728:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6728:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6715:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6705:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6756:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6786:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6797:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6782:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6782:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6769:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6769:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6760:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6832:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6810:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6810:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6810:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6857:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6847:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6871:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6898:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6909:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6894:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6894:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6881:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6881:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6871:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6533:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6544:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6556:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6564:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6572:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6580:6:127",
                "type": ""
              }
            ],
            "src": "6473:446:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7191:373:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7201:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7213:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7224:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7209:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7209:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7201:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7237:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7247:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7241:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7305:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7320:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7328:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7316:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7316:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7298:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7298:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7352:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7363:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7348:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7348:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7368:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7341:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7341:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7341:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7395:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7406:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7391:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7391:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7411:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7384:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7384:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7384:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7438:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7449:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7434:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7434:18:127"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7454:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7427:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7427:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7427:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7481:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7492:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7477:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7477:19:127"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7498:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7470:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7470:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7470:35:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7525:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7536:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7521:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7521:19:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "7546:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7554:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7542:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7542:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7514:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7514:44:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7514:44:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7120:9:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7131:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7139:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7147:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7155:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7163:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7171:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7182:4:127",
                "type": ""
              }
            ],
            "src": "6924:640:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7664:92:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7674:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7686:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7697:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7682:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7674:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7716:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7741:6:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7734:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7734:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7727:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:41:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7709:41:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7633:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7644:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7655:4:127",
                "type": ""
              }
            ],
            "src": "7569:187:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7865:279:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7911:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7920:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7923:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7913:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7913:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7913:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7886:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7895:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7882:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7882:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7907:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7878:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "7875:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7936:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7959:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7946:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7936:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7978:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8008:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8019:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8004:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8004:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7991:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7982:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8057:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8032:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8032:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8072:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8082:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8072:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8096:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8123:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8134:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8119:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8119:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8106:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8106:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7815:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7826:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7838:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7846:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7854:6:127",
                "type": ""
              }
            ],
            "src": "7761:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:294:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8400:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:3:127",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8400:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8443:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8454:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8436:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8436:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8481:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8492:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8477:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8477:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8497:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8470:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8470:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8470:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8524:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8535:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8520:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8520:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8540:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8513:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8513:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8513:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8567:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8578:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8563:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8563:18:127"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8583:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8556:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8610:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8621:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8606:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8606:19:127"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8627:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8599:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8599:35:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8654:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8665:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8650:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8650:19:127"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8671:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8643:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8643:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8643:35:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8319:9:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8330:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8338:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8346:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8354:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8362:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8370:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8381:4:127",
                "type": ""
              }
            ],
            "src": "8149:535:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8776:161:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8822:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8831:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8834:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8824:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8824:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8824:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8797:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8806:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8793:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8793:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8818:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8789:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8789:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "8786:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8847:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8870:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8857:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8847:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8889:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8916:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8927:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8912:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8912:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8899:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8889:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8734:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8745:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8757:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8765:6:127",
                "type": ""
              }
            ],
            "src": "8689:248:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9029:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9075:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9084:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9087:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9077:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9077:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9077:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9050:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9059:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9046:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9046:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9071:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9042:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9039:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9100:36:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9126:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9113:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:23:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9104:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9170:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9145:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9145:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9145:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9185:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9195:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9185:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9209:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9236:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9247:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9232:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9232:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9219:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9219:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9209:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8987:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8998:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9010:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9018:6:127",
                "type": ""
              }
            ],
            "src": "8942:315:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9443:618:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9490:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9499:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9502:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9492:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9492:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9492:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9464:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9473:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9485:3:127",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9456:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9456:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9453:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9515:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9538:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9525:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9515:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9557:45:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9587:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9598:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9583:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9583:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9570:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9570:32:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9561:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9636:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9611:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9611:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9611:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9651:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9661:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9651:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9675:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9706:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9717:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9702:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9702:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9689:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9689:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9679:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9764:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9773:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9776:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9766:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9766:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9766:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9736:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9744:18:127",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9733:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9733:30:127"
                  },
                  "nodeType": "YulIf",
                  "src": "9730:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9789:59:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9820:9:127"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9831:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9816:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9816:22:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9840:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9799:16:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:49:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9789:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9857:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9884:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9895:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9880:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9880:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9867:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9867:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9857:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9908:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9935:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9946:3:127",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9931:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9931:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9918:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9918:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9908:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9960:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9987:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9998:3:127",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9970:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9960:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:43:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10039:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10050:3:127",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10035:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10035:19:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10022:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:33:127"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9361:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9372:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9384:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9392:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9400:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9408:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9416:6:127",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9424:6:127",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9432:6:127",
                "type": ""
              }
            ],
            "src": "9262:799:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10222:665:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10269:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10278:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10281:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10271:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10271:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10271:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10243:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10252:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10239:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10239:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10264:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10235:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10235:33:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10232:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10294:33:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10317:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10304:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10304:23:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10294:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10336:46:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10367:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10378:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10363:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10363:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10350:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10350:32:127"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "10340:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10391:28:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10401:18:127",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10395:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10446:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10455:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10458:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10448:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10448:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10448:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10434:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10442:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10431:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10431:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10428:34:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10471:32:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10485:9:127"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "10496:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10481:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10481:22:127"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "10475:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10551:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10560:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10563:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10553:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10553:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10553:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10530:2:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10534:4:127",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10526:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10526:13:127"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10541:7:127"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10522:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10522:27:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10515:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10515:35:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10512:55:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10576:30:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10603:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10590:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10590:16:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10580:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10633:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10642:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10645:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10635:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10635:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10635:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10621:6:127"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10629:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10618:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10615:34:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10708:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10717:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10720:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10710:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10710:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10710:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10672:2:127"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10680:6:127"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10688:2:127",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10676:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10676:15:127"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10668:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10668:24:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10694:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10664:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10664:33:127"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10699:7:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10661:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10661:46:127"
                  },
                  "nodeType": "YulIf",
                  "src": "10658:66:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10733:21:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10747:2:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10751:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10743:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10743:11:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10733:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10763:16:127",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10773:6:127"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10788:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10815:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10826:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10811:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10811:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10798:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10798:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10788:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10839:42:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10866:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10877:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10862:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10862:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10849:12:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10849:32:127"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10839:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10156:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10167:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10179:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10187:6:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10195:6:127",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10203:6:127",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10211:6:127",
                "type": ""
              }
            ],
            "src": "10066:821:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:181:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11083:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11094:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11076:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11076:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11076:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11117:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11128:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11113:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11113:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11133:2:127",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11156:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11167:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11152:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11152:18:127"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11172:33:127",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11145:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11145:61:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11145:61:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11215:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11227:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11238:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11223:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11223:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11215:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11043:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11057:4:127",
                "type": ""
              }
            ],
            "src": "10892:355:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11284:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11301:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11304:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11294:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11294:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11294:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11398:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11401:4:127",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11391:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11391:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11391:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11422:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11425:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11415:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11415:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11415:15:127"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11252:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11615:167:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11632:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11643:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11625:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11625:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11625:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11666:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11677:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11662:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11662:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11682:2:127",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11655:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11655:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11655:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11705:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11716:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11701:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11701:18:127"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11721:19:127",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11694:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11694:47:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11694:47:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11750:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11762:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11773:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11758:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11758:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11750:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11592:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11606:4:127",
                "type": ""
              }
            ],
            "src": "11441:341:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11961:173:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11978:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11989:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11971:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11971:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11971:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12012:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12023:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12008:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12008:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12028:2:127",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12001:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12001:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12001:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12051:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12062:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12047:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12047:18:127"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12067:25:127",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12040:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:53:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12040:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12102:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12114:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12125:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12110:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12110:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12102:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11938:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11952:4:127",
                "type": ""
              }
            ],
            "src": "11787:347:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12313:182:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12330:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12341:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12323:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12323:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12323:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12364:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12375:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12360:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12360:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12380:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12353:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12353:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12353:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12403:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12414:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12399:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12399:18:127"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12419:34:127",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12392:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12392:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12392:62:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12463:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12475:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12486:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12471:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12471:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12463:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12290:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12304:4:127",
                "type": ""
              }
            ],
            "src": "12139:356:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12674:161:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12691:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12702:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12684:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12684:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12684:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12725:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12736:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12721:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12721:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12741:2:127",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12714:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12714:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12714:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12764:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12775:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12760:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12760:18:127"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12780:13:127",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12753:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12753:41:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12753:41:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12803:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12815:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12826:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12811:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12811:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12803:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12651:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12665:4:127",
                "type": ""
              }
            ],
            "src": "12500:335:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12969:168:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12979:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12991:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13002:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12987:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12987:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12979:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13021:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13036:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13044:42:127",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13032:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13032:55:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13014:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13014:74:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13014:74:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13108:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13119:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13104:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13104:18:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13124:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13097:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13097:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13097:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12930:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12941:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12949:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12960:4:127",
                "type": ""
              }
            ],
            "src": "12840:297:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13223:103:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13269:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13278:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13281:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13271:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13271:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13271:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13244:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13253:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13240:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13240:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13265:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13236:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13233:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13294:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13310:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13304:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13304:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13294:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13189:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13200:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13212:6:127",
                "type": ""
              }
            ],
            "src": "13142:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13363:152:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13380:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13383:77:127",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13373:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13373:88:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13373:88:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13477:1:127",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13480:4:127",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13470:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13470:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13470:15:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13501:1:127",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13504:4:127",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13494:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13494:15:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13494:15:127"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13331:184:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13569:76:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13591:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13593:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13593:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13593:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13585:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13588:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13582:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13582:8:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13579:34:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13622:17:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13634:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13637:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13630:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13630:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13622:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13551:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13554:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13560:4:127",
                "type": ""
              }
            ],
            "src": "13520:125:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13702:116:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13761:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13763:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13763:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13763:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13733:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13726:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13726:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13719:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13719:17:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13741:1:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13752:1:127",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13748:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13748:6:127"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13756:1:127"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13744:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13744:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13738:2:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13738:21:127"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13715:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13715:45:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13712:71:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13792:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13807:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13810:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13803:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13803:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13792:7:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13681:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13684:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13690:7:127",
                "type": ""
              }
            ],
            "src": "13650:168:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13869:228:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13900:168:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13921:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13924:77:127",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13914:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13914:88:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13914:88:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14022:1:127",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14025:4:127",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14015:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14015:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14015:15:127"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14050:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14053:4:127",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14043:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14043:15:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14043:15:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13889:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13882:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13882:9:127"
                  },
                  "nodeType": "YulIf",
                  "src": "13879:189:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14077:14:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14086:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14089:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14082:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14082:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14077:1:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13854:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13857:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13863:1:127",
                "type": ""
              }
            ],
            "src": "13823:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14150:80:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14177:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14179:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14179:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14179:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14166:1:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14173:1:127"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14169:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14169:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14163:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14163:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14160:39:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14208:16:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14219:1:127"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14222:1:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14215:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14215:9:127"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14208:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14133:1:127",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14136:1:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14142:3:127",
                "type": ""
              }
            ],
            "src": "14102:128:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14409:165:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14426:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14437:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14419:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14419:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14419:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14460:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14471:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14456:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14456:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14476:2:127",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14449:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14449:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14449:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14499:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14510:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14495:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14495:18:127"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14515:17:127",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14488:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14488:45:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14488:45:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14542:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14554:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14565:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14550:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14550:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14542:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14386:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14400:4:127",
                "type": ""
              }
            ],
            "src": "14235:339:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14626:88:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14657:22:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14659:16:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14659:18:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14659:18:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14642:5:127"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:1:127",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14649:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14649:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14639:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14639:17:127"
                  },
                  "nodeType": "YulIf",
                  "src": "14636:43:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14688:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14699:5:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14706:1:127",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14695:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14695:13:127"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14688:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14608:5:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14618:3:127",
                "type": ""
              }
            ],
            "src": "14579:135:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14893:243:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14910:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14921:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14903:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14903:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14903:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14944:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14955:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14940:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14940:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14960:2:127",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14933:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14933:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14933:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14983:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14994:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14979:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14979:18:127"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14999:34:127",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14972:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14972:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14972:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15054:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15065:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15050:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15050:18:127"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15070:23:127",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15043:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15043:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15043:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15103:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15115:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15126:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15111:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15111:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15103:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14870:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14884:4:127",
                "type": ""
              }
            ],
            "src": "14719:417:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15315:228:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15332:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15343:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15325:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15325:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15325:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15366:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15377:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15362:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15362:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15382:2:127",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15355:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15355:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15355:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15405:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15416:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15401:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15401:18:127"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15421:34:127",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15394:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15394:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15394:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15476:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15487:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15472:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15472:18:127"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15492:8:127",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15465:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15465:36:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15465:36:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15510:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15522:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15533:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15518:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15518:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15510:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15292:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15306:4:127",
                "type": ""
              }
            ],
            "src": "15141:402:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15722:171:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15739:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15750:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15732:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15732:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15732:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15773:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15784:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15769:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15769:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15789:2:127",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15762:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15762:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15762:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15812:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15823:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15808:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15808:18:127"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15828:23:127",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15801:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15801:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15801:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15861:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15873:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15884:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15869:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15869:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15861:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15699:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15713:4:127",
                "type": ""
              }
            ],
            "src": "15548:345:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16055:241:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16065:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16077:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16088:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16073:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16073:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16065:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16100:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16110:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16104:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16168:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16183:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16191:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16179:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16179:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16161:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16161:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16161:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16215:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16226:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16211:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16211:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16235:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16243:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16231:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16231:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16204:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16204:43:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16204:43:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16267:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16278:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16263:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16263:18:127"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16283:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16256:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16256:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16256:34:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16008:9:127",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16019:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16027:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16035:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16046:4:127",
                "type": ""
              }
            ],
            "src": "15898:398:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16475:171:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16492:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16503:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16485:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16485:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16485:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16526:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16537:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16522:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16522:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16542:2:127",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16515:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16515:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16515:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16565:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16576:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16561:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16561:18:127"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16581:23:127",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16554:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16554:51:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16554:51:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16614:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16626:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16637:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16622:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16622:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16614:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16452:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16466:4:127",
                "type": ""
              }
            ],
            "src": "16301:345:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16774:135:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16784:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16796:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16807:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16792:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16792:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16784:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16826:9:127"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16837:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16819:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:25:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16819:25:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16864:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16860:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16860:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16894:6:127"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16887:6:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16887:14:127"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16880:6:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16880:22:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16853:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16853:50:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16853:50:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16735:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16746:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16754:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16765:4:127",
                "type": ""
              }
            ],
            "src": "16651:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16967:205:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16977:10:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16986:1:127",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16981:1:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17046:63:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17071:3:127"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17076:1:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17067:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17067:11:127"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "17090:3:127"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17095:1:127"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17086:3:127"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17086:11:127"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17080:5:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17080:18:127"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17060:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17060:39:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17060:39:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17007:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17010:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17004:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17004:13:127"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17018:19:127",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17020:15:127",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17029:1:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17032:2:127",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17025:3:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17025:10:127"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17020:1:127"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17000:3:127",
                    "statements": []
                  },
                  "src": "16996:113:127"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17135:31:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17148:3:127"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17153:6:127"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17144:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17144:16:127"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17162:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17137:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17137:27:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17137:27:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17124:1:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17127:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17121:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:13:127"
                  },
                  "nodeType": "YulIf",
                  "src": "17118:48:127"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16945:3:127",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16950:3:127",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16955:6:127",
                "type": ""
              }
            ],
            "src": "16914:258:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17314:137:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17324:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17344:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17338:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17338:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17328:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17386:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17394:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17382:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17382:17:127"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17401:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17406:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "17360:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17360:53:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17360:53:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17422:23:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17433:3:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17438:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17429:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17429:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17422:3:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17290:3:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17295:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17306:3:127",
                "type": ""
              }
            ],
            "src": "17177:274:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17630:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17647:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17658:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17640:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17640:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17640:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17681:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17692:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17677:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17677:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17697:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17670:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17670:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17670:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17720:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17731:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17716:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17716:18:127"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17736:31:127",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17709:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17709:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17777:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17789:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17800:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17785:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17785:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17777:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17607:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17621:4:127",
                "type": ""
              }
            ],
            "src": "17456:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17988:175:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18005:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18016:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17998:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17998:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17998:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18039:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18050:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18035:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18035:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18055:2:127",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18028:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18028:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18028:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18078:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18089:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18074:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18074:18:127"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18094:27:127",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18067:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18067:55:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18067:55:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18131:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18143:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18154:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18139:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18139:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18131:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17965:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17979:4:127",
                "type": ""
              }
            ],
            "src": "17814:349:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18342:180:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18359:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18370:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18352:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18352:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18352:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18393:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18404:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18389:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18389:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18409:2:127",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18382:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18382:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18382:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18432:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18443:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18428:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18428:18:127"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18448:32:127",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18421:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18421:60:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18421:60:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18490:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18502:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18513:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18498:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18498:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18490:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18319:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18333:4:127",
                "type": ""
              }
            ],
            "src": "18168:354:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18701:170:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18718:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18729:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18711:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18711:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18711:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18752:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18763:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18748:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18748:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18768:2:127",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18741:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18741:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18741:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18791:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18802:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18787:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18787:18:127"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18807:22:127",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18780:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18780:50:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18780:50:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18839:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18851:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18862:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18847:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18847:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18839:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18678:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18692:4:127",
                "type": ""
              }
            ],
            "src": "18527:344:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19065:443:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19075:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19087:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19098:3:127",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19083:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19083:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19075:4:127"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19118:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19135:6:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19129:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19129:13:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19111:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:32:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19111:32:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19163:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19174:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19159:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19159:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19191:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19199:4:127",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19187:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19187:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19181:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19181:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19152:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19152:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19152:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19226:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19237:4:127",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19222:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19222:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19254:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19262:4:127",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19250:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19250:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19244:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19244:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19215:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19215:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19215:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19289:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19300:4:127",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19285:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19285:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19317:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19325:4:127",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19313:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19313:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19307:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19307:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19278:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19278:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19278:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19352:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19363:4:127",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19348:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19348:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19380:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19388:4:127",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19376:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19376:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19370:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19370:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19341:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19341:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19341:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19415:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19426:4:127",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19411:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19411:20:127"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19443:6:127"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19451:4:127",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19439:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19439:17:127"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19433:5:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19433:24:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19404:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19404:54:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19404:54:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19478:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19489:3:127",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19474:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19474:19:127"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19495:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19467:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19467:35:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19467:35:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19026:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19037:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19045:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19056:4:127",
                "type": ""
              }
            ],
            "src": "18876:632:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19611:147:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19657:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19666:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19669:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19659:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19659:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19659:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19632:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19641:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19628:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19628:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19653:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19624:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19624:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "19621:52:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19682:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19698:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19692:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19692:16:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19682:6:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19717:35:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19737:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19748:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19733:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19733:18:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19727:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19727:25:127"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19717:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19569:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19580:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19592:6:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19600:6:127",
                "type": ""
              }
            ],
            "src": "19513:245:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19844:170:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19890:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19899:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19902:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19892:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19892:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19892:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19865:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19874:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19861:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19861:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19886:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19857:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19857:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "19854:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19915:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19934:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19928:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19928:16:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19919:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19978:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "19953:24:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19953:31:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19953:31:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19993:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20003:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19993:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19810:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19821:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19833:6:127",
                "type": ""
              }
            ],
            "src": "19763:251:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20097:167:127",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20143:16:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20152:1:127",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20155:1:127",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20145:6:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20145:12:127"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20145:12:127"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20118:7:127"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20127:9:127"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20114:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20114:23:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20139:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20110:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20110:32:127"
                  },
                  "nodeType": "YulIf",
                  "src": "20107:52:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20168:29:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20187:9:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20181:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20181:16:127"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "20172:5:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20228:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "20206:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20206:28:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20206:28:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20243:15:127",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20253:5:127"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "20243:6:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20063:9:127",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20074:7:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20086:6:127",
                "type": ""
              }
            ],
            "src": "20019:245:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20443:232:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20460:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20471:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20453:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20453:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20453:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20494:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20505:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20490:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20490:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20510:2:127",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20483:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20483:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20483:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20533:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20544:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20529:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20529:18:127"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20549:34:127",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20522:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20522:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20522:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20604:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20615:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20600:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20600:18:127"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20620:12:127",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20593:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20593:40:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20593:40:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20642:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20654:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20665:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20650:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20650:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20642:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20420:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20434:4:127",
                "type": ""
              }
            ],
            "src": "20269:406:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20854:234:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20871:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20882:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20864:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20864:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20864:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20905:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20916:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20901:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20901:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20921:2:127",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20894:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20894:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20894:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20944:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20955:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20940:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20940:18:127"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20960:34:127",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20933:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20933:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20933:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21015:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21026:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21011:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21011:18:127"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21031:14:127",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21004:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21004:42:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21004:42:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21055:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21067:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21078:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21063:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21063:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21055:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20831:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20845:4:127",
                "type": ""
              }
            ],
            "src": "20680:408:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21187:289:127",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21197:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "21217:5:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21211:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21211:12:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21201:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21232:33:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "21252:5:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21259:4:127",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21248:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21248:16:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21242:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21242:23:127"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21236:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21274:41:127",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21288:26:127",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "21284:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21284:31:127"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "21278:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21324:20:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "21337:2:127"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "21341:2:127"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21333:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21333:11:127"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21324:5:127"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21379:91:127",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "21393:67:127",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "21410:2:127"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "21418:2:127"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21426:1:127",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21433:1:127",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "21440:2:127",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21444:6:127"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "21436:3:127"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "21436:15:127"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "21429:3:127"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21429:23:127"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "21422:3:127"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21422:31:127"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "21414:3:127"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21414:40:127"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "21406:3:127"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "21406:49:127"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "21457:2:127"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "21402:3:127"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21402:58:127"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "21393:5:127"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21359:6:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21367:2:127",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "21356:2:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21356:14:127"
                  },
                  "nodeType": "YulIf",
                  "src": "21353:117:127"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "21167:5:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21177:5:127",
                "type": ""
              }
            ],
            "src": "21093:383:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21610:198:127",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21620:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21632:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21643:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21628:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21628:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21620:4:127"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21655:52:127",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "21665:42:127",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "21659:2:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21723:9:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21738:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21746:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21734:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21734:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21716:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21716:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21716:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21770:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21781:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21766:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21766:18:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21790:6:127"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21798:2:127"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21786:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21786:15:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21759:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21759:43:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21759:43:127"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21571:9:127",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21582:6:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21590:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21601:4:127",
                "type": ""
              }
            ],
            "src": "21481:327:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21987:228:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22004:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22015:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21997:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21997:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21997:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22038:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22049:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22034:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22034:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22054:2:127",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22027:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22027:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22027:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22077:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22088:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22073:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22073:18:127"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22093:34:127",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22066:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22066:62:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22066:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22148:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22159:2:127",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22144:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22144:18:127"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22164:8:127",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22137:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22137:36:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22137:36:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22182:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22194:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22205:3:127",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22190:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22190:19:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22182:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21964:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21978:4:127",
                "type": ""
              }
            ],
            "src": "21813:402:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22394:179:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22411:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22422:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22404:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22404:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22404:21:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22445:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22456:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22441:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22441:18:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22461:2:127",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22434:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22434:30:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22434:30:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22484:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22495:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22480:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22480:18:127"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22500:31:127",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22473:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22473:59:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22473:59:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22541:26:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22553:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22564:2:127",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22549:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22549:18:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22541:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22371:9:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22385:4:127",
                "type": ""
              }
            ],
            "src": "22220:353:127"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:262:127",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22716:9:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22727:2:127",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22709:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22709:21:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22709:21:127"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "22739:27:127",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22759:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22753:5:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22753:13:127"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "22743:6:127",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22786:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22797:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22782:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22782:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22802:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22775:6:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22775:34:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22775:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22844:6:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22852:2:127",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22840:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22840:15:127"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22861:9:127"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22872:2:127",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22857:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22857:18:127"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22877:6:127"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22818:21:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22818:66:127"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22818:66:127"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22893:62:127",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22909:9:127"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22928:6:127"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22936:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22924:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22924:15:127"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22945:2:127",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22941:3:127"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22941:7:127"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22920:3:127"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22920:29:127"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22905:3:127"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22905:45:127"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22952:2:127",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22901:3:127"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22901:54:127"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22893:4:127"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22668:9:127",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22679:6:127",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22690:4:127",
                "type": ""
              }
            ],
            "src": "22578:383:127"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value4 := value_1\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$14756_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 127,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "490:29633:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;14453:166:34;;;:::i;4086:187::-;;;;;;:::i;:::-;;:::i;2483:30::-;;;;;;;;;1033:25:127;;;1021:2;1006:18;2483:30:34;;;;;;;;28674:501:35;;;;;;:::i;:::-;;:::i;7929:104:34:-;8010:9;:16;7929:104;;3700:99;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3700:99:34;;;;;;-1:-1:-1;;;;;2926:55:127;;;2908:74;;2896:2;2881:18;3700:99:34;2762:226:127;3875:32:34;;;;;-1:-1:-1;;;;;3875:32:34;;;12429:568:35;;;;;;:::i;:::-;;:::i;3212:47:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;11018:2030;;;;;;:::i;:::-;;:::i;799:34:35:-;;;;;-1:-1:-1;;;;;799:34:35;;;2437:40:34;;;;;;2255:57;;;;;;6727:200;;;;;;:::i;:::-;;:::i;22902:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;4911:25:127;;;4967:2;4952:18;;4945:34;;;;4884:18;22902:1145:35;4737:248:127;8260:691:35;;;;;;:::i;:::-;;:::i;1895:25:34:-;;;;;;4375:108;;;;;;:::i;:::-;;:::i;1926:27::-;;;;;;7630:168;;;;;;:::i;:::-;;:::i;2619:36::-;;;;;;8251:165;;;;;;:::i;:::-;;:::i;2159:57::-;;;;;;7187:282;;;;;;:::i;:::-;;:::i;1666:25::-;;;;;-1:-1:-1;;;;;1666:25:34;;;9104:1669;;;;;;:::i;:::-;;:::i;1244:121:35:-;;;;;;:::i;:::-;;:::i;1815:26:34:-;;;;;-1:-1:-1;;;;;1815:26:34;;;1908:101:3;;;:::i;21521:639:35:-;;;;;;:::i;:::-;;:::i;26404:1210::-;;;;;;:::i;:::-;;:::i;3820:36:34:-;;;;;-1:-1:-1;;;;;3820:36:34;;;1557:20;;;;;-1:-1:-1;;;;;1557:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;3178:28:34;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7316:15:127;;;7298:34;;7363:2;7348:18;;7341:34;;;;7391:18;;7384:34;;;;7449:2;7434:18;;7427:34;;;;7492:3;7477:19;;7470:35;7542:15;;;7536:3;7521:19;;7514:44;7224:3;7209:19;3178:28:34;6924:640:127;698:34:35;;;;;;;;;;;;;;;7734:14:127;;7727:22;7709:41;;7697:2;7682:18;698:34:35;7569:187:127;27727:671:35;;;;;;:::i;:::-;;:::i;2840:22:34:-;;;;;;2352:30;;;;;;13580:334;;;:::i;5257:132::-;;;;;;:::i;:::-;;:::i;1729:32::-;;;;;-1:-1:-1;;;;;1729:32:34;;;3443:72;;;;;;:::i;:::-;;:::i;:::-;;;;8436:25:127;;;8492:2;8477:18;;8470:34;;;;8520:18;;;8513:34;;;;8578:2;8563:18;;8556:34;8621:3;8606:19;;8599:35;8665:3;8650:19;;8643:35;8423:3;8408:19;3443:72:34;8149:535:127;1583:32:34;;;;;-1:-1:-1;;;;;1583:32:34;;;2719:37;;;;;;29560:561:35;;;;;;:::i;:::-;;:::i;1991:28:34:-;;;;;;1470:118:35;;;;;;:::i;:::-;;:::i;15890:301:34:-;;;;;;:::i;:::-;;:::i;2063:42::-;;;;;;9634:821:35;;;;;;:::i;:::-;;:::i;5910:613:34:-;;;;;;:::i;:::-;;:::i;2922:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4959:228:34:-;;;;;;:::i;:::-;;:::i;4679:226::-;;;;;;:::i;:::-;;:::i;2988:39::-;;;;;-1:-1:-1;;;;;2988:39:34;;;1847:633:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;2007:28:35::1;2038:9;2048:4;2038:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;2152::::0;;2038;;-1:-1:-1;2134:134:35::1;::::0;-1:-1:-1;;;;;2152:15:35::1;2199:10;2231:4;2250:8:::0;2134:51:::1;:134::i;:::-;2317:156;2339:4;2357:10;2317:156;;;;;;;;;;;::::0;2397:8:::1;2419:15;2448;2317:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;1847:633:35:o;14453:166:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;14611:1:::2;14587:21;:25:::0;14453:166::o;4086:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4204:5:34::1;:14:::0;;-1:-1:-1;;;;;4204:14:34;;::::1;-1:-1:-1::0;;;;;;4204:14:34;;::::1;;::::0;;;4228:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;4086:187::o;28674:501:35:-;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;28855:11:::1;;28844:7;;:22;28840:329;;;28962:52;28988:11;29001:12;28962:25;:52::i;:::-;28674:501:::0;;:::o;28840:329::-:1;29120:5;::::0;29113:45:::1;::::0;;;;-1:-1:-1;;;;;13032:55:127;;;29113:45:35::1;::::0;::::1;13014:74:127::0;13104:18;;;13097:34;;;29120:5:35;;::::1;::::0;29113:18:::1;::::0;12987::127;;29113:45:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;28674:501:::0;;:::o;12429:568::-;12559:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;12609:28:35::1;12640:146;12663:4;12681:10;12640:146;;;;;;;;;;;::::0;12721:10:::1;12745:12;12771:5;12640:9;:146::i;:::-;12609:177;;12848:112;12914:10;12938:4;:12;;;12866:9;12876:4;12866:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:20:::0;-1:-1:-1;;;;;12866:20:35::1;::::0;12848:112;:52:::1;:112::i;:::-;12978:12:::0;1772:1:8;2872:7;:22;12978:12:35;12429:568;-1:-1:-1;;;;12429:568:35:o;11018:2030:34:-;11069:17;11148:24;11175:9;11185:4;11175:15;;;;;;;;:::i;:::-;;;;;;;;;;;11148:42;;11279:6;:22;;;11263:12;:38;11259:77;;-1:-1:-1;11324:1:34;;11018:2030;-1:-1:-1;;11018:2030:34:o;11259:77::-;11430:12;;;;11423:34;;;;;;;;11401:19;;-1:-1:-1;;;;;11430:12:34;;11423:32;;:34;;;;;;;;;;;;;;11430:12;11423:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11401:56;-1:-1:-1;11471:16:34;11467:106;;-1:-1:-1;11528:12:34;11503:22;;;;:37;-1:-1:-1;11561:1:34;;11018:2030;-1:-1:-1;11018:2030:34:o;11467:106::-;11687:21;11726:6;:22;;;11711:12;:37;;;;:::i;:::-;11687:61;;11858:19;11958:15;;11937:6;:17;;;11909:13;;11881;:41;;;;:::i;:::-;:73;;;;:::i;:::-;11880:93;;;;:::i;:::-;12081:24;;11858:115;;-1:-1:-1;;;;;;12081:24:34;12072:4;12064:41;12060:707;;;12266:53;12292:11;12313:4;12266:25;:53::i;:::-;12408:1;12396:13;;12060:707;;;12563:5;;12556:46;;;;;12583:4;12556:46;;;13014:74:127;13104:18;;;13097:34;;;-1:-1:-1;;;;;12563:5:34;;;;12556:18;;12987::127;;12556:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12662:11;12650:23;;12725:31;12746:9;12725:20;:31::i;:::-;12915:11;12890:6;:22;;;:36;;;;:::i;:::-;12865:22;;;:61;-1:-1:-1;;13029:12:34;13004:22;;;;:37;;;;-1:-1:-1;11018:2030:34;;-1:-1:-1;11018:2030:34:o;6727:200::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;6862:27:::2;:58:::0;6727:200::o;22902:1145:35:-;1033:19;;23182:18;;;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;23322:201:::1;23358:8;23380:15;23409:4;23427:10;23451:12;23477:18;23509:4;23322:22;:201::i;:::-;23288:235:::0;;-1:-1:-1;23288:235:35;-1:-1:-1;23589:14:35;;23585:164:::1;;23637:17;::::0;23619:119:::1;::::0;-1:-1:-1;;;;;23637:17:35::1;23686:10;23714::::0;23619:49:::1;:119::i;:::-;23878:21:::0;;23874:167:::1;;23970:11;::::0;23933:5:::1;::::0;23915:115:::1;::::0;-1:-1:-1;;;;;23933:5:35;;::::1;::::0;23970:11:::1;23999:17:::0;23915:37:::1;:115::i;:::-;22902:1145:::0;;;;;;;;;:::o;8260:691::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;8472:17:35::1;8492:9;8502:4;8492:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21:::1;:15;::::0;;::::1;;:21;::::0;8585:17:::1;::::0;-1:-1:-1;;;;;8492:21:35;;::::1;::::0;-1:-1:-1;8567:133:35::1;::::0;8585:17:::1;8634:10;8492:21:::0;8681:9;8567:53:::1;:133::i;:::-;8744:200;8777:4;8795:10;8744:200;;;;;;;;;;;::::0;8835:9:::1;8858:15;8887;8916:18;8744:19;:200::i;4375:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4450:11:34::1;:26:::0;;-1:-1:-1;;;;;;4450:26:34::1;-1:-1:-1::0;;;;;4450:26:34;;;::::1;::::0;;;::::1;::::0;;4375:108::o;7630:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7745:21:34::1;:46:::0;;-1:-1:-1;;;;;;7745:46:34::1;-1:-1:-1::0;;;;;7745:46:34;;;::::1;::::0;;;::::1;::::0;;7630:168::o;8251:165::-;8348:7;8378:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8378:24:34;;;;;;;;;:31;8251:165;;;;;:::o;7187:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7346:7:34::1;:18:::0;;;;7374:11:::1;:26:::0;7410:24:::1;:52:::0;;-1:-1:-1;;;;;;7410:52:34::1;-1:-1:-1::0;;;;;7410:52:34;;::::1;::::0;;;::::1;::::0;;7187:282::o;9104:1669::-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;9527:47:::1;9708:30;9716:22:::0;9708:5:::1;:30;:::i;:::-;9659:28;9622:18;9578:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9577:162;;;;:::i;:::-;9527:212;;9872:42;;9818:39;:96;9801:472;;;-1:-1:-1::0;9981:42:34::1;::::0;9801:472:::1;;;10111:42;;10057:39;:96;10040:233;;;-1:-1:-1::0;10220:42:34::1;::::0;10040:233:::1;10753:12;::::0;10720:30:::1;10728:22:::0;10720:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10688:15;::::0;10590:79:::1;10630:39:::0;10590:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10589:177;;;;:::i;:::-;10561:13;:205:::0;-1:-1:-1;;;;;;9104:1669:34:o;1244:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1324:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;1324:34:35;;::::1;::::0;;;::::1;::::0;;1244:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;21521:639:35:-;21700:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;21751::35::1;21775:191;21811:10;21775:191;;;;;;;;;;;::::0;21851:4:::1;21869:10;21893:12;21919:18;21951:5;21775:22;:191::i;:::-;-1:-1:-1::0;22036:17:35::1;::::0;21750:216;;-1:-1:-1;22018:107:35::1;::::0;-1:-1:-1;;;;;22036:17:35::1;22081:10;21750:216:::0;22018:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;22143:10:35;21521:639;-1:-1:-1;;;;;21521:639:35:o;26404:1210::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;26632:22:35::1;26657:21:::0;;;:11:::1;:21;::::0;;;;;;;26679:10:::1;26657:33:::0;;;;;;;:71;;26704:14;;26657:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;26788:21;;;:11:::1;:21:::0;;;;;;26810:10:::1;26788:33:::0;;;;;;;;:71;;26657:96;;-1:-1:-1;26788:33:35;26835:14;;26788:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;26763:111;;26906:20;26932:192;26968:10;26932:192;;;;;;;;;;;::::0;27008:8:::1;27030:14;27058:5;27077:18;27109:5;26932:22;:192::i;:::-;26905:219;;;27170:122;27233:9;27243:6;27233:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:17;::::0;;::::1;;:23;::::0;27188:17:::1;::::0;-1:-1:-1;;;;;27188:17:35;;::::1;::::0;27233:23:::1;27270:12:::0;27170:49:::1;:122::i;:::-;27324:203;27357:6;27377:10;27324:203;;;;;;;;;;;::::0;27417:12:::1;27443:14;27471;27499:18;27324:19;:203::i;:::-;27543:64;::::0;27562:10:::1;2908:74:127::0;;27600:6:35;;27584:14;;27574:8;;27543:64:::1;::::0;2896:2:127;2881:18;27543:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;26404:1210:35:o;3178:28:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3178:28:34;;;;-1:-1:-1;3178:28:34;;;;;;;;:::o;27727:671:35:-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;27876:19:35::1;27898:31;27912:4:::0;27918:10:::1;27898:13;:31::i;:::-;27876:53;;27944:11;27939:123;27967:11;27961:3;:17;27939:123;;;28001:50;28011:4;28017:10;28001:50;;;;;;;;;;;::::0;28033:3:::1;28038:5;28045::::0;28001:9:::1;:50::i;:::-;-1:-1:-1::0;27980:5:35::1;::::0;::::1;:::i;:::-;;;27939:123;;;;28114:16;28151:9;28161:4;28151:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:20:::0;28133:86:::1;::::0;;;;28204:4:::1;28133:86;::::0;::::1;2908:74:127::0;-1:-1:-1;;;;;28151:20:35;;::::1;::::0;28133:49:::1;::::0;2881:18:127;;28133:86:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28114:105:::0;-1:-1:-1;28233:12:35;;28229:163:::1;;28261:120;28331:10;28359:8;28279:9;28289:4;28279:15;;;;;;;;:::i;28261:120::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;27727:671:35:o;13580:334:34:-;995:21;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1449:11:::1;;1438:7;;:22;;1430:58;;;;-1:-1:-1::0;;;;;1430:58:34::1;;;;;;;:::i;:::-;13797:11:::2;::::0;13822:22:::2;::::0;13764:5:::2;::::0;13746:108:::2;::::0;-1:-1:-1;;;;;13764:5:34;;::::2;::::0;13797:11;::::2;::::0;13746:37:::2;:108::i;5257:132::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5344:17:34::1;:38:::0;;-1:-1:-1;;;;;;5344:38:34::1;-1:-1:-1::0;;;;;5344:38:34;;;::::1;::::0;;;::::1;::::0;;5257:132::o;3443:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3443:72:34;;-1:-1:-1;3443:72:34;-1:-1:-1;3443:72:34;;;:::o;29560:561:35:-;995:21:34;;-1:-1:-1;;;;;995:21:34;929:10:14;-1:-1:-1;;;;;979:37:34;;971:67;;;;-1:-1:-1;;;;;971:67:34;;;;;;;:::i;:::-;1223:24:::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;29907:11:35::2;::::0;29856:114:::2;::::0;-1:-1:-1;;;;;29907:11:35::2;29932:28;29947:13:::0;29932:12;:28:::2;:::i;:::-;29874:5;::::0;-1:-1:-1;;;;;29874:5:35::2;::::0;29856:114;:37:::2;:114::i;:::-;30096:17;::::0;30055:59:::2;::::0;30081:13;;-1:-1:-1;;;;;30096:17:35::2;30055:25;:59::i;1470:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1550:19:35::1;:31:::0;;-1:-1:-1;;;;;;1550:31:35::1;-1:-1:-1::0;;;;;1550:31:35;;;::::1;::::0;;;::::1;::::0;;1470:118::o;15890:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;16031:5:34::1;::::0;-1:-1:-1;;;;;16021:15:34;;::::1;16031:5:::0;::::1;16021:15;;16000:115;;;::::0;-1:-1:-1;;;;;16000:115:34;;14921:2:127;16000:115:34::1;::::0;::::1;14903:21:127::0;14960:2;14940:18;;;14933:30;14999:34;14979:18;;;14972:62;15070:23;15050:18;;;15043:51;15111:19;;16000:115:34::1;14719:417:127::0;16000:115:34::1;16125:59;-1:-1:-1::0;;;;;16125:38:34;::::1;16164:10;16176:7:::0;16125:38:::1;:59::i;9634:821:35:-:0;1033:19;;-1:-1:-1;;;;;1033:19:35;929:10:14;-1:-1:-1;;;;;1017:35:35;;1009:59;;;;-1:-1:-1;;;;;1009:59:35;;;;;;;:::i;:::-;9956:17:::1;9976:9;9986:4;9976:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21:::1;:15;::::0;;::::1;;:21;::::0;10069:17:::1;::::0;-1:-1:-1;;;;;9976:21:35;;::::1;::::0;-1:-1:-1;10051:133:35::1;::::0;10069:17:::1;10118:10;9976:21:::0;10165:9;10051:53:::1;:133::i;:::-;10237:211;10270:4;10288:8;10310:15;10339:9;10362:15;10391;10420:18;10237:19;:211::i;:::-;9916:539;9634:821:::0;;;;;;;:::o;5910:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;6178:12:34::1;:28:::0;;;6284:17;;6302:1:::1;6284:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;6239:42;:65:::0;-1:-1:-1;6359:17:34;;6377:1:::1;6359:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6314:42;:65:::0;-1:-1:-1;6389:25:34::1;:54:::0;6482:15:::1;:34:::0;-1:-1:-1;;;5910:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;15343:2:127;2238:73:3::1;::::0;::::1;15325:21:127::0;15382:2;15362:18;;;15355:30;15421:34;15401:18;;;15394:62;15492:8;15472:18;;;15465:36;15518:19;;2238:73:3::1;15141:402:127::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4959:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5105:10:34::1;::::0;:15;5097:49:::1;;;::::0;-1:-1:-1;;;;;5097:49:34;;15750:2:127;5097:49:34::1;::::0;::::1;15732:21:127::0;15789:2;15769:18;;;15762:30;15828:23;15808:18;;;15801:51;15869:18;;5097:49:34::1;15548:345:127::0;5097:49:34::1;5156:10;:24:::0;4959:228::o;4679:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1223:24:34::1;::::0;-1:-1:-1;;;;;1223:24:34::1;1214:4;1206:41;1198:69;;;;-1:-1:-1::0;;;;;1198:69:34::1;;;;;;;:::i;:::-;4826:10:::2;:24:::0;;-1:-1:-1;;;;;4826:24:34;;::::2;-1:-1:-1::0;;;;;;4826:24:34;;::::2;;::::0;;;4860:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4679:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;16179:15:127;;;1143:68:12;;;16161:34:127;16231:15;;16211:18;;;16204:43;16263:18;;;16256:34;;;1116:96:12;;1136:5;;1166:27;;16073:18:127;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;3263:2051:35:-;3483:25;3546:28;3577:9;3587:4;3577:15;;;;;;;;:::i;:::-;;;;;;;;;;;3546:46;;3650:1;3639:8;:12;3631:46;;;;-1:-1:-1;;;;;3631:46:35;;16503:2:127;3631:46:35;;;16485:21:127;16542:2;16522:18;;;16515:30;16581:23;16561:18;;;16554:51;16622:18;;3631:46:35;16301:345:127;3631:46:35;3804:17;3816:4;3804:11;:17::i;:::-;3784:37;;3882:21;3906:43;3923:8;3933:15;3906:16;:43::i;:::-;4051:16;;;;3999:15;;3882:67;;-1:-1:-1;3981:118:35;;-1:-1:-1;;;;;3999:15:35;;;;4051:16;4081:8;3981:56;:118::i;:::-;4226:19;4255:9;4265:4;4255:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:21;;;4248:78;;;;;;;;1033:25:127;;;-1:-1:-1;;;;;4255:21:35;;;;4248:46;;1006:18:127;;4248:78:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4431:17;;4407:114;;;;;;;;16819:25:127;;;4498:22:35;;;;;16887:14:127;16880:22;16860:18;;;16853:50;4226:100:35;;-1:-1:-1;4381:23:35;;-1:-1:-1;;;;;4431:17:35;;;;4407:73;;16792:18:127;;4407:114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4704:17;;4680:105;;;;;;;;4911:25:127;;;4952:18;;;4945:34;;;4381:140:35;;-1:-1:-1;4651:26:35;;-1:-1:-1;;;;;4704:17:35;;;;4680:75;;4884:18:127;;4680:105:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4651:134;;4934:18;4894:10;:36;;;:58;;;;;;;:::i;:::-;;;;-1:-1:-1;4989:217:35;;-1:-1:-1;5017:4:35;5035:13;5062:15;5091:18;5123:15;5152;5181;4989:14;:217::i;:::-;5292:4;5275:15;5252:55;;;;;;:::i;:::-;;;;;;;;5260:13;-1:-1:-1;;;;;5252:55:35;;5298:8;5252:55;;;;1033:25:127;;1021:2;1006:18;;887:177;5252:55:35;;;;;;;;3510:1804;;;;;3263:2051;;;;;;;;:::o;14848:250:34:-;15024:10;;14987:5;;14969:122;;-1:-1:-1;;;;;14987:5:34;;;;15024:10;15048:12;15074:7;14969:41;:122::i;13699:6240:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;14057:27:35;;;:57;;;;;14113:1;14088:15;:22;:26;14057:57;14056:139;;;-1:-1:-1;;;;;;14136:27:35;;;;;;:58;;-1:-1:-1;14167:22:35;;:27;14136:58;14035:215;;;;-1:-1:-1;;;;;14035:215:35;;17658:2:127;14035:215:35;;;17640:21:127;17697:2;17677:18;;;17670:30;17736:31;17716:18;;;17709:59;17785:18;;14035:215:35;17456:353:127;14035:215:35;14316:27;14346:119;14371:4;14389:10;14413:15;14442:13;14346:11;:119::i;:::-;14316:149;;14522:28;14553:9;14563:4;14553:15;;;;;;;;:::i;:::-;;;;;;;;;;;14522:46;;14660:1;14636:8;:21;;;:25;14628:63;;;;-1:-1:-1;;;;;14628:63:35;;18016:2:127;14628:63:35;;;17998:21:127;18055:2;18035:18;;;18028:30;18094:27;18074:18;;;18067:55;18139:18;;14628:63:35;17814:349:127;14628:63:35;14818:1;14779:10;:36;;;:40;14758:117;;;;-1:-1:-1;;;;;14758:117:35;;18370:2:127;14758:117:35;;;18352:21:127;18409:2;18389:18;;;18382:30;18448:32;18428:18;;;18421:60;18498:18;;14758:117:35;18168:354:127;14758:117:35;14949:22;;;;:27;14941:60;;;;-1:-1:-1;;;;;14941:60:35;;18729:2:127;14941:60:35;;;18711:21:127;18768:2;18748:18;;;18741:30;18807:22;18787:18;;;18780:50;18847:18;;14941:60:35;18527:344:127;14941:60:35;15108:17;15120:4;15108:11;:17::i;:::-;;15167:23;15323:8;:19;;;15272:10;:36;;;15230:10;:26;;;15194:8;:21;;;:62;;;;:::i;:::-;15193:115;;;;:::i;:::-;:149;;;;:::i;:::-;15167:175;-1:-1:-1;15418:19:35;;15414:2322;;15628:17;;15604:146;;;;;;19129:13:127;;15604:146:35;;;19111:32:127;19199:4;19187:17;;19181:24;19159:20;;;19152:54;19250:17;;;19244:24;19222:20;;;19215:54;19325:4;19313:17;;19307:24;19285:20;;;19278:54;19388:4;19376:17;;19370:24;19348:20;;;19341:54;19451:4;19439:17;;19433:24;19411:20;;;19404:54;19474:19;;;19467:35;;;15527:19:35;;;;-1:-1:-1;;;;;15628:17:35;;;;15604:61;;19083:19:127;;15604:146:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15509:241;;;;15769:19;15765:1961;;;15851:21;;;:35;;;15920:11;;15909:7;;:22;15905:777;;;16114:19;;16110:213;;16265:17;;16246:54;;-1:-1:-1;;;;;16265:17:35;16284:15;16246:18;:54::i;:::-;15765:1961;;15905:777;16556:19;;16552:112;;16603:38;16625:15;16603:21;:38::i;15765:1961::-;16806:15;;16802:108;;16845:46;16864:13;16879:11;16845:18;:46::i;:::-;16943:11;;16932:7;;:22;16928:784;;;17141:19;;17137:213;;17292:17;;17273:54;;-1:-1:-1;;;;;17292:17:35;17311:15;17273:18;:54::i;16928:784::-;17586:19;;17582:112;;17633:38;17655:15;17633:21;:38::i;:::-;15439:2297;;15414:2322;17823:12;17818:2115;;18096:26;18125:106;18163:13;18198:15;18125:16;:106::i;:::-;18096:135;;18334:18;18355:9;18365:4;18355:15;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;;;;;;;-1:-1:-1;;;;;18355:21:35;18334:42;;18398:13;18421:10;18398:34;;18686:22;18942:6;-1:-1:-1;;;;;18942:18:35;;:20;;;;;-1:-1:-1;;;18942:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18916:8;:23;;;:46;;;;:::i;:::-;18805:6;-1:-1:-1;;;;;18805:19:35;;:21;;;;;-1:-1:-1;;;18805:21:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18791:120;;;;;-1:-1:-1;;;;;2926:55:127;;;18791:120:35;;;2908:74:127;18791:54:35;;;;;;;2881:18:127;;18791:120:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18712:21;;:52;;18760:4;18712:52;:::i;:::-;:199;;;;:::i;:::-;18711:252;;;;:::i;:::-;19050:40;;;;;;;;1033:25:127;;;18686:277:35;;-1:-1:-1;;;;;;19050:24:35;;;;;1006:18:127;;19050:40:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;19285:21:35;;19226:36;;;;:80;;-1:-1:-1;19285:21:35;;-1:-1:-1;19226:80:35;:::i;:::-;19167:36;;;;:139;;;;19406:15;;19388:97;;;;;19462:4;19388:97;;;2908:74:127;;;;-1:-1:-1;;;;;19406:15:35;;19388:44;;2881:18:127;;19388:97:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19373:112;;:12;19546:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;19546:37:35;;;;;;;;;:49;;19633:15;;19546:37;19584:10;;19546:49;;;;;;:::i;:::-;;;;;;;;;;;:84;;:102;;;;18030:1633;19846:4;19813:15;19756:166;;;;;;:::i;:::-;;;;;;;;;;19896:12;;4911:25:127;;;4967:2;4952:18;;4945:34;19756:166:35;-1:-1:-1;;;;;19756:166:35;;;;;4884:18:127;19756:166:35;;;;;;;17818:2115;13952:5987;;;13699:6240;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;13032:55:127;;895:58:12;;;13014:74:127;13104:18;;;13097:34;;;868:86:12;;888:5;;918:23;;12987:18:127;;895:58:12;12840:297:127;868:86:12;745:216;;;:::o;13218:209:34:-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;13406:14:::1;13382:21;;:38;;;;:::i;:::-;13358:21;:62:::0;-1:-1:-1;13218:209:34:o;24884:1109:35:-;25151:18;25171:25;25238:18;25259:9;25269:4;25259:15;;;;;;;;:::i;:::-;;;;;;;;:21;:15;;;;;:21;;-1:-1:-1;;;;;25259:21:35;;-1:-1:-1;25397:171:35;25420:4;25438:8;25460:15;25489:10;25513:12;25539:19;25397:9;:171::i;:::-;25366:202;;25646:121;25721:10;25745:4;:12;;;25664:9;25674:4;25664:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;-1:-1:-1;;;;;25664:20:35;;25646:121;:61;:121::i;:::-;25880:12;;25824:110;;;;;;;;4911:25:127;;;;4952:18;;;4945:34;;;-1:-1:-1;;;;;25824:42:35;;;;;4884:18:127;;25824:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25811:123;;25965:4;:21;;;25945:41;;25198:795;;24884:1109;;;;;;;;;;:::o;11162:978::-;11461:17;11481:9;11491:4;11481:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:21;;;11593:106;;;;;;;;4911:25:127;;;4952:18;;;4945:34;;;-1:-1:-1;;;;;11481:21:35;;;;-1:-1:-1;11481:21:35;;11593:41;;4884:18:127;;11593:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11574:125;;11777:116;11852:9;11875:8;11795:9;11805:4;11795:15;;;;;;;;:::i;11777:116::-;11966:167;11988:4;12006:8;12028:15;12057:8;12079:15;12108;11966:8;:167::i;:::-;;11421:719;;11162:978;;;;;;;:::o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;20471:2:127;3921:85:12;;;20453:21:127;20510:2;20490:18;;;20483:30;20549:34;20529:18;;;20522:62;20620:12;20600:18;;;20593:40;20650:19;;3921:85:12;20269:406:127;5320:686:35;5544:8;-1:-1:-1;;;;;5624:22:35;;5620:380;;5760:1;5735:15;:22;:26;5710:129;;;;-1:-1:-1;;;;;5710:129:35;;20882:2:127;5710:129:35;;;20864:21:127;20921:2;20901:18;;;20894:30;20960:34;20940:18;;;20933:62;21031:14;21011:18;;;21004:42;21063:19;;5710:129:35;20680:408:127;5710:129:35;5964:24;5972:15;5964:24;:::i;:::-;5956:33;;;;5320:686;-1:-1:-1;;;5320:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;21716:34:127;-1:-1:-1;;;;;21786:15:127;;;21766:18;;;21759:43;2236:20:12;;2301:5;;2259:15;;;;;21628:18:127;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;13032:55:127;;2343:69:12;;;13014:74:127;13104:18;;;13097:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;12987:18:127;;2343:69:12;12840:297:127;6445:1331:35;6751:23;6777:9;6787:4;6777:15;;;;;;;;:::i;:::-;;;;;;;;;6751:41;;;;;;;;;6777:15;;;;;;;6751:41;;-1:-1:-1;;;;;6751:41:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:491;;;;;;;;;;;;;;;;7103:32;7040:22;;6751:41;;-1:-1:-1;6868:491:35;;;7103:32;7040:43;;6908:18;;7040:43;:::i;:::-;7039:96;;;;:::i;:::-;6868:491;;;;;;;;;;;;;;;;-1:-1:-1;6868:491:35;;;;;;;7423:17;;;:11;:17;;;;;-1:-1:-1;;;;;7423:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7590:22;;6834:525;;-1:-1:-1;7590:26:35;7586:184;;7746:13;7632:18;:24;7651:4;7632:24;;;;;;;;;;;7657:15;7632:41;;;;;;:::i;:::-;;;;;;;;;;;;;:111;7728:1;7691:34;7705:4;7711:13;7691;:34::i;:::-;:38;;;;:::i;:::-;7632:111;;;;;;;;;;;;:127;;;;;-1:-1:-1;;;;;7632:127:35;;;;;-1:-1:-1;;;;;7632:127:35;;;;;;7586:184;6720:1056;;6445:1331;;;;;;;:::o;20433:605::-;20602:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20602:27:35;-1:-1:-1;;;;;20645:27:35;;;20641:391;;20734:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;20734:32:35;;;;;;;;;:44;;20767:10;;20734:44;;;;;;:::i;:::-;;;;;;;;;;;20723:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20641:391;;;20847:20;20870:24;;;:18;:24;;;;;;:41;;;;20895:15;;20870:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;20978:17;;;:11;:17;;;;;-1:-1:-1;;;;;20870:83:35;;;20978:31;;;;;;:43;;20870:83;;-1:-1:-1;20978:31:35;20870:83;;20978:43;;;;;;:::i;:::-;;;;;;;;;;;20967:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20795:237;20641:391;20433:605;;;;;;:::o;15340:333:34:-;15494:5;;15476:49;;;;;15519:4;15476:49;;;2908:74:127;15438:9:34;;15419:16;;-1:-1:-1;;;;;15494:5:34;;;;15476:34;;2881:18:127;;15476:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15457:68;;15551:8;15539:9;:20;15535:70;;;15586:8;15575:19;;15535:70;15632:5;;15614:52;;-1:-1:-1;;;;;15632:5:34;15652:3;15657:8;15614:37;:52::i;14086:214::-;1449:11;;1438:7;;:22;;1430:58;;;;-1:-1:-1;;;;;1430:58:34;;;;;;;:::i;:::-;14278:15:::1;14253:22;;:40;;;;:::i;:::-;14228:22;:65:::0;-1:-1:-1;14086:214:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;22015:2:127;5148:81:13;;;21997:21:127;22054:2;22034:18;;;22027:30;22093:34;22073:18;;;22066:62;22164:8;22144:18;;;22137:36;22190:19;;5148:81:13;21813:402:127;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;22422:2:127;5239:60:13;;;22404:21:127;22461:2;22441:18;;;22434:30;22500:31;22480:18;;;22473:59;22549:18;;5239:60:13;22220:353:127;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:316:127:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:127;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:127;305:18;;;292:32;;14:316;-1:-1:-1;14:316:127:o;335:154::-;-1:-1:-1;;;;;414:5:127;410:54;403:5;400:65;390:93;;479:1;476;469:12;494:388;562:6;570;623:2;611:9;602:7;598:23;594:32;591:52;;;639:1;636;629:12;591:52;678:9;665:23;697:31;722:5;697:31;:::i;:::-;747:5;-1:-1:-1;804:2:127;789:18;;776:32;817:33;776:32;817:33;:::i;:::-;869:7;859:17;;;494:388;;;;;:::o;1069:315::-;1137:6;1145;1198:2;1186:9;1177:7;1173:23;1169:32;1166:52;;;1214:1;1211;1204:12;1166:52;1250:9;1237:23;1227:33;;1310:2;1299:9;1295:18;1282:32;1323:31;1348:5;1323:31;:::i;1389:184::-;-1:-1:-1;;;;;1438:1:127;1431:88;1538:4;1535:1;1528:15;1562:4;1559:1;1552:15;1578:718;1620:5;1673:3;1666:4;1658:6;1654:17;1650:27;1640:55;;1691:1;1688;1681:12;1640:55;1727:6;1714:20;1753:18;1790:2;1786;1783:10;1780:36;;;1796:18;;:::i;:::-;1871:2;1865:9;1839:2;1925:13;;-1:-1:-1;;1921:22:127;;;1945:2;1917:31;1913:40;1901:53;;;1969:18;;;1989:22;;;1966:46;1963:72;;;2015:18;;:::i;:::-;2055:10;2051:2;2044:22;2090:2;2082:6;2075:18;2136:3;2129:4;2124:2;2116:6;2112:15;2108:26;2105:35;2102:55;;;2153:1;2150;2143:12;2102:55;2217:2;2210:4;2202:6;2198:17;2191:4;2183:6;2179:17;2166:54;2264:1;2257:4;2252:2;2244:6;2240:15;2236:26;2229:37;2284:6;2275:15;;;;;;1578:718;;;;:::o;2301:456::-;2387:6;2395;2403;2456:2;2444:9;2435:7;2431:23;2427:32;2424:52;;;2472:1;2469;2462:12;2424:52;2508:9;2495:23;2485:33;;2569:2;2558:9;2554:18;2541:32;2596:18;2588:6;2585:30;2582:50;;;2628:1;2625;2618:12;2582:50;2651:49;2692:7;2683:6;2672:9;2668:22;2651:49;:::i;:::-;2641:59;;;2747:2;2736:9;2732:18;2719:32;2709:42;;2301:456;;;;;:::o;2993:118::-;3079:5;3072:13;3065:21;3058:5;3055:32;3045:60;;3101:1;3098;3091:12;3116:377;3190:6;3198;3206;3259:2;3247:9;3238:7;3234:23;3230:32;3227:52;;;3275:1;3272;3265:12;3227:52;3311:9;3298:23;3288:33;;3368:2;3357:9;3353:18;3340:32;3330:42;;3422:2;3411:9;3407:18;3394:32;3435:28;3457:5;3435:28;:::i;:::-;3482:5;3472:15;;;3116:377;;;;;:::o;3498:247::-;3557:6;3610:2;3598:9;3589:7;3585:23;3581:32;3578:52;;;3626:1;3623;3616:12;3578:52;3665:9;3652:23;3684:31;3709:5;3684:31;:::i;3750:180::-;3809:6;3862:2;3850:9;3841:7;3837:23;3833:32;3830:52;;;3878:1;3875;3868:12;3830:52;-1:-1:-1;3901:23:127;;3750:180;-1:-1:-1;3750:180:127:o;3935:797::-;4045:6;4053;4061;4069;4077;4085;4138:3;4126:9;4117:7;4113:23;4109:33;4106:53;;;4155:1;4152;4145:12;4106:53;4194:9;4181:23;4213:31;4238:5;4213:31;:::i;:::-;4263:5;-1:-1:-1;4319:2:127;4304:18;;4291:32;4346:18;4335:30;;4332:50;;;4378:1;4375;4368:12;4332:50;4401:49;4442:7;4433:6;4422:9;4418:22;4401:49;:::i;:::-;4391:59;;;4497:2;4486:9;4482:18;4469:32;4459:42;;4548:2;4537:9;4533:18;4520:32;4510:42;;4604:3;4593:9;4589:19;4576:33;4618:30;4640:7;4618:30;:::i;:::-;4667:7;4657:17;;;4721:3;4710:9;4706:19;4693:33;4683:43;;3935:797;;;;;;;;:::o;4990:385::-;5076:6;5084;5092;5100;5153:3;5141:9;5132:7;5128:23;5124:33;5121:53;;;5170:1;5167;5160:12;5121:53;-1:-1:-1;;5193:23:127;;;5263:2;5248:18;;5235:32;;-1:-1:-1;5314:2:127;5299:18;;5286:32;;5365:2;5350:18;5337:32;;-1:-1:-1;4990:385:127;-1:-1:-1;4990:385:127:o;5380:383::-;5457:6;5465;5473;5526:2;5514:9;5505:7;5501:23;5497:32;5494:52;;;5542:1;5539;5532:12;5494:52;5578:9;5565:23;5555:33;;5635:2;5624:9;5620:18;5607:32;5597:42;;5689:2;5678:9;5674:18;5661:32;5702:31;5727:5;5702:31;:::i;5768:454::-;5863:6;5871;5879;5887;5895;5948:3;5936:9;5927:7;5923:23;5919:33;5916:53;;;5965:1;5962;5955:12;5916:53;-1:-1:-1;;5988:23:127;;;6058:2;6043:18;;6030:32;;-1:-1:-1;6109:2:127;6094:18;;6081:32;;6160:2;6145:18;;6132:32;;-1:-1:-1;6211:3:127;6196:19;6183:33;;-1:-1:-1;5768:454:127;-1:-1:-1;5768:454:127:o;6227:241::-;6283:6;6336:2;6324:9;6315:7;6311:23;6307:32;6304:52;;;6352:1;6349;6342:12;6304:52;6391:9;6378:23;6410:28;6432:5;6410:28;:::i;6473:446::-;6556:6;6564;6572;6580;6633:3;6621:9;6612:7;6608:23;6604:33;6601:53;;;6650:1;6647;6640:12;6601:53;6686:9;6673:23;6663:33;;6743:2;6732:9;6728:18;6715:32;6705:42;;6797:2;6786:9;6782:18;6769:32;6810:28;6832:5;6810:28;:::i;:::-;6473:446;;;;-1:-1:-1;6857:5:127;;6909:2;6894:18;6881:32;;-1:-1:-1;;6473:446:127:o;7761:383::-;7838:6;7846;7854;7907:2;7895:9;7886:7;7882:23;7878:32;7875:52;;;7923:1;7920;7913:12;7875:52;7959:9;7946:23;7936:33;;8019:2;8008:9;8004:18;7991:32;8032:31;8057:5;8032:31;:::i;:::-;7761:383;;8082:5;;-1:-1:-1;;;8134:2:127;8119:18;;;;8106:32;;7761:383::o;8689:248::-;8757:6;8765;8818:2;8806:9;8797:7;8793:23;8789:32;8786:52;;;8834:1;8831;8824:12;8786:52;-1:-1:-1;;8857:23:127;;;8927:2;8912:18;;;8899:32;;-1:-1:-1;8689:248:127:o;8942:315::-;9010:6;9018;9071:2;9059:9;9050:7;9046:23;9042:32;9039:52;;;9087:1;9084;9077:12;9039:52;9126:9;9113:23;9145:31;9170:5;9145:31;:::i;:::-;9195:5;9247:2;9232:18;;;;9219:32;;-1:-1:-1;;;8942:315:127:o;9262:799::-;9384:6;9392;9400;9408;9416;9424;9432;9485:3;9473:9;9464:7;9460:23;9456:33;9453:53;;;9502:1;9499;9492:12;9453:53;9538:9;9525:23;9515:33;;9598:2;9587:9;9583:18;9570:32;9611:31;9636:5;9611:31;:::i;:::-;9661:5;-1:-1:-1;9717:2:127;9702:18;;9689:32;9744:18;9733:30;;9730:50;;;9776:1;9773;9766:12;9730:50;9799:49;9840:7;9831:6;9820:9;9816:22;9799:49;:::i;:::-;9262:799;;;;-1:-1:-1;9789:59:127;;9895:2;9880:18;;9867:32;;-1:-1:-1;9946:3:127;9931:19;;9918:33;;9998:3;9983:19;;9970:33;;-1:-1:-1;10050:3:127;10035:19;;;10022:33;;-1:-1:-1;9262:799:127;-1:-1:-1;;;9262:799:127:o;10066:821::-;10179:6;10187;10195;10203;10211;10264:3;10252:9;10243:7;10239:23;10235:33;10232:53;;;10281:1;10278;10271:12;10232:53;10317:9;10304:23;10294:33;;10378:2;10367:9;10363:18;10350:32;10401:18;10442:2;10434:6;10431:14;10428:34;;;10458:1;10455;10448:12;10428:34;10496:6;10485:9;10481:22;10471:32;;10541:7;10534:4;10530:2;10526:13;10522:27;10512:55;;10563:1;10560;10553:12;10512:55;10603:2;10590:16;10629:2;10621:6;10618:14;10615:34;;;10645:1;10642;10635:12;10615:34;10699:7;10694:2;10688;10680:6;10676:15;10672:2;10668:24;10664:33;10661:46;10658:66;;;10720:1;10717;10710:12;10658:66;10066:821;;10751:2;10743:11;;;;;-1:-1:-1;10773:6:127;;10826:2;10811:18;;10798:32;;-1:-1:-1;10877:2:127;10862:18;10849:32;;-1:-1:-1;10066:821:127;-1:-1:-1;;;10066:821:127:o;10892:355::-;11094:2;11076:21;;;11133:2;11113:18;;;11106:30;11172:33;11167:2;11152:18;;11145:61;11238:2;11223:18;;10892:355::o;11252:184::-;-1:-1:-1;;;;;11301:1:127;11294:88;11401:4;11398:1;11391:15;11425:4;11422:1;11415:15;11441:341;11643:2;11625:21;;;11682:2;11662:18;;;11655:30;11721:19;11716:2;11701:18;;11694:47;11773:2;11758:18;;11441:341::o;11787:347::-;11989:2;11971:21;;;12028:2;12008:18;;;12001:30;12067:25;12062:2;12047:18;;12040:53;12125:2;12110:18;;11787:347::o;12139:356::-;12341:2;12323:21;;;12360:18;;;12353:30;12419:34;12414:2;12399:18;;12392:62;12486:2;12471:18;;12139:356::o;12500:335::-;12702:2;12684:21;;;12741:2;12721:18;;;12714:30;12780:13;12775:2;12760:18;;12753:41;12826:2;12811:18;;12500:335::o;13142:184::-;13212:6;13265:2;13253:9;13244:7;13240:23;13236:32;13233:52;;;13281:1;13278;13271:12;13233:52;-1:-1:-1;13304:16:127;;13142:184;-1:-1:-1;13142:184:127:o;13331:::-;-1:-1:-1;;;;;13380:1:127;13373:88;13480:4;13477:1;13470:15;13504:4;13501:1;13494:15;13520:125;13560:4;13588:1;13585;13582:8;13579:34;;;13593:18;;:::i;:::-;-1:-1:-1;13630:9:127;;13520:125::o;13650:168::-;13690:7;13756:1;13752;13748:6;13744:14;13741:1;13738:21;13733:1;13726:9;13719:17;13715:45;13712:71;;;13763:18;;:::i;:::-;-1:-1:-1;13803:9:127;;13650:168::o;13823:274::-;13863:1;13889;13879:189;;-1:-1:-1;;;;;13921:1:127;13914:88;14025:4;14022:1;14015:15;14053:4;14050:1;14043:15;13879:189;-1:-1:-1;14082:9:127;;13823:274::o;14102:128::-;14142:3;14173:1;14169:6;14166:1;14163:13;14160:39;;;14179:18;;:::i;:::-;-1:-1:-1;14215:9:127;;14102:128::o;14235:339::-;14437:2;14419:21;;;14476:2;14456:18;;;14449:30;14515:17;14510:2;14495:18;;14488:45;14565:2;14550:18;;14235:339::o;14579:135::-;14618:3;-1:-1:-1;;14639:17:127;;14636:43;;;14659:18;;:::i;:::-;-1:-1:-1;14706:1:127;14695:13;;14579:135::o;16914:258::-;16986:1;16996:113;17010:6;17007:1;17004:13;16996:113;;;17086:11;;;17080:18;17067:11;;;17060:39;17032:2;17025:10;16996:113;;;17127:6;17124:1;17121:13;17118:48;;;-1:-1:-1;;17162:1:127;17144:16;;17137:27;16914:258::o;17177:274::-;17306:3;17344:6;17338:13;17360:53;17406:6;17401:3;17394:4;17386:6;17382:17;17360:53;:::i;:::-;17429:16;;;;;17177:274;-1:-1:-1;;17177:274:127:o;19513:245::-;19592:6;19600;19653:2;19641:9;19632:7;19628:23;19624:32;19621:52;;;19669:1;19666;19659:12;19621:52;-1:-1:-1;;19692:16:127;;19748:2;19733:18;;;19727:25;19692:16;;19727:25;;-1:-1:-1;19513:245:127:o;19763:251::-;19833:6;19886:2;19874:9;19865:7;19861:23;19857:32;19854:52;;;19902:1;19899;19892:12;19854:52;19934:9;19928:16;19953:31;19978:5;19953:31;:::i;20019:245::-;20086:6;20139:2;20127:9;20118:7;20114:23;20110:32;20107:52;;;20155:1;20152;20145:12;20107:52;20187:9;20181:16;20206:28;20228:5;20206:28;:::i;21093:383::-;21211:12;;21259:4;21248:16;;21242:23;-1:-1:-1;;21333:11:127;;;;21211:12;21242:23;21367:2;21356:14;;21353:117;;;21457:2;21444:6;21440:2;21436:15;21433:1;21429:23;21426:1;21422:31;21418:2;21414:40;21410:2;21406:49;21402:58;21393:67;;21353:117;;;;21093:383;;;:::o;22578:::-;22727:2;22716:9;22709:21;22690:4;22759:6;22753:13;22802:6;22797:2;22786:9;22782:18;22775:34;22818:66;22877:6;22872:2;22861:9;22857:18;22852:2;22844:6;22840:15;22818:66;:::i;:::-;22945:2;22924:15;-1:-1:-1;;22920:29:127;22905:45;;;;22952:2;22901:54;;22578:383;-1:-1:-1;;22578:383:127:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/Zorro/Vaults/IVault.sol\";\n\nimport \"../interfaces/Zorro/Vaults/Actions/IVaultActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol\";\n\nimport \"../interfaces/Zorro/Controllers/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _vid index of vault\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _vid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get vault info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(_vaultInfo.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _vid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates vaultInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _vid index of vault\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get vault info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the vault before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updateVault(_vid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(_vaultInfo.want).safeIncreaseAllowance(\n            _vaultInfo.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(vaultInfo[_vid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = IZorroControllerActions(controllerActions)\n            .getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = IZorroControllerActions(controllerActions)\n            .getUserContribution(sharesAdded, _timeMultiplier);\n\n        // Update vault info: Increment the vault's total contributions by the contribution added\n        _vaultInfo.totalTrancheContributions += _contributionAdded;\n\n        // Create tranche\n        _createTranche(\n            _vid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _vid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _vid Index of vault\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _vid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get vault\n        VaultInfo memory _vault = vaultInfo[_vid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: (_vault.accZORRORewards * _contributionAdded) /\n                _vault.totalTrancheContributions, // Pro-rata share of accumulated vault rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_vid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_vid][_foreignAccount][\n                trancheLength(_vid, _localAccount) - 1\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _vid index of vault to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _vid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _vid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _vid index of vault to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _vid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _vid index of vault to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _vid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Vault contract\n        address vaultAddr = vaultInfo[_vid].vault;\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(vaultInfo[_vid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _vid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _vid index of vault\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _vid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(vaultInfo[_vid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _vid index of vault\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _vid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _vid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get vault and current tranche info\n        VaultInfo storage _vaultInfo = vaultInfo[_vid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _vaultInfo.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the vault before anything to ensure rewards have been updated and transferred\n        updateVault(_vid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (_tranche.contribution *\n            _vaultInfo.accZORRORewards) /\n            _vaultInfo.totalTrancheContributions -\n            _tranche.rewardDebt;\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = IZorroControllerActions(controllerActions).getAdjustedRewards(\n                    _tranche,\n                    _pendingRewards\n                );\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Separate block to make stack shallow\n            {\n                // Get local (on-chain) account\n                address _resolvedLocalAcct = _getLocalAccount(\n                    _localAccount,\n                    _foreignAccount\n                );\n\n                // Sub block\n                {\n                    // Get vault\n                    address _vaultAddr = vaultInfo[_vid].vault;\n                    IVault _vault = IVault(_vaultAddr);\n\n                    // Get staked want tokens\n                    // TODO: Need to call updateSupply() first, or else the currentWantEquity could be out of date\n                    // OR: Do it based on number of shares. Why not? \n                    uint256 _stakedWantAmt = (_tranche.contribution *\n                        1e12 *\n                        IVaultActions(_vault.vaultActions()).currentWantEquity(\n                            _vaultAddr\n                        )) / (_tranche.timeMultiplier * _vault.sharesTotal());\n\n                    // Withdraw the want token for this account\n                    _vault.withdrawWantToken(_stakedWantAmt);\n                }\n\n                // Update shares safely\n                _vaultInfo.totalTrancheContributions =\n                    _vaultInfo.totalTrancheContributions -\n                    _tranche.contribution;\n\n                // Calculate Want token balance\n                _res.wantAmt = IERC20Upgradeable(_vaultInfo.want).balanceOf(\n                    address(this)\n                );\n\n                // Mark tranche as exited\n                trancheInfo[_vid][_resolvedLocalAcct][_trancheId]\n                    .exitedVaultAt = block.timestamp;\n            }\n            \n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _vid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _vid Vault ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _vid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_vid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_vid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_vid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a vault and converts the Want token into USD\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _vid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _vid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a vault and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _vid index of vault to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _vid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = vaultInfo[_vid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _vid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(vaultInfo[_vid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromVid index of vault FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toVid index of vault TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromVid,\n        uint256 _fromTrancheId,\n        uint256 _toVid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromVid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromVid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromVid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            vaultInfo[_toVid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toVid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromVid, _fromTrancheId, _toVid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a vault\n    /// @param _vid index of vault\n    function withdrawAll(uint256 _vid) public nonReentrant {\n        // Iterate through all tranches for the current user and vault and withdraw\n        uint256 numTranches = trancheLength(_vid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_vid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(vaultInfo[_vid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(vaultInfo[_vid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted - _totalSlashed\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "AggregatorV3Interface": [
        45
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        16208
      ],
      "IAMMRouter01": [
        14085
      ],
      "IAMMRouter02": [
        14173
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        16003
      ],
      "IVaultActions": [
        15546
      ],
      "IZorro": [
        15358
      ],
      "IZorroController": [
        15101
      ],
      "IZorroControllerActions": [
        14512
      ],
      "IZorroControllerAnalytics": [
        14900
      ],
      "IZorroControllerBase": [
        14874
      ],
      "IZorroControllerInvestment": [
        15061
      ],
      "IZorroControllerVaultMgmt": [
        15091
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SafeSwapUni": [
        16459
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10147
      ],
      "ZorroControllerBase": [
        7040
      ],
      "ZorroControllerInvestment": [
        8305
      ]
    },
    "id": 8306,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7042,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7043,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 2885,
        "src": "58:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 7041,
        "src": "148:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/IVault.sol",
        "file": "../interfaces/Zorro/Vaults/IVault.sol",
        "id": 7045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 16004,
        "src": "186:47:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "file": "../interfaces/Zorro/Vaults/Actions/IVaultActions.sol",
        "id": 7046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15547,
        "src": "235:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "file": "../interfaces/Zorro/Controllers/Actions/IZorroControllerActions.sol",
        "id": 7047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 14513,
        "src": "299:77:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/Zorro/Controllers/IZorroController.sol",
        "file": "../interfaces/Zorro/Controllers/IZorroController.sol",
        "id": 7048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 15102,
        "src": "378:62:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8306,
        "sourceUnit": 10148,
        "src": "442:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7050,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15061,
              "src": "532:26:35"
            },
            "id": 7051,
            "nodeType": "InheritanceSpecifier",
            "src": "532:26:35"
          },
          {
            "baseName": {
              "id": 7052,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7040,
              "src": "564:19:35"
            },
            "id": 7053,
            "nodeType": "InheritanceSpecifier",
            "src": "564:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8305,
        "linearizedBaseContracts": [
          8305,
          7040,
          1944,
          571,
          3169,
          1774,
          15061,
          14874
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "499:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7057,
            "libraryName": {
              "id": 7054,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "617:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "611:49:35",
            "typeName": {
              "id": 7056,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7055,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "642:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "642:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7059,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "710:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "698:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7058,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "698:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7061,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "814:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8305,
            "src": "799:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7060,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7073,
              "nodeType": "Block",
              "src": "999:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7065,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "1017:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1017:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7067,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7061,
                          "src": "1033:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1017:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1054:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1009:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7071,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:59:35"
                },
                {
                  "id": 7072,
                  "nodeType": "PlaceholderStatement",
                  "src": "1078:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7062,
              "nodeType": "StructuredDocumentation",
              "src": "896:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7074,
            "name": "onlyZorroXChain",
            "nameLocation": "981:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:35"
            },
            "src": "972:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14945
            ],
            "body": {
              "id": 7086,
              "nodeType": "Block",
              "src": "1314:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7082,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7059,
                      "src": "1324:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7083,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7077,
                      "src": "1349:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1324:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7085,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7075,
              "nodeType": "StructuredDocumentation",
              "src": "1111:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7087,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7079,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1304:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1304:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "1253:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7077,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "1284:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7087,
                  "src": "1279:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:16:35"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1314:0:35"
            },
            "scope": 8305,
            "src": "1244:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14950
            ],
            "body": {
              "id": 7099,
              "nodeType": "Block",
              "src": "1540:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7095,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7061,
                      "src": "1550:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7096,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7090,
                      "src": "1572:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1550:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7098,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7088,
              "nodeType": "StructuredDocumentation",
              "src": "1371:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7092,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1530:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1530:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "1479:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7090,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1510:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7100,
                  "src": "1502:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:19:35"
            },
            "returnParameters": {
              "id": 7094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:35"
            },
            "scope": 8305,
            "src": "1470:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              14959
            ],
            "body": {
              "id": 7144,
              "nodeType": "Block",
              "src": "1971:509:35",
              "statements": [
                {
                  "assignments": [
                    7114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7114,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "2025:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7144,
                      "src": "2007:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7113,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7112,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "2007:9:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "2007:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7118,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7115,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "2038:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7117,
                    "indexExpression": {
                      "id": 7116,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7103,
                      "src": "2048:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2038:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2007:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7124,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2199:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2199:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7128,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2231:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2223:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2223:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2223:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7130,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "2250:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7120,
                              "name": "_vaultInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7114,
                              "src": "2152:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                              }
                            },
                            "id": 7121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "2152:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7119,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "2134:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:34:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "2134:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2134:134:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7132,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:134:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7134,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7103,
                        "src": "2339:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2357:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2357:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7138,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7105,
                        "src": "2397:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7139,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7107,
                        "src": "2419:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7140,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2448:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2448:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7133,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7256,
                      "src": "2317:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7143,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7101,
              "nodeType": "StructuredDocumentation",
              "src": "1615:227:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _vid index of vault\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7145,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7110,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7109,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "1958:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "1856:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7103,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "1881:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1873:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7105,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "1903:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1895:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7107,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "1929:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7145,
                  "src": "1921:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:87:35"
            },
            "returnParameters": {
              "id": 7111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:0:35"
            },
            "scope": 8305,
            "src": "1847:633:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7255,
              "nodeType": "Block",
              "src": "3510:1804:35",
              "statements": [
                {
                  "assignments": [
                    7165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7165,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "3564:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "3546:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7163,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "3546:9:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "3546:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7166,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "3577:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7168,
                    "indexExpression": {
                      "id": 7167,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7148,
                      "src": "3587:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3577:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3546:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7171,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7154,
                          "src": "3639:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3650:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3639:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3631:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3631:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7176,
                  "nodeType": "ExpressionStatement",
                  "src": "3631:46:35"
                },
                {
                  "expression": {
                    "id": 7181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7177,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7161,
                      "src": "3784:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7179,
                          "name": "_vid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7148,
                          "src": "3816:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7178,
                        "name": "updateVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6888,
                        "src": "3804:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3804:17:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3784:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7182,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:37:35"
                },
                {
                  "assignments": [
                    7184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7184,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "3890:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "3882:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7183,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3882:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7186,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "3923:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7187,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "3933:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7185,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7296,
                      "src": "3906:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3882:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7195,
                          "name": "_vaultInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7165,
                          "src": "4051:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                          }
                        },
                        "id": 7196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14769,
                        "src": "4051:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7197,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "4081:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7191,
                              "name": "_vaultInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7165,
                              "src": "3999:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                              }
                            },
                            "id": 7192,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "3999:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7190,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3981:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3981:34:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "3981:56:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:118:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7199,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:118:35"
                },
                {
                  "assignments": [
                    7201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7201,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "4234:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4226:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4226:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7209,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "4308:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7203,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "4255:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7205,
                              "indexExpression": {
                                "id": 7204,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7148,
                                "src": "4265:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4255:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14769,
                            "src": "4255:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7202,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16003,
                          "src": "4248:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$16003_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4248:29:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$16003",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15963,
                      "src": "4248:46:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4248:78:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4226:100:35"
                },
                {
                  "assignments": [
                    7213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7213,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "4389:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4381:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4381:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7218,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "4481:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7219,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7059,
                        "src": "4498:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7215,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4431:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7214,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14512,
                          "src": "4407:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4407:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14502,
                      "src": "4407:73:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4381:140:35"
                },
                {
                  "assignments": [
                    7223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7223,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "4659:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7255,
                      "src": "4651:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4651:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7231,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7228,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "4756:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7229,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7213,
                        "src": "4769:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7225,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6492,
                            "src": "4704:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7224,
                          "name": "IZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14512,
                          "src": "4680:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                            "typeString": "type(contract IZorroControllerActions)"
                          }
                        },
                        "id": 7226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4680:42:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                          "typeString": "contract IZorroControllerActions"
                        }
                      },
                      "id": 7227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14511,
                      "src": "4680:75:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4680:105:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4651:134:35"
                },
                {
                  "expression": {
                    "id": 7236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7232,
                        "name": "_vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7165,
                        "src": "4894:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                        }
                      },
                      "id": 7234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14767,
                      "src": "4894:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 7235,
                      "name": "_contributionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7223,
                      "src": "4934:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4894:58:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7237,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:58:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7239,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "5017:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7184,
                        "src": "5035:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "5062:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7242,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7223,
                        "src": "5091:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7243,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7213,
                        "src": "5123:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7244,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7156,
                        "src": "5152:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7245,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "5181:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7238,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7371,
                      "src": "4989:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4989:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7247,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7249,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7184,
                        "src": "5260:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7250,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7152,
                        "src": "5275:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7251,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "5292:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7252,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7154,
                        "src": "5298:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7248,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14918,
                      "src": "5252:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7254,
                  "nodeType": "EmitStatement",
                  "src": "5247:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7146,
              "nodeType": "StructuredDocumentation",
              "src": "2486:772:35",
              "text": "@notice Deposits tokens into Vault, updates vaultInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _vid index of vault\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3272:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7148,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "3298:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3290:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3320:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3312:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "3351:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3338:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7154,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3384:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3376:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7156,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "3410:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3402:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7158,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "3443:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3435:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3280:184:35"
            },
            "returnParameters": {
              "id": 7162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7161,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "3491:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7256,
                  "src": "3483:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3483:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3482:27:35"
            },
            "scope": 8305,
            "src": "3263:2051:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7295,
              "nodeType": "Block",
              "src": "5466:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7265,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7263,
                      "src": "5529:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7266,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "5544:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5529:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7268,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7269,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "5624:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5644:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5636:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5636:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5636:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5624:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7294,
                  "nodeType": "IfStatement",
                  "src": "5620:380:35",
                  "trueBody": {
                    "id": 7293,
                    "nodeType": "Block",
                    "src": "5648:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7276,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7260,
                                  "src": "5735:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5735:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5760:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5735:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5779:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7275,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5710:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5710:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7282,
                        "nodeType": "ExpressionStatement",
                        "src": "5710:129:35"
                      },
                      {
                        "expression": {
                          "id": 7291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7283,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7263,
                            "src": "5941:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7288,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7260,
                                    "src": "5972:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5964:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7286,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5964:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5964:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5956:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7284,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5956:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5956:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5941:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7292,
                        "nodeType": "ExpressionStatement",
                        "src": "5941:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "5329:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7258,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5354:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5346:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5346:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7260,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "5377:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5364:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7259,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5364:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:48:35"
            },
            "returnParameters": {
              "id": 7264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7263,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "5448:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7296,
                  "src": "5440:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5440:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5439:22:35"
            },
            "scope": 8305,
            "src": "5320:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7370,
              "nodeType": "Block",
              "src": "6720:1056:35",
              "statements": [
                {
                  "assignments": [
                    7316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7316,
                      "mutability": "mutable",
                      "name": "_vault",
                      "nameLocation": "6768:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7370,
                      "src": "6751:23:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_memory_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7314,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "6751:9:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "6751:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7320,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7317,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "6777:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7319,
                    "indexExpression": {
                      "id": 7318,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7299,
                      "src": "6787:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6777:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6751:41:35"
                },
                {
                  "assignments": [
                    7323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7323,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "6853:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7370,
                      "src": "6834:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7321,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14756,
                          "src": "6834:11:35"
                        },
                        "referencedDeclaration": 14756,
                        "src": "6834:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7339,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7325,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7305,
                        "src": "6908:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7326,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7307,
                        "src": "6998:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7327,
                                  "name": "_vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7316,
                                  "src": "7040:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultInfo_$14770_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.VaultInfo memory"
                                  }
                                },
                                "id": 7328,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14765,
                                "src": "7040:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 7329,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7305,
                                "src": "7065:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7040:43:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 7331,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7039:45:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 7332,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7316,
                            "src": "7103:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultInfo_$14770_memory_ptr",
                              "typeString": "struct IZorroControllerBase.VaultInfo memory"
                            }
                          },
                          "id": 7333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14767,
                          "src": "7103:32:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7039:96:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7335,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7309,
                        "src": "7248:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7336,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7311,
                        "src": "7303:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7324,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14756,
                      "src": "6868:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$14756_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6868:491:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6834:525:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7346,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7323,
                        "src": "7461:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7340,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "7423:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7343,
                          "indexExpression": {
                            "id": 7341,
                            "name": "_vid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7299,
                            "src": "7435:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7423:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7344,
                        "indexExpression": {
                          "id": 7342,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7301,
                          "src": "7441:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7423:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7423:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$14756_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7423:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7348,
                  "nodeType": "ExpressionStatement",
                  "src": "7423:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7349,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7303,
                        "src": "7590:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7590:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7615:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7590:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7369,
                  "nodeType": "IfStatement",
                  "src": "7586:184:35",
                  "trueBody": {
                    "id": 7368,
                    "nodeType": "Block",
                    "src": "7618:152:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7353,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6488,
                                  "src": "7632:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7362,
                                "indexExpression": {
                                  "id": 7354,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7299,
                                  "src": "7651:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7632:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7363,
                              "indexExpression": {
                                "id": 7355,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7303,
                                "src": "7657:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7632:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7364,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7357,
                                    "name": "_vid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7299,
                                    "src": "7705:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 7358,
                                    "name": "_localAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7301,
                                    "src": "7711:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7356,
                                  "name": "trancheLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6699,
                                  "src": "7691:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address) view returns (uint256)"
                                  }
                                },
                                "id": 7359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7691:34:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7728:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7691:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7632:111:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7365,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7301,
                            "src": "7746:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7632:127:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7367,
                        "nodeType": "ExpressionStatement",
                        "src": "7632:127:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7297,
              "nodeType": "StructuredDocumentation",
              "src": "6012:428:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _vid Index of vault\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "6454:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7299,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "6486:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6478:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7301,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "6508:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6500:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7303,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6544:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6531:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7302,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6531:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7305,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "6577:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6569:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6569:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7307,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "6613:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6605:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6605:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "6646:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6638:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7311,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6689:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7371,
                  "src": "6681:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6468:242:35"
            },
            "returnParameters": {
              "id": 7313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6720:0:35"
            },
            "scope": 8305,
            "src": "6445:1331:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14970
            ],
            "body": {
              "id": 7414,
              "nodeType": "Block",
              "src": "8432:519:35",
              "statements": [
                {
                  "assignments": [
                    7386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7386,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "8480:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7414,
                      "src": "8472:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8472:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7391,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7387,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "8492:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7389,
                      "indexExpression": {
                        "id": 7388,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "8502:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8492:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7390,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "8492:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8472:41:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7396,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8634:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8634:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7398,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7386,
                        "src": "8658:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7399,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8681:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7393,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "8585:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7392,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "8567:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8567:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "8567:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8567:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7401,
                  "nodeType": "ExpressionStatement",
                  "src": "8567:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7403,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7374,
                        "src": "8777:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7404,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8795:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8795:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8819:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7407,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7376,
                        "src": "8835:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7408,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7378,
                        "src": "8858:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7409,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8887:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8887:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7411,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7380,
                        "src": "8916:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7402,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "8744:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8744:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7413,
                  "nodeType": "ExpressionStatement",
                  "src": "8744:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7372,
              "nodeType": "StructuredDocumentation",
              "src": "7782:473:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _vid index of vault to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7415,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7382,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8419:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8419:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "8269:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7374,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "8305:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8297:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8297:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7376,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "8327:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8319:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8319:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7378,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "8354:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8346:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8346:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7380,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "8387:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7415,
                  "src": "8379:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8379:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8287:124:35"
            },
            "returnParameters": {
              "id": 7384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8432:0:35"
            },
            "scope": 8305,
            "src": "8260:691:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14987
            ],
            "body": {
              "id": 7462,
              "nodeType": "Block",
              "src": "9916:539:35",
              "statements": [
                {
                  "assignments": [
                    7436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7436,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "9964:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7462,
                      "src": "9956:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7435,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9956:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7441,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7437,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "9976:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7439,
                      "indexExpression": {
                        "id": 7438,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7418,
                        "src": "9986:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9976:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7440,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "9976:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9956:41:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10118:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10118:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7448,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7436,
                        "src": "10142:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7449,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7424,
                        "src": "10165:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7443,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "10069:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7442,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "10051:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "10051:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10051:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7451,
                  "nodeType": "ExpressionStatement",
                  "src": "10051:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7453,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7418,
                        "src": "10270:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7454,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7420,
                        "src": "10288:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7455,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7422,
                        "src": "10310:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7456,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7424,
                        "src": "10339:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7457,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7426,
                        "src": "10362:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7458,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7428,
                        "src": "10391:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7459,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7430,
                        "src": "10420:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7452,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "10237:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10237:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7461,
                  "nodeType": "ExpressionStatement",
                  "src": "10237:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7416,
              "nodeType": "StructuredDocumentation",
              "src": "8957:672:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _vid index of vault to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7432,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "9900:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "9900:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "9643:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7418,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "9689:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9681:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9681:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7420,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9711:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9703:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9703:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7422,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9742:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9729:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7421,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9729:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7424,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "9775:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9767:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9767:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "9802:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9794:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7428,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "9835:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9827:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9827:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7430,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "9868:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7463,
                  "src": "9860:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9860:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9671:221:35"
            },
            "returnParameters": {
              "id": 7434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9916:0:35"
            },
            "scope": 8305,
            "src": "9634:821:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7518,
              "nodeType": "Block",
              "src": "11421:719:35",
              "statements": [
                {
                  "assignments": [
                    7482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7482,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11469:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7518,
                      "src": "11461:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11461:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7487,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7483,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "11481:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7485,
                      "indexExpression": {
                        "id": 7484,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "11491:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11481:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 7486,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "11481:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11461:41:35"
                },
                {
                  "assignments": [
                    7489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7489,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "11582:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7518,
                      "src": "11574:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11574:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7494,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7472,
                        "src": "11648:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7495,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7478,
                        "src": "11671:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7491,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7482,
                            "src": "11600:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7490,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16003,
                          "src": "11593:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$16003_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11593:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$16003",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "11593:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11593:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11574:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7505,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7482,
                        "src": "11852:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7506,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7489,
                        "src": "11875:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7499,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "11795:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7501,
                              "indexExpression": {
                                "id": 7500,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7466,
                                "src": "11805:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11795:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "11795:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7498,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11777:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11777:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11777:61:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11777:116:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7508,
                  "nodeType": "ExpressionStatement",
                  "src": "11777:116:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7510,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "11988:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7511,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7468,
                        "src": "12006:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7512,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7470,
                        "src": "12028:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7513,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7489,
                        "src": "12057:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7514,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "12079:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7515,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7476,
                        "src": "12108:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7509,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7256,
                      "src": "11966:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11966:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7517,
                  "nodeType": "ExpressionStatement",
                  "src": "11966:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7464,
              "nodeType": "StructuredDocumentation",
              "src": "10461:696:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _vid index of vault to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the vault (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "11171:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7466,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "11208:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11200:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11200:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7468,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "11230:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11222:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11222:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7470,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "11261:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11248:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7469,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11248:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7472,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11294:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11286:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11286:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7474,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11321:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11313:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11313:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7476,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "11354:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11346:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11346:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7478,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11387:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "11379:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11379:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11190:221:35"
            },
            "returnParameters": {
              "id": 7480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11421:0:35"
            },
            "scope": 8305,
            "src": "11162:978:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              14998
            ],
            "body": {
              "id": 7562,
              "nodeType": "Block",
              "src": "12568:429:35",
              "statements": [
                {
                  "assignments": [
                    7535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7535,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "12633:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7562,
                      "src": "12609:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7534,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7533,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14908,
                          "src": "12609:16:35"
                        },
                        "referencedDeclaration": 14908,
                        "src": "12609:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7537,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7522,
                        "src": "12663:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7538,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12681:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12681:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12705:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7541,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7524,
                        "src": "12721:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7542,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7526,
                        "src": "12745:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12771:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7536,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "12640:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12609:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12914:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12914:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7555,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7535,
                          "src": "12938:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "12938:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7547,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "12866:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7549,
                              "indexExpression": {
                                "id": 7548,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7522,
                                "src": "12876:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12866:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 7550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "12866:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7546,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "12848:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12848:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "12848:52:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12848:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7558,
                  "nodeType": "ExpressionStatement",
                  "src": "12848:112:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7559,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7535,
                      "src": "12978:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14905,
                    "src": "12978:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7532,
                  "id": 7561,
                  "nodeType": "Return",
                  "src": "12971:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7520,
              "nodeType": "StructuredDocumentation",
              "src": "12146:278:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _vid index of vault\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7563,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7529,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7528,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "12537:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "12537:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12438:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7522,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "12464:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12456:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12456:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7524,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "12486:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12478:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12478:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7526,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "12511:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12506:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12506:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12446:83:35"
            },
            "returnParameters": {
              "id": 7532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7563,
                  "src": "12559:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12559:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12558:9:35"
            },
            "scope": 8305,
            "src": "12429:568:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7862,
              "nodeType": "Block",
              "src": "13952:5987:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7583,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "14057:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14082:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14074:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7584,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14074:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14074:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14057:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7589,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7570,
                                    "src": "14088:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14088:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14113:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14088:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14057:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7594,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14056:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7595,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "14136:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14161:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14153:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7596,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14153:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14153:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14136:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7601,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7570,
                                    "src": "14167:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "14167:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14193:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14167:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14136:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7606,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14135:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14056:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14209:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14035:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14035:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7610,
                  "nodeType": "ExpressionStatement",
                  "src": "14035:215:35"
                },
                {
                  "assignments": [
                    7613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7613,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "14335:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "14316:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7612,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7611,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14756,
                          "src": "14316:11:35"
                        },
                        "referencedDeclaration": 14756,
                        "src": "14316:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7620,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7615,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7566,
                        "src": "14371:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7616,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7572,
                        "src": "14389:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7617,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "14413:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7618,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "14442:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7614,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7918,
                      "src": "14346:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$14756_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14346:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14316:149:35"
                },
                {
                  "assignments": [
                    7623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7623,
                      "mutability": "mutable",
                      "name": "_vaultInfo",
                      "nameLocation": "14540:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "14522:28:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                        "typeString": "struct IZorroControllerBase.VaultInfo"
                      },
                      "typeName": {
                        "id": 7622,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7621,
                          "name": "VaultInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14770,
                          "src": "14522:9:35"
                        },
                        "referencedDeclaration": 14770,
                        "src": "14522:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                          "typeString": "struct IZorroControllerBase.VaultInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7627,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7624,
                      "name": "vaultInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6468,
                      "src": "14553:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7626,
                    "indexExpression": {
                      "id": 7625,
                      "name": "_vid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7566,
                      "src": "14563:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14553:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14522:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7629,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7613,
                            "src": "14636:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7630,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14745,
                          "src": "14636:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14660:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14636:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14663:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14628:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14628:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7635,
                  "nodeType": "ExpressionStatement",
                  "src": "14628:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7637,
                            "name": "_vaultInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7623,
                            "src": "14779:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                              "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                            }
                          },
                          "id": 7638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14767,
                          "src": "14779:36:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14818:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14779:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14833:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14758:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14758:117:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7643,
                  "nodeType": "ExpressionStatement",
                  "src": "14758:117:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7645,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7613,
                            "src": "14949:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7646,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14755,
                          "src": "14949:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14975:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14949:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14978:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14941:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7651,
                  "nodeType": "ExpressionStatement",
                  "src": "14941:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7653,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7566,
                        "src": "15120:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7652,
                      "name": "updateVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6888,
                      "src": "15108:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15108:17:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7655,
                  "nodeType": "ExpressionStatement",
                  "src": "15108:17:35"
                },
                {
                  "assignments": [
                    7657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7657,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "15175:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7862,
                      "src": "15167:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7656,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15167:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7670,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7658,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7613,
                                "src": "15194:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7659,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14745,
                              "src": "15194:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 7660,
                                "name": "_vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7623,
                                "src": "15230:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                }
                              },
                              "id": 7661,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accZORRORewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14765,
                              "src": "15230:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15194:62:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7663,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15193:64:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 7664,
                          "name": "_vaultInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "15272:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                          }
                        },
                        "id": 7665,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14767,
                        "src": "15272:36:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15193:115:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 7667,
                        "name": "_tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7613,
                        "src": "15323:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      },
                      "id": 7668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14749,
                      "src": "15323:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15193:149:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15167:175:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7671,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7657,
                      "src": "15418:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15436:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15418:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7757,
                  "nodeType": "IfStatement",
                  "src": "15414:2322:35",
                  "trueBody": {
                    "id": 7756,
                    "nodeType": "Block",
                    "src": "15439:2297:35",
                    "statements": [
                      {
                        "assignments": [
                          7675,
                          7677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7675,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "15535:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7756,
                            "src": "15527:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7674,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15527:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7677,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "15572:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7756,
                            "src": "15564:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7676,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15564:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7685,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7682,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7613,
                              "src": "15687:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7683,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7657,
                              "src": "15717:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7679,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6492,
                                  "src": "15628:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7678,
                                "name": "IZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14512,
                                "src": "15604:23:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorroControllerActions_$14512_$",
                                  "typeString": "type(contract IZorroControllerActions)"
                                }
                              },
                              "id": 7680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15604:42:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorroControllerActions_$14512",
                                "typeString": "contract IZorroControllerActions"
                              }
                            },
                            "id": 7681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14493,
                            "src": "15604:61:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$14756_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15604:146:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15509:241:35"
                      },
                      {
                        "condition": {
                          "id": 7686,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7576,
                          "src": "15769:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7754,
                          "nodeType": "Block",
                          "src": "16702:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7719,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7675,
                                  "src": "16806:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16820:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16806:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7728,
                              "nodeType": "IfStatement",
                              "src": "16802:108:35",
                              "trueBody": {
                                "id": 7727,
                                "nodeType": "Block",
                                "src": "16823:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7723,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7568,
                                          "src": "16864:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7724,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7675,
                                          "src": "16879:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7722,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7012,
                                        "src": "16845:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16845:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7726,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16845:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7729,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "16932:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7730,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "16943:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16932:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7752,
                                "nodeType": "Block",
                                "src": "17374:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7743,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "17586:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17604:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17586:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7751,
                                    "nodeType": "IfStatement",
                                    "src": "17582:112:35",
                                    "trueBody": {
                                      "id": 7750,
                                      "nodeType": "Block",
                                      "src": "17607:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7747,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "17655:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7746,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6939,
                                              "src": "17633:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7748,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17633:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7749,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17633:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7753,
                              "nodeType": "IfStatement",
                              "src": "16928:784:35",
                              "trueBody": {
                                "id": 7742,
                                "nodeType": "Block",
                                "src": "16956:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7732,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "17141:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7733,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17159:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17141:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7741,
                                    "nodeType": "IfStatement",
                                    "src": "17137:213:35",
                                    "trueBody": {
                                      "id": 7740,
                                      "nodeType": "Block",
                                      "src": "17162:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7736,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "17292:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7737,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "17311:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7735,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7012,
                                              "src": "17273:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7738,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17273:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7739,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17273:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 7755,
                        "nodeType": "IfStatement",
                        "src": "15765:1961:35",
                        "trueBody": {
                          "id": 7718,
                          "nodeType": "Block",
                          "src": "15790:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7687,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7580,
                                    "src": "15851:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7689,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14907,
                                  "src": "15851:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7690,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7675,
                                  "src": "15875:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15851:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7692,
                              "nodeType": "ExpressionStatement",
                              "src": "15851:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7693,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6460,
                                  "src": "15909:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7694,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6462,
                                  "src": "15920:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15909:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7716,
                                "nodeType": "Block",
                                "src": "16347:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7707,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "16556:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16574:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16556:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7715,
                                    "nodeType": "IfStatement",
                                    "src": "16552:112:35",
                                    "trueBody": {
                                      "id": 7714,
                                      "nodeType": "Block",
                                      "src": "16577:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7711,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "16625:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7710,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6939,
                                              "src": "16603:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7712,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16603:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7713,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16603:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7717,
                              "nodeType": "IfStatement",
                              "src": "15905:777:35",
                              "trueBody": {
                                "id": 7706,
                                "nodeType": "Block",
                                "src": "15933:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7698,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7696,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7677,
                                        "src": "16114:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7697,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16132:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16114:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7705,
                                    "nodeType": "IfStatement",
                                    "src": "16110:213:35",
                                    "trueBody": {
                                      "id": 7704,
                                      "nodeType": "Block",
                                      "src": "16135:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7700,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6434,
                                                "src": "16265:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7701,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7677,
                                                "src": "16284:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7699,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7012,
                                              "src": "16246:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7702,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16246:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7703,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16246:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17822:13:35",
                    "subExpression": {
                      "id": 7758,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7574,
                      "src": "17823:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7861,
                  "nodeType": "IfStatement",
                  "src": "17818:2115:35",
                  "trueBody": {
                    "id": 7860,
                    "nodeType": "Block",
                    "src": "17837:2096:35",
                    "statements": [
                      {
                        "id": 7850,
                        "nodeType": "Block",
                        "src": "18030:1633:35",
                        "statements": [
                          {
                            "assignments": [
                              7761
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 7761,
                                "mutability": "mutable",
                                "name": "_resolvedLocalAcct",
                                "nameLocation": "18104:18:35",
                                "nodeType": "VariableDeclaration",
                                "scope": 7850,
                                "src": "18096:26:35",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 7760,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18096:7:35",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 7766,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 7763,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7568,
                                  "src": "18163:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7764,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7570,
                                  "src": "18198:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 7762,
                                "name": "_getLocalAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7296,
                                "src": "18125:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                  "typeString": "function (address,bytes memory) pure returns (address)"
                                }
                              },
                              "id": 7765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18125:106:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "18096:135:35"
                          },
                          {
                            "id": 7812,
                            "nodeType": "Block",
                            "src": "18279:830:35",
                            "statements": [
                              {
                                "assignments": [
                                  7768
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7768,
                                    "mutability": "mutable",
                                    "name": "_vaultAddr",
                                    "nameLocation": "18342:10:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18334:18:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "typeName": {
                                      "id": 7767,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18334:7:35",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7773,
                                "initialValue": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7769,
                                      "name": "vaultInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "18355:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 7771,
                                    "indexExpression": {
                                      "id": 7770,
                                      "name": "_vid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7566,
                                      "src": "18365:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18355:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                                    }
                                  },
                                  "id": 7772,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "vault",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14769,
                                  "src": "18355:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18334:42:35"
                              },
                              {
                                "assignments": [
                                  7776
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7776,
                                    "mutability": "mutable",
                                    "name": "_vault",
                                    "nameLocation": "18405:6:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18398:13:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVault_$16003",
                                      "typeString": "contract IVault"
                                    },
                                    "typeName": {
                                      "id": 7775,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 7774,
                                        "name": "IVault",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 16003,
                                        "src": "18398:6:35"
                                      },
                                      "referencedDeclaration": 16003,
                                      "src": "18398:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$16003",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7780,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 7778,
                                      "name": "_vaultAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7768,
                                      "src": "18421:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 7777,
                                    "name": "IVault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16003,
                                    "src": "18414:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVault_$16003_$",
                                      "typeString": "type(contract IVault)"
                                    }
                                  },
                                  "id": 7779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18414:18:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVault_$16003",
                                    "typeString": "contract IVault"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18398:34:35"
                              },
                              {
                                "assignments": [
                                  7782
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 7782,
                                    "mutability": "mutable",
                                    "name": "_stakedWantAmt",
                                    "nameLocation": "18694:14:35",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 7812,
                                    "src": "18686:22:35",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 7781,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "18686:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 7805,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 7804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 7783,
                                              "name": "_tranche",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7613,
                                              "src": "18712:8:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                              }
                                            },
                                            "id": 7784,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "contribution",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 14745,
                                            "src": "18712:21:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "31653132",
                                            "id": 7785,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18760:4:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1000000000000_by_1",
                                              "typeString": "int_const 1000000000000"
                                            },
                                            "value": "1e12"
                                          },
                                          "src": "18712:52:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [
                                            {
                                              "id": 7793,
                                              "name": "_vaultAddr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7768,
                                              "src": "18875:10:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "arguments": [],
                                                  "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                      "id": 7788,
                                                      "name": "_vault",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 7776,
                                                      "src": "18805:6:35",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVault_$16003",
                                                        "typeString": "contract IVault"
                                                      }
                                                    },
                                                    "id": 7789,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "vaultActions",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 15932,
                                                    "src": "18805:19:35",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                      "typeString": "function () view external returns (address)"
                                                    }
                                                  },
                                                  "id": 7790,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18805:21:35",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 7787,
                                                "name": "IVaultActions",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15546,
                                                "src": "18791:13:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultActions_$15546_$",
                                                  "typeString": "type(contract IVaultActions)"
                                                }
                                              },
                                              "id": 7791,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18791:36:35",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVaultActions_$15546",
                                                "typeString": "contract IVaultActions"
                                              }
                                            },
                                            "id": 7792,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "currentWantEquity",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15536,
                                            "src": "18791:54:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                              "typeString": "function (address) view external returns (uint256)"
                                            }
                                          },
                                          "id": 7794,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18791:120:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18712:199:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7796,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18711:201:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 7797,
                                            "name": "_tranche",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7613,
                                            "src": "18916:8:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                            }
                                          },
                                          "id": 7798,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timeMultiplier",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 14747,
                                          "src": "18916:23:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "id": 7799,
                                              "name": "_vault",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7776,
                                              "src": "18942:6:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IVault_$16003",
                                                "typeString": "contract IVault"
                                              }
                                            },
                                            "id": 7800,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sharesTotal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15937,
                                            "src": "18942:18:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view external returns (uint256)"
                                            }
                                          },
                                          "id": 7801,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18942:20:35",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "18916:46:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 7803,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "18915:48:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18711:252:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "18686:277:35"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 7809,
                                      "name": "_stakedWantAmt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7782,
                                      "src": "19075:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 7806,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7776,
                                      "src": "19050:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$16003",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "withdrawWantToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15970,
                                    "src": "19050:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) external returns (uint256)"
                                    }
                                  },
                                  "id": 7810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19050:40:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7811,
                                "nodeType": "ExpressionStatement",
                                "src": "19050:40:35"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "id": 7821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7813,
                                  "name": "_vaultInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7623,
                                  "src": "19167:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                    "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                  }
                                },
                                "id": 7815,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "totalTrancheContributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14767,
                                "src": "19167:36:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7816,
                                    "name": "_vaultInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7623,
                                    "src": "19226:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                    }
                                  },
                                  "id": 7817,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalTrancheContributions",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14767,
                                  "src": "19226:36:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 7818,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7613,
                                    "src": "19285:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 7819,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "contribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14745,
                                  "src": "19285:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19226:80:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19167:139:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7822,
                            "nodeType": "ExpressionStatement",
                            "src": "19167:139:35"
                          },
                          {
                            "expression": {
                              "id": 7836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 7823,
                                  "name": "_res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7580,
                                  "src": "19373:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                  }
                                },
                                "id": 7825,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "wantAmt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14905,
                                "src": "19373:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7833,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "19462:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                                          "typeString": "contract ZorroControllerInvestment"
                                        }
                                      ],
                                      "id": 7832,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19454:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7831,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19454:7:35",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19454:13:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 7827,
                                          "name": "_vaultInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7623,
                                          "src": "19406:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultInfo_$14770_storage_ptr",
                                            "typeString": "struct IZorroControllerBase.VaultInfo storage pointer"
                                          }
                                        },
                                        "id": 7828,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "want",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 14759,
                                        "src": "19406:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                          "typeString": "contract IERC20Upgradeable"
                                        }
                                      ],
                                      "id": 7826,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2635,
                                      "src": "19388:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 7829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19388:34:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 7830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2574,
                                  "src": "19388:44:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 7835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19388:97:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19373:112:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7837,
                            "nodeType": "ExpressionStatement",
                            "src": "19373:112:35"
                          },
                          {
                            "expression": {
                              "id": 7848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 7838,
                                        "name": "trancheInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6480,
                                        "src": "19546:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                        }
                                      },
                                      "id": 7842,
                                      "indexExpression": {
                                        "id": 7839,
                                        "name": "_vid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7566,
                                        "src": "19558:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19546:17:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 7843,
                                    "indexExpression": {
                                      "id": 7840,
                                      "name": "_resolvedLocalAcct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7761,
                                      "src": "19564:18:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19546:37:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 7844,
                                  "indexExpression": {
                                    "id": 7841,
                                    "name": "_trancheId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7572,
                                    "src": "19584:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19546:49:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                                    "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                                  }
                                },
                                "id": 7845,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "exitedVaultAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14755,
                                "src": "19546:84:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 7846,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "19633:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 7847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "19633:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19546:102:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7849,
                            "nodeType": "ExpressionStatement",
                            "src": "19546:102:35"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7852,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7568,
                              "src": "19782:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7853,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7570,
                              "src": "19813:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7854,
                              "name": "_vid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7566,
                              "src": "19846:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7855,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7572,
                              "src": "19868:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 7856,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7580,
                                "src": "19896:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                                  "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 7857,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14905,
                              "src": "19896:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7851,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14930,
                            "src": "19756:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 7858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19756:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7859,
                        "nodeType": "EmitStatement",
                        "src": "19751:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7564,
              "nodeType": "StructuredDocumentation",
              "src": "13003:691:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _vid index of vault\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 7863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "13708:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7566,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "13735:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13727:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13727:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7568,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "13757:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13749:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13749:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7570,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "13793:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13780:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7569,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13780:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "13826:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13818:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13818:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7574,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "13851:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13846:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7573,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13846:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7576,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "13878:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13873:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13873:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13717:186:35"
            },
            "returnParameters": {
              "id": 7581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7580,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "13946:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7863,
                  "src": "13922:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7578,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14908,
                      "src": "13922:16:35"
                    },
                    "referencedDeclaration": 14908,
                    "src": "13922:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13921:30:35"
            },
            "scope": 8305,
            "src": "13699:6240:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7917,
              "nodeType": "Block",
              "src": "20631:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7878,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7872,
                      "src": "20645:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20670:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20662:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20662:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20662:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20645:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7915,
                    "nodeType": "Block",
                    "src": "20795:237:35",
                    "statements": [
                      {
                        "assignments": [
                          7896
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7896,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "20855:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7915,
                            "src": "20847:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7895,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20847:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7904,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7897,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6488,
                                "src": "20870:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 7899,
                              "indexExpression": {
                                "id": 7898,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7866,
                                "src": "20889:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20870:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 7901,
                            "indexExpression": {
                              "id": 7900,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7870,
                              "src": "20895:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20870:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 7903,
                          "indexExpression": {
                            "id": 7902,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7868,
                            "src": "20929:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20870:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20847:106:35"
                      },
                      {
                        "expression": {
                          "id": 7913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7905,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "20967:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7906,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20978:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7908,
                                "indexExpression": {
                                  "id": 7907,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "20990:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20978:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7910,
                              "indexExpression": {
                                "id": 7909,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7896,
                                "src": "20996:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20978:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7912,
                            "indexExpression": {
                              "id": 7911,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7868,
                              "src": "21010:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20978:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20967:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7914,
                        "nodeType": "ExpressionStatement",
                        "src": "20967:54:35"
                      }
                    ]
                  },
                  "id": 7916,
                  "nodeType": "IfStatement",
                  "src": "20641:391:35",
                  "trueBody": {
                    "id": 7894,
                    "nodeType": "Block",
                    "src": "20674:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7884,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7876,
                            "src": "20723:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7885,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6480,
                                  "src": "20734:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7887,
                                "indexExpression": {
                                  "id": 7886,
                                  "name": "_vid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7866,
                                  "src": "20746:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20734:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7889,
                              "indexExpression": {
                                "id": 7888,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7872,
                                "src": "20752:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20734:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7891,
                            "indexExpression": {
                              "id": 7890,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7868,
                              "src": "20767:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20734:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20723:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7893,
                        "nodeType": "ExpressionStatement",
                        "src": "20723:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7864,
              "nodeType": "StructuredDocumentation",
              "src": "19945:483:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _vid Vault ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 7918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "20442:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7866,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "20471:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20463:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20463:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7868,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "20493:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20485:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20485:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7870,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "20526:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20513:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7869,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20513:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7872,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "20559:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20551:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20551:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20453:125:35"
            },
            "returnParameters": {
              "id": 7877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7876,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "20621:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7918,
                  "src": "20602:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$14756_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 7875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7874,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14756,
                      "src": "20602:11:35"
                    },
                    "referencedDeclaration": 14756,
                    "src": "20602:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20601:29:35"
            },
            "scope": 8305,
            "src": "20433:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              15011
            ],
            "body": {
              "id": 7958,
              "nodeType": "Block",
              "src": "21709:451:35",
              "statements": [
                {
                  "assignments": [
                    7935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7935,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "21759:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7958,
                      "src": "21751:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7934,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21751:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7946,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7937,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21811:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21811:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21835:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7940,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7921,
                        "src": "21851:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7941,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7923,
                        "src": "21869:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7942,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7925,
                        "src": "21893:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 7943,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7927,
                        "src": "21919:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21951:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7936,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "21775:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 7945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21775:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21750:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7951,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "22081:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22081:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7953,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7935,
                        "src": "22105:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7948,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "22036:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7947,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "22018:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22018:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "22018:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22018:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "22018:107:35"
                },
                {
                  "expression": {
                    "id": 7956,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7935,
                    "src": "22143:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7933,
                  "id": 7957,
                  "nodeType": "Return",
                  "src": "22136:17:35"
                }
              ]
            },
            "documentation": {
              "id": 7919,
              "nodeType": "StructuredDocumentation",
              "src": "21044:472:35",
              "text": "@notice Withdraws funds from a vault and converts the Want token into USD\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 7959,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7929,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "21678:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "21678:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "21530:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7921,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "21569:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21561:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21561:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7923,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "21591:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21583:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21583:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7925,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "21616:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21611:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7924,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21611:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7927,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "21646:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21638:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21638:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21551:119:35"
            },
            "returnParameters": {
              "id": 7933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7959,
                  "src": "21700:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21700:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21699:9:35"
            },
            "scope": 8305,
            "src": "21521:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15030
            ],
            "body": {
              "id": 8022,
              "nodeType": "Block",
              "src": "23233:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 7993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7981,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7977,
                          "src": "23289:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7982,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7979,
                          "src": "23301:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7983,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23288:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7985,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7962,
                          "src": "23358:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7986,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7964,
                          "src": "23380:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7987,
                          "name": "_vid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7966,
                          "src": "23409:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7988,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7968,
                          "src": "23427:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7989,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7970,
                          "src": "23451:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 7990,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7972,
                          "src": "23477:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23509:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7984,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8093,
                        "src": "23322:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 7992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23322:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23288:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7994,
                  "nodeType": "ExpressionStatement",
                  "src": "23288:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7995,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "23589:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23602:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23589:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8008,
                  "nodeType": "IfStatement",
                  "src": "23585:164:35",
                  "trueBody": {
                    "id": 8007,
                    "nodeType": "Block",
                    "src": "23605:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8002,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "23686:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23686:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8004,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7977,
                              "src": "23714:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7999,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6430,
                                  "src": "23637:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7998,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23619:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23619:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23619:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23619:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8006,
                        "nodeType": "ExpressionStatement",
                        "src": "23619:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8009,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7979,
                      "src": "23878:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23898:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23878:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8021,
                  "nodeType": "IfStatement",
                  "src": "23874:167:35",
                  "trueBody": {
                    "id": 8020,
                    "nodeType": "Block",
                    "src": "23901:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8016,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6436,
                              "src": "23970:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8017,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7979,
                              "src": "23999:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8013,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "23933:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8012,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23915:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23915:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23915:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23915:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8019,
                        "nodeType": "ExpressionStatement",
                        "src": "23915:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7960,
              "nodeType": "StructuredDocumentation",
              "src": "22166:731:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8023,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7975,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7974,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "23149:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "23149:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "22911:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "22960:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22952:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22952:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7964,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "22991:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "22978:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22978:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7966,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "23024:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23016:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23016:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7968,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "23046:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23038:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23038:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7970,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "23071:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23066:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23066:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7972,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "23101:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23093:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23093:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22942:183:35"
            },
            "returnParameters": {
              "id": 7980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7977,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "23190:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23182:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23182:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7979,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "23210:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8023,
                  "src": "23202:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23202:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23181:47:35"
            },
            "scope": 8305,
            "src": "22902:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8092,
              "nodeType": "Block",
              "src": "25198:795:35",
              "statements": [
                {
                  "assignments": [
                    8046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8046,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "25246:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "25238:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8045,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25238:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8051,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8047,
                        "name": "vaultInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6468,
                        "src": "25259:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8049,
                      "indexExpression": {
                        "id": 8048,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25269:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25259:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                      }
                    },
                    "id": 8050,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14769,
                    "src": "25259:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25238:42:35"
                },
                {
                  "assignments": [
                    8054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8054,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "25390:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8092,
                      "src": "25366:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8053,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8052,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14908,
                          "src": "25366:16:35"
                        },
                        "referencedDeclaration": 14908,
                        "src": "25366:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8063,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8056,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25420:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8057,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8026,
                        "src": "25438:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8058,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "25460:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8059,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "25489:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8060,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8034,
                        "src": "25513:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8061,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8038,
                        "src": "25539:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8055,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7863,
                      "src": "25397:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25397:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25366:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8071,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "25721:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8072,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8054,
                          "src": "25745:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14905,
                        "src": "25745:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8065,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "25664:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8067,
                              "indexExpression": {
                                "id": 8066,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8030,
                                "src": "25674:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25664:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 8068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "25664:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8064,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "25646:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25646:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "25646:61:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25646:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8075,
                  "nodeType": "ExpressionStatement",
                  "src": "25646:121:35"
                },
                {
                  "expression": {
                    "id": 8085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8076,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "25811:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8081,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8054,
                            "src": "25880:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                              "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8082,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14905,
                          "src": "25880:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8083,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8036,
                          "src": "25906:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8078,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8046,
                              "src": "25831:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8077,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16003,
                            "src": "25824:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$16003_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25824:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$16003",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15979,
                        "src": "25824:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25824:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25811:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8086,
                  "nodeType": "ExpressionStatement",
                  "src": "25811:123:35"
                },
                {
                  "expression": {
                    "id": 8090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8087,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8043,
                      "src": "25945:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8088,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8054,
                        "src": "25965:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14907,
                      "src": "25965:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25945:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8091,
                  "nodeType": "ExpressionStatement",
                  "src": "25945:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8024,
              "nodeType": "StructuredDocumentation",
              "src": "24053:826:35",
              "text": "@notice Private function for withdrawing funds from a vault and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _vid index of vault to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "24893:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8026,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "24933:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24925:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24925:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "24964:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24951:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24951:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "24997:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "24989:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24989:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8032,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "25019:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25011:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25011:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8034,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "25044:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25039:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25039:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8036,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "25074:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25066:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25066:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8038,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "25107:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25102:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25102:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24915:217:35"
            },
            "returnParameters": {
              "id": 8044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8041,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "25159:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25151:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25151:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8043,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "25179:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8093,
                  "src": "25171:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25171:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25150:47:35"
            },
            "scope": 8305,
            "src": "24884:1109:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              15041
            ],
            "body": {
              "id": 8174,
              "nodeType": "Block",
              "src": "26576:1038:35",
              "statements": [
                {
                  "assignments": [
                    8108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8108,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "26640:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26632:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26632:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8118,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8109,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26657:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8111,
                          "indexExpression": {
                            "id": 8110,
                            "name": "_fromVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8096,
                            "src": "26669:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26657:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8114,
                        "indexExpression": {
                          "expression": {
                            "id": 8112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26679:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26679:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26657:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8116,
                      "indexExpression": {
                        "id": 8115,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26704:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26657:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8117,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14751,
                    "src": "26657:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26632:121:35"
                },
                {
                  "assignments": [
                    8120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8120,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "26771:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26763:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8119,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26763:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8130,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8121,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6480,
                            "src": "26788:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8123,
                          "indexExpression": {
                            "id": 8122,
                            "name": "_fromVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8096,
                            "src": "26800:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26788:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8126,
                        "indexExpression": {
                          "expression": {
                            "id": 8124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26810:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26810:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26788:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$14756_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8128,
                      "indexExpression": {
                        "id": 8127,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "26835:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26788:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$14756_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8129,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14753,
                    "src": "26788:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26763:111:35"
                },
                {
                  "assignments": [
                    8132,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8132,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "26914:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8174,
                      "src": "26906:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26906:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8143,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26968:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26968:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26992:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8137,
                        "name": "_fromVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "27008:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8138,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "27030:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27058:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8140,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8102,
                        "src": "27077:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27109:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8133,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8093,
                      "src": "26932:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26932:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26905:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8148,
                            "name": "vaultInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6468,
                            "src": "27233:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8150,
                          "indexExpression": {
                            "id": 8149,
                            "name": "_toVid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8100,
                            "src": "27243:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27233:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                            "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                          }
                        },
                        "id": 8151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14769,
                        "src": "27233:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8152,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8132,
                        "src": "27270:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8145,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6430,
                            "src": "27188:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8144,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "27170:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27170:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "27170:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27170:122:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8154,
                  "nodeType": "ExpressionStatement",
                  "src": "27170:122:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8156,
                        "name": "_toVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8100,
                        "src": "27357:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27377:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27377:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27401:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8160,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8132,
                        "src": "27417:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8161,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8108,
                        "src": "27443:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8162,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8120,
                        "src": "27471:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8163,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8102,
                        "src": "27499:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8155,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "27324:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27324:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8165,
                  "nodeType": "ExpressionStatement",
                  "src": "27324:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27562:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27562:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8169,
                        "name": "_fromVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8096,
                        "src": "27574:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8170,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8098,
                        "src": "27584:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8171,
                        "name": "_toVid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8100,
                        "src": "27600:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8166,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14940,
                      "src": "27543:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27543:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8173,
                  "nodeType": "EmitStatement",
                  "src": "27538:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8094,
              "nodeType": "StructuredDocumentation",
              "src": "25999:400:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromVid index of vault FROM\n @param _fromTrancheId index of tranche FROM\n @param _toVid index of vault TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8104,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "26563:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "26563:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "26413:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8096,
                  "mutability": "mutable",
                  "name": "_fromVid",
                  "nameLocation": "26449:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26441:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26441:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8098,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "26475:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26467:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26467:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8100,
                  "mutability": "mutable",
                  "name": "_toVid",
                  "nameLocation": "26507:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26499:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26499:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8102,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "26531:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8175,
                  "src": "26523:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26523:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26431:124:35"
            },
            "returnParameters": {
              "id": 8106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26576:0:35"
            },
            "scope": 8305,
            "src": "26404:1210:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15046
            ],
            "body": {
              "id": 8245,
              "nodeType": "Block",
              "src": "27782:616:35",
              "statements": [
                {
                  "assignments": [
                    8184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8184,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "27884:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8245,
                      "src": "27876:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27876:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8190,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8186,
                        "name": "_vid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8178,
                        "src": "27912:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8187,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27918:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27918:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8185,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6699,
                      "src": "27898:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27898:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27876:53:35"
                },
                {
                  "body": {
                    "id": 8211,
                    "nodeType": "Block",
                    "src": "27987:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8202,
                              "name": "_vid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8178,
                              "src": "28011:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "28017:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "28017:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28029:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8206,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8192,
                              "src": "28033:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28038:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28045:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8201,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7863,
                            "src": "28001:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$14908_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28001:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$14908_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8210,
                        "nodeType": "ExpressionStatement",
                        "src": "28001:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8195,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8192,
                      "src": "27961:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8196,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8184,
                      "src": "27967:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27961:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8212,
                  "initializationExpression": {
                    "assignments": [
                      8192
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8192,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "27952:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8212,
                        "src": "27944:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27944:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8194,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27958:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27944:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "27980:5:35",
                      "subExpression": {
                        "id": 8198,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8192,
                        "src": "27982:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8200,
                    "nodeType": "ExpressionStatement",
                    "src": "27980:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "27939:123:35"
                },
                {
                  "assignments": [
                    8214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8214,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "28122:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8245,
                      "src": "28114:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28114:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8227,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8224,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "28204:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8305",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28196:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28196:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28196:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8216,
                                "name": "vaultInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6468,
                                "src": "28151:9:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8218,
                              "indexExpression": {
                                "id": 8217,
                                "name": "_vid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8178,
                                "src": "28161:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28151:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                              }
                            },
                            "id": 8219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14759,
                            "src": "28151:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8215,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "28133:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28133:39:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "28133:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28133:86:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28114:105:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8228,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8214,
                      "src": "28233:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28244:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "28233:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8244,
                  "nodeType": "IfStatement",
                  "src": "28229:163:35",
                  "trueBody": {
                    "id": 8243,
                    "nodeType": "Block",
                    "src": "28247:145:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8238,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "28331:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "28331:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8240,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8214,
                              "src": "28359:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8232,
                                      "name": "vaultInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6468,
                                      "src": "28279:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_VaultInfo_$14770_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.VaultInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8234,
                                    "indexExpression": {
                                      "id": 8233,
                                      "name": "_vid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8178,
                                      "src": "28289:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28279:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_VaultInfo_$14770_storage",
                                      "typeString": "struct IZorroControllerBase.VaultInfo storage ref"
                                    }
                                  },
                                  "id": 8235,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14759,
                                  "src": "28279:20:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8231,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "28261:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28261:39:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "28261:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28261:120:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8242,
                        "nodeType": "ExpressionStatement",
                        "src": "28261:120:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8176,
              "nodeType": "StructuredDocumentation",
              "src": "27620:102:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a vault\n @param _vid index of vault"
            },
            "functionSelector": "958e2d31",
            "id": 8246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8180,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "27769:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "27769:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "27736:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8178,
                  "mutability": "mutable",
                  "name": "_vid",
                  "nameLocation": "27756:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8246,
                  "src": "27748:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27748:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27747:14:35"
            },
            "returnParameters": {
              "id": 8182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27782:0:35"
            },
            "scope": 8305,
            "src": "27727:671:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15053
            ],
            "body": {
              "id": 8275,
              "nodeType": "Block",
              "src": "28787:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8256,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6460,
                      "src": "28844:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8257,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "28855:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28844:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8273,
                    "nodeType": "Block",
                    "src": "29031:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8269,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8251,
                              "src": "29132:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8270,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8249,
                              "src": "29146:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8266,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6428,
                                  "src": "29120:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8265,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15358,
                                "src": "29113:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$15358_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29113:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$15358",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15357,
                            "src": "29113:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29113:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8272,
                        "nodeType": "ExpressionStatement",
                        "src": "29113:45:35"
                      }
                    ]
                  },
                  "id": 8274,
                  "nodeType": "IfStatement",
                  "src": "28840:329:35",
                  "trueBody": {
                    "id": 8264,
                    "nodeType": "Block",
                    "src": "28868:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8260,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8249,
                              "src": "28988:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8261,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8251,
                              "src": "29001:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8259,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6970,
                            "src": "28962:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28962:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8263,
                        "nodeType": "ExpressionStatement",
                        "src": "28962:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8247,
              "nodeType": "StructuredDocumentation",
              "src": "28442:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8253,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7074,
                  "src": "28767:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28767:15:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "28683:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8249,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "28709:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8276,
                  "src": "28701:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28701:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8251,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "28730:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8276,
                  "src": "28722:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28722:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28700:43:35"
            },
            "returnParameters": {
              "id": 8255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28787:0:35"
            },
            "scope": 8305,
            "src": "28674:501:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15060
            ],
            "body": {
              "id": 8303,
              "nodeType": "Block",
              "src": "29717:404:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8292,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6436,
                        "src": "29907:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8293,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8279,
                          "src": "29932:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8294,
                          "name": "_totalSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8281,
                          "src": "29947:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29932:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8289,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6428,
                            "src": "29874:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8288,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "29856:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29856:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "29856:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29856:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "29856:114:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8299,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8281,
                        "src": "30081:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8300,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "30096:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8298,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6970,
                      "src": "30055:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30055:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8302,
                  "nodeType": "ExpressionStatement",
                  "src": "30055:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8277,
              "nodeType": "StructuredDocumentation",
              "src": "29181:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8283,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6399,
                  "src": "29660:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29660:30:35"
              },
              {
                "id": 8286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8285,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6414,
                  "src": "29699:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29699:13:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "29569:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8279,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "29600:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29592:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29592:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8281,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "29622:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "29614:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29614:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29591:45:35"
            },
            "returnParameters": {
              "id": 8287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29717:0:35"
            },
            "scope": 8305,
            "src": "29560:561:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8306,
        "src": "490:29633:35",
        "usedErrors": []
      }
    ],
    "src": "33:30091:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-15T02:09:55.820Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_vid": "index of vault",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vid": "index of vault to deposit into",
          "_weeksCommitted": "how many weeks to commit to the vault (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_vid": "index of vault to deposit into",
          "_weeksCommitted": "how many weeks to commit to the vault (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_user": "wallet address of user",
          "_vid": "Index of vault in vaultInfo array"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromTrancheId": "index of tranche FROM",
          "_fromVid": "index of vault FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toVid": "index of vault TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateVault(uint256)": {
        "params": {
          "_vid": "index of vault in vaultInfo array"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "vaultLength()": {
        "returns": {
          "vaultCount": "number of vaults"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_trancheId": "index of tranche",
          "_vid": "index of vault"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_vid": "index of vault"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_trancheId": "index of tranche",
          "_vid": "index of vault to deposit into"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_trancheId": "index of tranche",
          "_vid": "index of vault to deposit into"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setControllerActions(address)": {
        "notice": "Setter: Set controller actions contract address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given vault"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updateVault(uint256)": {
        "notice": "Update reward variables of the given vault to be up-to-date."
      },
      "vaultLength()": {
        "notice": "Number of vaults in the Zorro protocol"
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a vault"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a vault and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}