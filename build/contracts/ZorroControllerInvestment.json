{
  "contractName": "ZorroControllerInvestment",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromPid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTrancheId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "toPid",
          "type": "uint256"
        }
      ],
      "name": "TransferInvestment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "foreignAccount",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "trancheId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wantAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZORRO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORRODailyDistributionFactorBasisPointsMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZORROPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accSynthRewardsSlashed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRewardRateBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerActions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultStablecoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "foreignTrancheInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "homeChainZorroController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTimeMultiplierActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "want",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accZORRORewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTrancheContributions",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsMinted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSyntheticRewardsSlashed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_burnAddress",
          "type": "address"
        }
      ],
      "name": "setBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ZORRO",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStablecoin",
          "type": "address"
        }
      ],
      "name": "setKeyAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_dailyDistFactors",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_chainMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRewardRateBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setRewardsParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        }
      ],
      "name": "setStartBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setTargetTVLCaptureBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_homeChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_homeChainZorroController",
          "type": "address"
        }
      ],
      "name": "setXChainParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publicPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zorroStakingVault",
          "type": "address"
        }
      ],
      "name": "setZorroContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zorroControllerOracle",
          "type": "address"
        }
      ],
      "name": "setZorroControllerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalChainMultipliers",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalMarketTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetTVLCaptureBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ZorroTotalVaultTVLUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_publicPoolZORBalance",
          "type": "uint256"
        }
      ],
      "name": "setZorroPerBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTVLCaptureBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trancheInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationCommittedInWeeks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "enteredVaultAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exitedVaultAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "trancheLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedZOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroControllerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroStakingVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zorroXChainEndpoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setIsTimeMultiplierActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setZorroXChainEndpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_valueUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_weeksCommitted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultEnteredAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "depositFullServiceFromXChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullService",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_foreignAccount",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_trancheId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_harvestOnly",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "withdrawalFullServiceFromXChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountUSD",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsDueXChain",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fromPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fromTrancheId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toPid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarketMovement",
          "type": "uint256"
        }
      ],
      "name": "transferInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsDue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_destination",
          "type": "address"
        }
      ],
      "name": "repatriateRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalMinted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSlashed",
          "type": "uint256"
        }
      ],
      "name": "handleAccXChainRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromPid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTrancheId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toPid\",\"type\":\"uint256\"}],\"name\":\"TransferInvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"foreignAccount\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wantAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZORRO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORRODailyDistributionFactorBasisPointsMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZORROPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accSynthRewardsSlashed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseRewardRateBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocksPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerActions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultStablecoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_valueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeksCommitted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultEnteredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"depositFullServiceFromXChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"foreignTrancheInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSlashed\",\"type\":\"uint256\"}],\"name\":\"handleAccXChainRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"homeChainZorroController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTimeMultiplierActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"want\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accZORRORewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTrancheContributions\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"repatriateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsMinted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSyntheticRewardsSlashed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setIsTimeMultiplierActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZORRO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultStablecoin\",\"type\":\"address\"}],\"name\":\"setKeyAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocksPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_dailyDistFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_chainMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseRewardRateBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setRewardsParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"name\":\"setStartBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setTargetTVLCaptureBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_homeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_homeChainZorroController\",\"type\":\"address\"}],\"name\":\"setXChainParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publicPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zorroStakingVault\",\"type\":\"address\"}],\"name\":\"setZorroContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zorroControllerOracle\",\"type\":\"address\"}],\"name\":\"setZorroControllerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalChainMultipliers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalMarketTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetTVLCaptureBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ZorroTotalVaultTVLUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_publicPoolZORBalance\",\"type\":\"uint256\"}],\"name\":\"setZorroPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setZorroXChainEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetTVLCaptureBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trancheInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationCommittedInWeeks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"enteredVaultAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedVaultAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"trancheLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fromTrancheId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toPid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"transferInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedZOR\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullService\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_foreignAccount\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_harvestOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarketMovement\",\"type\":\"uint256\"}],\"name\":\"withdrawalFullServiceFromXChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDueXChain\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroControllerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroStakingVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zorroXChainEndpoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"params\":{\"_pid\":\"index of pool\",\"_wantAmt\":\"how much Want token to deposit\",\"_weeksCommitted\":\"how many weeks the user is committing to on this vault\"}},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"params\":{\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"params\":{\"_account\":\"address of user on-chain\",\"_foreignAccount\":\"the cross chain wallet that initiated this call, if applicable.\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_valueUSD\":\"value in USD (in ether units) to deposit\",\"_vaultEnteredAt\":\"date that the vault was entered at\",\"_weeksCommitted\":\"how many weeks to commit to the Pool (can be 0 or any uint)\"}},\"handleAccXChainRewards(uint256,uint256)\":{\"details\":\"Caller should call \\\"reset\\\" functions so that rewards aren't double-burned/allocated\",\"params\":{\"_totalMinted\":\"Total ZOR rewards minted across other chains at this moment\",\"_totalSlashed\":\"Total ZOR rewards slashed across other chains at this moment\"}},\"inCaseTokensGetStuck(address,uint256)\":{\"details\":\"Does not permit usage for the Zorro token\",\"params\":{\"_amount\":\"token quantity\",\"_token\":\"ERC20 token address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"returns\":{\"_0\":\"Number of pools\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"repatriateRewards(uint256,address)\":{\"params\":{\"_destination\":\"Wallet to send funds to\",\"_rewardsDue\":\"The amount of rewards that need to be fetched and sent to the wallet\"}},\"resetSyntheticRewardsMinted()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"resetSyntheticRewardsSlashed()\":{\"details\":\"To be called by Oracle only, when batch burning synthetic minted rewards\"},\"setBurnAddress(address)\":{\"params\":{\"_burnAddress\":\"The burn address on this chain\"}},\"setIsTimeMultiplierActive(bool)\":{\"params\":{\"_isActive\":\"Whether it shall be active. If false, timemultiplier will be 1.\"}},\"setKeyAddresses(address,address)\":{\"params\":{\"_ZORRO\":\"ZOR token address\",\"_defaultStablecoin\":\"Main stablecoin address (USDC)\"}},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"details\":\"NOTE: Must enter all parameters or existing ones will be overwritten!\",\"params\":{\"_baseRewardRateBasisPoints\":\"Base reward rate factor, in bp\",\"_blocksPerDay\":\"# of blocks per day for this chain\",\"_chainMultiplier\":\"Rewards multiplier factor to be applied to this chain\",\"_dailyDistFactors\":\"Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]\"}},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"params\":{\"_targetTVLCaptureBasisPoints\":\"Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain\"}},\"setXChainParams(uint256,uint256,address)\":{\"params\":{\"_chainId\":\"The ind of the chain that this contract is on\",\"_homeChainId\":\"The chain ID of the home chain\",\"_homeChainZorroController\":\"The address of the home chain controller\"}},\"setZorroContracts(address,address)\":{\"params\":{\"_publicPool\":\"Public pool address (where ZOR minted)\",\"_zorroStakingVault\":\"Zorro single staking vault address\"}},\"setZorroControllerOracle(address)\":{\"params\":{\"_zorroControllerOracle\":\"Address of Chainlink oracle that can interact with this contract\"}},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Values to be provided by Oracle. Perferable to run daily\",\"params\":{\"_ZorroTotalVaultTVLUSD\":\"USD value of all TVL locked into the Zorro protocol, across all chains\",\"_publicPoolZORBalance\":\"Number of ZOR tokens remaining in public pool on home chain\",\"_targetTVLCaptureBasisPoints\":\"% desired capture of total market TVL, measured in basis points\",\"_totalChainMultipliers\":\"Sum total of all chain multipliers for each chain\",\"_totalMarketTVLUSD\":\"Total DeFi market TVL across all chains (measured in USD)\"}},\"setZorroXChainEndpoint(address)\":{\"params\":{\"_contract\":\"Contract address of endpoint\"}},\"trancheLength(uint256,address)\":{\"params\":{\"_pid\":\"Index of pool\",\"_user\":\"wallet address of user\"},\"returns\":{\"_0\":\"Number of tranches\"}},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"params\":{\"_fromPid\":\"index of pool FROM\",\"_fromTrancheId\":\"index of tranche FROM\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_toPid\":\"index of pool TO\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePool(uint256)\":{\"params\":{\"_pid\":\"index of pool\"},\"returns\":{\"mintedZOR\":\"Amount of ZOR rewards minted (useful for cross chain)\"}},\"withdraw(uint256,uint256,bool)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_pid\":\"index of pool\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount of Want token withdrawn\"}},\"withdrawAll(uint256)\":{\"params\":{\"_pid\":\"index of pool\"}},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"params\":{\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_0\":\"Amount (in USD) returned\"}},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"params\":{\"_account\":\"address of wallet on-chain\",\"_foreignAccount\":\"address of wallet cross-chain (that originally made this deposit)\",\"_harvestOnly\":\"If true, will only harvest Zorro tokens but not do a withdrawal\",\"_maxMarketMovement\":\"factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\",\"_pid\":\"index of pool to deposit into\",\"_trancheId\":\"index of tranche\"},\"returns\":{\"_amountUSD\":\"Amount of USD withdrawn\",\"_rewardsDueXChain\":\"Amount of ZOR rewards due to the origin (cross chain) user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256,uint256,uint256)\":{\"notice\":\"Deposit Want tokens to associated Vault\"},\"depositFullService(uint256,uint256,uint256,uint256)\":{\"notice\":\"Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\"},\"depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)\":{\"notice\":\"Full service deposit function to be called by ZorroControllerXChain only.\"},\"handleAccXChainRewards(uint256,uint256)\":{\"notice\":\"Called by oracle to account for ZOR rewards that were minted or slashed on other chains\"},\"inCaseTokensGetStuck(address,uint256)\":{\"notice\":\"For owner to recover ERC20 tokens on this contract if stuck\"},\"poolLength()\":{\"notice\":\"Number of pools in the Zorro protocol\"},\"repatriateRewards(uint256,address)\":{\"notice\":\"Gets rewards and sends to the recipient of a cross chain withdrawal\"},\"resetSyntheticRewardsMinted()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"resetSyntheticRewardsSlashed()\":{\"notice\":\"Resets accumulated synthentic rewards minted\"},\"setBurnAddress(address)\":{\"notice\":\"Setter: Burn address\"},\"setIsTimeMultiplierActive(bool)\":{\"notice\":\"Setter: Set time multiplier\"},\"setKeyAddresses(address,address)\":{\"notice\":\"Setter: Set key token addresses\"},\"setRewardsParams(uint256,uint256[],uint256,uint256)\":{\"notice\":\"Setter: Reward params (See Tokenomics paper for more details)\"},\"setStartBlock(uint256)\":{\"notice\":\"Setter: Start block for rewards\"},\"setTargetTVLCaptureBasisPoints(uint256)\":{\"notice\":\"Setter: TVL capture (See Tokenomics paper)\"},\"setXChainParams(uint256,uint256,address)\":{\"notice\":\"Setter: Cross chain params\"},\"setZorroContracts(address,address)\":{\"notice\":\"Setter: Set key ZOR contract addresses\"},\"setZorroControllerOracle(address)\":{\"notice\":\"Setter: Set Zorro Controller Oracle\"},\"setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Set the number of Zorro to emit per block based on current market parameters\"},\"setZorroXChainEndpoint(address)\":{\"notice\":\"Setter: Cross chain endpoint\"},\"trancheLength(uint256,address)\":{\"notice\":\"Number of tranches invested by a given user into a given pool\"},\"transferInvestment(uint256,uint256,uint256,uint256)\":{\"notice\":\"Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\"},\"updatePool(uint256)\":{\"notice\":\"Update reward variables of the given pool to be up-to-date.\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"Fully withdraw Want tokens from underlying Vault.\"},\"withdrawAll(uint256)\":{\"notice\":\"Withdraw the maximum number of Want tokens from a pool\"},\"withdrawalFullService(uint256,uint256,bool,uint256)\":{\"notice\":\"Withdraws funds from a pool and converts the Want token into USD\"},\"withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)\":{\"notice\":\"Full service withdrawal to be called from authorized cross chain endpoint\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":\"ZorroControllerInvestment\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe678d5eacb4e4ffcd6e7038921688c418effea0af6f00e8897ef7ad922bae6d\",\"dweb:/ipfs/QmVpqPCGsUFWG43yjAw4LFqJQZ9x58J57WnZscFrBBRgvw\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedSafeMathUpgradeable.sol\":{\"keccak256\":\"0x322088ced3c1d027a3260de4e5a867b2264adeef252b94158a9725767873ea31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51371d5fbd30710a47361e5d9e2615664553ca0a896131d2a7b2ff304ccb51c\",\"dweb:/ipfs/Qmb9Y2f3XLymw7sjwhvYnJLkCZSrjVgUFdT1M1mpAy38sT\"]},\"project:/contracts/controllers/_ZorroControllerBase.sol\":{\"keccak256\":\"0xbe9ada3669a1294aec5339475a5d1d1d5d5836ca7ad9562cd76b59f3ebf758ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4d3a6c80869b8df7771df3064acb89aac453bb75feb675a7569515ce79ccbf6\",\"dweb:/ipfs/QmPf1DXbK5X6HQRX4G56g5xE9qncgCtc7Aj73evStNAS6Y\"]},\"project:/contracts/controllers/_ZorroControllerInvestment.sol\":{\"keccak256\":\"0xc1f887d3d0ace08b85fa7027678c9416baa86cae417e1160c0453757238021c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a882be762066784e248e7c0c27be5e5d57df5efd53b15c0518e851ffb403a15\",\"dweb:/ipfs/QmR4ypzoXVVhYkKjPbSktYY7AhmS1mCSPSQgqNWcQLKHah\"]},\"project:/contracts/controllers/actions/ZorroControllerActions.sol\":{\"keccak256\":\"0x6e79e7961283157ba1e5d47dcf742c6dd1cacd160833b3d19b5b5d02f61e2ae9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0943b5dba4a4c00b77930700c79ade3d03dcd870cf4f1793d2029fb2b08ce98f\",\"dweb:/ipfs/QmZkVQ3PM9xDXu49igeQMt3mXXqDQoAagpv9nhzRiXrwTD\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x06fe2f93967031c31494cd6cfb81f231bf511b79a008cbe6ec410c7910b91535\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c97cda12b26b32fdd0aa518afee4349408f5a4f38d4007d8036ba880471e5b\",\"dweb:/ipfs/QmVyLgaqxdDg5vA6DZDyhq1DMyFnm2JDmvVThQrvPWk4zm\"]},\"project:/contracts/interfaces/IZorro.sol\":{\"keccak256\":\"0x0bc5c8ba8e537c2800d4bfa81f60537eb063dccb880c18464a0e4717bbba40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f91193eef46fa3d9831fd5c084fef34206d3fa4b6e7c439d82c15bf69d3707c8\",\"dweb:/ipfs/QmfFuPXAk6p8ZvHMbitFuY6fLPqmG9XQHaQzifDbieeY9D\"]},\"project:/contracts/interfaces/IZorroController.sol\":{\"keccak256\":\"0x8328d85c8bdad2c372560d312eccc24768b5c1fe0d60cd019f61962c8faca98f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03e66335f55b4fa2138bb1cb2b4ef132e0c68a164e7290db006ece8127c51f6d\",\"dweb:/ipfs/Qme9bZ3Qqqy7zvWmAknRRCoHtCdZSVXuvxMN6Gd3kH83Ca\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8b8949deef1b63739e25943b4c29f87593eafbc26331811884e7b19d086abcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d411fa18f0ef03d2dd5bab3989d0340d3cd3d0461dc9475857fb0173a3ffdeeb\",\"dweb:/ipfs/QmY9nMBk618tDvnemMwYsTpX49WcBDMZsQj7z8azx58zNr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061383a806100206000396000f3fe608060405234801561001057600080fd5b506004361061037b5760003560e060020a9004806370d5ae05116101d7578063b61bb80a11610108578063cff38dd4116100a6578063f2fde38b11610080578063f2fde38b146107ad578063f35e4a6e146107c0578063f63cce37146107d3578063fc39a29e146107e657600080fd5b8063cff38dd41461077e578063ed43633f14610791578063ef126967146107a457600080fd5b8063c2936142116100e2578063c293614214610746578063c4e94f221461074f578063c6d758cb14610762578063cb9c2f681461077557600080fd5b8063b61bb80a14610717578063b95cc6811461072a578063c13260a51461073357600080fd5b8063941d3fd0116101755780639cebd3711161014f5780639cebd371146106b3578063a13346c6146106bc578063a4d2b083146106c4578063b4b4e9eb146106d757600080fd5b8063941d3fd014610662578063958e2d31146106975780639a8a0592146106aa57600080fd5b80637e37c769116101b15780637e37c76914610618578063823c43d01461062b5780638c157db21461063e5780638da5cb5b1461065157600080fd5b806370d5ae05146105ea578063715018a6146105fd578063745af0a81461060557600080fd5b806340abd8fc116102b1578063529668321161024f5780635c63fa87116102295780635c63fa871461059e578063668ababb146105b15780636b8eb2e5146105c45780636c78d49c146105d757600080fd5b8063529668321461057957806353f73f87146105825780635527a6f91461059557600080fd5b80634b0e72161161028b5780634b0e7216146105375780634cfea68a1461054a5780635051d3711461055357806351eb05a61461056657600080fd5b806340abd8fc146104f35780634780f9f51461051b57806348cd4cb11461052e57600080fd5b80632e31283d1161031e57806339e80a88116102f857806339e80a88146104bb5780633b710688146104ce5780633b9ce565146104d75780633bbc1ffc146104e057600080fd5b80632e31283d14610432578063332e5a7b1461049557806333cfcd3b146104a857600080fd5b80630aa0988e1161035a5780630aa0988e146103b45780631526fe27146103c757806317caf6f1146104165780631b8fb6921461041f57600080fd5b8062aeef8a14610380578063081e3eda1461039557806309b79b3c146103ac575b600080fd5b61039361038e366004612fd3565b6107f9565b005b60aa545b6040519081526020015b60405180910390f35b610393610898565b6103936103c236600461301b565b6108fc565b6103da6103d536600461304e565b610957565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103a3565b61039960a45481565b61039361042d366004613067565b6109aa565b61047d610440366004613130565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103a3565b60ae5461047d90600160a060020a031681565b6103996104b636600461318e565b610a7d565b60af5461047d90600160a060020a031681565b61039960a35481565b61039960a15481565b6103936104ee36600461304e565b610b1a565b6105066105013660046131c7565b610b79565b604080519283526020830191909152016103a3565b610393610529366004613245565b610c14565b610399609c5481565b610393610545366004613277565b610ca6565b610399609d5481565b610393610561366004613277565b610cf5565b61039961057436600461304e565b610d44565b61039960a55481565b610399610590366004613067565b610f37565b61039960a05481565b6103936105ac366004613292565b610f61565b60995461047d90600160a060020a031681565b6103936105d23660046132c7565b610fb8565b6103936105e5366004613302565b611088565b609b5461047d90600160a060020a031681565b6103936110f5565b61039961061336600461331f565b61112e565b610393610626366004613245565b6111a8565b60ad5461047d90600160a060020a031681565b60975461047d90600160a060020a031681565b603354600160a060020a031661047d565b60ae546106879074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103a3565b6103936106a536600461304e565b61131e565b61039960a75481565b61039960a25481565b610393611464565b609a5461047d90600160a060020a031681565b6106ea6106e536600461335e565b6114e2565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103a3565b60985461047d90600160a060020a031681565b61039960a65481565b610393610741366004613393565b611543565b610399609e5481565b61039361075d366004613277565b6115ea565b6103936107703660046133b5565b611639565b610399609f5481565b61039361078c3660046133df565b611701565b61039361079f36600461345b565b611796565b61039960a85481565b6103936107bb366004613277565b61180f565b6103936107ce36600461304e565b6118c7565b6103936107e136600461301b565b61194c565b60a95461047d90600160a060020a031681565b600260655414156108285760405160e560020a62461bcd02815260040161081f906134e8565b60405180910390fd5b6002606581905550600060aa84815481106108455761084561351f565b60009182526020909120600690910201805490915061086f90600160a060020a03163330866119d4565b61088c843360405180602001604052806000815250868642611a8b565b50506001606555505050565b60ad54600160a060020a031633600160a060020a0316146108ce5760405160e560020a62461bcd02815260040161081f90613538565b60a85460a75414156108f55760405160e560020a62461bcd02815260040161081f9061356f565b600060a555565b603354600160a060020a031633146109295760405160e560020a62461bcd02815260040161081f906135a6565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa818154811061096757600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60af54600160a060020a031633600160a060020a0316146109e05760405160e560020a62461bcd02815260040161081f906135db565b60a85460a75414156109fa576109f68282611dba565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a6157600080fd5b505af1158015610a75573d6000803e3d6000fd5b505050505050565b600060026065541415610aa55760405160e560020a62461bcd02815260040161081f906134e8565b60026065819055506000610acd85336040518060200160405280600081525087876000611dd8565b9050610b0c33826000015160aa8881548110610aeb57610aeb61351f565b6000918252602090912060069091020154600160a060020a03169190612483565b516001606555949350505050565b603354600160a060020a03163314610b475760405160e560020a62461bcd02815260040161081f906135a6565b60a954600160a060020a03163014610b745760405160e560020a62461bcd02815260040161081f90613612565b609f55565b60af546000908190600160a060020a031633600160a060020a031614610bb45760405160e560020a62461bcd02815260040161081f906135db565b610bc488888888888860016124d1565b90925090508115610be657609854610be690600160a060020a03163384612483565b8015610c0957609b54609754610c0991600160a060020a03918216911683612483565b965096945050505050565b60026065541415610c3a5760405160e560020a62461bcd02815260040161081f906134e8565b6002606581905550600060aa8581548110610c5757610c5761351f565b6000918252602090912060056006909202010154609854600160a060020a039182169250610c8891163383876119d4565b61088c853360405180602001604052806000815250878742886125f9565b603354600160a060020a03163314610cd35760405160e560020a62461bcd02815260040161081f906135a6565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610d225760405160e560020a62461bcd02815260040161081f906135a6565b60ad8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610d5a57610d5a61351f565b9060005260206000209060060201905080600201544311610d7e5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e079190613649565b905080610e1e575043600290910155506000919050565b6000826002015443610e30919061367b565b9050600060a4548460010154609e5484610e4a9190613692565b610e549190613692565b610e5e91906136b1565b60a954909150600160a060020a0316301415610e8757610e7e8130611dba565b60009450610f10565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610eec57600080fd5b505af1158015610f00573d6000803e3d6000fd5b50505050809450610f10856126e5565b808460030154610f2091906136d6565b600385015550504360029092019190915550919050565b600082815260ab60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610f8e5760405160e560020a62461bcd02815260040161081f906135a6565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a031614610fee5760405160e560020a62461bcd02815260040161081f90613538565b6000610ffc83612710613692565b848660a35461100b9190613692565b6110159190613692565b61101f91906136b1565b905060a154811115611034575060a154611043565b60a054811015611043575060a0545b609d5461105287612710613692565b61105c9190613692565b60a2546110698385613692565b6110739190613692565b61107d91906136b1565b609e55505050505050565b603354600160a060020a031633146110b55760405160e560020a62461bcd02815260040161081f906135a6565b60ae8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a031633146111225760405160e560020a62461bcd02815260040161081f906135a6565b61112c6000612720565b565b6000600260655414156111565760405160e560020a62461bcd02815260040161081f906134e8565b6002606581905550600061117f33604051806020016040528060008152508888888860006124d1565b5060985490915061119a90600160a060020a03163383612483565b600160655595945050505050565b600260655414156111ce5760405160e560020a62461bcd02815260040161081f906134e8565b6002606555600084815260ab6020908152604080832033845290915281208054859081106111fe576111fe61351f565b600091825260208083206003600690930201919091015487835260ab82526040808420338552909252908220805491935090869081106112405761124061351f565b906000526020600020906006020160040154905060006112763360405180602001604052806000815250898960008960006124d1565b5090506112b960aa868154811061128f5761128f61351f565b6000918252602090912060056006909202010154609854600160a060020a03908116911683612483565b6112d78533604051806020016040528060008152508487878a6125f9565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b600260655414156113445760405160e560020a62461bcd02815260040161081f906134e8565b600260655560006113558233610f37565b905060005b818110156113915761138083336040518060200160405280600081525084600080611dd8565b5061138a816136ee565b905061135a565b50600060aa83815481106113a7576113a761351f565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143a9190613649565b9050801561145a5761145a338260aa8681548110610aeb57610aeb61351f565b5050600160655550565b60ad54600160a060020a031633600160a060020a03161461149a5760405160e560020a62461bcd02815260040161081f90613538565b60a85460a75414156114c15760405160e560020a62461bcd02815260040161081f9061356f565b609b5460a6546097546108f592600160a060020a0391821692911690612483565b60ab602052826000526040600020602052816000526040600020818154811061150a57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ad54600160a060020a031633600160a060020a0316146115795760405160e560020a62461bcd02815260040161081f90613538565b60a954600160a060020a031630146115a65760405160e560020a62461bcd02815260040161081f90613612565b609b546115d390600160a060020a03166115c0838561367b565b609754600160a060020a03169190612483565b609a546109f6908290600160a060020a0316611dba565b603354600160a060020a031633146116175760405160e560020a62461bcd02815260040161081f906135a6565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116665760405160e560020a62461bcd02815260040161081f906135a6565b609754600160a060020a03838116911614156116ed5760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161081f565b6109f6600160a060020a0383163383612483565b60af54600160a060020a031633600160a060020a0316146117375760405160e560020a62461bcd02815260040161081f906135db565b600060aa888154811061174c5761174c61351f565b6000918252602090912060056006909202010154609854600160a060020a03918216925061177d91163383886119d4565b61178c888888888888886125f9565b5050505050505050565b603354600160a060020a031633146117c35760405160e560020a62461bcd02815260040161081f906135a6565b609d85905583836000816117d9576117d961351f565b602002919091013560a05550838360018181106117f8576117f861351f565b602002919091013560a1555060a35560a255505050565b603354600160a060020a0316331461183c5760405160e560020a62461bcd02815260040161081f906135a6565b600160a060020a0381166118bb5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161081f565b6118c481612720565b50565b603354600160a060020a031633146118f45760405160e560020a62461bcd02815260040161081f906135a6565b609c54156119475760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161081f565b609c55565b603354600160a060020a031633146119795760405160e560020a62461bcd02815260040161081f906135a6565b60a954600160a060020a031630146119a65760405160e560020a62461bcd02815260040161081f90613612565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611a859085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612772565b50505050565b60008060aa8881548110611aa157611aa161351f565b9060005260206000209060060201905060008511611b045760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161081f565b611b0d88610d44565b91506000611b1b888861285a565b60058301548354919250611b3c91600160a060020a03908116911688612903565b600060aa8a81548110611b5157611b5161351f565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bea9190613649565b60ae546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c989190613649565b60ae546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2b9190613649565b9050808560040154611d3d91906136d6565b6004860155611d518c858c84868d8d6129e7565b8b8a604051611d609190613735565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611da391815260200190565b60405180910390a450505050509695505050505050565b6099546097546109f691600160a060020a03918216911683856119d4565b6040805180820190915260008082526020820152600160a060020a038616158015611e04575060008551115b80611e215750600160a060020a03861615801590611e2157508451155b611e705760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161081f565b6000611e7e8886888a612ba2565b9050600060aa8981548110611e9557611e9561351f565b906000526020600020906006020190506000826000015111611efc5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161081f565b6000816004015411611f535760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161081f565b60a082015115611fa85760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161081f565b611fb189610d44565b5060008260400151826004015483600301548560000151611fd29190613692565b611fdc91906136b1565b611fe6919061367b565b905080156121485760ae54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa15801561208d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b19190613751565b9150915086156120fe576020860182905260a85460a75414156120ef5780156120ea57609a546120ea90600160a060020a031682612d45565b612145565b80156120ea576120ea81612df4565b811561210e5761210e8b83612d45565b60a85460a75414156121365780156120ea57609a546120ea90600160a060020a031682612d45565b80156121455761214581612df4565b50505b856124765760006121598a8a61285a565b9050600060aa8c815481106121705761217061351f565b906000526020600020906006020160050160009054906101000a9004600160a060020a03169050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156121da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fe9190613649565b866020015161220d9190613692565b82600160a060020a03166342da4eb36040518163ffffffff1660e060020a028152600401602060405180830381865afa15801561224e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122729190613649565b87516122839064e8d4a51000613692565b61228d9190613692565b61229791906136b1565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af11580156122fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231e9190613649565b5085516004860154612330919061367b565b60048681019190915585546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa158015612399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bd9190613649565b875260008d815260ab60209081526040808320600160a060020a0387168452909152902080544291908c9081106123f6576123f661351f565b9060005260206000209060060201600501819055508c8b60405161241a9190613735565b60405180910390208d600160a060020a03167fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d98d8b6000015160405161246a929190918252602082015260400190565b60405180910390a45050505b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526124cc9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a21565b505050565b600080600060aa88815481106124e9576124e961351f565b60009182526020822060056006909202010154600160a060020a03169150612515898c8c8b8b8a611dd8565b905061255482826000015160aa8c815481106125335761253361351f565b6000918252602090912060069091020154600160a060020a03169190612903565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156125be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e29190613649565b935080602001519250505097509795505050505050565b600060aa888154811061260e5761260e61351f565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af115801561268d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b19190613649565b90506126cb828260aa8c815481106125335761253361351f565b6126d9898989848989611a8b565b50505050505050505050565b60a85460a754141561270c5760405160e560020a62461bcd02815260040161081f9061356f565b8060a55461271a91906136d6565b60a55550565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006127c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612e2f9092919063ffffffff16565b8051909150156124cc57808060200190518101906127e59190613775565b6124cc5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161081f565b81600160a060020a038116610f5b5760008251116128e35760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161081f565b6128ec82613792565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561296d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129919190613649565b61299b91906136d6565b604051600160a060020a038516602482015260448101829052909150611a859085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611a21565b600060aa88815481106129fc576129fc61351f565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612a85908a90613692565b612a8f91906136b1565b815260208082018790526040808301879052600060609384018190528d815260ab8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612b97578760ac60008b815260200190815260200160002088604051612b3e9190613735565b908152602001604051809103902060006001612b5a8d8d610f37565b612b64919061367b565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612bdb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612c7a57600085815260ab60209081526040808320600160a060020a03861684529091529020805485908110612c1e57612c1e61351f565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612d3d565b600085815260ac60205260408082209051612c96908690613735565b908152604080516020928190038301902060008881529083528181205489825260ab8452828220600160a060020a0390911680835293522080549192509086908110612ce457612ce461351f565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcf9190613649565b905080831115612ddd578091505b609754611a8590600160a060020a03168584612483565b60a85460a7541415612e1b5760405160e560020a62461bcd02815260040161081f9061356f565b8060a654612e2991906136d6565b60a65550565b6060612e3e8484600085612e48565b90505b9392505050565b60603031831115612ec45760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161081f565b600160a060020a0385163b612f1e5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161081f565b60008086600160a060020a03168587604051612f3a9190613735565b60006040518083038185875af1925050503d8060008114612f77576040519150601f19603f3d011682016040523d82523d6000602084013e612f7c565b606091505b5091509150612f8c828286612f97565b979650505050505050565b60608315612fa6575081612e41565b825115612fb65782518084602001fd5b8160405160e560020a62461bcd02815260040161081f91906137d1565b600080600060608486031215612fe857600080fd5b505081359360208301359350604090920135919050565b8035600160a060020a038116811461301657600080fd5b919050565b6000806040838503121561302e57600080fd5b61303783612fff565b915061304560208401612fff565b90509250929050565b60006020828403121561306057600080fd5b5035919050565b6000806040838503121561307a57600080fd5b8235915061304560208401612fff565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126130b457600080fd5b813567ffffffffffffffff808211156130cf576130cf61308a565b604051601f8301601f19908116603f011681019082821181831017156130f7576130f761308a565b8160405283815286602085880101111561311057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561314557600080fd5b83359250602084013567ffffffffffffffff81111561316357600080fd5b61316f868287016130a3565b925050604084013590509250925092565b80151581146118c457600080fd5b6000806000606084860312156131a357600080fd5b833592506020840135915060408401356131bc81613180565b809150509250925092565b60008060008060008060c087890312156131e057600080fd5b6131e987612fff565b9550602087013567ffffffffffffffff81111561320557600080fd5b61321189828a016130a3565b9550506040870135935060608701359250608087013561323081613180565b8092505060a087013590509295509295509295565b6000806000806080858703121561325b57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561328957600080fd5b612e4182612fff565b6000806000606084860312156132a757600080fd5b83359250602084013591506132be60408501612fff565b90509250925092565b600080600080600060a086880312156132df57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561331457600080fd5b8135612e4181613180565b6000806000806080858703121561333557600080fd5b8435935060208501359250604085013561334e81613180565b9396929550929360600135925050565b60008060006060848603121561337357600080fd5b8335925061338360208501612fff565b9150604084013590509250925092565b600080604083850312156133a657600080fd5b50508035926020909101359150565b600080604083850312156133c857600080fd5b6133d183612fff565b946020939093013593505050565b600080600080600080600060e0888a0312156133fa57600080fd5b8735965061340a60208901612fff565b9550604088013567ffffffffffffffff81111561342657600080fd5b6134328a828b016130a3565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561347357600080fd5b85359450602086013567ffffffffffffffff8082111561349257600080fd5b818801915088601f8301126134a657600080fd5b8135818111156134b557600080fd5b89602080830285010111156134c957600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b60006020828403121561365b57600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561368d5761368d613662565b500390565b60008160001904831182151516156136ac576136ac613662565b500290565b6000826136d15760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156136e9576136e9613662565b500190565b600060001982141561370257613702613662565b5060010190565b60005b8381101561372457818101518382015260200161370c565b83811115611a855750506000910152565b60008251613747818460208701613709565b9190910192915050565b6000806040838503121561376457600080fd5b505080516020909101519092909150565b60006020828403121561378757600080fd5b8151612e4181613180565b805160208201516bffffffffffffffffffffffff1980821692919060148310156137c957808360140360080260020a820283161693505b505050919050565b60208152600082518060208401526137f0816040850160208701613709565b601f01601f1916919091016040019291505056fea26469706673582212204efe1fffe313af120532d73dc3ef0cfd0d2f9933dfe9f5e752d6d1274149bc4c64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061037b5760003560e060020a9004806370d5ae05116101d7578063b61bb80a11610108578063cff38dd4116100a6578063f2fde38b11610080578063f2fde38b146107ad578063f35e4a6e146107c0578063f63cce37146107d3578063fc39a29e146107e657600080fd5b8063cff38dd41461077e578063ed43633f14610791578063ef126967146107a457600080fd5b8063c2936142116100e2578063c293614214610746578063c4e94f221461074f578063c6d758cb14610762578063cb9c2f681461077557600080fd5b8063b61bb80a14610717578063b95cc6811461072a578063c13260a51461073357600080fd5b8063941d3fd0116101755780639cebd3711161014f5780639cebd371146106b3578063a13346c6146106bc578063a4d2b083146106c4578063b4b4e9eb146106d757600080fd5b8063941d3fd014610662578063958e2d31146106975780639a8a0592146106aa57600080fd5b80637e37c769116101b15780637e37c76914610618578063823c43d01461062b5780638c157db21461063e5780638da5cb5b1461065157600080fd5b806370d5ae05146105ea578063715018a6146105fd578063745af0a81461060557600080fd5b806340abd8fc116102b1578063529668321161024f5780635c63fa87116102295780635c63fa871461059e578063668ababb146105b15780636b8eb2e5146105c45780636c78d49c146105d757600080fd5b8063529668321461057957806353f73f87146105825780635527a6f91461059557600080fd5b80634b0e72161161028b5780634b0e7216146105375780634cfea68a1461054a5780635051d3711461055357806351eb05a61461056657600080fd5b806340abd8fc146104f35780634780f9f51461051b57806348cd4cb11461052e57600080fd5b80632e31283d1161031e57806339e80a88116102f857806339e80a88146104bb5780633b710688146104ce5780633b9ce565146104d75780633bbc1ffc146104e057600080fd5b80632e31283d14610432578063332e5a7b1461049557806333cfcd3b146104a857600080fd5b80630aa0988e1161035a5780630aa0988e146103b45780631526fe27146103c757806317caf6f1146104165780631b8fb6921461041f57600080fd5b8062aeef8a14610380578063081e3eda1461039557806309b79b3c146103ac575b600080fd5b61039361038e366004612fd3565b6107f9565b005b60aa545b6040519081526020015b60405180910390f35b610393610898565b6103936103c236600461301b565b6108fc565b6103da6103d536600461304e565b610957565b60408051600160a060020a03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016103a3565b61039960a45481565b61039361042d366004613067565b6109aa565b61047d610440366004613130565b60ac6020908152600093845260408085208451808601840180519281529084019584019590952094529290528252902054600160a060020a031681565b604051600160a060020a0390911681526020016103a3565b60ae5461047d90600160a060020a031681565b6103996104b636600461318e565b610a7d565b60af5461047d90600160a060020a031681565b61039960a35481565b61039960a15481565b6103936104ee36600461304e565b610b1a565b6105066105013660046131c7565b610b79565b604080519283526020830191909152016103a3565b610393610529366004613245565b610c14565b610399609c5481565b610393610545366004613277565b610ca6565b610399609d5481565b610393610561366004613277565b610cf5565b61039961057436600461304e565b610d44565b61039960a55481565b610399610590366004613067565b610f37565b61039960a05481565b6103936105ac366004613292565b610f61565b60995461047d90600160a060020a031681565b6103936105d23660046132c7565b610fb8565b6103936105e5366004613302565b611088565b609b5461047d90600160a060020a031681565b6103936110f5565b61039961061336600461331f565b61112e565b610393610626366004613245565b6111a8565b60ad5461047d90600160a060020a031681565b60975461047d90600160a060020a031681565b603354600160a060020a031661047d565b60ae546106879074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016103a3565b6103936106a536600461304e565b61131e565b61039960a75481565b61039960a25481565b610393611464565b609a5461047d90600160a060020a031681565b6106ea6106e536600461335e565b6114e2565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016103a3565b60985461047d90600160a060020a031681565b61039960a65481565b610393610741366004613393565b611543565b610399609e5481565b61039361075d366004613277565b6115ea565b6103936107703660046133b5565b611639565b610399609f5481565b61039361078c3660046133df565b611701565b61039361079f36600461345b565b611796565b61039960a85481565b6103936107bb366004613277565b61180f565b6103936107ce36600461304e565b6118c7565b6103936107e136600461301b565b61194c565b60a95461047d90600160a060020a031681565b600260655414156108285760405160e560020a62461bcd02815260040161081f906134e8565b60405180910390fd5b6002606581905550600060aa84815481106108455761084561351f565b60009182526020909120600690910201805490915061086f90600160a060020a03163330866119d4565b61088c843360405180602001604052806000815250868642611a8b565b50506001606555505050565b60ad54600160a060020a031633600160a060020a0316146108ce5760405160e560020a62461bcd02815260040161081f90613538565b60a85460a75414156108f55760405160e560020a62461bcd02815260040161081f9061356f565b600060a555565b603354600160a060020a031633146109295760405160e560020a62461bcd02815260040161081f906135a6565b60978054600160a060020a03938416600160a060020a03199182161790915560988054929093169116179055565b60aa818154811061096757600080fd5b6000918252602090912060069091020180546001820154600283015460038401546004850154600590950154600160a060020a0394851696509294919390921686565b60af54600160a060020a031633600160a060020a0316146109e05760405160e560020a62461bcd02815260040161081f906135db565b60a85460a75414156109fa576109f68282611dba565b5050565b6097546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03838116600483015260248201859052909116906340c10f1990604401600060405180830381600087803b158015610a6157600080fd5b505af1158015610a75573d6000803e3d6000fd5b505050505050565b600060026065541415610aa55760405160e560020a62461bcd02815260040161081f906134e8565b60026065819055506000610acd85336040518060200160405280600081525087876000611dd8565b9050610b0c33826000015160aa8881548110610aeb57610aeb61351f565b6000918252602090912060069091020154600160a060020a03169190612483565b516001606555949350505050565b603354600160a060020a03163314610b475760405160e560020a62461bcd02815260040161081f906135a6565b60a954600160a060020a03163014610b745760405160e560020a62461bcd02815260040161081f90613612565b609f55565b60af546000908190600160a060020a031633600160a060020a031614610bb45760405160e560020a62461bcd02815260040161081f906135db565b610bc488888888888860016124d1565b90925090508115610be657609854610be690600160a060020a03163384612483565b8015610c0957609b54609754610c0991600160a060020a03918216911683612483565b965096945050505050565b60026065541415610c3a5760405160e560020a62461bcd02815260040161081f906134e8565b6002606581905550600060aa8581548110610c5757610c5761351f565b6000918252602090912060056006909202010154609854600160a060020a039182169250610c8891163383876119d4565b61088c853360405180602001604052806000815250878742886125f9565b603354600160a060020a03163314610cd35760405160e560020a62461bcd02815260040161081f906135a6565b609b8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a03163314610d225760405160e560020a62461bcd02815260040161081f906135a6565b60ad8054600160a060020a031916600160a060020a0392909216919091179055565b60008060aa8381548110610d5a57610d5a61351f565b9060005260206000209060060201905080600201544311610d7e5750600092915050565b6005810154604080517f44a3955e0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916344a3955e9160048083019260209291908290030181865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e079190613649565b905080610e1e575043600290910155506000919050565b6000826002015443610e30919061367b565b9050600060a4548460010154609e5484610e4a9190613692565b610e549190613692565b610e5e91906136b1565b60a954909150600160a060020a0316301415610e8757610e7e8130611dba565b60009450610f10565b6097546040517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101839052600160a060020a03909116906340c10f1990604401600060405180830381600087803b158015610eec57600080fd5b505af1158015610f00573d6000803e3d6000fd5b50505050809450610f10856126e5565b808460030154610f2091906136d6565b600385015550504360029092019190915550919050565b600082815260ab60209081526040808320600160a060020a03851684529091529020545b92915050565b603354600160a060020a03163314610f8e5760405160e560020a62461bcd02815260040161081f906135a6565b60a79290925560a85560a98054600160a060020a031916600160a060020a03909216919091179055565b60ad54600160a060020a031633600160a060020a031614610fee5760405160e560020a62461bcd02815260040161081f90613538565b6000610ffc83612710613692565b848660a35461100b9190613692565b6110159190613692565b61101f91906136b1565b905060a154811115611034575060a154611043565b60a054811015611043575060a0545b609d5461105287612710613692565b61105c9190613692565b60a2546110698385613692565b6110739190613692565b61107d91906136b1565b609e55505050505050565b603354600160a060020a031633146110b55760405160e560020a62461bcd02815260040161081f906135a6565b60ae8054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b603354600160a060020a031633146111225760405160e560020a62461bcd02815260040161081f906135a6565b61112c6000612720565b565b6000600260655414156111565760405160e560020a62461bcd02815260040161081f906134e8565b6002606581905550600061117f33604051806020016040528060008152508888888860006124d1565b5060985490915061119a90600160a060020a03163383612483565b600160655595945050505050565b600260655414156111ce5760405160e560020a62461bcd02815260040161081f906134e8565b6002606555600084815260ab6020908152604080832033845290915281208054859081106111fe576111fe61351f565b600091825260208083206003600690930201919091015487835260ab82526040808420338552909252908220805491935090869081106112405761124061351f565b906000526020600020906006020160040154905060006112763360405180602001604052806000815250898960008960006124d1565b5090506112b960aa868154811061128f5761128f61351f565b6000918252602090912060056006909202010154609854600160a060020a03908116911683612483565b6112d78533604051806020016040528060008152508487878a6125f9565b6040513381528590879089907f67e7aba7263d8fbeb0cd9a2f4008f060a6a03f46c1d7f9d0550f0b93e96e96f89060200160405180910390a4505060016065555050505050565b600260655414156113445760405160e560020a62461bcd02815260040161081f906134e8565b600260655560006113558233610f37565b905060005b818110156113915761138083336040518060200160405280600081525084600080611dd8565b5061138a816136ee565b905061135a565b50600060aa83815481106113a7576113a761351f565b60009182526020909120600690910201546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a03909116906370a0823190602401602060405180830381865afa158015611416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143a9190613649565b9050801561145a5761145a338260aa8681548110610aeb57610aeb61351f565b5050600160655550565b60ad54600160a060020a031633600160a060020a03161461149a5760405160e560020a62461bcd02815260040161081f90613538565b60a85460a75414156114c15760405160e560020a62461bcd02815260040161081f9061356f565b609b5460a6546097546108f592600160a060020a0391821692911690612483565b60ab602052826000526040600020602052816000526040600020818154811061150a57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549397509195509350919086565b60ad54600160a060020a031633600160a060020a0316146115795760405160e560020a62461bcd02815260040161081f90613538565b60a954600160a060020a031630146115a65760405160e560020a62461bcd02815260040161081f90613612565b609b546115d390600160a060020a03166115c0838561367b565b609754600160a060020a03169190612483565b609a546109f6908290600160a060020a0316611dba565b603354600160a060020a031633146116175760405160e560020a62461bcd02815260040161081f906135a6565b60af8054600160a060020a031916600160a060020a0392909216919091179055565b603354600160a060020a031633146116665760405160e560020a62461bcd02815260040161081f906135a6565b609754600160a060020a03838116911614156116ed5760405160e560020a62461bcd02815260206004820152603560248201527f217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e6360448201527f20696e43617365546f6b656e73476574537475636b0000000000000000000000606482015260840161081f565b6109f6600160a060020a0383163383612483565b60af54600160a060020a031633600160a060020a0316146117375760405160e560020a62461bcd02815260040161081f906135db565b600060aa888154811061174c5761174c61351f565b6000918252602090912060056006909202010154609854600160a060020a03918216925061177d91163383886119d4565b61178c888888888888886125f9565b5050505050505050565b603354600160a060020a031633146117c35760405160e560020a62461bcd02815260040161081f906135a6565b609d85905583836000816117d9576117d961351f565b602002919091013560a05550838360018181106117f8576117f861351f565b602002919091013560a1555060a35560a255505050565b603354600160a060020a0316331461183c5760405160e560020a62461bcd02815260040161081f906135a6565b600160a060020a0381166118bb5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161081f565b6118c481612720565b50565b603354600160a060020a031633146118f45760405160e560020a62461bcd02815260040161081f906135a6565b609c54156119475760405160e560020a62461bcd02815260206004820152601560248201527f626c6f636b506172616d7320696d6d757461626c650000000000000000000000604482015260640161081f565b609c55565b603354600160a060020a031633146119795760405160e560020a62461bcd02815260040161081f906135a6565b60a954600160a060020a031630146119a65760405160e560020a62461bcd02815260040161081f90613612565b60998054600160a060020a03938416600160a060020a031991821617909155609a8054929093169116179055565b604051600160a060020a0380851660248301528316604482015260648101829052611a859085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612772565b50505050565b60008060aa8881548110611aa157611aa161351f565b9060005260206000209060060201905060008511611b045760405160e560020a62461bcd02815260206004820152601560248201527f5f77616e74416d74206d757374206265203e2030210000000000000000000000604482015260640161081f565b611b0d88610d44565b91506000611b1b888861285a565b60058301548354919250611b3c91600160a060020a03908116911688612903565b600060aa8a81548110611b5157611b5161351f565b60009182526020909120600690910201600501546040517f2209b59e00000000000000000000000000000000000000000000000000000000815260048101899052600160a060020a0390911690632209b59e906024016020604051808303816000875af1158015611bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bea9190613649565b60ae546040517fc25bf1070000000000000000000000000000000000000000000000000000000081526004810189905274010000000000000000000000000000000000000000820460ff1615156024820152919250600091600160a060020a039091169063c25bf10790604401602060405180830381865afa158015611c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c989190613649565b60ae546040517fa80bee070000000000000000000000000000000000000000000000000000000081526004810185905260248101839052919250600091600160a060020a039091169063a80bee0790604401602060405180830381865afa158015611d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2b9190613649565b9050808560040154611d3d91906136d6565b6004860155611d518c858c84868d8d6129e7565b8b8a604051611d609190613735565b604051809103902085600160a060020a03167fc6b1f1535b3bb3bdffa2f97a671ab7bd6f2512deec58103fa47eb40ed95274278c604051611da391815260200190565b60405180910390a450505050509695505050505050565b6099546097546109f691600160a060020a03918216911683856119d4565b6040805180820190915260008082526020820152600160a060020a038616158015611e04575060008551115b80611e215750600160a060020a03861615801590611e2157508451155b611e705760405160e560020a62461bcd02815260206004820152601d60248201527f4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564000000604482015260640161081f565b6000611e7e8886888a612ba2565b9050600060aa8981548110611e9557611e9561351f565b906000526020600020906006020190506000826000015111611efc5760405160e560020a62461bcd02815260206004820152601960248201527f7472616e6368652e636f6e747269627574696f6e206973203000000000000000604482015260640161081f565b6000816004015411611f535760405160e560020a62461bcd02815260206004820152601e60248201527f746f74616c5472616e636865436f6e747269627574696f6e7320697320300000604482015260640161081f565b60a082015115611fa85760405160e560020a62461bcd02815260206004820152601460248201527f416c726561647920657869746564207661756c74000000000000000000000000604482015260640161081f565b611fb189610d44565b5060008260400151826004015483600301548560000151611fd29190613692565b611fdc91906136b1565b611fe6919061367b565b905080156121485760ae54604080517f1bb6ebbb0000000000000000000000000000000000000000000000000000000081528551600482015260208601516024820152908501516044820152606085015160648201526080850151608482015260a085015160a482015260c481018390526000918291600160a060020a0390911690631bb6ebbb9060e4016040805180830381865afa15801561208d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b19190613751565b9150915086156120fe576020860182905260a85460a75414156120ef5780156120ea57609a546120ea90600160a060020a031682612d45565b612145565b80156120ea576120ea81612df4565b811561210e5761210e8b83612d45565b60a85460a75414156121365780156120ea57609a546120ea90600160a060020a031682612d45565b80156121455761214581612df4565b50505b856124765760006121598a8a61285a565b9050600060aa8c815481106121705761217061351f565b906000526020600020906006020160050160009054906101000a9004600160a060020a03169050600081600160a060020a03166344a3955e6040518163ffffffff1660e060020a028152600401602060405180830381865afa1580156121da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fe9190613649565b866020015161220d9190613692565b82600160a060020a03166342da4eb36040518163ffffffff1660e060020a028152600401602060405180830381865afa15801561224e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122729190613649565b87516122839064e8d4a51000613692565b61228d9190613692565b61229791906136b1565b6040517f55ebedec00000000000000000000000000000000000000000000000000000000815260048101829052909150600160a060020a038316906355ebedec906024016020604051808303816000875af11580156122fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231e9190613649565b5085516004860154612330919061367b565b60048681019190915585546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600160a060020a0316906370a0823190602401602060405180830381865afa158015612399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bd9190613649565b875260008d815260ab60209081526040808320600160a060020a0387168452909152902080544291908c9081106123f6576123f661351f565b9060005260206000209060060201600501819055508c8b60405161241a9190613735565b60405180910390208d600160a060020a03167fa7749cd42821d3b82a6814af6d80712b2e43f98ec1b25aee31c8351855de65d98d8b6000015160405161246a929190918252602082015260400190565b60405180910390a45050505b5050509695505050505050565b604051600160a060020a0383166024820152604481018290526124cc9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611a21565b505050565b600080600060aa88815481106124e9576124e961351f565b60009182526020822060056006909202010154600160a060020a03169150612515898c8c8b8b8a611dd8565b905061255482826000015160aa8c815481106125335761253361351f565b6000918252602090912060069091020154600160a060020a03169190612903565b80516040517f648794a4000000000000000000000000000000000000000000000000000000008152600481019190915260248101879052600160a060020a0383169063648794a4906044016020604051808303816000875af11580156125be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e29190613649565b935080602001519250505097509795505050505050565b600060aa888154811061260e5761260e61351f565b60009182526020822060069190910201600501546040517fe502a88d0000000000000000000000000000000000000000000000000000000081526004810188905260248101859052600160a060020a039091169250829063e502a88d906044016020604051808303816000875af115801561268d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126b19190613649565b90506126cb828260aa8c815481106125335761253361351f565b6126d9898989848989611a8b565b50505050505050505050565b60a85460a754141561270c5760405160e560020a62461bcd02815260040161081f9061356f565b8060a55461271a91906136d6565b60a55550565b60338054600160a060020a03838116600160a060020a0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006127c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525085600160a060020a0316612e2f9092919063ffffffff16565b8051909150156124cc57808060200190518101906127e59190613775565b6124cc5760405160e560020a62461bcd02815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161081f565b81600160a060020a038116610f5b5760008251116128e35760405160e560020a62461bcd02815260206004820152602c60248201527f4e65697468657220666f726569676e2061636374206e6f72206c6f63616c206160448201527f6363742070726f76696465640000000000000000000000000000000000000000606482015260840161081f565b6128ec82613792565b6c0100000000000000000000000090049392505050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152306004820152600160a060020a038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561296d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129919190613649565b61299b91906136d6565b604051600160a060020a038516602482015260448101829052909150611a859085907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611a21565b600060aa88815481106129fc576129fc61351f565b600091825260208083206040805160c0808201835260069095029092018054600160a060020a03908116845260018201548486015260028201548484015260038201546060850190815260048301546080860190815260059093015490911660a0850152825195860183528b86529385018a905251925191955083019190612a85908a90613692565b612a8f91906136b1565b815260208082018790526040808301879052600060609384018190528d815260ab8352818120600160a060020a038e1682528352818120805460018181018355918352918490208651600690930201918255928501519281019290925583015160028201559082015160038201556080820151600482015560a0820151600590910155875190915015612b97578760ac60008b815260200190815260200160002088604051612b3e9190613735565b908152602001604051809103902060006001612b5a8d8d610f37565b612b64919061367b565b815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505b505050505050505050565b612bdb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600160a060020a03821615612c7a57600085815260ab60209081526040808320600160a060020a03861684529091529020805485908110612c1e57612c1e61351f565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050612d3d565b600085815260ac60205260408082209051612c96908690613735565b908152604080516020928190038301902060008881529083528181205489825260ab8452828220600160a060020a0390911680835293522080549192509086908110612ce457612ce461351f565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509150505b949350505050565b6097546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528291600091600160a060020a03909116906370a0823190602401602060405180830381865afa158015612dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcf9190613649565b905080831115612ddd578091505b609754611a8590600160a060020a03168584612483565b60a85460a7541415612e1b5760405160e560020a62461bcd02815260040161081f9061356f565b8060a654612e2991906136d6565b60a65550565b6060612e3e8484600085612e48565b90505b9392505050565b60603031831115612ec45760405160e560020a62461bcd02815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161081f565b600160a060020a0385163b612f1e5760405160e560020a62461bcd02815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161081f565b60008086600160a060020a03168587604051612f3a9190613735565b60006040518083038185875af1925050503d8060008114612f77576040519150601f19603f3d011682016040523d82523d6000602084013e612f7c565b606091505b5091509150612f8c828286612f97565b979650505050505050565b60608315612fa6575081612e41565b825115612fb65782518084602001fd5b8160405160e560020a62461bcd02815260040161081f91906137d1565b600080600060608486031215612fe857600080fd5b505081359360208301359350604090920135919050565b8035600160a060020a038116811461301657600080fd5b919050565b6000806040838503121561302e57600080fd5b61303783612fff565b915061304560208401612fff565b90509250929050565b60006020828403121561306057600080fd5b5035919050565b6000806040838503121561307a57600080fd5b8235915061304560208401612fff565b60e060020a634e487b7102600052604160045260246000fd5b600082601f8301126130b457600080fd5b813567ffffffffffffffff808211156130cf576130cf61308a565b604051601f8301601f19908116603f011681019082821181831017156130f7576130f761308a565b8160405283815286602085880101111561311057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561314557600080fd5b83359250602084013567ffffffffffffffff81111561316357600080fd5b61316f868287016130a3565b925050604084013590509250925092565b80151581146118c457600080fd5b6000806000606084860312156131a357600080fd5b833592506020840135915060408401356131bc81613180565b809150509250925092565b60008060008060008060c087890312156131e057600080fd5b6131e987612fff565b9550602087013567ffffffffffffffff81111561320557600080fd5b61321189828a016130a3565b9550506040870135935060608701359250608087013561323081613180565b8092505060a087013590509295509295509295565b6000806000806080858703121561325b57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561328957600080fd5b612e4182612fff565b6000806000606084860312156132a757600080fd5b83359250602084013591506132be60408501612fff565b90509250925092565b600080600080600060a086880312156132df57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561331457600080fd5b8135612e4181613180565b6000806000806080858703121561333557600080fd5b8435935060208501359250604085013561334e81613180565b9396929550929360600135925050565b60008060006060848603121561337357600080fd5b8335925061338360208501612fff565b9150604084013590509250925092565b600080604083850312156133a657600080fd5b50508035926020909101359150565b600080604083850312156133c857600080fd5b6133d183612fff565b946020939093013593505050565b600080600080600080600060e0888a0312156133fa57600080fd5b8735965061340a60208901612fff565b9550604088013567ffffffffffffffff81111561342657600080fd5b6134328a828b016130a3565b979a96995096976060810135975060808101359660a0820135965060c090910135945092505050565b60008060008060006080868803121561347357600080fd5b85359450602086013567ffffffffffffffff8082111561349257600080fd5b818801915088601f8301126134a657600080fd5b8135818111156134b557600080fd5b89602080830285010111156134c957600080fd5b9699602092909201985095966040810135965060600135945092505050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60e060020a634e487b7102600052603260045260246000fd5b60208082526011908201527f6f6e6c79205a6f72726f206f7261636c65000000000000000000000000000000604082015260600190565b60208082526017908201527f466f72206e6f6e20686f6d6520636861696e206f6e6c79000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201527f78636861696e206f6e6c79000000000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f6f6e6c7920686f6d6520636861696e0000000000000000000000000000000000604082015260600190565b60006020828403121561365b57600080fd5b5051919050565b60e060020a634e487b7102600052601160045260246000fd5b60008282101561368d5761368d613662565b500390565b60008160001904831182151516156136ac576136ac613662565b500290565b6000826136d15760e060020a634e487b7102600052601260045260246000fd5b500490565b600082198211156136e9576136e9613662565b500190565b600060001982141561370257613702613662565b5060010190565b60005b8381101561372457818101518382015260200161370c565b83811115611a855750506000910152565b60008251613747818460208701613709565b9190910192915050565b6000806040838503121561376457600080fd5b505080516020909101519092909150565b60006020828403121561378757600080fd5b8151612e4181613180565b805160208201516bffffffffffffffffffffffff1980821692919060148310156137c957808360140360080260020a820283161693505b505050919050565b60208152600082518060208401526137f0816040850160208701613709565b601f01601f1916919091016040019291505056fea26469706673582212204efe1fffe313af120532d73dc3ef0cfd0d2f9933dfe9f5e752d6d1274149bc4c64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22188:123",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:123",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:212:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "164:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "166:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "166:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "166:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "139:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "148:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "135:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "135:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "131:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "128:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "189:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "212:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "199:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "231:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "258:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "269:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "241:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "241:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "320:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "305:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "305:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "292:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "282:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "68:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "79:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "91:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "99:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "107:6:123",
                "type": ""
              }
            ],
            "src": "14:316:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:76:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "446:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "454:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "446:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "488:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "499:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "481:25:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "405:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "416:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "427:4:123",
                "type": ""
              }
            ],
            "src": "335:177:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "566:147:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "576:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "598:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "585:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:20:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "576:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "691:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "700:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "693:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "693:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "693:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "627:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "638:5:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "645:42:123",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "634:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "634:54:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "624:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "624:65:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:73:123"
                  },
                  "nodeType": "YulIf",
                  "src": "614:93:123"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "545:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "556:5:123",
                "type": ""
              }
            ],
            "src": "517:196:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:173:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "851:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "860:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "863:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "853:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "853:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "853:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "826:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "835:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "822:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "822:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "847:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "818:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "815:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "876:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "886:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "876:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "924:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "957:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "968:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "934:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "924:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "763:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "774:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "786:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "794:6:123",
                "type": ""
              }
            ],
            "src": "718:260:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1053:110:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1099:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1108:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1111:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1101:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1101:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1101:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1074:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1083:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1095:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1066:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1066:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1063:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1124:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1147:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1134:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1019:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1030:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1042:6:123",
                "type": ""
              }
            ],
            "src": "983:180:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1435:373:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1445:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1457:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1468:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1453:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1453:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1445:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1481:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1491:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1485:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1549:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1564:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1572:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1560:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1596:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1607:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1592:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1592:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1612:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1639:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1650:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1635:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1655:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1693:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1678:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1678:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1698:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1671:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1671:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1742:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1769:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1780:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1765:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1765:19:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1798:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1786:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1786:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1758:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:44:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1758:44:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1364:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1375:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1383:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1391:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1399:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1407:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1415:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1426:4:123",
                "type": ""
              }
            ],
            "src": "1168:640:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1900:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1946:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1955:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1958:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1948:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1948:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1948:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1921:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1930:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1917:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1942:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1913:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "1910:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1971:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1994:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1981:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1971:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2023:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1858:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1869:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1881:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1889:6:123",
                "type": ""
              }
            ],
            "src": "1813:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2104:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2124:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2114:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2114:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2114:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2221:4:123",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2211:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2211:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2211:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2245:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2235:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2235:15:123"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2072:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2313:666:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2362:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2371:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2374:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2364:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2364:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2364:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2341:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2349:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2337:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2337:17:123"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2356:3:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2333:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2333:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2326:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2323:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2387:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2410:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2397:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:20:123"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2391:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2426:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2436:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2430:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2477:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2479:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2479:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2479:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2469:2:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2473:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2466:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:10:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2463:36:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2508:17:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2522:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2518:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:7:123"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2512:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2534:23:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2554:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2548:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2548:9:123"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2538:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2566:71:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2588:6:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2612:2:123"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2616:4:123",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2608:3:123"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2608:13:123"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2623:2:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2604:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2604:22:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2628:2:123",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2600:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2600:31:123"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2633:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2596:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:40:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2584:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:53:123"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2570:10:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2696:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2698:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2698:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2698:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2655:10:123"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2667:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2652:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2652:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2675:10:123"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2687:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2672:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2672:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2649:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2649:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2646:72:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2734:2:123",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2738:10:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2727:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2727:22:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2727:22:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2765:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2773:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2758:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:18:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2758:18:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2824:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2833:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2836:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2826:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2826:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2826:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2799:6:123"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2807:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2795:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2795:15:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2812:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2791:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2791:26:123"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2819:3:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2788:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2788:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "2785:55:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2866:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2874:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2862:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2885:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2893:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2881:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2881:17:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2900:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2849:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2849:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2849:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2927:6:123"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2935:2:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2923:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2923:15:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2940:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:26:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2947:1:123",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2912:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:37:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2912:37:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2958:15:123",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2967:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2958:5:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2287:6:123",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2295:3:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2303:5:123",
                "type": ""
              }
            ],
            "src": "2261:718:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3097:343:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3143:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3152:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3155:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3145:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3145:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3145:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3118:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3127:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3114:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3114:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3139:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3110:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3110:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3107:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3168:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3191:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3178:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3178:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3168:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3210:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3241:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3252:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3237:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3237:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3224:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3224:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3214:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3299:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3311:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3301:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3301:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3301:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3271:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3279:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3268:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3268:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3265:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3324:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3355:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3366:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3351:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3351:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3375:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3334:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3324:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3392:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3419:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3430:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3415:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3415:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3402:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3402:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3047:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3058:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3070:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3078:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3086:6:123",
                "type": ""
              }
            ],
            "src": "2984:456:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3546:125:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3556:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3568:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3579:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3564:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3564:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3556:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3598:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3613:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3621:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3609:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3609:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3591:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3591:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3591:74:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3515:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3526:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3537:4:123",
                "type": ""
              }
            ],
            "src": "3445:226:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3718:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3772:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3781:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3784:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3774:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3774:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3774:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3741:5:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3762:5:123"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3755:6:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3755:13:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3748:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3748:21:123"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3738:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:32:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3731:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3731:40:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3728:60:123"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3707:5:123",
                "type": ""
              }
            ],
            "src": "3676:118:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3900:276:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3946:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3955:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3958:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3948:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3948:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3948:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3921:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3930:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3917:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3917:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3942:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3913:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3913:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "3910:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3971:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3994:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3981:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3971:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4013:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4040:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4051:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4036:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4036:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4023:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4023:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4013:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4064:45:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4094:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4105:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4090:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4090:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4077:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:32:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4068:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4140:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4118:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4118:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4155:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4165:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4155:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3850:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3861:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3873:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3881:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3889:6:123",
                "type": ""
              }
            ],
            "src": "3799:377:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4342:569:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4389:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4398:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4401:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4391:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4391:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4391:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4363:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4372:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4359:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4359:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4355:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4355:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4352:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4414:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4443:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4424:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4424:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4414:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4462:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4493:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4504:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4489:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4489:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4476:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4476:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4466:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4551:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4560:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4563:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4553:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4553:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4553:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4523:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4520:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4520:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "4517:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4607:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4618:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4603:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4603:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4627:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4586:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4586:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4576:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4644:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4671:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4682:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4667:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4667:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4654:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4654:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4644:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4695:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4722:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4733:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4718:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4718:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4705:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4695:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4746:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4776:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4787:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4772:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4772:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4759:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4759:33:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4750:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4823:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4801:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4801:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4801:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4838:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4848:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4838:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4862:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4889:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4900:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4872:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4872:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4862:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4268:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4279:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4291:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4299:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4307:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4315:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4323:6:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4331:6:123",
                "type": ""
              }
            ],
            "src": "4181:730:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5045:119:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5055:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5067:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5078:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5063:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5063:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5055:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5097:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5108:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5090:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5135:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5151:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5124:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5124:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5124:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5006:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5017:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5025:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5036:4:123",
                "type": ""
              }
            ],
            "src": "4916:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5290:264:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5337:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5346:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5349:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5339:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5339:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5339:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5311:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5320:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5307:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5307:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5332:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5303:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5300:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5362:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5385:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5372:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5362:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5404:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5431:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5442:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5427:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5427:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5414:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5414:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5404:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5455:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5482:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5493:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5478:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5465:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5455:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5506:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5533:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5544:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5529:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5529:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5516:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5516:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5506:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5232:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5243:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5255:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5263:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5271:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5279:6:123",
                "type": ""
              }
            ],
            "src": "5169:385:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5629:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5675:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5684:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5687:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5677:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5677:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5677:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5650:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5659:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5646:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5646:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5671:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5642:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5642:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5639:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5729:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5710:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5710:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5700:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5595:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5606:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5618:6:123",
                "type": ""
              }
            ],
            "src": "5559:186:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5854:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5900:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5909:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5912:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5902:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5902:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5902:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5875:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5884:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5871:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5896:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5867:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5867:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "5864:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5925:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5948:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5935:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5935:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5925:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5967:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5994:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6005:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5990:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5977:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5967:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6018:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6051:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6062:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6047:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6047:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6028:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5804:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5815:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5827:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5835:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5843:6:123",
                "type": ""
              }
            ],
            "src": "5750:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6215:316:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6262:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6271:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6274:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6264:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6264:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6264:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6236:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6245:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6232:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6257:3:123",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6228:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6225:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6287:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6310:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6297:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6297:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6287:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6329:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6356:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6367:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6352:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6352:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6339:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6339:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6329:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6380:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6407:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6418:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6403:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6390:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6390:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6380:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6431:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6458:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6469:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6454:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6454:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6441:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6441:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6431:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6482:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6509:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6520:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6505:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6505:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6492:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "6482:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6149:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6160:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6172:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6180:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6188:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6196:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6204:6:123",
                "type": ""
              }
            ],
            "src": "6077:454:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6603:174:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6649:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6658:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6661:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6651:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6651:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6651:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6624:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6633:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6620:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6620:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6645:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6616:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6616:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6613:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6674:36:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6700:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6687:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6687:23:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6678:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6741:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6719:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6719:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6756:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6766:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6756:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6569:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6580:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6592:6:123",
                "type": ""
              }
            ],
            "src": "6536:241:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6900:328:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6947:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6956:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6959:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6949:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6949:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6949:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6921:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6930:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6917:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6917:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6942:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6913:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "6910:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6972:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6995:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6982:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6972:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7014:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7041:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7052:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7037:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7037:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7024:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7024:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7014:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7065:45:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7095:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7106:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7091:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7091:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7078:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7078:32:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7069:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7141:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7119:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7119:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7119:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7156:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7166:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7156:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7180:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7207:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7218:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7203:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7203:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7190:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7190:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7180:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_boolt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6842:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6853:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6865:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6873:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6881:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6889:6:123",
                "type": ""
              }
            ],
            "src": "6782:446:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7328:92:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7338:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7350:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7361:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7346:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7346:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7338:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7380:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7405:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7398:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7398:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7391:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7391:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7373:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7373:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7373:41:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7297:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7308:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7319:4:123",
                "type": ""
              }
            ],
            "src": "7233:187:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7529:218:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7575:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7584:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7587:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7577:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7577:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7577:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7550:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7559:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7546:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7546:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7571:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7542:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "7539:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7600:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7623:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7610:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7610:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7600:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7675:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7686:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7671:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7671:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "7652:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7652:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7642:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7699:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7722:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7722:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7709:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7699:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7479:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7490:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7502:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7510:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7518:6:123",
                "type": ""
              }
            ],
            "src": "7425:322:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7993:294:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8003:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8015:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8026:3:123",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8011:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8011:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8003:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8046:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8057:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8039:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8039:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8039:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8084:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8095:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8080:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8080:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8100:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8073:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8073:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8127:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8138:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8123:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8123:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8143:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8116:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8116:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8116:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8170:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8181:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8166:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8166:18:123"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8186:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8159:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8159:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8159:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8213:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8224:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8209:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8209:19:123"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8230:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8202:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8202:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8202:35:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8257:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8268:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8253:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8253:19:123"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "8274:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8246:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8246:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8246:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7922:9:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7933:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7941:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7949:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7957:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7965:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7973:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7984:4:123",
                "type": ""
              }
            ],
            "src": "7752:535:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8379:161:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8425:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8434:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8437:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8427:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8427:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8427:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8400:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8409:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8396:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8396:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8421:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8392:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8392:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8389:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8450:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8473:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8460:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8460:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8450:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8492:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8519:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8530:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8515:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8515:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8502:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8502:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8492:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8337:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8348:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8360:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8368:6:123",
                "type": ""
              }
            ],
            "src": "8292:248:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8632:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8678:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8687:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8690:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8680:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8680:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8680:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8653:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8662:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8649:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8649:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8674:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8645:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8642:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8703:39:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8732:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8713:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8713:29:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8703:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8751:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8778:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8789:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8774:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8774:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8761:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8761:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8751:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8590:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8601:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8613:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8621:6:123",
                "type": ""
              }
            ],
            "src": "8545:254:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8985:557:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9032:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9041:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9044:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9034:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9034:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9034:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9006:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9015:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9002:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9002:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9027:3:123",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8998:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8998:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "8995:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9057:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9080:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9067:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9067:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9057:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9099:48:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9132:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9143:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9128:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9128:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9109:18:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9109:38:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9099:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9156:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9187:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9198:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9183:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9183:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9170:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9170:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9160:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9245:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9254:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9257:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9247:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9247:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9247:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9217:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9225:18:123",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9214:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:30:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9211:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9270:59:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9301:9:123"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9312:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9297:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9297:22:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9321:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9280:16:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9280:49:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9270:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9338:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9365:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9376:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9361:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9361:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9348:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9348:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9338:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9389:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9416:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9427:3:123",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9412:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9412:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9399:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9399:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9389:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9441:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9468:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9479:3:123",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9464:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9464:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9451:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9451:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9441:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9493:43:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9520:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9531:3:123",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9516:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9516:19:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9503:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9503:33:123"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "9493:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8903:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8914:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8926:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8934:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8942:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8950:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8958:6:123",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8966:6:123",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8974:6:123",
                "type": ""
              }
            ],
            "src": "8804:738:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9703:665:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9750:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9759:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9762:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9752:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9752:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9752:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9724:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9733:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9720:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9720:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9745:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9716:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9716:33:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9713:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9775:33:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9798:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9785:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:23:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9775:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9817:46:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9848:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9859:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9844:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9844:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9831:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9831:32:123"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9821:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9872:28:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9882:18:123",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9876:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9927:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9936:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9939:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9929:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9929:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9929:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9915:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9923:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9912:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9912:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9909:34:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9952:32:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9966:9:123"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9977:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9962:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9962:22:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9956:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10032:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10041:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10044:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10034:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10034:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10034:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10011:2:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10015:4:123",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10007:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10007:13:123"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10022:7:123"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10003:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10003:27:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9996:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9996:35:123"
                  },
                  "nodeType": "YulIf",
                  "src": "9993:55:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10057:30:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10084:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10071:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10071:16:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10061:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10114:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10123:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10126:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10116:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10116:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10116:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10102:6:123"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10110:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10099:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10099:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10096:34:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10189:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10198:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10201:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10191:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10191:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10191:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10153:2:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10161:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10169:2:123",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10157:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10157:15:123"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10149:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10149:24:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10175:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10145:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10145:33:123"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10180:7:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10142:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:46:123"
                  },
                  "nodeType": "YulIf",
                  "src": "10139:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10214:21:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10228:2:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10232:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10224:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10224:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10214:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10244:16:123",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "10254:6:123"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "10244:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10269:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10296:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10307:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10292:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10292:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10279:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10279:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "10269:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10320:42:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10347:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10358:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10343:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10343:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10330:12:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10330:32:123"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "10320:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9637:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9648:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9660:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9668:6:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9676:6:123",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9684:6:123",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9692:6:123",
                "type": ""
              }
            ],
            "src": "9547:821:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10547:181:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10564:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10575:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10557:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10557:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10598:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10609:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10594:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10594:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10614:2:123",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10587:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10587:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10587:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10637:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10648:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10633:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10633:18:123"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10653:33:123",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10626:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10626:61:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10626:61:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10696:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10708:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10719:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10704:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10704:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10696:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10524:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10538:4:123",
                "type": ""
              }
            ],
            "src": "10373:355:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10765:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10782:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10785:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10775:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10775:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10775:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10879:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10882:4:123",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10872:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10872:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10903:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10906:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10896:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10896:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10896:15:123"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10733:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11096:167:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11113:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11124:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11106:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11106:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11106:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11147:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11158:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11143:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11143:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11163:2:123",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11136:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11136:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11136:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11186:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11197:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11182:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11182:18:123"
                      },
                      {
                        "hexValue": "6f6e6c79205a6f72726f206f7261636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11202:19:123",
                        "type": "",
                        "value": "only Zorro oracle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11175:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11175:47:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11175:47:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11231:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11243:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11254:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11239:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11239:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11231:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11073:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11087:4:123",
                "type": ""
              }
            ],
            "src": "10922:341:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11442:173:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11459:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11470:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11452:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11452:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11452:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11493:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11504:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11489:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11489:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11509:2:123",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11482:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11482:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11482:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11532:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11543:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11528:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11528:18:123"
                      },
                      {
                        "hexValue": "466f72206e6f6e20686f6d6520636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11548:25:123",
                        "type": "",
                        "value": "For non home chain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11521:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11521:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11521:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11583:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11595:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11606:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11591:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11583:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11419:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11433:4:123",
                "type": ""
              }
            ],
            "src": "11268:347:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11794:182:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11811:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11822:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11804:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11804:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11804:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11845:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11856:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11841:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11841:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11861:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11834:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11834:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11834:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11884:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11895:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11880:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11880:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11900:34:123",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11873:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11873:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11873:62:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11944:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11956:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11967:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11952:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11944:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11771:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11785:4:123",
                "type": ""
              }
            ],
            "src": "11620:356:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12155:161:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12172:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12183:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12165:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12165:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12165:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12206:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12217:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12202:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12202:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12222:2:123",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12195:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12195:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12195:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12245:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12256:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12241:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12241:18:123"
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12261:13:123",
                        "type": "",
                        "value": "xchain only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12234:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12234:41:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12234:41:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12284:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12296:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12307:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12292:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12292:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12284:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12132:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12146:4:123",
                "type": ""
              }
            ],
            "src": "11981:335:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12450:168:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12460:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12472:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12483:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12468:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12468:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12460:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12502:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12517:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12525:42:123",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12513:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12513:55:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12495:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12495:74:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12495:74:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12589:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12600:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12585:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12585:18:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12605:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12578:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12578:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12578:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12411:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12422:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12430:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12441:4:123",
                "type": ""
              }
            ],
            "src": "12321:297:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12797:165:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12814:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12825:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12807:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12807:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12807:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12848:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12859:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12844:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12844:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12864:2:123",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12837:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12837:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12837:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12887:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12898:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12883:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12883:18:123"
                      },
                      {
                        "hexValue": "6f6e6c7920686f6d6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12903:17:123",
                        "type": "",
                        "value": "only home chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12876:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12876:45:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12876:45:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12930:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12942:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12953:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12938:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12938:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12930:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12774:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12788:4:123",
                "type": ""
              }
            ],
            "src": "12623:339:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13048:103:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13094:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13103:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13106:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13096:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13096:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13096:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13069:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13078:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13065:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13065:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13090:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13061:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13061:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "13058:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13119:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13135:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13129:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13129:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13119:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13014:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13025:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13037:6:123",
                "type": ""
              }
            ],
            "src": "12967:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13188:152:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13205:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13208:77:123",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13198:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13198:88:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13198:88:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13302:1:123",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13305:4:123",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13295:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13295:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13295:15:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13326:1:123",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13329:4:123",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13319:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13319:15:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13319:15:123"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13156:184:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13394:76:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13416:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13418:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13418:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13418:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13410:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13413:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13407:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13407:8:123"
                  },
                  "nodeType": "YulIf",
                  "src": "13404:34:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13447:17:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13459:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13462:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13455:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13455:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13447:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13376:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13379:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13385:4:123",
                "type": ""
              }
            ],
            "src": "13345:125:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13527:116:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13586:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13588:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13588:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13588:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13558:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13551:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13551:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13544:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13544:17:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13566:1:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13577:1:123",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13573:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13573:6:123"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13581:1:123"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13569:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13569:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13563:2:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13563:21:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13540:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13540:45:123"
                  },
                  "nodeType": "YulIf",
                  "src": "13537:71:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13617:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13632:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13635:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13628:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13628:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13617:7:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13506:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13509:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13515:7:123",
                "type": ""
              }
            ],
            "src": "13475:168:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13694:228:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13725:168:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13746:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13749:77:123",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13739:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13739:88:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13739:88:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13847:1:123",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13850:4:123",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13840:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13840:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13840:15:123"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13875:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13878:4:123",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13868:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13868:15:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13868:15:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13714:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13707:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13707:9:123"
                  },
                  "nodeType": "YulIf",
                  "src": "13704:189:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13902:14:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13911:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13914:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13907:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13907:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13902:1:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13679:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13682:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13688:1:123",
                "type": ""
              }
            ],
            "src": "13648:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13975:80:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14002:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14004:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14004:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14004:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13991:1:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13998:1:123"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13994:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13994:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13988:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13988:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "13985:39:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14033:16:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14044:1:123"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14047:1:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14040:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14040:9:123"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14033:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13958:1:123",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13961:1:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13967:3:123",
                "type": ""
              }
            ],
            "src": "13927:128:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14107:88:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14138:22:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14140:16:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14140:18:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14140:18:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14123:5:123"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14134:1:123",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14130:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14130:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14120:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14120:17:123"
                  },
                  "nodeType": "YulIf",
                  "src": "14117:43:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14169:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14180:5:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14187:1:123",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14176:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14176:13:123"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14169:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14089:5:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14099:3:123",
                "type": ""
              }
            ],
            "src": "14060:135:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14374:243:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14391:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14402:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14384:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14384:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14384:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14425:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14436:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14421:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14421:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14441:2:123",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14414:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14414:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14414:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14464:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14475:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14460:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14460:18:123"
                      },
                      {
                        "hexValue": "217361666520746f20757365205a6f72726f20746f6b656e20696e2066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14480:34:123",
                        "type": "",
                        "value": "!safe to use Zorro token in func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14453:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14453:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14453:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14535:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14546:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14531:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14531:18:123"
                      },
                      {
                        "hexValue": "20696e43617365546f6b656e73476574537475636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14551:23:123",
                        "type": "",
                        "value": " inCaseTokensGetStuck"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14524:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14524:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14524:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14584:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14596:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14607:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14592:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14592:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14584:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14351:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14365:4:123",
                "type": ""
              }
            ],
            "src": "14200:417:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14796:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14813:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14824:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14806:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14806:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14806:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14847:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14858:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14843:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14843:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14863:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14836:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14836:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14836:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14886:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14897:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14882:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14882:18:123"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14902:34:123",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14875:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14875:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14875:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14957:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14968:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14953:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14953:18:123"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14973:8:123",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14946:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14946:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14946:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14991:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15003:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15014:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14999:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14999:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14991:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14773:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14787:4:123",
                "type": ""
              }
            ],
            "src": "14622:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15203:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15220:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15231:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15213:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15213:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15213:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15254:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15265:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15250:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15250:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15270:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15243:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15243:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15243:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15293:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15304:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15289:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15289:18:123"
                      },
                      {
                        "hexValue": "626c6f636b506172616d7320696d6d757461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15309:23:123",
                        "type": "",
                        "value": "blockParams immutable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15282:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15282:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15282:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15342:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15354:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15365:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15350:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15350:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15342:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15180:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15194:4:123",
                "type": ""
              }
            ],
            "src": "15029:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15536:241:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15546:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15558:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15569:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15554:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15554:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15546:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15581:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15591:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15585:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15649:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15664:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15672:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15660:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15660:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15642:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15642:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15642:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15696:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15707:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15692:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15692:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15716:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15724:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15712:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15712:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15685:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15685:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15685:43:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15748:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15759:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15744:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15744:18:123"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "15764:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15737:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15737:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15737:34:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15489:9:123",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15500:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15508:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15516:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15527:4:123",
                "type": ""
              }
            ],
            "src": "15379:398:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15956:171:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15973:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15984:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15966:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15966:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15966:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16007:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16018:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16003:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16003:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16023:2:123",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15996:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15996:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15996:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16046:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16057:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16042:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16042:18:123"
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16062:23:123",
                        "type": "",
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16035:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16035:51:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16035:51:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16095:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16107:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16118:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16103:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16103:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16095:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15933:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15947:4:123",
                "type": ""
              }
            ],
            "src": "15782:345:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16255:135:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16265:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16277:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16288:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16273:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16273:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16265:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16307:9:123"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16318:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16300:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16300:25:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16300:25:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16345:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16356:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16341:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16341:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16375:6:123"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16368:6:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16368:14:123"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16361:6:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16361:22:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16334:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16334:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16334:50:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16216:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16227:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16235:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16246:4:123",
                "type": ""
              }
            ],
            "src": "16132:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16448:205:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16458:10:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16467:1:123",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "16462:1:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16527:63:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16552:3:123"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "16557:1:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16548:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16548:11:123"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "16571:3:123"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "16576:1:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16567:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16567:11:123"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "16561:5:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16561:18:123"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16541:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16541:39:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16541:39:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16488:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16491:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16485:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16485:13:123"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "16499:19:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16501:15:123",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "16510:1:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16513:2:123",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16506:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16506:10:123"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "16501:1:123"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "16481:3:123",
                    "statements": []
                  },
                  "src": "16477:113:123"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16616:31:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "16629:3:123"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16634:6:123"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16625:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16625:16:123"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16643:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16618:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16618:27:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16618:27:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "16605:1:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16608:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16602:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16602:13:123"
                  },
                  "nodeType": "YulIf",
                  "src": "16599:48:123"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "16426:3:123",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "16431:3:123",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16436:6:123",
                "type": ""
              }
            ],
            "src": "16395:258:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16795:137:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16805:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16825:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16819:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "16809:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16867:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16863:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16863:17:123"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16882:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16887:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "16841:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16841:53:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16841:53:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16903:23:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16914:3:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16919:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16910:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16910:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16903:3:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16771:3:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16776:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16787:3:123",
                "type": ""
              }
            ],
            "src": "16658:274:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17111:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17128:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17139:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17121:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17121:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17121:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17162:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17173:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17158:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17158:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17178:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17151:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17151:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17151:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17201:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17212:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17197:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17197:18:123"
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17217:31:123",
                        "type": "",
                        "value": "Only one account type allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17190:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17190:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17190:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17258:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17270:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17281:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17266:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17266:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17258:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17088:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17102:4:123",
                "type": ""
              }
            ],
            "src": "16937:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17469:175:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17486:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17497:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17479:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17479:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17479:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17520:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17531:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17516:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17516:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17536:2:123",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17509:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17509:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17509:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17559:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17570:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17555:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17555:18:123"
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17575:27:123",
                        "type": "",
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17548:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17548:55:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17548:55:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17612:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17624:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17635:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17620:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17620:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17612:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17446:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17460:4:123",
                "type": ""
              }
            ],
            "src": "17295:349:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17823:180:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17840:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17851:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17833:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17833:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17833:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17874:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17885:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17870:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17870:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17890:2:123",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17863:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17863:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17863:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17913:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17924:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17909:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17909:18:123"
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17929:32:123",
                        "type": "",
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17902:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17902:60:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17902:60:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17971:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17983:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17994:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17979:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17979:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17971:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17800:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17814:4:123",
                "type": ""
              }
            ],
            "src": "17649:354:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18182:170:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18199:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18210:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18192:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18192:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18192:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18233:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18244:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18229:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18229:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18249:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18222:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18222:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18222:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18272:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18283:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18268:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18268:18:123"
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18288:22:123",
                        "type": "",
                        "value": "Already exited vault"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18261:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18261:50:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18261:50:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18320:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18332:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18343:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18328:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18328:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18320:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18159:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18173:4:123",
                "type": ""
              }
            ],
            "src": "18008:344:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18546:443:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18556:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18568:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18579:3:123",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18564:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18564:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18556:4:123"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18599:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18616:6:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18610:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18610:13:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18592:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18592:32:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18592:32:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18644:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18655:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18640:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18640:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18672:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18680:4:123",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18668:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18668:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18662:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18662:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18633:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18633:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18633:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18707:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18718:4:123",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18703:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18703:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18735:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18743:4:123",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18731:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18731:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18725:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18725:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18696:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18696:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18696:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18770:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18781:4:123",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18766:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18766:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18798:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18806:4:123",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18794:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18794:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18788:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18788:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18759:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18759:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18759:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18833:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18844:4:123",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18829:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18829:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18861:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18869:4:123",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18857:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18857:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18851:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18851:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18822:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18822:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18822:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18896:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18907:4:123",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18892:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18892:20:123"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18924:6:123"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18932:4:123",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18920:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18920:17:123"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "18914:5:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18914:24:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18885:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18885:54:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18885:54:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18959:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18970:3:123",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18955:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18955:19:123"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18976:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18948:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18948:35:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18948:35:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_TrancheInfo_$13683_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13683_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18507:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18518:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18526:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18537:4:123",
                "type": ""
              }
            ],
            "src": "18357:632:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19092:147:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19138:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19147:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19150:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19140:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19140:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19140:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19113:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19122:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19109:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19109:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19134:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19105:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19105:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19102:52:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19163:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19179:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19173:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19173:16:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19163:6:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19198:35:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19218:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19229:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19214:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19214:18:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19208:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19208:25:123"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "19198:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19050:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19061:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19073:6:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19081:6:123",
                "type": ""
              }
            ],
            "src": "18994:245:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19322:167:123",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19368:16:123",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19377:1:123",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19380:1:123",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19370:6:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19370:12:123"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19370:12:123"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19343:7:123"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19352:9:123"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19339:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19339:23:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19364:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19335:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19335:32:123"
                  },
                  "nodeType": "YulIf",
                  "src": "19332:52:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19393:29:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19412:9:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19406:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19406:16:123"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "19397:5:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19453:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "19431:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19431:28:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19431:28:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19468:15:123",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "19478:5:123"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19468:6:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19288:9:123",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19299:7:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19311:6:123",
                "type": ""
              }
            ],
            "src": "19244:245:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19668:232:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19685:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19696:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19678:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19678:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19678:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19719:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19730:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19715:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19715:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19735:2:123",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19708:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19708:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19708:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19758:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19769:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19754:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19754:18:123"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19774:34:123",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19747:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19747:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19747:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19829:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19840:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19825:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19825:18:123"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19845:12:123",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19818:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19818:40:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19818:40:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19867:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19879:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19890:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19875:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19875:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19867:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19645:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19659:4:123",
                "type": ""
              }
            ],
            "src": "19494:406:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20079:234:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20096:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20107:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20089:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20089:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20089:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20130:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20141:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20126:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20126:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20146:2:123",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20119:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20119:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20119:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20169:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20180:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20165:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20165:18:123"
                      },
                      {
                        "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20185:34:123",
                        "type": "",
                        "value": "Neither foreign acct nor local a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20158:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20158:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20158:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20240:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20251:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20236:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20236:18:123"
                      },
                      {
                        "hexValue": "6363742070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20256:14:123",
                        "type": "",
                        "value": "cct provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20229:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20229:42:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20229:42:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20280:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20292:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20303:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20288:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20288:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20280:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20056:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20070:4:123",
                "type": ""
              }
            ],
            "src": "19905:408:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20412:289:123",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20422:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "20442:5:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20436:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20436:12:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20426:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20457:33:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "20477:5:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20484:4:123",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20473:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20473:16:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20467:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20467:23:123"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20461:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20499:41:123",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20513:26:123",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "20509:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20509:31:123"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "20503:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20549:20:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "20562:2:123"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "20566:2:123"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "20558:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20558:11:123"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "20549:5:123"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20604:91:123",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "20618:67:123",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "20635:2:123"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "20643:2:123"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20651:1:123",
                                          "type": "",
                                          "value": "2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "20658:1:123",
                                              "type": "",
                                              "value": "8"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "20665:2:123",
                                                  "type": "",
                                                  "value": "20"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20669:6:123"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "20661:3:123"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20661:15:123"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "20654:3:123"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20654:23:123"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "20647:3:123"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20647:31:123"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "20639:3:123"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "20639:40:123"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "20631:3:123"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20631:49:123"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "20682:2:123"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "20627:3:123"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20627:58:123"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20618:5:123"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20584:6:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20592:2:123",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "20581:2:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20581:14:123"
                  },
                  "nodeType": "YulIf",
                  "src": "20578:117:123"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "20392:5:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20402:5:123",
                "type": ""
              }
            ],
            "src": "20318:383:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20835:198:123",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20845:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20857:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20868:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20853:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20853:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20845:4:123"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20880:52:123",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20890:42:123",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20884:2:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20948:9:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20963:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20971:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20959:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20959:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20941:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20941:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20941:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20995:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21006:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20991:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20991:18:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "21015:6:123"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "21023:2:123"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21011:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21011:15:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20984:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20984:43:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20984:43:123"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20796:9:123",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20807:6:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20815:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20826:4:123",
                "type": ""
              }
            ],
            "src": "20706:327:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21212:228:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21229:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21240:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21222:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21222:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21222:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21263:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21274:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21259:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21259:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21279:2:123",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21252:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21252:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21252:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21302:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21313:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21298:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21298:18:123"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21318:34:123",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21291:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21291:62:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21291:62:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21373:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21384:2:123",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21369:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21369:18:123"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21389:8:123",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21362:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21362:36:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21362:36:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21407:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21419:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21430:3:123",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21415:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21415:19:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21407:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21189:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21203:4:123",
                "type": ""
              }
            ],
            "src": "21038:402:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21619:179:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21636:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21647:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21629:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21629:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21629:21:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21670:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21681:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21666:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21666:18:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21686:2:123",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21659:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21659:30:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21659:30:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21709:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21720:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21705:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21705:18:123"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21725:31:123",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21698:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21698:59:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21698:59:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21766:26:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21778:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21789:2:123",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21774:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21774:18:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21766:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21596:9:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21610:4:123",
                "type": ""
              }
            ],
            "src": "21445:353:123"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21924:262:123",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21941:9:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21952:2:123",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21934:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21934:21:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21934:21:123"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21964:27:123",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21984:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21978:5:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21978:13:123"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21968:6:123",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22011:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22022:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22007:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22007:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22027:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22000:6:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22000:34:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22000:34:123"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "22069:6:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22077:2:123",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22065:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22065:15:123"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22086:9:123"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22097:2:123",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22082:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22082:18:123"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22102:6:123"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "22043:21:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22043:66:123"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22043:66:123"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22118:62:123",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22134:9:123"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22153:6:123"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22161:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22149:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22149:15:123"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22170:2:123",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22166:3:123"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22166:7:123"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "22145:3:123"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22145:29:123"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22130:3:123"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22130:45:123"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22177:2:123",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22126:3:123"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22126:54:123"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22118:4:123"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21893:9:123",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21904:6:123",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21915:4:123",
                "type": ""
              }
            ],
            "src": "21803:383:123"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$2635_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        validator_revert_bool(value)\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_106dd020a538d1ae6f922247b7e26561e5484e140b4795916546d755f71d2ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"only Zorro oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47630d341801ef06c294b542b2a8cfced0024de0b05d553d7138c41d8b4627ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"For non home chain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"xchain only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_35da06e20f30bf9596e37755e876ce73ca88d5620384068f2dd22de96553efe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"only home chain\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7b6fa50bdbbfbb649e54ffedc0c1168c6a2b46ca7735b2c892bddd075624856b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"!safe to use Zorro token in func\")\n        mstore(add(headStart, 96), \" inCaseTokensGetStuck\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ad7be37c58e5b7c532bc18e04ea7e908e016fd6a15a7436ccaf06114508319e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"blockParams immutable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_wantAmt must be > 0!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only one account type allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"tranche.contribution is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"totalTrancheContributions is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already exited vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_TrancheInfo_$13683_memory_ptr_t_uint256__to_t_struct$_TrancheInfo_$13683_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 192), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Neither foreign acct nor local a\")\n        mstore(add(headStart, 96), \"cct provided\")\n        tail := add(headStart, 128)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(length, 20)\n        {\n            value := and(and(_1, mul(_2, exp(2, mul(8, sub(20, length))))), _2)\n        }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 123,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "316:29164:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMapi;:::-;;:::i;:::-;;7604:91:34;7673:8;:15;7604:91;;;481:25:123;;;469:2;454:18;7604:91:34;;;;;;;;14046:166;;;:::i;3976:187::-;;;;;;:::i;:::-;;:::i;3140:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1560:15:123;;;1542:34;;1607:2;1592:18;;1585:34;;;;1635:18;;1628:34;;;;1693:2;1678:18;;1671:34;;;;1736:3;1721:19;;1714:35;1786:15;;;1780:3;1765:19;;1758:44;1468:3;1453:19;3140:26:34;1168:640:123;2446:30:34;;;;;;28031:501:35;;;;;;:::i;:::-;;:::i;3558:99:34:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3558:99:34;;;;;;-1:-1:-1;;;;;3609:55:123;;;3591:74;;3579:2;3564:18;3558:99:34;3445:226:123;3733:32:34;;;;;-1:-1:-1;;;;;3733:32:34;;;12255:567:35;;;;;;:::i;:::-;;:::i;625:34::-;;;;;-1:-1:-1;;;;;625:34:35;;;2400:40:34;;;;;;2218:57;;;;;;6415:200;;;;;;:::i;:::-;;:::i;22271:1145:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;5090:25:123;;;5146:2;5131:18;;5124:34;;;;5063:18;22271:1145:35;4916:248:123;8077:696:35;;;;;;:::i;:::-;;:::i;1858:25:34:-;;;;;;4265:108;;;;;;:::i;:::-;;:::i;1889:27::-;;;;;;7318:168;;;;;;:::i;:::-;;:::i;10637:2004::-;;;;;;:::i;:::-;;:::i;2582:36::-;;;;;;7892:165;;;;;;:::i;:::-;;:::i;2122:57::-;;;;;;6875:282;;;;;;:::i;:::-;;:::i;1629:25::-;;;;;-1:-1:-1;;;;;1629:25:34;;;8745:1669;;;;;;:::i;:::-;;:::i;1070:121:35:-;;;;;;:::i;:::-;;:::i;1778:26:34:-;;;;;-1:-1:-1;;;;;1778:26:34;;;1908:101:3;;;:::i;20891:639:35:-;;;;;;:::i;:::-;;:::i;25767:1209::-;;;;;;:::i;:::-;;:::i;3678:36:34:-;;;;;-1:-1:-1;;;;;3678:36:34;;;1520:20;;;;;-1:-1:-1;;;;;1520:20:34;;;1276:85:3;1348:6;;-1:-1:-1;;;;;1348:6:3;1276:85;;524:34:35;;;;;;;;;;;;;;;7398:14:123;;7391:22;7373:41;;7361:2;7346:18;524:34:35;7233:187:123;27087:668:35;;;;;;:::i;:::-;;:::i;2803:22:34:-;;;;;;2315:30;;;;;;13173:334;;;:::i;1692:32::-;;;;;-1:-1:-1;;;;;1692:32:34;;;3303:72;;;;;;:::i;:::-;;:::i;:::-;;;;8039:25:123;;;8095:2;8080:18;;8073:34;;;;8123:18;;;8116:34;;;;8181:2;8166:18;;8159:34;8224:3;8209:19;;8202:35;8268:3;8253:19;;8246:35;8026:3;8011:19;3303:72:34;7752:535:123;1546:32:34;;;;;-1:-1:-1;;;;;1546:32:34;;;2682:37;;;;;;28917:561:35;;;;;;:::i;:::-;;:::i;1954:28:34:-;;;;;;1296:118:35;;;;;;:::i;:::-;;:::i;15482:301:34:-;;;;;;:::i;:::-;;:::i;2026:42::-;;;;;;9454:826:35;;;;;;:::i;:::-;;:::i;5598:613:34:-;;;;;;:::i;:::-;;:::i;2885:26::-;;;;;;2158:198:3;;;;;;:::i;:::-;;:::i;4849:228:34:-;;;;;;:::i;:::-;;:::i;4569:226::-;;;;;;:::i;:::-;;:::i;2951:39::-;;;;;-1:-1:-1;;;;;2951:39:34;;;1672:618:35;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;;;;;;;;;1815:1;2699:7;:18;;;;1831:21:35::1;1855:8;1864:4;1855:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;1968:9:::0;;1855:14;;-1:-1:-1;1950:128:35::1;::::0;-1:-1:-1;;;;;1968:9:35::1;2009:10;2041:4;2060:8:::0;1950:45:::1;:128::i;:::-;2127:156;2149:4;2167:10;2127:156;;;;;;;;;;;::::0;2207:8:::1;2229:15;2258;2127:8;:156::i;:::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;1672:618:35:o;14046:166:34:-;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;1412:11:::1;;1401:7;;:22;;1393:58;;;;-1:-1:-1::0;;;;;1393:58:34::1;;;;;;;:::i;:::-;14204:1:::2;14180:21;:25:::0;14046:166::o;3976:187::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4094:5:34::1;:14:::0;;-1:-1:-1;;;;;4094:14:34;;::::1;-1:-1:-1::0;;;;;;4094:14:34;;::::1;;::::0;;;4118:17:::1;:38:::0;;;;;::::1;::::0;::::1;;::::0;;3976:187::o;3140:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3140:26:34;;;;-1:-1:-1;3140:26:34;;;;;;;;:::o;28031:501:35:-;859:19;;-1:-1:-1;;;;;859:19:35;929:10:14;-1:-1:-1;;;;;843:35:35;;835:59;;;;-1:-1:-1;;;;;835:59:35;;;;;;;:::i;:::-;28212:11:::1;;28201:7;;:22;28197:329;;;28319:52;28345:11;28358:12;28319:25;:52::i;:::-;28031:501:::0;;:::o;28197:329::-:1;28477:5;::::0;28470:45:::1;::::0;;;;-1:-1:-1;;;;;12513:55:123;;;28470:45:35::1;::::0;::::1;12495:74:123::0;12585:18;;;12578:34;;;28477:5:35;;::::1;::::0;28470:18:::1;::::0;12468::123;;28470:45:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;28031:501:::0;;:::o;12255:567::-;12385:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;12435:28:35::1;12466:146;12489:4;12507:10;12466:146;;;;;;;;;;;::::0;12547:10:::1;12571:12;12597:5;12466:9;:146::i;:::-;12435:177;;12674:111;12739:10;12763:4;:12;;;12692:8;12701:4;12692:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;-1:-1:-1;;;;;12692:19:35::1;::::0;12674:111;:51:::1;:111::i;:::-;12803:12:::0;1772:1:8;2872:7;:22;12803:12:35;12255:567;-1:-1:-1;;;;12255:567:35:o;6415:200:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1186:24:34::1;::::0;-1:-1:-1;;;;;1186:24:34::1;1177:4;1169:41;1161:69;;;;-1:-1:-1::0;;;;;1161:69:34::1;;;;;;;:::i;:::-;6550:27:::2;:58:::0;6415:200::o;22271:1145:35:-;859:19;;22551:18;;;;-1:-1:-1;;;;;859:19:35;929:10:14;-1:-1:-1;;;;;843:35:35;;835:59;;;;-1:-1:-1;;;;;835:59:35;;;;;;;:::i;:::-;22691:201:::1;22727:8;22749:15;22778:4;22796:10;22820:12;22846:18;22878:4;22691:22;:201::i;:::-;22657:235:::0;;-1:-1:-1;22657:235:35;-1:-1:-1;22958:14:35;;22954:164:::1;;23006:17;::::0;22988:119:::1;::::0;-1:-1:-1;;;;;23006:17:35::1;23055:10;23083::::0;22988:49:::1;:119::i;:::-;23247:21:::0;;23243:167:::1;;23339:11;::::0;23302:5:::1;::::0;23284:115:::1;::::0;-1:-1:-1;;;;;23302:5:35;;::::1;::::0;23339:11:::1;23368:17:::0;23284:37:::1;:115::i;:::-;22271:1145:::0;;;;;;;;;:::o;8077:696::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;8295:17:35::1;8315:8;8324:4;8315:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;8407:17:::1;::::0;-1:-1:-1;;;;;8315:20:35;;::::1;::::0;-1:-1:-1;8389:133:35::1;::::0;8407:17:::1;8456:10;8315:20:::0;8503:9;8389:53:::1;:133::i;:::-;8566:200;8599:4;8617:10;8566:200;;;;;;;;;;;::::0;8657:9:::1;8680:15;8709;8738:18;8566:19;:200::i;4265:108:34:-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4340:11:34::1;:26:::0;;-1:-1:-1;;;;;;4340:26:34::1;-1:-1:-1::0;;;;;4340:26:34;;;::::1;::::0;;;::::1;::::0;;4265:108::o;7318:168::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7433:21:34::1;:46:::0;;-1:-1:-1;;;;;;7433:46:34::1;-1:-1:-1::0;;;;;7433:46:34;;;::::1;::::0;;;::::1;::::0;;7318:168::o;10637:2004::-;10687:17;10765:21;10789:8;10798:4;10789:14;;;;;;;;:::i;:::-;;;;;;;;;;;10765:38;;10892:4;:20;;;10876:12;:36;10872:75;;-1:-1:-1;10935:1:34;;10637:2004;-1:-1:-1;;10637:2004:34:o;10872:75::-;11041:10;;;;11034:32;;;;;;;;11012:19;;-1:-1:-1;;;;;11041:10:34;;11034:30;;:32;;;;;;;;;;;;;;11041:10;11034:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11012:54;-1:-1:-1;11080:16:34;11076:104;;-1:-1:-1;11135:12:34;11112:20;;;;:35;-1:-1:-1;11168:1:34;;10637:2004;-1:-1:-1;10637:2004:34:o;11076:104::-;11292:21;11331:4;:20;;;11316:12;:35;;;;:::i;:::-;11292:59;;11460:19;11558:15;;11539:4;:15;;;11511:13;;11483;:41;;;;:::i;:::-;:71;;;;:::i;:::-;11482:91;;;;:::i;:::-;11681:24;;11460:113;;-1:-1:-1;;;;;;11681:24:34;11672:4;11664:41;11660:706;;;11865:53;11891:11;11912:4;11865:25;:53::i;:::-;12007:1;11995:13;;11660:706;;;12162:5;;12155:46;;;;;12182:4;12155:46;;;12495:74:123;12585:18;;;12578:34;;;-1:-1:-1;;;;;12162:5:34;;;;12155:18;;12468::123;;12155:46:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12261:11;12249:23;;12324:31;12345:9;12324:20;:31::i;:::-;12510:11;12487:4;:20;;;:34;;;;:::i;:::-;12464:20;;;:57;-1:-1:-1;;12622:12:34;12599:20;;;;:35;;;;-1:-1:-1;10637:2004:34;;-1:-1:-1;10637:2004:34:o;7892:165::-;7989:7;8019:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;8019:24:34;;;;;;;;;:31;7892:165;;;;;:::o;6875:282::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;7034:7:34::1;:18:::0;;;;7062:11:::1;:26:::0;7098:24:::1;:52:::0;;-1:-1:-1;;;;;;7098:52:34::1;-1:-1:-1::0;;;;;7098:52:34;;::::1;::::0;;;::::1;::::0;;6875:282::o;8745:1669::-;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;9168:47:::1;9349:30;9357:22:::0;9349:5:::1;:30;:::i;:::-;9300:28;9263:18;9219:25;;:62;;;;:::i;:::-;:109;;;;:::i;:::-;9218:162;;;;:::i;:::-;9168:212;;9513:42;;9459:39;:96;9442:472;;;-1:-1:-1::0;9622:42:34::1;::::0;9442:472:::1;;;9752:42;;9698:39;:96;9681:233;;;-1:-1:-1::0;9861:42:34::1;::::0;9681:233:::1;10394:12;::::0;10361:30:::1;10369:22:::0;10361:5:::1;:30;:::i;:::-;:45;;;;:::i;:::-;10329:15;::::0;10231:79:::1;10271:39:::0;10231:21;:79:::1;:::i;:::-;:113;;;;:::i;:::-;10230:177;;;;:::i;:::-;10202:13;:205:::0;-1:-1:-1;;;;;;8745:1669:34:o;1070:121:35:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1150:22:35::1;:34:::0;;;::::1;;::::0;::::1;-1:-1:-1::0;;1150:34:35;;::::1;::::0;;;::::1;::::0;;1070:121::o;1908:101:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;20891:639:35:-;21070:7;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;;;;21121::35::1;21145:191;21181:10;21145:191;;;;;;;;;;;::::0;21221:4:::1;21239:10;21263:12;21289:18;21321:5;21145:22;:191::i;:::-;-1:-1:-1::0;21406:17:35::1;::::0;21120:216;;-1:-1:-1;21388:107:35::1;::::0;-1:-1:-1;;;;;21406:17:35::1;21451:10;21120:216:::0;21388:49:::1;:107::i;:::-;1772:1:8::0;2872:7;:22;21513:10:35;20891:639;-1:-1:-1;;;;;20891:639:35:o;25767:1209::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;25995:22:35::1;26020:21:::0;;;:11:::1;:21;::::0;;;;;;;26042:10:::1;26020:33:::0;;;;;;;:71;;26067:14;;26020:71;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:96:::1;:71;::::0;;::::1;;:96:::0;;;::::1;::::0;26151:21;;;:11:::1;:21:::0;;;;;;26173:10:::1;26151:33:::0;;;;;;;;:71;;26020:96;;-1:-1:-1;26151:33:35;26198:14;;26151:71;::::1;;;;;:::i;:::-;;;;;;;;;;;:86;;;26126:111;;26269:20;26295:192;26331:10;26295:192;;;;;;;;;;;::::0;26371:8:::1;26393:14;26421:5;26440:18;26472:5;26295:22;:192::i;:::-;26268:219;;;26533:121;26596:8;26605:6;26596:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;26551:17:::1;::::0;-1:-1:-1;;;;;26551:17:35;;::::1;::::0;26596:22:::1;26632:12:::0;26533:49:::1;:121::i;:::-;26686:203;26719:6;26739:10;26686:203;;;;;;;;;;;::::0;26779:12:::1;26805:14;26833;26861:18;26686:19;:203::i;:::-;26905:64;::::0;26924:10:::1;3591:74:123::0;;26962:6:35;;26946:14;;26936:8;;26905:64:::1;::::0;3579:2:123;3564:18;26905:64:35::1;;;;;;;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;;;;;25767:1209:35:o;27087:668::-;1815:1:8;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;;;2561:63:8;;;;;;;:::i;:::-;1815:1;2699:7;:18;27235:19:35::1;27257:31;27271:4:::0;27277:10:::1;27257:13;:31::i;:::-;27235:53;;27303:11;27298:123;27326:11;27320:3;:17;27298:123;;;27360:50;27370:4;27376:10;27360:50;;;;;;;;;;;::::0;27392:3:::1;27397:5;27404::::0;27360:9:::1;:50::i;:::-;-1:-1:-1::0;27339:5:35::1;::::0;::::1;:::i;:::-;;;27298:123;;;;27473:16;27510:8;27519:4;27510:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:19:::0;27492:85:::1;::::0;;;;27562:4:::1;27492:85;::::0;::::1;3591:74:123::0;-1:-1:-1;;;;;27510:19:35;;::::1;::::0;27492:48:::1;::::0;3564:18:123;;27492:85:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27473:104:::0;-1:-1:-1;27591:12:35;;27587:162:::1;;27619:119;27688:10;27716:8;27637;27646:4;27637:14;;;;;;;;:::i;27619:119::-;-1:-1:-1::0;;1772:1:8;2872:7;:22;-1:-1:-1;27087:668:35:o;13173:334:34:-;958:21;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;1412:11:::1;;1401:7;;:22;;1393:58;;;;-1:-1:-1::0;;;;;1393:58:34::1;;;;;;;:::i;:::-;13390:11:::2;::::0;13415:22:::2;::::0;13357:5:::2;::::0;13339:108:::2;::::0;-1:-1:-1;;;;;13357:5:34;;::::2;::::0;13390:11;::::2;::::0;13339:37:::2;:108::i;3303:72::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3303:72:34;;-1:-1:-1;3303:72:34;-1:-1:-1;3303:72:34;;;:::o;28917:561:35:-;958:21:34;;-1:-1:-1;;;;;958:21:34;929:10:14;-1:-1:-1;;;;;942:37:34;;934:67;;;;-1:-1:-1;;;;;934:67:34;;;;;;;:::i;:::-;1186:24:::1;::::0;-1:-1:-1;;;;;1186:24:34::1;1177:4;1169:41;1161:69;;;;-1:-1:-1::0;;;;;1161:69:34::1;;;;;;;:::i;:::-;29264:11:35::2;::::0;29213:114:::2;::::0;-1:-1:-1;;;;;29264:11:35::2;29289:28;29304:13:::0;29289:12;:28:::2;:::i;:::-;29231:5;::::0;-1:-1:-1;;;;;29231:5:35::2;::::0;29213:114;:37:::2;:114::i;:::-;29453:17;::::0;29412:59:::2;::::0;29438:13;;-1:-1:-1;;;;;29453:17:35::2;29412:25;:59::i;1296:118::-:0;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1376:19:35::1;:31:::0;;-1:-1:-1;;;;;;1376:31:35::1;-1:-1:-1::0;;;;;1376:31:35;;;::::1;::::0;;;::::1;::::0;;1296:118::o;15482:301:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;15623:5:34::1;::::0;-1:-1:-1;;;;;15613:15:34;;::::1;15623:5:::0;::::1;15613:15;;15592:115;;;::::0;-1:-1:-1;;;;;15592:115:34;;14402:2:123;15592:115:34::1;::::0;::::1;14384:21:123::0;14441:2;14421:18;;;14414:30;14480:34;14460:18;;;14453:62;14551:23;14531:18;;;14524:51;14592:19;;15592:115:34::1;14200:417:123::0;15592:115:34::1;15717:59;-1:-1:-1::0;;;;;15717:38:34;::::1;15756:10;15768:7:::0;15717:38:::1;:59::i;9454:826:35:-:0;859:19;;-1:-1:-1;;;;;859:19:35;929:10:14;-1:-1:-1;;;;;843:35:35;;835:59;;;;-1:-1:-1;;;;;835:59:35;;;;;;;:::i;:::-;9782:17:::1;9802:8;9811:4;9802:14;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:20:::1;:14;::::0;;::::1;;:20;::::0;9894:17:::1;::::0;-1:-1:-1;;;;;9802:20:35;;::::1;::::0;-1:-1:-1;9876:133:35::1;::::0;9894:17:::1;9943:10;9802:20:::0;9990:9;9876:53:::1;:133::i;:::-;10062:211;10095:4;10113:8;10135:15;10164:9;10187:15;10216;10245:18;10062:19;:211::i;:::-;9736:544;9454:826:::0;;;;;;;:::o;5598:613:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;5866:12:34::1;:28:::0;;;5972:17;;5990:1:::1;5972:20:::0;::::1;;;;:::i;:::-;;;::::0;;;::::1;;5927:42;:65:::0;-1:-1:-1;6047:17:34;;6065:1:::1;6047:20:::0;;::::1;;;;;:::i;:::-;;;::::0;;;::::1;;6002:42;:65:::0;-1:-1:-1;6077:25:34::1;:54:::0;6170:15:::1;:34:::0;-1:-1:-1;;;5598:613:34:o;2158:198:3:-;1348:6;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:3;::::1;2238:73;;;::::0;-1:-1:-1;;;;;2238:73:3;;14824:2:123;2238:73:3::1;::::0;::::1;14806:21:123::0;14863:2;14843:18;;;14836:30;14902:34;14882:18;;;14875:62;14973:8;14953:18;;;14946:36;14999:19;;2238:73:3::1;14622:402:123::0;2238:73:3::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;4849:228:34:-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;4995:10:34::1;::::0;:15;4987:49:::1;;;::::0;-1:-1:-1;;;;;4987:49:34;;15231:2:123;4987:49:34::1;::::0;::::1;15213:21:123::0;15270:2;15250:18;;;15243:30;15309:23;15289:18;;;15282:51;15350:18;;4987:49:34::1;15029:345:123::0;4987:49:34::1;5046:10;:24:::0;4849:228::o;4569:226::-;1348:6:3;;-1:-1:-1;;;;;1348:6:3;929:10:14;1488:23:3;1480:68;;;;-1:-1:-1;;;;;1480:68:3;;;;;;;:::i;:::-;1186:24:34::1;::::0;-1:-1:-1;;;;;1186:24:34::1;1177:4;1169:41;1161:69;;;;-1:-1:-1::0;;;;;1161:69:34::1;;;;;;;:::i;:::-;4716:10:::2;:24:::0;;-1:-1:-1;;;;;4716:24:34;;::::2;-1:-1:-1::0;;;;;;4716:24:34;;::::2;;::::0;;;4750:17:::2;:38:::0;;;;;::::2;::::0;::::2;;::::0;;4569:226::o;967:252:12:-;1143:68;;-1:-1:-1;;;;;15660:15:123;;;1143:68:12;;;15642:34:123;15712:15;;15692:18;;;15685:43;15744:18;;;15737:34;;;1116:96:12;;1136:5;;1166:27;;15554:18:123;;1143:68:12;;;;-1:-1:-1;;1143:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:19;:96::i;:::-;967:252;;;;:::o;3071:2073:35:-;3291:25;3353:21;3377:8;3386:4;3377:14;;;;;;;;:::i;:::-;;;;;;;;;;;3353:38;;3449:1;3438:8;:12;3430:46;;;;-1:-1:-1;;;;;3430:46:35;;15984:2:123;3430:46:35;;;15966:21:123;16023:2;16003:18;;;15996:30;16062:23;16042:18;;;16035:51;16103:18;;3430:46:35;15782:345:123;3430:46:35;3602:16;3613:4;3602:10;:16::i;:::-;3582:36;;3679:21;3703:43;3720:8;3730:15;3703:16;:43::i;:::-;3842:10;;;;3796:9;;3679:67;;-1:-1:-1;3778:106:35;;-1:-1:-1;;;;;3796:9:35;;;;3842:10;3866:8;3778:50;:106::i;:::-;4011:19;4040:8;4049:4;4040:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;4033:77;;;;;;;;481:25:123;;;-1:-1:-1;;;;;4040:20:35;;;;4033:45;;454:18:123;;4033:77:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4214:17;;4191:113;;;;;;;;16300:25:123;;;4281:22:35;;;;;16368:14:123;16361:22;16341:18;;;16334:50;4011:99:35;;-1:-1:-1;4165:23:35;;-1:-1:-1;;;;;4214:17:35;;;;4191:72;;16273:18:123;;4191:113:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4486:17;;4463:104;;;;;;;;5090:25:123;;;5131:18;;;5124:34;;;4165:139:35;;-1:-1:-1;4434:26:35;;-1:-1:-1;;;;;4486:17:35;;;;4463:74;;5063:18:123;;4463:104:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4434:133;;4764:18;4719:4;:30;;;:63;;;;:::i;:::-;4674:30;;;:108;4819:217;4847:4;4865:13;4892:15;4921:18;4953:15;4982;5011;4819:14;:217::i;:::-;5122:4;5105:15;5082:55;;;;;;:::i;:::-;;;;;;;;5090:13;-1:-1:-1;;;;;5082:55:35;;5128:8;5082:55;;;;481:25:123;;469:2;454:18;;335:177;5082:55:35;;;;;;;;3318:1826;;;;;3071:2073;;;;;;;;:::o;14441:250:34:-;14617:10;;14580:5;;14562:122;;-1:-1:-1;;;;;14580:5:34;;;;14617:10;14641:12;14667:7;14562:41;:122::i;13523:5789:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;13881:27:35;;;:57;;;;;13937:1;13912:15;:22;:26;13881:57;13880:139;;;-1:-1:-1;;;;;;13960:27:35;;;;;;:58;;-1:-1:-1;13991:22:35;;:27;13960:58;13859:215;;;;-1:-1:-1;;;;;13859:215:35;;17139:2:123;13859:215:35;;;17121:21:123;17178:2;17158:18;;;17151:30;17217:31;17197:18;;;17190:59;17266:18;;13859:215:35;16937:353:123;13859:215:35;14140:27;14170:119;14195:4;14213:10;14237:15;14266:13;14170:11;:119::i;:::-;14140:149;;14345:22;14370:8;14379:4;14370:14;;;;;;;;:::i;:::-;;;;;;;;;;;14345:39;;14476:1;14452:8;:21;;;:25;14444:63;;;;-1:-1:-1;;;;;14444:63:35;;17497:2:123;14444:63:35;;;17479:21:123;17536:2;17516:18;;;17509:30;17575:27;17555:18;;;17548:55;17620:18;;14444:63:35;17295:349:123;14444:63:35;14629:1;14595:5;:31;;;:35;14574:112;;;;-1:-1:-1;;;;;14574:112:35;;17851:2:123;14574:112:35;;;17833:21:123;17890:2;17870:18;;;17863:30;17929:32;17909:18;;;17902:60;17979:18;;14574:112:35;17649:354:123;14574:112:35;14760:22;;;;:27;14752:60;;;;-1:-1:-1;;;;;14752:60:35;;18210:2:123;14752:60:35;;;18192:21:123;18249:2;18229:18;;;18222:30;18288:22;18268:18;;;18261:50;18328:18;;14752:60:35;18008:344:123;14752:60:35;14918:16;14929:4;14918:10;:16::i;:::-;;14976:23;15122:8;:19;;;15076:5;:31;;;15039:5;:21;;;15003:8;:21;;;:57;;;;:::i;:::-;15002:105;;;;:::i;:::-;:139;;;;:::i;:::-;14976:165;-1:-1:-1;15217:19:35;;15213:2321;;15426:17;;15403:145;;;;;;18610:13:123;;15403:145:35;;;18592:32:123;18680:4;18668:17;;18662:24;18640:20;;;18633:54;18731:17;;;18725:24;18703:20;;;18696:54;18806:4;18794:17;;18788:24;18766:20;;;18759:54;18869:4;18857:17;;18851:24;18829:20;;;18822:54;18932:4;18920:17;;18914:24;18892:20;;;18885:54;18955:19;;;18948:35;;;15326:19:35;;;;-1:-1:-1;;;;;15426:17:35;;;;15403:60;;18564:19:123;;15403:145:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15308:240;;;;15567:19;15563:1961;;;15649:21;;;:35;;;15718:11;;15707:7;;:22;15703:777;;;15912:19;;15908:213;;16063:17;;16044:54;;-1:-1:-1;;;;;16063:17:35;16082:15;16044:18;:54::i;:::-;15563:1961;;15703:777;16354:19;;16350:112;;16401:38;16423:15;16401:21;:38::i;15563:1961::-;16604:15;;16600:108;;16643:46;16662:13;16677:11;16643:18;:46::i;:::-;16741:11;;16730:7;;:22;16726:784;;;16939:19;;16935:213;;17090:17;;17071:54;;-1:-1:-1;;;;;17090:17:35;17109:15;17071:18;:54::i;16726:784::-;17384:19;;17380:112;;17431:38;17453:15;17431:21;:38::i;:::-;15238:2296;;15213:2321;17621:12;17616:1690;;17820:26;17849:94;17883:13;17914:15;17849:16;:94::i;:::-;17820:123;;17983:13;18006:8;18015:4;18006:14;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;;;;;;;-1:-1:-1;;;;;18006:20:35;17983:44;;18275:22;18435:6;-1:-1:-1;;;;;18435:18:35;;:20;;;;;-1:-1:-1;;;18435:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18409:8;:23;;;:46;;;;:::i;:::-;18364:6;-1:-1:-1;;;;;18364:22:35;;:24;;;;;-1:-1:-1;;;18364:24:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18301:21;;:44;;18341:4;18301:44;:::i;:::-;:87;;;;:::i;:::-;18300:156;;;;:::i;:::-;18527:40;;;;;;;;481:25:123;;;18275:181:35;;-1:-1:-1;;;;;;18527:24:35;;;;;454:18:123;;18527:40:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18718:21:35;;18668:31;;;;:71;;18718:21;18668:71;:::i;:::-;18618:31;;;;:121;;;;18831:10;;18813:84;;;;;18878:4;18813:84;;;3591:74:123;;;;-1:-1:-1;;;;;18831:10:35;;18813:39;;3564:18:123;;18813:84:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18798:99;;:12;18950:17;;;:11;:17;;;;;;;;-1:-1:-1;;;;;18950:37:35;;;;;;;;;:49;;19033:15;;18950:37;18988:10;;18950:49;;;;;;:::i;:::-;;;;;;;;;;;:80;;:98;;;;19219:4;19186:15;19129:166;;;;;;:::i;:::-;;;;;;;;19155:13;-1:-1:-1;;;;;19129:166:35;;19241:10;19269:4;:12;;;19129:166;;;;;;5090:25:123;;;5146:2;5131:18;;5124:34;5078:2;5063:18;;4916:248;19129:166:35;;;;;;;;17635:1671;;;17616:1690;13776:5536;;;13523:5789;;;;;;;;:::o;745:216:12:-;895:58;;-1:-1:-1;;;;;12513:55:123;;895:58:12;;;12495:74:123;12585:18;;;12578:34;;;868:86:12;;888:5;;918:23;;12468:18:123;;895:58:12;12321:297:123;868:86:12;745:216;;;:::o;24251:1107:35:-;24518:18;24538:25;24605:18;24626:8;24635:4;24626:14;;;;;;;;:::i;:::-;;;;;;;;:20;:14;;;;;:20;;-1:-1:-1;;;;;24626:20:35;;-1:-1:-1;24763:171:35;24786:4;24804:8;24826:15;24855:10;24879:12;24905:19;24763:9;:171::i;:::-;24732:202;;25012:120;25086:10;25110:4;:12;;;25030:8;25039:4;25030:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;25030:19:35;;25012:120;:60;:120::i;:::-;25245:12;;25189:110;;;;;;;;5090:25:123;;;;5131:18;;;5124:34;;;-1:-1:-1;;;;;25189:42:35;;;;;5063:18:123;;25189:110:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25176:123;;25330:4;:21;;;25310:41;;24565:793;;24251:1107;;;;;;;;;;:::o;10985:982::-;11290:17;11310:8;11319:4;11310:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;;;11421:106;;;;;;;;5090:25:123;;;5131:18;;;5124:34;;;-1:-1:-1;;;;;11310:20:35;;;;-1:-1:-1;11310:20:35;;11421:41;;5063:18:123;;11421:106:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11402:125;;11605:115;11679:9;11702:8;11623;11632:4;11623:14;;;;;;;;:::i;11605:115::-;11793:167;11815:4;11833:8;11855:15;11884:8;11906:15;11935;11793:8;:167::i;:::-;;11244:723;;10985:982;;;;;;;:::o;12811:209:34:-;1412:11;;1401:7;;:22;;1393:58;;;;-1:-1:-1;;;;;1393:58:34;;;;;;;:::i;:::-;12999:14:::1;12975:21;;:38;;;;:::i;:::-;12951:21;:62:::0;-1:-1:-1;12811:209:34:o;2510:187:3:-;2602:6;;;-1:-1:-1;;;;;2618:17:3;;;-1:-1:-1;;;;;;2618:17:3;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;3306:717:12:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:12;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:12;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;;;3921:85:12;;19696:2:123;3921:85:12;;;19678:21:123;19735:2;19715:18;;;19708:30;19774:34;19754:18;;;19747:62;19845:12;19825:18;;;19818:40;19875:19;;3921:85:12;19494:406:123;5150:686:35;5374:8;-1:-1:-1;;;;;5454:22:35;;5450:380;;5590:1;5565:15;:22;:26;5540:129;;;;-1:-1:-1;;;;;5540:129:35;;20107:2:123;5540:129:35;;;20089:21:123;20146:2;20126:18;;;20119:30;20185:34;20165:18;;;20158:62;20256:14;20236:18;;;20229:42;20288:19;;5540:129:35;19905:408:123;5540:129:35;5794:24;5802:15;5794:24;:::i;:::-;5786:33;;;;5150:686;-1:-1:-1;;;5150:686:35:o;2099:321:12:-;2259:39;;;;;2283:4;2259:39;;;20941:34:123;-1:-1:-1;;;;;21011:15:123;;;20991:18;;;20984:43;2236:20:12;;2301:5;;2259:15;;;;;20853:18:123;;2259:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2343:69;;-1:-1:-1;;;;;12513:55:123;;2343:69:12;;;12495:74:123;12585:18;;;12578:34;;;2236:70:12;;-1:-1:-1;2316:97:12;;2336:5;;2366:22;;12468:18:123;;2343:69:12;12321:297:123;6274:1321:35;6579:20;6602:8;6611:4;6602:14;;;;;;;;:::i;:::-;;;;;;;;;6579:37;;;;;;;;;6602:14;;;;;;;6579:37;;-1:-1:-1;;;;;6579:37:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6692:486;;;;;;;;;;;;;;;;6925:30;6864:20;;6579:37;;-1:-1:-1;6692:486:35;;;6925:30;6864:41;;6732:18;;6864:41;:::i;:::-;6863:92;;;;:::i;:::-;6692:486;;;;;;;;;;;;;;;;-1:-1:-1;6692:486:35;;;;;;;7242:17;;;:11;:17;;;;;-1:-1:-1;;;;;7242:32:35;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7409:22;;6658:520;;-1:-1:-1;7409:26:35;7405:184;;7565:13;7451:18;:24;7470:4;7451:24;;;;;;;;;;;7476:15;7451:41;;;;;;:::i;:::-;;;;;;;;;;;;;:111;7547:1;7510:34;7524:4;7530:13;7510;:34::i;:::-;:38;;;;:::i;:::-;7451:111;;;;;;;;;;;;:127;;;;;-1:-1:-1;;;;;7451:127:35;;;;;-1:-1:-1;;;;;7451:127:35;;;;;;7405:184;6549:1046;;6274:1321;;;;;;;:::o;19805:605::-;19974:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19974:27:35;-1:-1:-1;;;;;20017:27:35;;;20013:391;;20106:17;;;;:11;:17;;;;;;;;-1:-1:-1;;;;;20106:32:35;;;;;;;;;:44;;20139:10;;20106:44;;;;;;:::i;:::-;;;;;;;;;;;20095:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20013:391;;;20219:20;20242:24;;;:18;:24;;;;;;:41;;;;20267:15;;20242:41;:::i;:::-;;;;;;;;;;;;;;;;:83;;;;;;;;;;;20350:17;;;:11;:17;;;;;-1:-1:-1;;;;;20242:83:35;;;20350:31;;;;;;:43;;20242:83;;-1:-1:-1;20350:31:35;20242:83;;20350:43;;;;;;:::i;:::-;;;;;;;;;;;20339:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20167:237;20013:391;19805:605;;;;;;:::o;14932:333:34:-;15086:5;;15068:49;;;;;15111:4;15068:49;;;3591:74:123;15030:9:34;;15011:16;;-1:-1:-1;;;;;15086:5:34;;;;15068:34;;3564:18:123;;15068:49:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15049:68;;15143:8;15131:9;:20;15127:70;;;15178:8;15167:19;;15127:70;15224:5;;15206:52;;-1:-1:-1;;;;;15224:5:34;15244:3;15249:8;15206:37;:52::i;13679:214::-;1412:11;;1401:7;;:22;;1393:58;;;;-1:-1:-1;;;;;1393:58:34;;;;;;;:::i;:::-;13871:15:::1;13846:22;;:40;;;;:::i;:::-;13821:22;:65:::0;-1:-1:-1;13679:214:34:o;3872:223:13:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5164:4;5156:21;:30;-1:-1:-1;5156:30:13;5148:81;;;;-1:-1:-1;;;;;5148:81:13;;21240:2:123;5148:81:13;;;21222:21:123;21279:2;21259:18;;;21252:30;21318:34;21298:18;;;21291:62;21389:8;21369:18;;;21362:36;21415:19;;5148:81:13;21038:402:123;5148:81:13;-1:-1:-1;;;;;1476:19:13;;;5239:60;;;;-1:-1:-1;;;;;5239:60:13;;21647:2:123;5239:60:13;;;21629:21:123;21686:2;21666:18;;;21659:30;21725:31;21705:18;;;21698:59;21774:18;;5239:60:13;21445:353:123;5239:60:13;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:13;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:13:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:13;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;;;7263:20:13;;;;;;;;:::i;14:316:123:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:123;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:123;305:18;;;292:32;;14:316;-1:-1:-1;14:316:123:o;517:196::-;585:20;;-1:-1:-1;;;;;634:54:123;;624:65;;614:93;;703:1;700;693:12;614:93;517:196;;;:::o;718:260::-;786:6;794;847:2;835:9;826:7;822:23;818:32;815:52;;;863:1;860;853:12;815:52;886:29;905:9;886:29;:::i;:::-;876:39;;934:38;968:2;957:9;953:18;934:38;:::i;:::-;924:48;;718:260;;;;;:::o;983:180::-;1042:6;1095:2;1083:9;1074:7;1070:23;1066:32;1063:52;;;1111:1;1108;1101:12;1063:52;-1:-1:-1;1134:23:123;;983:180;-1:-1:-1;983:180:123:o;1813:254::-;1881:6;1889;1942:2;1930:9;1921:7;1917:23;1913:32;1910:52;;;1958:1;1955;1948:12;1910:52;1994:9;1981:23;1971:33;;2023:38;2057:2;2046:9;2042:18;2023:38;:::i;2072:184::-;-1:-1:-1;;;;;2121:1:123;2114:88;2221:4;2218:1;2211:15;2245:4;2242:1;2235:15;2261:718;2303:5;2356:3;2349:4;2341:6;2337:17;2333:27;2323:55;;2374:1;2371;2364:12;2323:55;2410:6;2397:20;2436:18;2473:2;2469;2466:10;2463:36;;;2479:18;;:::i;:::-;2554:2;2548:9;2522:2;2608:13;;-1:-1:-1;;2604:22:123;;;2628:2;2600:31;2596:40;2584:53;;;2652:18;;;2672:22;;;2649:46;2646:72;;;2698:18;;:::i;:::-;2738:10;2734:2;2727:22;2773:2;2765:6;2758:18;2819:3;2812:4;2807:2;2799:6;2795:15;2791:26;2788:35;2785:55;;;2836:1;2833;2826:12;2785:55;2900:2;2893:4;2885:6;2881:17;2874:4;2866:6;2862:17;2849:54;2947:1;2940:4;2935:2;2927:6;2923:15;2919:26;2912:37;2967:6;2958:15;;;;;;2261:718;;;;:::o;2984:456::-;3070:6;3078;3086;3139:2;3127:9;3118:7;3114:23;3110:32;3107:52;;;3155:1;3152;3145:12;3107:52;3191:9;3178:23;3168:33;;3252:2;3241:9;3237:18;3224:32;3279:18;3271:6;3268:30;3265:50;;;3311:1;3308;3301:12;3265:50;3334:49;3375:7;3366:6;3355:9;3351:22;3334:49;:::i;:::-;3324:59;;;3430:2;3419:9;3415:18;3402:32;3392:42;;2984:456;;;;;:::o;3676:118::-;3762:5;3755:13;3748:21;3741:5;3738:32;3728:60;;3784:1;3781;3774:12;3799:377;3873:6;3881;3889;3942:2;3930:9;3921:7;3917:23;3913:32;3910:52;;;3958:1;3955;3948:12;3910:52;3994:9;3981:23;3971:33;;4051:2;4040:9;4036:18;4023:32;4013:42;;4105:2;4094:9;4090:18;4077:32;4118:28;4140:5;4118:28;:::i;:::-;4165:5;4155:15;;;3799:377;;;;;:::o;4181:730::-;4291:6;4299;4307;4315;4323;4331;4384:3;4372:9;4363:7;4359:23;4355:33;4352:53;;;4401:1;4398;4391:12;4352:53;4424:29;4443:9;4424:29;:::i;:::-;4414:39;;4504:2;4493:9;4489:18;4476:32;4531:18;4523:6;4520:30;4517:50;;;4563:1;4560;4553:12;4517:50;4586:49;4627:7;4618:6;4607:9;4603:22;4586:49;:::i;:::-;4576:59;;;4682:2;4671:9;4667:18;4654:32;4644:42;;4733:2;4722:9;4718:18;4705:32;4695:42;;4787:3;4776:9;4772:19;4759:33;4801:28;4823:5;4801:28;:::i;:::-;4848:5;4838:15;;;4900:3;4889:9;4885:19;4872:33;4862:43;;4181:730;;;;;;;;:::o;5169:385::-;5255:6;5263;5271;5279;5332:3;5320:9;5311:7;5307:23;5303:33;5300:53;;;5349:1;5346;5339:12;5300:53;-1:-1:-1;;5372:23:123;;;5442:2;5427:18;;5414:32;;-1:-1:-1;5493:2:123;5478:18;;5465:32;;5544:2;5529:18;5516:32;;-1:-1:-1;5169:385:123;-1:-1:-1;5169:385:123:o;5559:186::-;5618:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:52;;;5687:1;5684;5677:12;5639:52;5710:29;5729:9;5710:29;:::i;5750:322::-;5827:6;5835;5843;5896:2;5884:9;5875:7;5871:23;5867:32;5864:52;;;5912:1;5909;5902:12;5864:52;5948:9;5935:23;5925:33;;6005:2;5994:9;5990:18;5977:32;5967:42;;6028:38;6062:2;6051:9;6047:18;6028:38;:::i;:::-;6018:48;;5750:322;;;;;:::o;6077:454::-;6172:6;6180;6188;6196;6204;6257:3;6245:9;6236:7;6232:23;6228:33;6225:53;;;6274:1;6271;6264:12;6225:53;-1:-1:-1;;6297:23:123;;;6367:2;6352:18;;6339:32;;-1:-1:-1;6418:2:123;6403:18;;6390:32;;6469:2;6454:18;;6441:32;;-1:-1:-1;6520:3:123;6505:19;6492:33;;-1:-1:-1;6077:454:123;-1:-1:-1;6077:454:123:o;6536:241::-;6592:6;6645:2;6633:9;6624:7;6620:23;6616:32;6613:52;;;6661:1;6658;6651:12;6613:52;6700:9;6687:23;6719:28;6741:5;6719:28;:::i;6782:446::-;6865:6;6873;6881;6889;6942:3;6930:9;6921:7;6917:23;6913:33;6910:53;;;6959:1;6956;6949:12;6910:53;6995:9;6982:23;6972:33;;7052:2;7041:9;7037:18;7024:32;7014:42;;7106:2;7095:9;7091:18;7078:32;7119:28;7141:5;7119:28;:::i;:::-;6782:446;;;;-1:-1:-1;7166:5:123;;7218:2;7203:18;7190:32;;-1:-1:-1;;6782:446:123:o;7425:322::-;7502:6;7510;7518;7571:2;7559:9;7550:7;7546:23;7542:32;7539:52;;;7587:1;7584;7577:12;7539:52;7623:9;7610:23;7600:33;;7652:38;7686:2;7675:9;7671:18;7652:38;:::i;:::-;7642:48;;7737:2;7726:9;7722:18;7709:32;7699:42;;7425:322;;;;;:::o;8292:248::-;8360:6;8368;8421:2;8409:9;8400:7;8396:23;8392:32;8389:52;;;8437:1;8434;8427:12;8389:52;-1:-1:-1;;8460:23:123;;;8530:2;8515:18;;;8502:32;;-1:-1:-1;8292:248:123:o;8545:254::-;8613:6;8621;8674:2;8662:9;8653:7;8649:23;8645:32;8642:52;;;8690:1;8687;8680:12;8642:52;8713:29;8732:9;8713:29;:::i;:::-;8703:39;8789:2;8774:18;;;;8761:32;;-1:-1:-1;;;8545:254:123:o;8804:738::-;8926:6;8934;8942;8950;8958;8966;8974;9027:3;9015:9;9006:7;9002:23;8998:33;8995:53;;;9044:1;9041;9034:12;8995:53;9080:9;9067:23;9057:33;;9109:38;9143:2;9132:9;9128:18;9109:38;:::i;:::-;9099:48;;9198:2;9187:9;9183:18;9170:32;9225:18;9217:6;9214:30;9211:50;;;9257:1;9254;9247:12;9211:50;9280:49;9321:7;9312:6;9301:9;9297:22;9280:49;:::i;:::-;8804:738;;;;-1:-1:-1;9270:59:123;;9376:2;9361:18;;9348:32;;-1:-1:-1;9427:3:123;9412:19;;9399:33;;9479:3;9464:19;;9451:33;;-1:-1:-1;9531:3:123;9516:19;;;9503:33;;-1:-1:-1;8804:738:123;-1:-1:-1;;;8804:738:123:o;9547:821::-;9660:6;9668;9676;9684;9692;9745:3;9733:9;9724:7;9720:23;9716:33;9713:53;;;9762:1;9759;9752:12;9713:53;9798:9;9785:23;9775:33;;9859:2;9848:9;9844:18;9831:32;9882:18;9923:2;9915:6;9912:14;9909:34;;;9939:1;9936;9929:12;9909:34;9977:6;9966:9;9962:22;9952:32;;10022:7;10015:4;10011:2;10007:13;10003:27;9993:55;;10044:1;10041;10034:12;9993:55;10084:2;10071:16;10110:2;10102:6;10099:14;10096:34;;;10126:1;10123;10116:12;10096:34;10180:7;10175:2;10169;10161:6;10157:15;10153:2;10149:24;10145:33;10142:46;10139:66;;;10201:1;10198;10191:12;10139:66;9547:821;;10232:2;10224:11;;;;;-1:-1:-1;10254:6:123;;10307:2;10292:18;;10279:32;;-1:-1:-1;10358:2:123;10343:18;10330:32;;-1:-1:-1;9547:821:123;-1:-1:-1;;;9547:821:123:o;10373:355::-;10575:2;10557:21;;;10614:2;10594:18;;;10587:30;10653:33;10648:2;10633:18;;10626:61;10719:2;10704:18;;10373:355::o;10733:184::-;-1:-1:-1;;;;;10782:1:123;10775:88;10882:4;10879:1;10872:15;10906:4;10903:1;10896:15;10922:341;11124:2;11106:21;;;11163:2;11143:18;;;11136:30;11202:19;11197:2;11182:18;;11175:47;11254:2;11239:18;;10922:341::o;11268:347::-;11470:2;11452:21;;;11509:2;11489:18;;;11482:30;11548:25;11543:2;11528:18;;11521:53;11606:2;11591:18;;11268:347::o;11620:356::-;11822:2;11804:21;;;11841:18;;;11834:30;11900:34;11895:2;11880:18;;11873:62;11967:2;11952:18;;11620:356::o;11981:335::-;12183:2;12165:21;;;12222:2;12202:18;;;12195:30;12261:13;12256:2;12241:18;;12234:41;12307:2;12292:18;;11981:335::o;12623:339::-;12825:2;12807:21;;;12864:2;12844:18;;;12837:30;12903:17;12898:2;12883:18;;12876:45;12953:2;12938:18;;12623:339::o;12967:184::-;13037:6;13090:2;13078:9;13069:7;13065:23;13061:32;13058:52;;;13106:1;13103;13096:12;13058:52;-1:-1:-1;13129:16:123;;12967:184;-1:-1:-1;12967:184:123:o;13156:::-;-1:-1:-1;;;;;13205:1:123;13198:88;13305:4;13302:1;13295:15;13329:4;13326:1;13319:15;13345:125;13385:4;13413:1;13410;13407:8;13404:34;;;13418:18;;:::i;:::-;-1:-1:-1;13455:9:123;;13345:125::o;13475:168::-;13515:7;13581:1;13577;13573:6;13569:14;13566:1;13563:21;13558:1;13551:9;13544:17;13540:45;13537:71;;;13588:18;;:::i;:::-;-1:-1:-1;13628:9:123;;13475:168::o;13648:274::-;13688:1;13714;13704:189;;-1:-1:-1;;;;;13746:1:123;13739:88;13850:4;13847:1;13840:15;13878:4;13875:1;13868:15;13704:189;-1:-1:-1;13907:9:123;;13648:274::o;13927:128::-;13967:3;13998:1;13994:6;13991:1;13988:13;13985:39;;;14004:18;;:::i;:::-;-1:-1:-1;14040:9:123;;13927:128::o;14060:135::-;14099:3;-1:-1:-1;;14120:17:123;;14117:43;;;14140:18;;:::i;:::-;-1:-1:-1;14187:1:123;14176:13;;14060:135::o;16395:258::-;16467:1;16477:113;16491:6;16488:1;16485:13;16477:113;;;16567:11;;;16561:18;16548:11;;;16541:39;16513:2;16506:10;16477:113;;;16608:6;16605:1;16602:13;16599:48;;;-1:-1:-1;;16643:1:123;16625:16;;16618:27;16395:258::o;16658:274::-;16787:3;16825:6;16819:13;16841:53;16887:6;16882:3;16875:4;16867:6;16863:17;16841:53;:::i;:::-;16910:16;;;;;16658:274;-1:-1:-1;;16658:274:123:o;18994:245::-;19073:6;19081;19134:2;19122:9;19113:7;19109:23;19105:32;19102:52;;;19150:1;19147;19140:12;19102:52;-1:-1:-1;;19173:16:123;;19229:2;19214:18;;;19208:25;19173:16;;19208:25;;-1:-1:-1;18994:245:123:o;19244:::-;19311:6;19364:2;19352:9;19343:7;19339:23;19335:32;19332:52;;;19380:1;19377;19370:12;19332:52;19412:9;19406:16;19431:28;19453:5;19431:28;:::i;20318:383::-;20436:12;;20484:4;20473:16;;20467:23;-1:-1:-1;;20558:11:123;;;;20436:12;20467:23;20592:2;20581:14;;20578:117;;;20682:2;20669:6;20665:2;20661:15;20658:1;20654:23;20651:1;20647:31;20643:2;20639:40;20635:2;20631:49;20627:58;20618:67;;20578:117;;;;20318:383;;;:::o;21803:::-;21952:2;21941:9;21934:21;21915:4;21984:6;21978:13;22027:6;22022:2;22011:9;22007:18;22000:34;22043:66;22102:6;22097:2;22086:9;22082:18;22077:2;22069:6;22065:15;22043:66;:::i;:::-;22170:2;22149:15;-1:-1:-1;;22145:29:123;22130:45;;;;22177:2;22126:54;;21803:383;-1:-1:-1;;21803:383:123:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\n\nimport \"./_ZorroControllerBase.sol\";\n\nimport \"../interfaces/IVault.sol\";\n\nimport \"../interfaces/IZorroController.sol\";\n\nimport \"./actions/ZorroControllerActions.sol\";\n\ncontract ZorroControllerInvestment is\n    IZorroControllerInvestment,\n    ZorroControllerBase\n{\n    /* Libraries */\n\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    /* State */\n\n    // Rewards\n    bool public isTimeMultiplierActive; // If true, allows use of time multiplier\n    // Cross chain\n    address public zorroXChainEndpoint; // Cross chain controller contract\n\n    /* Modifiers */\n\n    /// @notice Only allow sender to be the cross chain controller contract\n    modifier onlyZorroXChain() {\n        require(_msgSender() == zorroXChainEndpoint, \"xchain only\");\n        _;\n    }\n\n    /* Setters */\n\n    /// @notice Setter: Set time multiplier\n    /// @param _isActive Whether it shall be active. If false, timemultiplier will be 1.\n    function setIsTimeMultiplierActive(bool _isActive) external onlyOwner {\n        isTimeMultiplierActive = _isActive;\n    }\n\n    /// @notice Setter: Cross chain endpoint\n    /// @param _contract Contract address of endpoint\n    function setZorroXChainEndpoint(address _contract) external onlyOwner {\n        zorroXChainEndpoint = _contract;\n    }\n\n    /* Cash flow */\n\n    /// @notice Deposit Want tokens to associated Vault\n    /// @param _pid index of pool\n    /// @param _wantAmt how much Want token to deposit\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    function deposit(\n        uint256 _pid,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted\n    ) public nonReentrant {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Transfer the Want token from the user to the this contract\n        IERC20Upgradeable(pool.want).safeTransferFrom(\n            msg.sender,\n            address(this),\n            _wantAmt\n        );\n\n        // Call core deposit function\n        _deposit(\n            _pid,\n            msg.sender,\n            \"\",\n            _wantAmt,\n            _weeksCommitted,\n            block.timestamp\n        );\n    }\n\n    /// @notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n    /// @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n    /// @param _pid index of pool\n    /// @param _account address of on-chain user (required for onchain, optional for cross-chain)\n    /// @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n    /// @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n    /// @param _weeksCommitted how many weeks the user is committing to on this vault\n    /// @param _enteredVaultAt Date to backdate vault entry to\n    /// @return _mintedZORRewards Amount of ZOR rewards minted\n    function _deposit(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _wantAmt,\n        uint256 _weeksCommitted,\n        uint256 _enteredVaultAt\n    ) internal returns (uint256 _mintedZORRewards) {\n        // Get pool info\n        PoolInfo storage pool = poolInfo[_pid];\n\n        // Preflight checks\n        require(_wantAmt > 0, \"_wantAmt must be > 0!\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        _mintedZORRewards = updatePool(_pid);\n\n        // Get local chain account, as applicable\n        address _localAccount = _getLocalAccount(_account, _foreignAccount);\n\n        // Allowance\n        IERC20Upgradeable(pool.want).safeIncreaseAllowance(\n            pool.vault,\n            _wantAmt\n        );\n\n        // Perform the actual deposit function on the underlying Vault contract and get the number of shares to add\n        uint256 sharesAdded = IVault(poolInfo[_pid].vault).depositWantToken(\n            _wantAmt\n        );\n\n        // Determine time multiplier value.\n        uint256 _timeMultiplier = ZorroControllerActions(controllerActions)\n            .getTimeMultiplier(_weeksCommitted, isTimeMultiplierActive);\n\n        // Determine the individual user contribution based on the quantity of tokens to stake and the time multiplier\n        uint256 _contributionAdded = ZorroControllerActions(controllerActions)\n            .getUserContribution(sharesAdded, _timeMultiplier);\n\n        // Update pool info: Increment the pool's total contributions by the contribution added\n        pool.totalTrancheContributions =\n            pool.totalTrancheContributions +\n            _contributionAdded;\n\n        // Create tranche\n        _createTranche(\n            _pid,\n            _localAccount,\n            _foreignAccount,\n            _contributionAdded,\n            _timeMultiplier,\n            _weeksCommitted,\n            _enteredVaultAt\n        );\n\n        // Emit deposit event\n        emit Deposit(_localAccount, _foreignAccount, _pid, _wantAmt);\n    }\n\n    function _getLocalAccount(address _account, bytes memory _foreignAccount)\n        private\n        pure\n        returns (address localAccount)\n    {\n        // Default to provided address if applicable\n        localAccount = _account;\n\n        // Otherwise try to extract from foreign account\n        if (_account == address(0)) {\n            // Foreign account MUST be provided\n            require(\n                _foreignAccount.length > 0,\n                \"Neither foreign acct nor local acct provided\"\n            );\n            // If no local account provided, truncate foreign chain address to 20-bytes\n            localAccount = address(bytes20(_foreignAccount));\n        }\n    }\n\n    /// @notice Internal function for updating tranche ledger upon deposit\n    /// @param _pid Index of pool\n    /// @param _localAccount On-chain address\n    /// @param _foreignAccount Cross-chain address, if applicable\n    /// @param _timeMultiplier Time multiplier factor for rewards\n    /// @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n    /// @param _enteredVaultAt Timestamp at which entered vault\n    function _createTranche(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _contributionAdded,\n        uint256 _timeMultiplier,\n        uint256 _durationCommittedInWeeks,\n        uint256 _enteredVaultAt\n    ) internal {\n        // Get pool\n        PoolInfo memory pool = poolInfo[_pid];\n\n        // Create tranche info\n        TrancheInfo memory _trancheInfo = TrancheInfo({\n            contribution: _contributionAdded, // Contribution including time multiplier\n            timeMultiplier: _timeMultiplier,\n            rewardDebt: (pool.accZORRORewards * _contributionAdded) /\n                pool.totalTrancheContributions, // Pro-rata share of accumulated pool rewards, time-commitment weighted\n            durationCommittedInWeeks: _durationCommittedInWeeks,\n            enteredVaultAt: _enteredVaultAt,\n            exitedVaultAt: 0\n        });\n\n        // Push a new tranche for this on-chain user\n        trancheInfo[_pid][_localAccount].push(_trancheInfo);\n\n        // If foreign account provided, write the tranche info to the foreign account ledger as well\n        if (_foreignAccount.length > 0) {\n            foreignTrancheInfo[_pid][_foreignAccount][\n                trancheLength(_pid, _localAccount) - 1\n            ] = _localAccount;\n        }\n    }\n\n    /// @notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n    /// @param _pid index of pool to deposit into\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullService(\n        uint256 _pid,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Run core full deposit\n        _depositFullService(\n            _pid,\n            msg.sender,\n            \"\",\n            _valueUSD,\n            _weeksCommitted,\n            block.timestamp,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Full service deposit function to be called by ZorroControllerXChain only.\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function depositFullServiceFromXChain(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) public onlyZorroXChain {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Safe transfer to Vault contract\n        IERC20Upgradeable(defaultStablecoin).safeTransferFrom(\n            msg.sender,\n            vaultAddr,\n            _valueUSD\n        );\n\n        // Make deposit full service call\n        _depositFullService(\n            _pid,\n            _account,\n            _foreignAccount,\n            _valueUSD,\n            _weeksCommitted,\n            _vaultEnteredAt,\n            _maxMarketMovement\n        );\n    }\n\n    /// @notice Private function for depositing\n    /// @dev Dangerous method, as vaultEnteredAt can be backdated\n    /// @param _pid index of pool to deposit into\n    /// @param _account address of user on-chain\n    /// @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n    /// @param _valueUSD value in USD (in ether units) to deposit\n    /// @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n    /// @param _vaultEnteredAt date that the vault was entered at\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function _depositFullService(\n        uint256 _pid,\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _valueUSD,\n        uint256 _weeksCommitted,\n        uint256 _vaultEnteredAt,\n        uint256 _maxMarketMovement\n    ) internal {\n        // Get Pool, Vault contract\n        address vaultAddr = poolInfo[_pid].vault;\n\n        // Exchange USD for Want token in the Vault contract\n        uint256 _wantAmt = IVault(vaultAddr).exchangeUSDForWantToken(\n            _valueUSD,\n            _maxMarketMovement\n        );\n\n        // Safe increase allowance and xfer Want to vault contract\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            vaultAddr,\n            _wantAmt\n        );\n\n        // Make deposit\n        // Call core deposit function\n        _deposit(\n            _pid,\n            _account,\n            _foreignAccount,\n            _wantAmt,\n            _weeksCommitted,\n            _vaultEnteredAt\n        );\n    }\n\n    /// @notice Fully withdraw Want tokens from underlying Vault.\n    /// @param _pid index of pool\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @return Amount of Want token withdrawn\n    function withdraw(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            msg.sender,\n            \"\",\n            _trancheId,\n            _harvestOnly,\n            false\n        );\n\n        // Transfer to user and return Want amount\n        IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n            msg.sender,\n            _res.wantAmt\n        );\n\n        return _res.wantAmt;\n    }\n\n    /// @notice Internal function for withdrawing Want tokens from underlying Vault.\n    /// @dev Can only specify one of _localAccount, _foreignAccount\n    /// @param _pid index of pool\n    /// @param _localAccount Address of the on-chain account that the investment was made with\n    /// @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _res A WithdrawalResult struct containing relevant withdrawal result parameters\n    function _withdraw(\n        uint256 _pid,\n        address _localAccount,\n        bytes memory _foreignAccount,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        bool _xChainRepatriation\n    ) internal returns (WithdrawalResult memory _res) {\n        // Can only specify one account (on-chain/foreign, but not both)\n        require(\n            (_localAccount == address(0) && _foreignAccount.length > 0) ||\n                (_localAccount != address(0) && _foreignAccount.length == 0),\n            \"Only one account type allowed\"\n        );\n        // Determine account type and associated values\n        TrancheInfo memory _tranche = _getTranche(\n            _pid,\n            _trancheId,\n            _foreignAccount,\n            _localAccount\n        );\n\n        // Get pool and current tranche info\n        PoolInfo storage _pool = poolInfo[_pid];\n\n        // Require non-zero tranche contribution\n        require(_tranche.contribution > 0, \"tranche.contribution is 0\");\n        // Require non-zero overall tranche contribution\n        require(\n            _pool.totalTrancheContributions > 0,\n            \"totalTrancheContributions is 0\"\n        );\n        // Require that tranche has not yet been exited\n        require(_tranche.exitedVaultAt == 0, \"Already exited vault\");\n\n        // Update the pool before anything to ensure rewards have been updated and transferred\n        updatePool(_pid);\n\n        // Get pending rewards\n        uint256 _pendingRewards = (_tranche.contribution *\n            _pool.accZORRORewards) /\n            _pool.totalTrancheContributions -\n            _tranche.rewardDebt;\n\n        // Withdraw pending ZORRO rewards (a.k.a. \"Harvest\")\n        if (_pendingRewards > 0) {\n            // If pending rewards payable, pay them out\n            (\n                uint256 _rewardsDue,\n                uint256 _slashedRewards\n            ) = ZorroControllerActions(controllerActions).getAdjustedRewards(\n                    _tranche,\n                    _pendingRewards\n                );\n\n            if (_xChainRepatriation) {\n                // Update rewardsDueXChain\n                _res.rewardsDueXChain = _rewardsDue;\n\n                if (chainId == homeChainId) {\n                    // If repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If repatriating and NOT on home chain,\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            } else {\n                // Transfer ZORRO rewards to user, net of any applicable slashing\n                if (_rewardsDue > 0) {\n                    _safeZORROTransfer(_localAccount, _rewardsDue);\n                }\n\n                if (chainId == homeChainId) {\n                    // If NOT repatriating AND on home chain\n\n                    // Transfer any slashed rewards to single Zorro staking vault, if applicable\n                    if (_slashedRewards > 0) {\n                        // Transfer slashed rewards to vault to reward ZORRO stakers\n                        _safeZORROTransfer(zorroStakingVault, _slashedRewards);\n                    }\n                } else {\n                    // If NOT repatriating and NOT on home chain\n\n                    // Record slashed rewards for Oracle to pick up and burn the corresponding amount on the home chain\n                    if (_slashedRewards > 0) {\n                        _recordSlashedRewards(_slashedRewards);\n                    }\n                }\n            }\n        }\n\n        // If not just harvesting (withdrawing too), proceed with below\n        if (!_harvestOnly) {\n            // Perform the actual withdrawal function on the underlying Vault contract and get the number of shares to remove\n\n            // Get local (on-chain) account\n            address _resolvedLocalAcct = _getLocalAccount(\n                _localAccount,\n                _foreignAccount\n            );\n\n            // Get vault\n            IVault _vault = IVault(poolInfo[_pid].vault);\n\n            // Get staked want tokens\n            // TODO: This MUST be based on shares and NOT want tokens,\n            // Because the quantity of want owed to the user will likely increase\n            // over time..... << END TODO\n            uint256 _stakedWantAmt = (_tranche.contribution *\n                1e12 *\n                _vault.wantLockedTotal()) /\n                (_tranche.timeMultiplier * _vault.sharesTotal());\n\n            // Withdraw the want token for this account\n            _vault.withdrawWantToken(_stakedWantAmt);\n\n            // Update shares safely\n            _pool.totalTrancheContributions =\n                _pool.totalTrancheContributions -\n                _tranche.contribution;\n\n            // Calculate Want token balance\n            _res.wantAmt = IERC20Upgradeable(_pool.want).balanceOf(\n                address(this)\n            );\n\n            // Mark tranche as exited\n            trancheInfo[_pid][_resolvedLocalAcct][_trancheId]\n                .exitedVaultAt = block.timestamp;\n\n            // Emit withdrawal event and return want balance\n            emit Withdraw(\n                _localAccount,\n                _foreignAccount,\n                _pid,\n                _trancheId,\n                _res.wantAmt\n            );\n        }\n    }\n\n    /// @notice Get tranche based on tranche ID and account information\n    /// @dev Takes into account potential cross chain identities\n    /// @param _pid Pool ID\n    /// @param _trancheId Tranche ID\n    /// @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n    /// @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n    /// @return _tranche TrancheInfo object for the tranche found\n    function _getTranche(\n        uint256 _pid,\n        uint256 _trancheId,\n        bytes memory _foreignAccount,\n        address _localAccount\n    ) internal view returns (TrancheInfo memory _tranche) {\n        if (_localAccount != address(0)) {\n            // On-chain withdrawal\n            _tranche = trancheInfo[_pid][_localAccount][_trancheId];\n        } else {\n            // Cross-chain withdrawal\n            address _ftLocalAcct = foreignTrancheInfo[_pid][_foreignAccount][\n                _trancheId\n            ];\n            _tranche = trancheInfo[_pid][_ftLocalAcct][_trancheId];\n        }\n    }\n\n    /// @notice Withdraws funds from a pool and converts the Want token into USD\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return Amount (in USD) returned\n    function withdrawalFullService(\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    ) public nonReentrant returns (uint256) {\n        // Withdraw Want token\n        (uint256 _amountUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            false\n        );\n\n        // Send USD funds back to sender\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            msg.sender,\n            _amountUSD\n        );\n\n        return _amountUSD;\n    }\n\n    /// @notice Full service withdrawal to be called from authorized cross chain endpoint\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function withdrawalFullServiceFromXChain(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement\n    )\n        public\n        onlyZorroXChain\n        returns (uint256 _amountUSD, uint256 _rewardsDueXChain)\n    {\n        // Call withdrawal function on chain\n        (_amountUSD, _rewardsDueXChain) = _withdrawalFullService(\n            _account,\n            _foreignAccount,\n            _pid,\n            _trancheId,\n            _harvestOnly,\n            _maxMarketMovement,\n            true\n        );\n\n        // Transfer USD balance obtained to caller\n        if (_amountUSD > 0) {\n            IERC20Upgradeable(defaultStablecoin).safeTransfer(\n                msg.sender,\n                _amountUSD\n            );\n        }\n\n        // Burn xchain ZOR rewards due before repatriating, if applicable. (They will be minted on opposite chain)\n        if (_rewardsDueXChain > 0) {\n            IERC20Upgradeable(ZORRO).safeTransfer(\n                burnAddress,\n                _rewardsDueXChain\n            );\n        }\n    }\n\n    /// @notice Private function for withdrawing funds from a pool and converting the Want token into USD\n    /// @param _account address of wallet on-chain\n    /// @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n    /// @param _pid index of pool to deposit into\n    /// @param _trancheId index of tranche\n    /// @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    /// @param _xChainRepatriation Intended for repatriation to another chain\n    /// @return _amountUSD Amount of USD withdrawn\n    /// @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user\n    function _withdrawalFullService(\n        address _account,\n        bytes memory _foreignAccount,\n        uint256 _pid,\n        uint256 _trancheId,\n        bool _harvestOnly,\n        uint256 _maxMarketMovement,\n        bool _xChainRepatriation\n    ) internal returns (uint256 _amountUSD, uint256 _rewardsDueXChain) {\n        // Get Vault contract\n        address _vaultAddr = poolInfo[_pid].vault;\n\n        // Call core withdrawal function (returns actual amount withdrawn)\n        WithdrawalResult memory _res = _withdraw(\n            _pid,\n            _account,\n            _foreignAccount,\n            _trancheId,\n            _harvestOnly,\n            _xChainRepatriation\n        );\n\n        // Safe increase spending of Vault contract for Want token\n        IERC20Upgradeable(poolInfo[_pid].want).safeIncreaseAllowance(\n            _vaultAddr,\n            _res.wantAmt\n        );\n\n        // Exchange Want for USD\n        _amountUSD = IVault(_vaultAddr).exchangeWantTokenForUSD(\n            _res.wantAmt,\n            _maxMarketMovement\n        );\n\n        _rewardsDueXChain = _res.rewardsDueXChain;\n    }\n\n    /// @notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n    /// @param _fromPid index of pool FROM\n    /// @param _fromTrancheId index of tranche FROM\n    /// @param _toPid index of pool TO\n    /// @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n    function transferInvestment(\n        uint256 _fromPid,\n        uint256 _fromTrancheId,\n        uint256 _toPid,\n        uint256 _maxMarketMovement\n    ) public nonReentrant {\n        // Get weeks committed and entered at\n        uint256 weeksCommitted = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].durationCommittedInWeeks;\n        uint256 enteredVaultAt = trancheInfo[_fromPid][msg.sender][\n            _fromTrancheId\n        ].enteredVaultAt;\n\n        // Withdraw\n        (uint256 withdrawnUSD, ) = _withdrawalFullService(\n            msg.sender,\n            \"\",\n            _fromPid,\n            _fromTrancheId,\n            false,\n            _maxMarketMovement,\n            false\n        );\n\n        // Transfer funds to vault\n        IERC20Upgradeable(defaultStablecoin).safeTransfer(\n            poolInfo[_toPid].vault,\n            withdrawnUSD\n        );\n\n        // Redeposit\n        _depositFullService(\n            _toPid,\n            msg.sender,\n            \"\",\n            withdrawnUSD,\n            weeksCommitted,\n            enteredVaultAt,\n            _maxMarketMovement\n        );\n\n        emit TransferInvestment(msg.sender, _fromPid, _fromTrancheId, _toPid);\n    }\n\n    /// @notice Withdraw the maximum number of Want tokens from a pool\n    /// @param _pid index of pool\n    function withdrawAll(uint256 _pid) public nonReentrant {\n        // Iterate through all tranches for the current user and pool and withdraw\n        uint256 numTranches = trancheLength(_pid, msg.sender);\n        for (uint256 tid = 0; tid < numTranches; ++tid) {\n            _withdraw(_pid, msg.sender, \"\", tid, false, false);\n        }\n\n        // Transfer balance as applicable\n        uint256 _wantBal = IERC20Upgradeable(poolInfo[_pid].want).balanceOf(\n            address(this)\n        );\n        if (_wantBal > 0) {\n            IERC20Upgradeable(poolInfo[_pid].want).safeTransfer(\n                msg.sender,\n                _wantBal\n            );\n        }\n    }\n\n    /* X-chain rewards management */\n\n    /// @notice Gets rewards and sends to the recipient of a cross chain withdrawal\n    /// @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n    /// @param _destination Wallet to send funds to\n    function repatriateRewards(uint256 _rewardsDue, address _destination)\n        public\n        onlyZorroXChain\n    {\n        // Get rewards based on chain type\n        if (chainId == homeChainId) {\n            // On Home chain. Fetch rewards from public pool and send to wallet\n            _fetchFundsFromPublicPool(_rewardsDue, _destination);\n        } else {\n            // On other chain. Mint ZORRO tokens and send to wallet\n            IZorro(ZORRO).mint(_destination, _rewardsDue);\n        }\n    }\n\n    /// @notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n    /// @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n    /// @param _totalMinted Total ZOR rewards minted across other chains at this moment\n    /// @param _totalSlashed Total ZOR rewards slashed across other chains at this moment\n    function handleAccXChainRewards(uint256 _totalMinted, uint256 _totalSlashed)\n        public\n        onlyAllowZorroControllerOracle\n        onlyHomeChain\n    {\n        // Burn shares that were minted on other chains so that\n        // the total tokens minted across all chains is constant\n        IERC20Upgradeable(ZORRO).safeTransfer(\n            burnAddress,\n            _totalMinted - _totalSlashed\n        );\n\n        // Transfer slashed rewards from public pool to ZOR staking vault\n        _fetchFundsFromPublicPool(_totalSlashed, zorroStakingVault);\n    }\n}\n",
  "sourcePath": "/Users/kristophm/Documents/workspace/zorro-protocol/contracts/controllers/_ZorroControllerInvestment.sol",
  "ast": {
    "absolutePath": "project:/contracts/controllers/_ZorroControllerInvestment.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        3127
      ],
      "ContextUpgradeable": [
        3169
      ],
      "CustomMath": [
        15178
      ],
      "IERC20Upgradeable": [
        2635
      ],
      "IVault": [
        13622
      ],
      "IZorro": [
        13666
      ],
      "IZorroController": [
        14003
      ],
      "IZorroControllerAnalytics": [
        13802
      ],
      "IZorroControllerBase": [
        13776
      ],
      "IZorroControllerInvestment": [
        13963
      ],
      "IZorroControllerPoolMgmt": [
        13993
      ],
      "Initializable": [
        1774
      ],
      "OwnableUpgradeable": [
        571
      ],
      "ReentrancyGuardUpgradeable": [
        1944
      ],
      "SafeERC20Upgradeable": [
        2884
      ],
      "SafeMathUpgradeable": [
        3828
      ],
      "SignedSafeMathUpgradeable": [
        3892
      ],
      "ZorroControllerActions": [
        10536
      ],
      "ZorroControllerBase": [
        7034
      ],
      "ZorroControllerInvestment": [
        8289
      ]
    },
    "id": 8290,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7036,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "id": 7037,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8290,
        "sourceUnit": 2885,
        "src": "58:88:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/_ZorroControllerBase.sol",
        "file": "./_ZorroControllerBase.sol",
        "id": 7038,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8290,
        "sourceUnit": 7035,
        "src": "148:36:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 7039,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8290,
        "sourceUnit": 13623,
        "src": "186:34:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IZorroController.sol",
        "file": "../interfaces/IZorroController.sol",
        "id": 7040,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8290,
        "sourceUnit": 14004,
        "src": "222:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/controllers/actions/ZorroControllerActions.sol",
        "file": "./actions/ZorroControllerActions.sol",
        "id": 7041,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8290,
        "sourceUnit": 10537,
        "src": "268:46:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7042,
              "name": "IZorroControllerInvestment",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13963,
              "src": "358:26:35"
            },
            "id": 7043,
            "nodeType": "InheritanceSpecifier",
            "src": "358:26:35"
          },
          {
            "baseName": {
              "id": 7044,
              "name": "ZorroControllerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7034,
              "src": "390:19:35"
            },
            "id": 7045,
            "nodeType": "InheritanceSpecifier",
            "src": "390:19:35"
          }
        ],
        "canonicalName": "ZorroControllerInvestment",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8289,
        "linearizedBaseContracts": [
          8289,
          7034,
          1944,
          571,
          3169,
          1774,
          13963,
          13776
        ],
        "name": "ZorroControllerInvestment",
        "nameLocation": "325:25:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7049,
            "libraryName": {
              "id": 7046,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2884,
              "src": "443:20:35"
            },
            "nodeType": "UsingForDirective",
            "src": "437:49:35",
            "typeName": {
              "id": 7048,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7047,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2635,
                "src": "468:17:35"
              },
              "referencedDeclaration": 2635,
              "src": "468:17:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "941d3fd0",
            "id": 7051,
            "mutability": "mutable",
            "name": "isTimeMultiplierActive",
            "nameLocation": "536:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 8289,
            "src": "524:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7050,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "524:4:35",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39e80a88",
            "id": 7053,
            "mutability": "mutable",
            "name": "zorroXChainEndpoint",
            "nameLocation": "640:19:35",
            "nodeType": "VariableDeclaration",
            "scope": 8289,
            "src": "625:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7052,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "625:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7065,
              "nodeType": "Block",
              "src": "825:87:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7057,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3154,
                            "src": "843:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 7058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "843:12:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7059,
                          "name": "zorroXChainEndpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7053,
                          "src": "859:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "843:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "78636861696e206f6e6c79",
                        "id": 7061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "880:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        },
                        "value": "xchain only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe323e2cc0a4fc8880b3262543b8f9d51a94a32ad89c3d65538b9540cea82b30",
                          "typeString": "literal_string \"xchain only\""
                        }
                      ],
                      "id": 7056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "835:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7063,
                  "nodeType": "ExpressionStatement",
                  "src": "835:59:35"
                },
                {
                  "id": 7064,
                  "nodeType": "PlaceholderStatement",
                  "src": "904:1:35"
                }
              ]
            },
            "documentation": {
              "id": 7054,
              "nodeType": "StructuredDocumentation",
              "src": "722:71:35",
              "text": "@notice Only allow sender to be the cross chain controller contract"
            },
            "id": 7066,
            "name": "onlyZorroXChain",
            "nameLocation": "807:15:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:2:35"
            },
            "src": "798:114:35",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13847
            ],
            "body": {
              "id": 7078,
              "nodeType": "Block",
              "src": "1140:51:35",
              "statements": [
                {
                  "expression": {
                    "id": 7076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7074,
                      "name": "isTimeMultiplierActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7051,
                      "src": "1150:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7075,
                      "name": "_isActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7069,
                      "src": "1175:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1150:34:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7077,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:34:35"
                }
              ]
            },
            "documentation": {
              "id": 7067,
              "nodeType": "StructuredDocumentation",
              "src": "937:128:35",
              "text": "@notice Setter: Set time multiplier\n @param _isActive Whether it shall be active. If false, timemultiplier will be 1."
            },
            "functionSelector": "6c78d49c",
            "id": 7079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7071,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1130:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1130:9:35"
              }
            ],
            "name": "setIsTimeMultiplierActive",
            "nameLocation": "1079:25:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7069,
                  "mutability": "mutable",
                  "name": "_isActive",
                  "nameLocation": "1110:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7079,
                  "src": "1105:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7068,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1104:16:35"
            },
            "returnParameters": {
              "id": 7073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1140:0:35"
            },
            "scope": 8289,
            "src": "1070:121:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13852
            ],
            "body": {
              "id": 7091,
              "nodeType": "Block",
              "src": "1366:48:35",
              "statements": [
                {
                  "expression": {
                    "id": 7089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7087,
                      "name": "zorroXChainEndpoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7053,
                      "src": "1376:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7088,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7082,
                      "src": "1398:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1376:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7090,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:31:35"
                }
              ]
            },
            "documentation": {
              "id": 7080,
              "nodeType": "StructuredDocumentation",
              "src": "1197:94:35",
              "text": "@notice Setter: Cross chain endpoint\n @param _contract Contract address of endpoint"
            },
            "functionSelector": "c4e94f22",
            "id": 7092,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7085,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7084,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 508,
                  "src": "1356:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1356:9:35"
              }
            ],
            "name": "setZorroXChainEndpoint",
            "nameLocation": "1305:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7082,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1336:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7092,
                  "src": "1328:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:19:35"
            },
            "returnParameters": {
              "id": 7086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:0:35"
            },
            "scope": 8289,
            "src": "1296:118:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13861
            ],
            "body": {
              "id": 7136,
              "nodeType": "Block",
              "src": "1796:494:35",
              "statements": [
                {
                  "assignments": [
                    7106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7106,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1848:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7136,
                      "src": "1831:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7105,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7104,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13697,
                          "src": "1831:8:35"
                        },
                        "referencedDeclaration": 13697,
                        "src": "1831:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7110,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7107,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "1855:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7109,
                    "indexExpression": {
                      "id": 7108,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7095,
                      "src": "1864:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1855:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1831:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2009:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2009:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2041:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 7119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2033:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2033:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2033:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7122,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7097,
                        "src": "2060:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7112,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7106,
                              "src": "1968:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "1968:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7111,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1950:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1950:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "1950:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:128:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7124,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:128:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7126,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7095,
                        "src": "2149:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2167:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2167:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2191:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7130,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7097,
                        "src": "2207:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7131,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7099,
                        "src": "2229:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7132,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2258:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2258:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7125,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7251,
                      "src": "2127:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:156:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7135,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:156:35"
                }
              ]
            },
            "documentation": {
              "id": 7093,
              "nodeType": "StructuredDocumentation",
              "src": "1441:226:35",
              "text": "@notice Deposit Want tokens to associated Vault\n @param _pid index of pool\n @param _wantAmt how much Want token to deposit\n @param _weeksCommitted how many weeks the user is committing to on this vault"
            },
            "functionSelector": "00aeef8a",
            "id": 7137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7101,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "1783:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:12:35"
              }
            ],
            "name": "deposit",
            "nameLocation": "1681:7:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7095,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "1706:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "1698:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7097,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "1728:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "1720:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7099,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "1754:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "1746:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:87:35"
            },
            "returnParameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:0:35"
            },
            "scope": 8289,
            "src": "1672:618:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7250,
              "nodeType": "Block",
              "src": "3318:1826:35",
              "statements": [
                {
                  "assignments": [
                    7157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7157,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "3370:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7250,
                      "src": "3353:21:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7155,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13697,
                          "src": "3353:8:35"
                        },
                        "referencedDeclaration": 13697,
                        "src": "3353:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7161,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7158,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "3377:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7160,
                    "indexExpression": {
                      "id": 7159,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7140,
                      "src": "3386:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3377:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3353:38:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7163,
                          "name": "_wantAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7146,
                          "src": "3438:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3449:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3438:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f77616e74416d74206d757374206265203e203021",
                        "id": 7166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3452:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        },
                        "value": "_wantAmt must be > 0!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d4bbe27bfdecab2c494eb2506d6705f2b2e2579ba2b94d8660ff82c5e1ed4a",
                          "typeString": "literal_string \"_wantAmt must be > 0!\""
                        }
                      ],
                      "id": 7162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3430:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3430:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7168,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:46:35"
                },
                {
                  "expression": {
                    "id": 7173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7169,
                      "name": "_mintedZORRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7153,
                      "src": "3582:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7171,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7140,
                          "src": "3613:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7170,
                        "name": "updatePool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6882,
                        "src": "3602:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) returns (uint256)"
                        }
                      },
                      "id": 7172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3602:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3582:36:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7174,
                  "nodeType": "ExpressionStatement",
                  "src": "3582:36:35"
                },
                {
                  "assignments": [
                    7176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7176,
                      "mutability": "mutable",
                      "name": "_localAccount",
                      "nameLocation": "3687:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7250,
                      "src": "3679:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7175,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3679:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7181,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7178,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7142,
                        "src": "3720:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7179,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7144,
                        "src": "3730:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7177,
                      "name": "_getLocalAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7291,
                      "src": "3703:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3703:43:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3679:67:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7187,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7157,
                          "src": "3842:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13696,
                        "src": "3842:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7189,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "3866:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7183,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7157,
                              "src": "3796:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "3796:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7182,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3778:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3778:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "3778:50:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7191,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:106:35"
                },
                {
                  "assignments": [
                    7193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7193,
                      "mutability": "mutable",
                      "name": "sharesAdded",
                      "nameLocation": "4019:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7250,
                      "src": "4011:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4011:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7203,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7201,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "4092:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7195,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6479,
                                "src": "4040:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7197,
                              "indexExpression": {
                                "id": 7196,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7140,
                                "src": "4049:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4040:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13696,
                            "src": "4040:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7194,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13622,
                          "src": "4033:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13622_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4033:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13622",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "4033:45:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 7202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:77:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4011:99:35"
                },
                {
                  "assignments": [
                    7205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7205,
                      "mutability": "mutable",
                      "name": "_timeMultiplier",
                      "nameLocation": "4173:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7250,
                      "src": "4165:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7204,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4165:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7213,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7210,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "4264:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7211,
                        "name": "isTimeMultiplierActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7051,
                        "src": "4281:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7207,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6499,
                            "src": "4214:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7206,
                          "name": "ZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10536,
                          "src": "4191:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10536_$",
                            "typeString": "type(contract ZorroControllerActions)"
                          }
                        },
                        "id": 7208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4191:41:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZorroControllerActions_$10536",
                          "typeString": "contract ZorroControllerActions"
                        }
                      },
                      "id": 7209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimeMultiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10516,
                      "src": "4191:72:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bool) pure external returns (uint256)"
                      }
                    },
                    "id": 7212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:113:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4165:139:35"
                },
                {
                  "assignments": [
                    7215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7215,
                      "mutability": "mutable",
                      "name": "_contributionAdded",
                      "nameLocation": "4442:18:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7250,
                      "src": "4434:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4434:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7223,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7220,
                        "name": "sharesAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7193,
                        "src": "4538:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7221,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7205,
                        "src": "4551:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7217,
                            "name": "controllerActions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6499,
                            "src": "4486:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7216,
                          "name": "ZorroControllerActions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10536,
                          "src": "4463:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10536_$",
                            "typeString": "type(contract ZorroControllerActions)"
                          }
                        },
                        "id": 7218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4463:41:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZorroControllerActions_$10536",
                          "typeString": "contract ZorroControllerActions"
                        }
                      },
                      "id": 7219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserContribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10535,
                      "src": "4463:74:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure external returns (uint256)"
                      }
                    },
                    "id": 7222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4463:104:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4434:133:35"
                },
                {
                  "expression": {
                    "id": 7231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 7224,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7157,
                        "src": "4674:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                        }
                      },
                      "id": 7226,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTrancheContributions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13694,
                      "src": "4674:30:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 7227,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7157,
                          "src": "4719:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7228,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13694,
                        "src": "4719:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 7229,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "4764:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4719:63:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4674:108:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7232,
                  "nodeType": "ExpressionStatement",
                  "src": "4674:108:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7234,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7140,
                        "src": "4847:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7235,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7176,
                        "src": "4865:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7236,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7144,
                        "src": "4892:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7237,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "4921:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7238,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7205,
                        "src": "4953:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7239,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7148,
                        "src": "4982:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7150,
                        "src": "5011:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7233,
                      "name": "_createTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7366,
                      "src": "4819:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4819:217:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7242,
                  "nodeType": "ExpressionStatement",
                  "src": "4819:217:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7244,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7176,
                        "src": "5090:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7245,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7144,
                        "src": "5105:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7246,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7140,
                        "src": "5122:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7247,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "5128:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7243,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13820,
                      "src": "5082:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 7248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7249,
                  "nodeType": "EmitStatement",
                  "src": "5077:60:35"
                }
              ]
            },
            "documentation": {
              "id": 7138,
              "nodeType": "StructuredDocumentation",
              "src": "2296:770:35",
              "text": "@notice Deposits tokens into Vault, updates poolInfo and trancheInfo ledgers\n @dev Because the vault entry date can be backdated, this is a dangerous method and should only be accessed indirectly through other functions\n @param _pid index of pool\n @param _account address of on-chain user (required for onchain, optional for cross-chain)\n @param _foreignAccount address of origin chain user (for cross chain transactions it's required)\n @param _wantAmt how much Want token to deposit (must already be sent to the vault)\n @param _weeksCommitted how many weeks the user is committing to on this vault\n @param _enteredVaultAt Date to backdate vault entry to\n @return _mintedZORRewards Amount of ZOR rewards minted"
            },
            "id": 7251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3080:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7140,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "3106:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3098:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7142,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3128:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3120:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7144,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "3159:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3146:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7143,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "_wantAmt",
                  "nameLocation": "3192:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3184:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7148,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "3218:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3210:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7150,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "3251:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3243:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3088:184:35"
            },
            "returnParameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "_mintedZORRewards",
                  "nameLocation": "3299:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7251,
                  "src": "3291:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3290:27:35"
            },
            "scope": 8289,
            "src": "3071:2073:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7290,
              "nodeType": "Block",
              "src": "5296:540:35",
              "statements": [
                {
                  "expression": {
                    "id": 7262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7260,
                      "name": "localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7258,
                      "src": "5359:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7261,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7253,
                      "src": "5374:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5359:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7263,
                  "nodeType": "ExpressionStatement",
                  "src": "5359:23:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7264,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7253,
                      "src": "5454:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5474:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5466:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5466:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5466:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5454:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7289,
                  "nodeType": "IfStatement",
                  "src": "5450:380:35",
                  "trueBody": {
                    "id": 7288,
                    "nodeType": "Block",
                    "src": "5478:352:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7271,
                                  "name": "_foreignAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7255,
                                  "src": "5565:15:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 7272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5565:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 7273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5590:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5565:26:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e65697468657220666f726569676e2061636374206e6f72206c6f63616c20616363742070726f7669646564",
                              "id": 7275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5609:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              },
                              "value": "Neither foreign acct nor local acct provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_727963951c266ac2e7e257964271708c5259f6c8f05757da55caae737aca972b",
                                "typeString": "literal_string \"Neither foreign acct nor local acct provided\""
                              }
                            ],
                            "id": 7270,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5540:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5540:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7277,
                        "nodeType": "ExpressionStatement",
                        "src": "5540:129:35"
                      },
                      {
                        "expression": {
                          "id": 7286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7278,
                            "name": "localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7258,
                            "src": "5771:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7283,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7255,
                                    "src": "5802:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 7282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5794:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes20_$",
                                    "typeString": "type(bytes20)"
                                  },
                                  "typeName": {
                                    "id": 7281,
                                    "name": "bytes20",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5794:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5794:24:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes20",
                                  "typeString": "bytes20"
                                }
                              ],
                              "id": 7280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5786:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7279,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5786:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5786:33:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5771:48:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7287,
                        "nodeType": "ExpressionStatement",
                        "src": "5771:48:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLocalAccount",
            "nameLocation": "5159:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7253,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5184:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "5176:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5176:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7255,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "5207:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "5194:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7254,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5194:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5175:48:35"
            },
            "returnParameters": {
              "id": 7259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7258,
                  "mutability": "mutable",
                  "name": "localAccount",
                  "nameLocation": "5278:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "5270:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:22:35"
            },
            "scope": 8289,
            "src": "5150:686:35",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7365,
              "nodeType": "Block",
              "src": "6549:1046:35",
              "statements": [
                {
                  "assignments": [
                    7311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7311,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6595:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7365,
                      "src": "6579:20:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_memory_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7310,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7309,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13697,
                          "src": "6579:8:35"
                        },
                        "referencedDeclaration": 13697,
                        "src": "6579:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7315,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7312,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "6602:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7314,
                    "indexExpression": {
                      "id": 7313,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7294,
                      "src": "6611:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6602:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6579:37:35"
                },
                {
                  "assignments": [
                    7318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7318,
                      "mutability": "mutable",
                      "name": "_trancheInfo",
                      "nameLocation": "6677:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7365,
                      "src": "6658:31:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7316,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13683,
                          "src": "6658:11:35"
                        },
                        "referencedDeclaration": 13683,
                        "src": "6658:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7334,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7320,
                        "name": "_contributionAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7300,
                        "src": "6732:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7321,
                        "name": "_timeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7302,
                        "src": "6822:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 7322,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7311,
                                  "src": "6864:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$13697_memory_ptr",
                                    "typeString": "struct IZorroControllerBase.PoolInfo memory"
                                  }
                                },
                                "id": 7323,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accZORRORewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13692,
                                "src": "6864:20:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 7324,
                                "name": "_contributionAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7300,
                                "src": "6887:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6864:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 7326,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6863:43:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 7327,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7311,
                            "src": "6925:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13697_memory_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo memory"
                            }
                          },
                          "id": 7328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13694,
                          "src": "6925:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6863:92:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7330,
                        "name": "_durationCommittedInWeeks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7304,
                        "src": "7067:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7331,
                        "name": "_enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7306,
                        "src": "7122:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7166:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7319,
                      "name": "TrancheInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13683,
                      "src": "6692:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TrancheInfo_$13683_storage_ptr_$",
                        "typeString": "type(struct IZorroControllerBase.TrancheInfo storage pointer)"
                      }
                    },
                    "id": 7333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "contribution",
                      "timeMultiplier",
                      "rewardDebt",
                      "durationCommittedInWeeks",
                      "enteredVaultAt",
                      "exitedVaultAt"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6692:486:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6658:520:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7341,
                        "name": "_trancheInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7318,
                        "src": "7280:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 7335,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6487,
                            "src": "7242:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 7338,
                          "indexExpression": {
                            "id": 7336,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7294,
                            "src": "7254:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7242:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 7339,
                        "indexExpression": {
                          "id": 7337,
                          "name": "_localAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7296,
                          "src": "7260:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7242:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7242:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_ptr_$_t_struct$_TrancheInfo_$13683_storage_$returns$__$bound_to$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IZorroControllerBase.TrancheInfo storage ref[] storage pointer,struct IZorroControllerBase.TrancheInfo storage ref)"
                      }
                    },
                    "id": 7342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7242:51:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7343,
                  "nodeType": "ExpressionStatement",
                  "src": "7242:51:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7344,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7298,
                        "src": "7409:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7409:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7434:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7409:26:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7364,
                  "nodeType": "IfStatement",
                  "src": "7405:184:35",
                  "trueBody": {
                    "id": 7363,
                    "nodeType": "Block",
                    "src": "7437:152:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7348,
                                  "name": "foreignTrancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6495,
                                  "src": "7451:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                  }
                                },
                                "id": 7357,
                                "indexExpression": {
                                  "id": 7349,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7294,
                                  "src": "7470:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7451:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                                }
                              },
                              "id": 7358,
                              "indexExpression": {
                                "id": 7350,
                                "name": "_foreignAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7298,
                                "src": "7476:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7451:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 7359,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7352,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7294,
                                    "src": "7524:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 7353,
                                    "name": "_localAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7296,
                                    "src": "7530:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7351,
                                  "name": "trancheLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6693,
                                  "src": "7510:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address) view returns (uint256)"
                                  }
                                },
                                "id": 7354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7510:34:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 7355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7547:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7510:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7451:111:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7360,
                            "name": "_localAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7296,
                            "src": "7565:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7451:127:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7362,
                        "nodeType": "ExpressionStatement",
                        "src": "7451:127:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7292,
              "nodeType": "StructuredDocumentation",
              "src": "5842:427:35",
              "text": "@notice Internal function for updating tranche ledger upon deposit\n @param _pid Index of pool\n @param _localAccount On-chain address\n @param _foreignAccount Cross-chain address, if applicable\n @param _timeMultiplier Time multiplier factor for rewards\n @param _durationCommittedInWeeks Commitment in weeks for time multiplier\n @param _enteredVaultAt Timestamp at which entered vault"
            },
            "id": 7366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTranche",
            "nameLocation": "6283:14:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7294,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "6315:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6307:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7296,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "6337:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6329:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7298,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "6373:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6360:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7297,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6360:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7300,
                  "mutability": "mutable",
                  "name": "_contributionAdded",
                  "nameLocation": "6406:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6398:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6398:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7302,
                  "mutability": "mutable",
                  "name": "_timeMultiplier",
                  "nameLocation": "6442:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6434:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6434:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7304,
                  "mutability": "mutable",
                  "name": "_durationCommittedInWeeks",
                  "nameLocation": "6475:25:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6467:33:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6467:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7306,
                  "mutability": "mutable",
                  "name": "_enteredVaultAt",
                  "nameLocation": "6518:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7366,
                  "src": "6510:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6510:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6297:242:35"
            },
            "returnParameters": {
              "id": 7308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6549:0:35"
            },
            "scope": 8289,
            "src": "6274:1321:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13872
            ],
            "body": {
              "id": 7409,
              "nodeType": "Block",
              "src": "8249:524:35",
              "statements": [
                {
                  "assignments": [
                    7381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7381,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "8303:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7409,
                      "src": "8295:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7380,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8295:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7386,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7382,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "8315:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7384,
                      "indexExpression": {
                        "id": 7383,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7369,
                        "src": "8324:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8315:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7385,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13696,
                    "src": "8315:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8295:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8456:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8456:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7393,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7381,
                        "src": "8480:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7394,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7371,
                        "src": "8503:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7388,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6441,
                            "src": "8407:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7387,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "8389:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8389:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "8389:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8389:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7396,
                  "nodeType": "ExpressionStatement",
                  "src": "8389:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7398,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7369,
                        "src": "8599:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8617:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8617:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8641:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7402,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7371,
                        "src": "8657:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7403,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7373,
                        "src": "8680:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7404,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "8709:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 7405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8709:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7406,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7375,
                        "src": "8738:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7397,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "8566:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:200:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7408,
                  "nodeType": "ExpressionStatement",
                  "src": "8566:200:35"
                }
              ]
            },
            "documentation": {
              "id": 7367,
              "nodeType": "StructuredDocumentation",
              "src": "7601:471:35",
              "text": "@notice Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)\n @param _pid index of pool to deposit into\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "4780f9f5",
            "id": 7410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7377,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "8236:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8236:12:35"
              }
            ],
            "name": "depositFullService",
            "nameLocation": "8086:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7369,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "8122:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "8114:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8114:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7371,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "8144:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "8136:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7373,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "8171:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "8163:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8163:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7375,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "8204:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "8196:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8196:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8104:124:35"
            },
            "returnParameters": {
              "id": 7379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8249:0:35"
            },
            "scope": 8289,
            "src": "8077:696:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13889
            ],
            "body": {
              "id": 7457,
              "nodeType": "Block",
              "src": "9736:544:35",
              "statements": [
                {
                  "assignments": [
                    7431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7431,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "9790:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7457,
                      "src": "9782:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9782:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7436,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7432,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "9802:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7434,
                      "indexExpression": {
                        "id": 7433,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "9811:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9802:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7435,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13696,
                    "src": "9802:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9782:40:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9943:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9943:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7443,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7431,
                        "src": "9967:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7444,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7419,
                        "src": "9990:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7438,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6441,
                            "src": "9894:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7437,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "9876:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9876:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2717,
                      "src": "9876:53:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 7445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9876:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7446,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:133:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7448,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "10095:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7449,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7415,
                        "src": "10113:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7450,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "10135:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7451,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7419,
                        "src": "10164:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7452,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7421,
                        "src": "10187:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7453,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7423,
                        "src": "10216:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7454,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7425,
                        "src": "10245:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7447,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "10062:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10062:211:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7456,
                  "nodeType": "ExpressionStatement",
                  "src": "10062:211:35"
                }
              ]
            },
            "documentation": {
              "id": 7411,
              "nodeType": "StructuredDocumentation",
              "src": "8779:670:35",
              "text": "@notice Full service deposit function to be called by ZorroControllerXChain only.\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "cff38dd4",
            "id": 7458,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7427,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7066,
                  "src": "9720:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "9720:15:35"
              }
            ],
            "name": "depositFullServiceFromXChain",
            "nameLocation": "9463:28:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7413,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "9509:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9501:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9501:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7415,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "9531:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9523:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9523:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7417,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "9562:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9549:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7416,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9549:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7419,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "9595:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9587:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9587:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7421,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "9622:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9614:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9614:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7423,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "9655:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9647:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9647:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7425,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "9688:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7458,
                  "src": "9680:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9680:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9491:221:35"
            },
            "returnParameters": {
              "id": 7429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9736:0:35"
            },
            "scope": 8289,
            "src": "9454:826:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7513,
              "nodeType": "Block",
              "src": "11244:723:35",
              "statements": [
                {
                  "assignments": [
                    7477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7477,
                      "mutability": "mutable",
                      "name": "vaultAddr",
                      "nameLocation": "11298:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7513,
                      "src": "11290:17:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7476,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11290:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7482,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7478,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "11310:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 7480,
                      "indexExpression": {
                        "id": 7479,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7461,
                        "src": "11319:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11310:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13696,
                    "src": "11310:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11290:40:35"
                },
                {
                  "assignments": [
                    7484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7484,
                      "mutability": "mutable",
                      "name": "_wantAmt",
                      "nameLocation": "11410:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7513,
                      "src": "11402:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11402:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7492,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7489,
                        "name": "_valueUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7467,
                        "src": "11476:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7490,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "11499:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7486,
                            "name": "vaultAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7477,
                            "src": "11428:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7485,
                          "name": "IVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13622,
                          "src": "11421:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVault_$13622_$",
                            "typeString": "type(contract IVault)"
                          }
                        },
                        "id": 7487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11421:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$13622",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 7488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exchangeUSDForWantToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13575,
                      "src": "11421:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:106:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11402:125:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7500,
                        "name": "vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7477,
                        "src": "11679:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7501,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "11702:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7494,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6479,
                                "src": "11623:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7496,
                              "indexExpression": {
                                "id": 7495,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7461,
                                "src": "11632:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11623:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7497,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "11623:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7493,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "11605:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11605:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "11605:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11605:115:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7503,
                  "nodeType": "ExpressionStatement",
                  "src": "11605:115:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7505,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7461,
                        "src": "11815:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7506,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7463,
                        "src": "11833:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7507,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7465,
                        "src": "11855:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7508,
                        "name": "_wantAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7484,
                        "src": "11884:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7509,
                        "name": "_weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "11906:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7510,
                        "name": "_vaultEnteredAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7471,
                        "src": "11935:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7504,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7251,
                      "src": "11793:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 7511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11793:167:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7512,
                  "nodeType": "ExpressionStatement",
                  "src": "11793:167:35"
                }
              ]
            },
            "documentation": {
              "id": 7459,
              "nodeType": "StructuredDocumentation",
              "src": "10286:694:35",
              "text": "@notice Private function for depositing\n @dev Dangerous method, as vaultEnteredAt can be backdated\n @param _pid index of pool to deposit into\n @param _account address of user on-chain\n @param _foreignAccount the cross chain wallet that initiated this call, if applicable.\n @param _valueUSD value in USD (in ether units) to deposit\n @param _weeksCommitted how many weeks to commit to the Pool (can be 0 or any uint)\n @param _vaultEnteredAt date that the vault was entered at\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "id": 7514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositFullService",
            "nameLocation": "10994:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "11031:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11023:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11023:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "11053:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11045:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11045:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7465,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "11084:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11071:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7464,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11071:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7467,
                  "mutability": "mutable",
                  "name": "_valueUSD",
                  "nameLocation": "11117:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11109:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11109:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7469,
                  "mutability": "mutable",
                  "name": "_weeksCommitted",
                  "nameLocation": "11144:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11136:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11136:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7471,
                  "mutability": "mutable",
                  "name": "_vaultEnteredAt",
                  "nameLocation": "11177:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11169:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11169:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7473,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "11210:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "11202:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11202:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11013:221:35"
            },
            "returnParameters": {
              "id": 7475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11244:0:35"
            },
            "scope": 8289,
            "src": "10985:982:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13900
            ],
            "body": {
              "id": 7557,
              "nodeType": "Block",
              "src": "12394:428:35",
              "statements": [
                {
                  "assignments": [
                    7530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7530,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "12459:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7557,
                      "src": "12435:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 7529,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7528,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13810,
                          "src": "12435:16:35"
                        },
                        "referencedDeclaration": 13810,
                        "src": "12435:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13810_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7532,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "12489:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 7533,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12507:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12507:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12531:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7536,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "12547:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7537,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7521,
                        "src": "12571:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12597:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7531,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7847,
                      "src": "12466:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13810_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 7539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12466:146:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12435:177:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7548,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12739:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12739:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7550,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "12763:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 7551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13807,
                        "src": "12763:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7542,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6479,
                                "src": "12692:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7544,
                              "indexExpression": {
                                "id": 7543,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7517,
                                "src": "12701:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12692:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 7545,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "12692:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 7541,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "12674:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12674:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "12674:51:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12674:111:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7553,
                  "nodeType": "ExpressionStatement",
                  "src": "12674:111:35"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 7554,
                      "name": "_res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7530,
                      "src": "12803:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "wantAmt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13807,
                    "src": "12803:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7527,
                  "id": 7556,
                  "nodeType": "Return",
                  "src": "12796:19:35"
                }
              ]
            },
            "documentation": {
              "id": 7515,
              "nodeType": "StructuredDocumentation",
              "src": "11973:277:35",
              "text": "@notice Fully withdraw Want tokens from underlying Vault.\n @param _pid index of pool\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @return Amount of Want token withdrawn"
            },
            "functionSelector": "33cfcd3b",
            "id": 7558,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7523,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "12363:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "12363:12:35"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12264:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "12290:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7558,
                  "src": "12282:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12282:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7519,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "12312:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7558,
                  "src": "12304:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12304:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7521,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "12337:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7558,
                  "src": "12332:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12332:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12272:83:35"
            },
            "returnParameters": {
              "id": 7527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7558,
                  "src": "12385:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12385:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12384:9:35"
            },
            "scope": 8289,
            "src": "12255:567:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7846,
              "nodeType": "Block",
              "src": "13776:5536:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7578,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7563,
                                  "src": "13881:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7581,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13906:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13898:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7579,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13898:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13898:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13881:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7584,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7565,
                                    "src": "13912:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7585,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13912:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13937:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13912:26:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13881:57:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7589,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13880:59:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 7600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 7595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7590,
                                  "name": "_localAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7563,
                                  "src": "13960:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 7593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13985:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 7592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13977:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7591,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13977:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13977:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13960:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7596,
                                    "name": "_foreignAccount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7565,
                                    "src": "13991:15:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 7597,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13991:22:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14017:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13991:27:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13960:58:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 7601,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13959:60:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13880:139:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f6e65206163636f756e74207479706520616c6c6f776564",
                        "id": 7603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14033:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        },
                        "value": "Only one account type allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698cdecffd05a2892f38bd1ad62802d84341e6ff0a92fd49c2b6866bfa8caf60",
                          "typeString": "literal_string \"Only one account type allowed\""
                        }
                      ],
                      "id": 7577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13859:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13859:215:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7605,
                  "nodeType": "ExpressionStatement",
                  "src": "13859:215:35"
                },
                {
                  "assignments": [
                    7608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7608,
                      "mutability": "mutable",
                      "name": "_tranche",
                      "nameLocation": "14159:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7846,
                      "src": "14140:27:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                        "typeString": "struct IZorroControllerBase.TrancheInfo"
                      },
                      "typeName": {
                        "id": 7607,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7606,
                          "name": "TrancheInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13683,
                          "src": "14140:11:35"
                        },
                        "referencedDeclaration": 13683,
                        "src": "14140:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7615,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7610,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7561,
                        "src": "14195:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7611,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7567,
                        "src": "14213:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7612,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7565,
                        "src": "14237:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 7613,
                        "name": "_localAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7563,
                        "src": "14266:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7609,
                      "name": "_getTranche",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7902,
                      "src": "14170:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_TrancheInfo_$13683_memory_ptr_$",
                        "typeString": "function (uint256,uint256,bytes memory,address) view returns (struct IZorroControllerBase.TrancheInfo memory)"
                      }
                    },
                    "id": 7614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14170:119:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14140:149:35"
                },
                {
                  "assignments": [
                    7618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7618,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nameLocation": "14362:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7846,
                      "src": "14345:22:35",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                        "typeString": "struct IZorroControllerBase.PoolInfo"
                      },
                      "typeName": {
                        "id": 7617,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7616,
                          "name": "PoolInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13697,
                          "src": "14345:8:35"
                        },
                        "referencedDeclaration": 13697,
                        "src": "14345:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                          "typeString": "struct IZorroControllerBase.PoolInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7622,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7619,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6479,
                      "src": "14370:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 7621,
                    "indexExpression": {
                      "id": 7620,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7561,
                      "src": "14379:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14370:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14345:39:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7624,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7608,
                            "src": "14452:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13672,
                          "src": "14452:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14476:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14452:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e6368652e636f6e747269627574696f6e2069732030",
                        "id": 7628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14479:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        },
                        "value": "tranche.contribution is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fff8a4ad9fa1c36051c60570ad924c7ee956fa76fdae5bd619eadc811c0640ba",
                          "typeString": "literal_string \"tranche.contribution is 0\""
                        }
                      ],
                      "id": 7623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14444:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14444:63:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7630,
                  "nodeType": "ExpressionStatement",
                  "src": "14444:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7632,
                            "name": "_pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7618,
                            "src": "14595:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                            }
                          },
                          "id": 7633,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTrancheContributions",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13694,
                          "src": "14595:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14629:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14595:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f74616c5472616e636865436f6e747269627574696f6e732069732030",
                        "id": 7636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14644:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        },
                        "value": "totalTrancheContributions is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e23a33672f954cfaf5028db380836c6ad443baa4dcfd0b5f768f41f39697f8b",
                          "typeString": "literal_string \"totalTrancheContributions is 0\""
                        }
                      ],
                      "id": 7631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14574:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14574:112:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7638,
                  "nodeType": "ExpressionStatement",
                  "src": "14574:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7640,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7608,
                            "src": "14760:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "id": 7641,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exitedVaultAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13682,
                          "src": "14760:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14786:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14760:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920657869746564207661756c74",
                        "id": 7644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14789:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        },
                        "value": "Already exited vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4ea3c0952ff50022a903870039c24110ffaeebae89a55133985e20d5220eec",
                          "typeString": "literal_string \"Already exited vault\""
                        }
                      ],
                      "id": 7639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14752:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14752:60:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7646,
                  "nodeType": "ExpressionStatement",
                  "src": "14752:60:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7648,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7561,
                        "src": "14929:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7647,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6882,
                      "src": "14918:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 7649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14918:16:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7650,
                  "nodeType": "ExpressionStatement",
                  "src": "14918:16:35"
                },
                {
                  "assignments": [
                    7652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7652,
                      "mutability": "mutable",
                      "name": "_pendingRewards",
                      "nameLocation": "14984:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7846,
                      "src": "14976:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7651,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14976:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7665,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7653,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7608,
                                "src": "15003:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7654,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13672,
                              "src": "15003:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 7655,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7618,
                                "src": "15039:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                }
                              },
                              "id": 7656,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accZORRORewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13692,
                              "src": "15039:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15003:57:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7658,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15002:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 7659,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7618,
                          "src": "15076:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                          }
                        },
                        "id": 7660,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTrancheContributions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13694,
                        "src": "15076:31:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15002:105:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 7662,
                        "name": "_tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7608,
                        "src": "15122:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                          "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                        }
                      },
                      "id": 7663,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13676,
                      "src": "15122:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15002:139:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14976:165:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7666,
                      "name": "_pendingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7652,
                      "src": "15217:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15235:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15217:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7752,
                  "nodeType": "IfStatement",
                  "src": "15213:2321:35",
                  "trueBody": {
                    "id": 7751,
                    "nodeType": "Block",
                    "src": "15238:2296:35",
                    "statements": [
                      {
                        "assignments": [
                          7670,
                          7672
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7670,
                            "mutability": "mutable",
                            "name": "_rewardsDue",
                            "nameLocation": "15334:11:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7751,
                            "src": "15326:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7669,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15326:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 7672,
                            "mutability": "mutable",
                            "name": "_slashedRewards",
                            "nameLocation": "15371:15:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7751,
                            "src": "15363:23:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7671,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15363:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7680,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7677,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7608,
                              "src": "15485:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              }
                            },
                            {
                              "id": 7678,
                              "name": "_pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7652,
                              "src": "15515:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7674,
                                  "name": "controllerActions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6499,
                                  "src": "15426:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7673,
                                "name": "ZorroControllerActions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10536,
                                "src": "15403:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ZorroControllerActions_$10536_$",
                                  "typeString": "type(contract ZorroControllerActions)"
                                }
                              },
                              "id": 7675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15403:41:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZorroControllerActions_$10536",
                                "typeString": "contract ZorroControllerActions"
                              }
                            },
                            "id": 7676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAdjustedRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10475,
                            "src": "15403:60:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_TrancheInfo_$13683_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IZorroControllerBase.TrancheInfo memory,uint256) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 7679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15403:145:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15308:240:35"
                      },
                      {
                        "condition": {
                          "id": 7681,
                          "name": "_xChainRepatriation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7571,
                          "src": "15567:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7749,
                          "nodeType": "Block",
                          "src": "16500:1024:35",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7714,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7670,
                                  "src": "16604:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 7715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16618:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16604:15:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7723,
                              "nodeType": "IfStatement",
                              "src": "16600:108:35",
                              "trueBody": {
                                "id": 7722,
                                "nodeType": "Block",
                                "src": "16621:87:35",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 7718,
                                          "name": "_localAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7563,
                                          "src": "16662:13:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 7719,
                                          "name": "_rewardsDue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7670,
                                          "src": "16677:11:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 7717,
                                        "name": "_safeZORROTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7006,
                                        "src": "16643:18:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 7720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16643:46:35",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 7721,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16643:46:35"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7724,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6471,
                                  "src": "16730:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7725,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6473,
                                  "src": "16741:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16730:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7747,
                                "nodeType": "Block",
                                "src": "17172:338:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7740,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7738,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7672,
                                        "src": "17384:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7739,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17402:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "17384:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7746,
                                    "nodeType": "IfStatement",
                                    "src": "17380:112:35",
                                    "trueBody": {
                                      "id": 7745,
                                      "nodeType": "Block",
                                      "src": "17405:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7742,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7672,
                                                "src": "17453:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7741,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6933,
                                              "src": "17431:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7743,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17431:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7744,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17431:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7748,
                              "nodeType": "IfStatement",
                              "src": "16726:784:35",
                              "trueBody": {
                                "id": 7737,
                                "nodeType": "Block",
                                "src": "16754:412:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7727,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7672,
                                        "src": "16939:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7728,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16957:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16939:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7736,
                                    "nodeType": "IfStatement",
                                    "src": "16935:213:35",
                                    "trueBody": {
                                      "id": 7735,
                                      "nodeType": "Block",
                                      "src": "16960:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7731,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6445,
                                                "src": "17090:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7732,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7672,
                                                "src": "17109:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7730,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7006,
                                              "src": "17071:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7733,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17071:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7734,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17071:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 7750,
                        "nodeType": "IfStatement",
                        "src": "15563:1961:35",
                        "trueBody": {
                          "id": 7713,
                          "nodeType": "Block",
                          "src": "15588:906:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 7686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 7682,
                                    "name": "_res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7575,
                                    "src": "15649:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                    }
                                  },
                                  "id": 7684,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardsDueXChain",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13809,
                                  "src": "15649:21:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7685,
                                  "name": "_rewardsDue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7670,
                                  "src": "15673:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15649:35:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7687,
                              "nodeType": "ExpressionStatement",
                              "src": "15649:35:35"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 7688,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6471,
                                  "src": "15707:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 7689,
                                  "name": "homeChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6473,
                                  "src": "15718:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15707:22:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 7711,
                                "nodeType": "Block",
                                "src": "16145:335:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7704,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7702,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7672,
                                        "src": "16354:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16372:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "16354:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7710,
                                    "nodeType": "IfStatement",
                                    "src": "16350:112:35",
                                    "trueBody": {
                                      "id": 7709,
                                      "nodeType": "Block",
                                      "src": "16375:87:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7706,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7672,
                                                "src": "16423:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7705,
                                              "name": "_recordSlashedRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6933,
                                              "src": "16401:21:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                              }
                                            },
                                            "id": 7707,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16401:38:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7708,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16401:38:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "id": 7712,
                              "nodeType": "IfStatement",
                              "src": "15703:777:35",
                              "trueBody": {
                                "id": 7701,
                                "nodeType": "Block",
                                "src": "15731:408:35",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 7693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 7691,
                                        "name": "_slashedRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7672,
                                        "src": "15912:15:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 7692,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15930:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "15912:19:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7700,
                                    "nodeType": "IfStatement",
                                    "src": "15908:213:35",
                                    "trueBody": {
                                      "id": 7699,
                                      "nodeType": "Block",
                                      "src": "15933:188:35",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 7695,
                                                "name": "zorroStakingVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6445,
                                                "src": "16063:17:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 7696,
                                                "name": "_slashedRewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7672,
                                                "src": "16082:15:35",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 7694,
                                              "name": "_safeZORROTransfer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7006,
                                              "src": "16044:18:35",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                              }
                                            },
                                            "id": 7697,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16044:54:35",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 7698,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16044:54:35"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 7754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17620:13:35",
                    "subExpression": {
                      "id": 7753,
                      "name": "_harvestOnly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7569,
                      "src": "17621:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7845,
                  "nodeType": "IfStatement",
                  "src": "17616:1690:35",
                  "trueBody": {
                    "id": 7844,
                    "nodeType": "Block",
                    "src": "17635:1671:35",
                    "statements": [
                      {
                        "assignments": [
                          7756
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7756,
                            "mutability": "mutable",
                            "name": "_resolvedLocalAcct",
                            "nameLocation": "17828:18:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7844,
                            "src": "17820:26:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7755,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17820:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7761,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 7758,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7563,
                              "src": "17883:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7759,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7565,
                              "src": "17914:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 7757,
                            "name": "_getLocalAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7291,
                            "src": "17849:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 7760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17849:94:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17820:123:35"
                      },
                      {
                        "assignments": [
                          7764
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7764,
                            "mutability": "mutable",
                            "name": "_vault",
                            "nameLocation": "17990:6:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7844,
                            "src": "17983:13:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$13622",
                              "typeString": "contract IVault"
                            },
                            "typeName": {
                              "id": 7763,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 7762,
                                "name": "IVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 13622,
                                "src": "17983:6:35"
                              },
                              "referencedDeclaration": 13622,
                              "src": "17983:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$13622",
                                "typeString": "contract IVault"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7771,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7766,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6479,
                                  "src": "18006:8:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                    "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 7768,
                                "indexExpression": {
                                  "id": 7767,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7561,
                                  "src": "18015:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18006:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                }
                              },
                              "id": 7769,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13696,
                              "src": "18006:20:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7765,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13622,
                            "src": "17999:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$13622_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 7770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17999:28:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$13622",
                            "typeString": "contract IVault"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17983:44:35"
                      },
                      {
                        "assignments": [
                          7773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7773,
                            "mutability": "mutable",
                            "name": "_stakedWantAmt",
                            "nameLocation": "18283:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7844,
                            "src": "18275:22:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7772,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18275:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7791,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 7777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 7774,
                                      "name": "_tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7608,
                                      "src": "18301:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                        "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                      }
                                    },
                                    "id": 7775,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "contribution",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13672,
                                    "src": "18301:21:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "31653132",
                                    "id": 7776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18341:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000_by_1",
                                      "typeString": "int_const 1000000000000"
                                    },
                                    "value": "1e12"
                                  },
                                  "src": "18301:44:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 7778,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7764,
                                      "src": "18364:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$13622",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "wantLockedTotal",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13561,
                                    "src": "18364:22:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 7780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18364:24:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18301:87:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 7782,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18300:89:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 7783,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7608,
                                    "src": "18409:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                      "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                    }
                                  },
                                  "id": 7784,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timeMultiplier",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13674,
                                  "src": "18409:23:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 7785,
                                      "name": "_vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7764,
                                      "src": "18435:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IVault_$13622",
                                        "typeString": "contract IVault"
                                      }
                                    },
                                    "id": 7786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sharesTotal",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13566,
                                    "src": "18435:18:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 7787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18435:20:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18409:46:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 7789,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18408:48:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18300:156:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18275:181:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7795,
                              "name": "_stakedWantAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7773,
                              "src": "18552:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7792,
                              "name": "_vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7764,
                              "src": "18527:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$13622",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 7794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawWantToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13589,
                            "src": "18527:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 7796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18527:40:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7797,
                        "nodeType": "ExpressionStatement",
                        "src": "18527:40:35"
                      },
                      {
                        "expression": {
                          "id": 7806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 7798,
                              "name": "_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7618,
                              "src": "18618:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                              }
                            },
                            "id": 7800,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalTrancheContributions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13694,
                            "src": "18618:31:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7801,
                                "name": "_pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7618,
                                "src": "18668:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                }
                              },
                              "id": 7802,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalTrancheContributions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13694,
                              "src": "18668:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 7803,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7608,
                                "src": "18718:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                                }
                              },
                              "id": 7804,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contribution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13672,
                              "src": "18718:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18668:71:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18618:121:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7807,
                        "nodeType": "ExpressionStatement",
                        "src": "18618:121:35"
                      },
                      {
                        "expression": {
                          "id": 7821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 7808,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7575,
                              "src": "18798:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                                "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                              }
                            },
                            "id": 7810,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wantAmt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13807,
                            "src": "18798:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7818,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "18878:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                                      "typeString": "contract ZorroControllerInvestment"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                                      "typeString": "contract ZorroControllerInvestment"
                                    }
                                  ],
                                  "id": 7817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18870:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7816,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18870:7:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18870:13:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 7812,
                                      "name": "_pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7618,
                                      "src": "18831:5:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage_ptr",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage pointer"
                                      }
                                    },
                                    "id": 7813,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "want",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13686,
                                    "src": "18831:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  ],
                                  "id": 7811,
                                  "name": "IERC20Upgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2635,
                                  "src": "18813:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                    "typeString": "type(contract IERC20Upgradeable)"
                                  }
                                },
                                "id": 7814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18813:29:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                  "typeString": "contract IERC20Upgradeable"
                                }
                              },
                              "id": 7815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2574,
                              "src": "18813:39:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 7820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18813:84:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18798:99:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7822,
                        "nodeType": "ExpressionStatement",
                        "src": "18798:99:35"
                      },
                      {
                        "expression": {
                          "id": 7833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 7823,
                                    "name": "trancheInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6487,
                                    "src": "18950:11:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                    }
                                  },
                                  "id": 7827,
                                  "indexExpression": {
                                    "id": 7824,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7561,
                                    "src": "18962:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18950:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                  }
                                },
                                "id": 7828,
                                "indexExpression": {
                                  "id": 7825,
                                  "name": "_resolvedLocalAcct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7756,
                                  "src": "18968:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18950:37:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                                }
                              },
                              "id": 7829,
                              "indexExpression": {
                                "id": 7826,
                                "name": "_trancheId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7567,
                                "src": "18988:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18950:49:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                              }
                            },
                            "id": 7830,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "exitedVaultAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13682,
                            "src": "18950:80:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 7831,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "19033:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 7832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19033:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18950:98:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7834,
                        "nodeType": "ExpressionStatement",
                        "src": "18950:98:35"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7836,
                              "name": "_localAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7563,
                              "src": "19155:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7837,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7565,
                              "src": "19186:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 7838,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7561,
                              "src": "19219:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 7839,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7567,
                              "src": "19241:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 7840,
                                "name": "_res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7575,
                                "src": "19269:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                                  "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                                }
                              },
                              "id": 7841,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wantAmt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13807,
                              "src": "19269:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7835,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13832,
                            "src": "19129:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes memory,uint256,uint256,uint256)"
                            }
                          },
                          "id": 7842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19129:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7843,
                        "nodeType": "EmitStatement",
                        "src": "19124:171:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7559,
              "nodeType": "StructuredDocumentation",
              "src": "12828:690:35",
              "text": "@notice Internal function for withdrawing Want tokens from underlying Vault.\n @dev Can only specify one of _localAccount, _foreignAccount\n @param _pid index of pool\n @param _localAccount Address of the on-chain account that the investment was made with\n @param _foreignAccount Address of the foreign chain account that this inviestment was made with\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _res A WithdrawalResult struct containing relevant withdrawal result parameters"
            },
            "id": 7847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "13532:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7561,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "13559:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13551:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13551:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7563,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "13581:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13573:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13573:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7565,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "13617:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13604:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13604:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7567,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "13650:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13642:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13642:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7569,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "13675:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13670:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13670:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7571,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "13702:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13697:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7570,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13697:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13541:186:35"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7575,
                  "mutability": "mutable",
                  "name": "_res",
                  "nameLocation": "13770:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "13746:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                    "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                  },
                  "typeName": {
                    "id": 7574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7573,
                      "name": "WithdrawalResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13810,
                      "src": "13746:16:35"
                    },
                    "referencedDeclaration": 13810,
                    "src": "13746:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13810_storage_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13745:30:35"
            },
            "scope": 8289,
            "src": "13523:5789:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7901,
              "nodeType": "Block",
              "src": "20003:407:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7862,
                      "name": "_localAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7856,
                      "src": "20017:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 7865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20042:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20034:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7863,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20034:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20034:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20017:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7899,
                    "nodeType": "Block",
                    "src": "20167:237:35",
                    "statements": [
                      {
                        "assignments": [
                          7880
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7880,
                            "mutability": "mutable",
                            "name": "_ftLocalAcct",
                            "nameLocation": "20227:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 7899,
                            "src": "20219:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 7879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20219:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7888,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 7881,
                                "name": "foreignTrancheInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6495,
                                "src": "20242:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(bytes memory => mapping(uint256 => address)))"
                                }
                              },
                              "id": 7883,
                              "indexExpression": {
                                "id": 7882,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7850,
                                "src": "20261:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20242:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint256_$_t_address_$_$",
                                "typeString": "mapping(bytes memory => mapping(uint256 => address))"
                              }
                            },
                            "id": 7885,
                            "indexExpression": {
                              "id": 7884,
                              "name": "_foreignAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7854,
                              "src": "20267:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20242:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 7887,
                          "indexExpression": {
                            "id": 7886,
                            "name": "_trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7852,
                            "src": "20301:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20242:83:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20219:106:35"
                      },
                      {
                        "expression": {
                          "id": 7897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7889,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7860,
                            "src": "20339:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7890,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6487,
                                  "src": "20350:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7892,
                                "indexExpression": {
                                  "id": 7891,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7850,
                                  "src": "20362:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20350:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7894,
                              "indexExpression": {
                                "id": 7893,
                                "name": "_ftLocalAcct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7880,
                                "src": "20368:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20350:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7896,
                            "indexExpression": {
                              "id": 7895,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7852,
                              "src": "20382:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20350:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20339:54:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7898,
                        "nodeType": "ExpressionStatement",
                        "src": "20339:54:35"
                      }
                    ]
                  },
                  "id": 7900,
                  "nodeType": "IfStatement",
                  "src": "20013:391:35",
                  "trueBody": {
                    "id": 7878,
                    "nodeType": "Block",
                    "src": "20046:115:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 7876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7868,
                            "name": "_tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7860,
                            "src": "20095:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                              "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 7869,
                                  "name": "trancheInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6487,
                                  "src": "20106:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                                  }
                                },
                                "id": 7871,
                                "indexExpression": {
                                  "id": 7870,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7850,
                                  "src": "20118:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20106:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 7873,
                              "indexExpression": {
                                "id": 7872,
                                "name": "_localAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7856,
                                "src": "20124:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20106:32:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                                "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                              }
                            },
                            "id": 7875,
                            "indexExpression": {
                              "id": 7874,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7852,
                              "src": "20139:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20106:44:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage",
                              "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                            }
                          },
                          "src": "20095:55:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                            "typeString": "struct IZorroControllerBase.TrancheInfo memory"
                          }
                        },
                        "id": 7877,
                        "nodeType": "ExpressionStatement",
                        "src": "20095:55:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7848,
              "nodeType": "StructuredDocumentation",
              "src": "19318:482:35",
              "text": "@notice Get tranche based on tranche ID and account information\n @dev Takes into account potential cross chain identities\n @param _pid Pool ID\n @param _trancheId Tranche ID\n @param _foreignAccount Identity of the foreign account that the tranche might be associated with\n @param _localAccount Identity of the account on the local chain that the tranche might be associated with\n @return _tranche TrancheInfo object for the tranche found"
            },
            "id": 7902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTranche",
            "nameLocation": "19814:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7850,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "19843:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "19835:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19835:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7852,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "19865:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "19857:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19857:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7854,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "19898:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "19885:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7853,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19885:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7856,
                  "mutability": "mutable",
                  "name": "_localAccount",
                  "nameLocation": "19931:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "19923:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19923:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19825:125:35"
            },
            "returnParameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7860,
                  "mutability": "mutable",
                  "name": "_tranche",
                  "nameLocation": "19993:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "19974:27:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TrancheInfo_$13683_memory_ptr",
                    "typeString": "struct IZorroControllerBase.TrancheInfo"
                  },
                  "typeName": {
                    "id": 7859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7858,
                      "name": "TrancheInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13683,
                      "src": "19974:11:35"
                    },
                    "referencedDeclaration": 13683,
                    "src": "19974:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage_ptr",
                      "typeString": "struct IZorroControllerBase.TrancheInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19973:29:35"
            },
            "scope": 8289,
            "src": "19805:605:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13913
            ],
            "body": {
              "id": 7942,
              "nodeType": "Block",
              "src": "21079:451:35",
              "statements": [
                {
                  "assignments": [
                    7919,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7919,
                      "mutability": "mutable",
                      "name": "_amountUSD",
                      "nameLocation": "21129:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7942,
                      "src": "21121:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7918,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21121:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 7930,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7921,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21181:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21181:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 7923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21205:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 7924,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7905,
                        "src": "21221:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7925,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7907,
                        "src": "21239:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7926,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7909,
                        "src": "21263:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 7927,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7911,
                        "src": "21289:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 7928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21321:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7920,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8077,
                      "src": "21145:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 7929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21145:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21120:216:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "21451:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21451:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7937,
                        "name": "_amountUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7919,
                        "src": "21475:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7932,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6441,
                            "src": "21406:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7931,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "21388:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21388:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 7934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "21388:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 7938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21388:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7939,
                  "nodeType": "ExpressionStatement",
                  "src": "21388:107:35"
                },
                {
                  "expression": {
                    "id": 7940,
                    "name": "_amountUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7919,
                    "src": "21513:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7917,
                  "id": 7941,
                  "nodeType": "Return",
                  "src": "21506:17:35"
                }
              ]
            },
            "documentation": {
              "id": 7903,
              "nodeType": "StructuredDocumentation",
              "src": "20416:470:35",
              "text": "@notice Withdraws funds from a pool and converts the Want token into USD\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return Amount (in USD) returned"
            },
            "functionSelector": "745af0a8",
            "id": 7943,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7913,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "21048:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "21048:12:35"
              }
            ],
            "name": "withdrawalFullService",
            "nameLocation": "20900:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7905,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "20939:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "20931:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20931:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7907,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "20961:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "20953:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20953:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7909,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "20986:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "20981:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7908,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20981:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7911,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "21016:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "21008:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21008:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20921:119:35"
            },
            "returnParameters": {
              "id": 7917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7916,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7943,
                  "src": "21070:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21070:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21069:9:35"
            },
            "scope": 8289,
            "src": "20891:639:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13932
            ],
            "body": {
              "id": 8006,
              "nodeType": "Block",
              "src": "22602:814:35",
              "statements": [
                {
                  "expression": {
                    "id": 7977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 7965,
                          "name": "_amountUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7961,
                          "src": "22658:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7966,
                          "name": "_rewardsDueXChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7963,
                          "src": "22670:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7967,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "22657:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7969,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "22727:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7970,
                          "name": "_foreignAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7948,
                          "src": "22749:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 7971,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7950,
                          "src": "22778:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7972,
                          "name": "_trancheId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7952,
                          "src": "22796:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7973,
                          "name": "_harvestOnly",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7954,
                          "src": "22820:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 7974,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7956,
                          "src": "22846:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22878:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7968,
                        "name": "_withdrawalFullService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8077,
                        "src": "22691:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                        }
                      },
                      "id": 7976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22691:201:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "22657:235:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7978,
                  "nodeType": "ExpressionStatement",
                  "src": "22657:235:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7979,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7961,
                      "src": "22958:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22971:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22958:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7992,
                  "nodeType": "IfStatement",
                  "src": "22954:164:35",
                  "trueBody": {
                    "id": 7991,
                    "nodeType": "Block",
                    "src": "22974:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7986,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "23055:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23055:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7988,
                              "name": "_amountUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7961,
                              "src": "23083:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7983,
                                  "name": "defaultStablecoin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6441,
                                  "src": "23006:17:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7982,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "22988:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 7984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22988:36:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 7985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "22988:49:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 7989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22988:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7990,
                        "nodeType": "ExpressionStatement",
                        "src": "22988:119:35"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7993,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7963,
                      "src": "23247:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23267:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "23247:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8005,
                  "nodeType": "IfStatement",
                  "src": "23243:167:35",
                  "trueBody": {
                    "id": 8004,
                    "nodeType": "Block",
                    "src": "23270:140:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8000,
                              "name": "burnAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6447,
                              "src": "23339:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8001,
                              "name": "_rewardsDueXChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7963,
                              "src": "23368:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 7997,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6439,
                                  "src": "23302:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7996,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "23284:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 7998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23284:24:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 7999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "23284:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23284:115:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8003,
                        "nodeType": "ExpressionStatement",
                        "src": "23284:115:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7944,
              "nodeType": "StructuredDocumentation",
              "src": "21536:730:35",
              "text": "@notice Full service withdrawal to be called from authorized cross chain endpoint\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "functionSelector": "40abd8fc",
            "id": 8007,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7959,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7958,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7066,
                  "src": "22518:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "22518:15:35"
              }
            ],
            "name": "withdrawalFullServiceFromXChain",
            "nameLocation": "22280:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7946,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "22329:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22321:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22321:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7948,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "22360:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22347:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7947,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22347:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7950,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "22393:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22385:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22385:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7952,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "22415:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22407:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22407:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7954,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "22440:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22435:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22435:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7956,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "22470:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22462:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22462:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22311:183:35"
            },
            "returnParameters": {
              "id": 7964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7961,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "22559:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22551:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22551:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7963,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "22579:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8007,
                  "src": "22571:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22571:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22550:47:35"
            },
            "scope": 8289,
            "src": "22271:1145:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8076,
              "nodeType": "Block",
              "src": "24565:793:35",
              "statements": [
                {
                  "assignments": [
                    8030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8030,
                      "mutability": "mutable",
                      "name": "_vaultAddr",
                      "nameLocation": "24613:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8076,
                      "src": "24605:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8029,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "24605:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8035,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8031,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "24626:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8033,
                      "indexExpression": {
                        "id": 8032,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8014,
                        "src": "24635:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24626:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                      }
                    },
                    "id": 8034,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vault",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13696,
                    "src": "24626:20:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24605:41:35"
                },
                {
                  "assignments": [
                    8038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8038,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "24756:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8076,
                      "src": "24732:28:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                        "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                      },
                      "typeName": {
                        "id": 8037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8036,
                          "name": "WithdrawalResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13810,
                          "src": "24732:16:35"
                        },
                        "referencedDeclaration": 13810,
                        "src": "24732:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13810_storage_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8047,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8040,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8014,
                        "src": "24786:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8041,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8010,
                        "src": "24804:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8042,
                        "name": "_foreignAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8012,
                        "src": "24826:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 8043,
                        "name": "_trancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8016,
                        "src": "24855:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8044,
                        "name": "_harvestOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8018,
                        "src": "24879:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 8045,
                        "name": "_xChainRepatriation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8022,
                        "src": "24905:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8039,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7847,
                      "src": "24763:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13810_memory_ptr_$",
                        "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                      }
                    },
                    "id": 8046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24763:171:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                      "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24732:202:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8055,
                        "name": "_vaultAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8030,
                        "src": "25086:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8056,
                          "name": "_res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8038,
                          "src": "25110:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8057,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wantAmt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13807,
                        "src": "25110:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8049,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6479,
                                "src": "25030:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8051,
                              "indexExpression": {
                                "id": 8050,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8014,
                                "src": "25039:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25030:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "25030:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8048,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "25012:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25012:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeIncreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2797,
                      "src": "25012:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25012:120:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8059,
                  "nodeType": "ExpressionStatement",
                  "src": "25012:120:35"
                },
                {
                  "expression": {
                    "id": 8069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8060,
                      "name": "_amountUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8025,
                      "src": "25176:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 8065,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8038,
                            "src": "25245:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                              "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                            }
                          },
                          "id": 8066,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wantAmt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13807,
                          "src": "25245:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 8067,
                          "name": "_maxMarketMovement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8020,
                          "src": "25271:18:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8062,
                              "name": "_vaultAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8030,
                              "src": "25196:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8061,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13622,
                            "src": "25189:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$13622_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 8063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25189:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$13622",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 8064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exchangeWantTokenForUSD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13598,
                        "src": "25189:42:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 8068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25189:110:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25176:123:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8070,
                  "nodeType": "ExpressionStatement",
                  "src": "25176:123:35"
                },
                {
                  "expression": {
                    "id": 8074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8071,
                      "name": "_rewardsDueXChain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8027,
                      "src": "25310:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8072,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8038,
                        "src": "25330:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                          "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                        }
                      },
                      "id": 8073,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardsDueXChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13809,
                      "src": "25330:21:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25310:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8075,
                  "nodeType": "ExpressionStatement",
                  "src": "25310:41:35"
                }
              ]
            },
            "documentation": {
              "id": 8008,
              "nodeType": "StructuredDocumentation",
              "src": "23422:824:35",
              "text": "@notice Private function for withdrawing funds from a pool and converting the Want token into USD\n @param _account address of wallet on-chain\n @param _foreignAccount address of wallet cross-chain (that originally made this deposit)\n @param _pid index of pool to deposit into\n @param _trancheId index of tranche\n @param _harvestOnly If true, will only harvest Zorro tokens but not do a withdrawal\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info\n @param _xChainRepatriation Intended for repatriation to another chain\n @return _amountUSD Amount of USD withdrawn\n @return _rewardsDueXChain Amount of ZOR rewards due to the origin (cross chain) user"
            },
            "id": 8077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawalFullService",
            "nameLocation": "24260:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8010,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "24300:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24292:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24292:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8012,
                  "mutability": "mutable",
                  "name": "_foreignAccount",
                  "nameLocation": "24331:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24318:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8011,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24318:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8014,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "24364:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24356:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24356:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8016,
                  "mutability": "mutable",
                  "name": "_trancheId",
                  "nameLocation": "24386:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24378:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24378:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8018,
                  "mutability": "mutable",
                  "name": "_harvestOnly",
                  "nameLocation": "24411:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24406:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8017,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24406:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "24441:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24433:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24433:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8022,
                  "mutability": "mutable",
                  "name": "_xChainRepatriation",
                  "nameLocation": "24474:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24469:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24469:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24282:217:35"
            },
            "returnParameters": {
              "id": 8028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8025,
                  "mutability": "mutable",
                  "name": "_amountUSD",
                  "nameLocation": "24526:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24518:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24518:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8027,
                  "mutability": "mutable",
                  "name": "_rewardsDueXChain",
                  "nameLocation": "24546:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8077,
                  "src": "24538:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24538:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24517:47:35"
            },
            "scope": 8289,
            "src": "24251:1107:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              13943
            ],
            "body": {
              "id": 8158,
              "nodeType": "Block",
              "src": "25939:1037:35",
              "statements": [
                {
                  "assignments": [
                    8092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8092,
                      "mutability": "mutable",
                      "name": "weeksCommitted",
                      "nameLocation": "26003:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8158,
                      "src": "25995:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25995:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8102,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8093,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6487,
                            "src": "26020:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8095,
                          "indexExpression": {
                            "id": 8094,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8080,
                            "src": "26032:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26020:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8098,
                        "indexExpression": {
                          "expression": {
                            "id": 8096,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26042:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26042:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26020:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8100,
                      "indexExpression": {
                        "id": 8099,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8082,
                        "src": "26067:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26020:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "durationCommittedInWeeks",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13678,
                    "src": "26020:96:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25995:121:35"
                },
                {
                  "assignments": [
                    8104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8104,
                      "mutability": "mutable",
                      "name": "enteredVaultAt",
                      "nameLocation": "26134:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8158,
                      "src": "26126:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26126:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8114,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8105,
                            "name": "trancheInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6487,
                            "src": "26151:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref))"
                            }
                          },
                          "id": 8107,
                          "indexExpression": {
                            "id": 8106,
                            "name": "_fromPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8080,
                            "src": "26163:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26151:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct IZorroControllerBase.TrancheInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 8110,
                        "indexExpression": {
                          "expression": {
                            "id": 8108,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "26173:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "26173:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26151:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TrancheInfo_$13683_storage_$dyn_storage",
                          "typeString": "struct IZorroControllerBase.TrancheInfo storage ref[] storage ref"
                        }
                      },
                      "id": 8112,
                      "indexExpression": {
                        "id": 8111,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8082,
                        "src": "26198:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26151:71:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TrancheInfo_$13683_storage",
                        "typeString": "struct IZorroControllerBase.TrancheInfo storage ref"
                      }
                    },
                    "id": 8113,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "enteredVaultAt",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13680,
                    "src": "26151:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26126:111:35"
                },
                {
                  "assignments": [
                    8116,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8116,
                      "mutability": "mutable",
                      "name": "withdrawnUSD",
                      "nameLocation": "26277:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8158,
                      "src": "26269:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26269:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 8127,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26331:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26331:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26355:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8121,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8080,
                        "src": "26371:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8122,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8082,
                        "src": "26393:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26421:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 8124,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "26440:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26472:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8117,
                      "name": "_withdrawalFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8077,
                      "src": "26295:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes memory,uint256,uint256,bool,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 8126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26295:192:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26268:219:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8132,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "26596:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                              "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 8134,
                          "indexExpression": {
                            "id": 8133,
                            "name": "_toPid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8084,
                            "src": "26605:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26596:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                            "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                          }
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13696,
                        "src": "26596:22:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8136,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8116,
                        "src": "26632:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8129,
                            "name": "defaultStablecoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6441,
                            "src": "26551:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8128,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "26533:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26533:36:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "26533:49:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26533:121:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8138,
                  "nodeType": "ExpressionStatement",
                  "src": "26533:121:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8140,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8084,
                        "src": "26719:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26739:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26739:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 8143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26763:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 8144,
                        "name": "withdrawnUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8116,
                        "src": "26779:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8145,
                        "name": "weeksCommitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8092,
                        "src": "26805:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8146,
                        "name": "enteredVaultAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8104,
                        "src": "26833:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8147,
                        "name": "_maxMarketMovement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "26861:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8139,
                      "name": "_depositFullService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "26686:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26686:203:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "ExpressionStatement",
                  "src": "26686:203:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "26924:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26924:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8153,
                        "name": "_fromPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8080,
                        "src": "26936:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8154,
                        "name": "_fromTrancheId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8082,
                        "src": "26946:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8155,
                        "name": "_toPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8084,
                        "src": "26962:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8150,
                      "name": "TransferInvestment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13842,
                      "src": "26905:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26905:64:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8157,
                  "nodeType": "EmitStatement",
                  "src": "26900:69:35"
                }
              ]
            },
            "documentation": {
              "id": 8078,
              "nodeType": "StructuredDocumentation",
              "src": "25364:398:35",
              "text": "@notice Transfer all assets from a tranche in one vault to a new vault (works on-chain only)\n @param _fromPid index of pool FROM\n @param _fromTrancheId index of tranche FROM\n @param _toPid index of pool TO\n @param _maxMarketMovement factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info"
            },
            "functionSelector": "7e37c769",
            "id": 8159,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8089,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8088,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "25926:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "25926:12:35"
              }
            ],
            "name": "transferInvestment",
            "nameLocation": "25776:18:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8080,
                  "mutability": "mutable",
                  "name": "_fromPid",
                  "nameLocation": "25812:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "25804:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25804:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8082,
                  "mutability": "mutable",
                  "name": "_fromTrancheId",
                  "nameLocation": "25838:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "25830:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25830:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8084,
                  "mutability": "mutable",
                  "name": "_toPid",
                  "nameLocation": "25870:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "25862:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25862:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "_maxMarketMovement",
                  "nameLocation": "25894:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8159,
                  "src": "25886:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25886:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25794:124:35"
            },
            "returnParameters": {
              "id": 8090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25939:0:35"
            },
            "scope": 8289,
            "src": "25767:1209:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13948
            ],
            "body": {
              "id": 8229,
              "nodeType": "Block",
              "src": "27142:613:35",
              "statements": [
                {
                  "assignments": [
                    8168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8168,
                      "mutability": "mutable",
                      "name": "numTranches",
                      "nameLocation": "27243:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8229,
                      "src": "27235:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27235:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8170,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8162,
                        "src": "27271:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 8171,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "27277:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "27277:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8169,
                      "name": "trancheLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6693,
                      "src": "27257:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 8173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27257:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27235:53:35"
                },
                {
                  "body": {
                    "id": 8195,
                    "nodeType": "Block",
                    "src": "27346:75:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8186,
                              "name": "_pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8162,
                              "src": "27370:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 8187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "27376:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27376:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 8189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27388:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "id": 8190,
                              "name": "tid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8176,
                              "src": "27392:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27397:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 8192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27404:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 8185,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7847,
                            "src": "27360:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_bool_$_t_bool_$returns$_t_struct$_WithdrawalResult_$13810_memory_ptr_$",
                              "typeString": "function (uint256,address,bytes memory,uint256,bool,bool) returns (struct IZorroControllerInvestment.WithdrawalResult memory)"
                            }
                          },
                          "id": 8193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27360:50:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalResult_$13810_memory_ptr",
                            "typeString": "struct IZorroControllerInvestment.WithdrawalResult memory"
                          }
                        },
                        "id": 8194,
                        "nodeType": "ExpressionStatement",
                        "src": "27360:50:35"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8179,
                      "name": "tid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8176,
                      "src": "27320:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8180,
                      "name": "numTranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8168,
                      "src": "27326:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27320:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8196,
                  "initializationExpression": {
                    "assignments": [
                      8176
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8176,
                        "mutability": "mutable",
                        "name": "tid",
                        "nameLocation": "27311:3:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 8196,
                        "src": "27303:11:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27303:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8178,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27317:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27303:15:35"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "27339:5:35",
                      "subExpression": {
                        "id": 8182,
                        "name": "tid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8176,
                        "src": "27341:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8184,
                    "nodeType": "ExpressionStatement",
                    "src": "27339:5:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "27298:123:35"
                },
                {
                  "assignments": [
                    8198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8198,
                      "mutability": "mutable",
                      "name": "_wantBal",
                      "nameLocation": "27481:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 8229,
                      "src": "27473:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27473:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8211,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "27562:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZorroControllerInvestment_$8289",
                              "typeString": "contract ZorroControllerInvestment"
                            }
                          ],
                          "id": 8207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27554:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27554:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27554:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 8200,
                                "name": "poolInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6479,
                                "src": "27510:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                  "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                }
                              },
                              "id": 8202,
                              "indexExpression": {
                                "id": 8201,
                                "name": "_pid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8162,
                                "src": "27519:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27510:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                              }
                            },
                            "id": 8203,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "want",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13686,
                            "src": "27510:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          ],
                          "id": 8199,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "27492:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27492:38:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2574,
                      "src": "27492:48:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 8210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27492:85:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27473:104:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8212,
                      "name": "_wantBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8198,
                      "src": "27591:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27602:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "27591:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8228,
                  "nodeType": "IfStatement",
                  "src": "27587:162:35",
                  "trueBody": {
                    "id": 8227,
                    "nodeType": "Block",
                    "src": "27605:144:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 8222,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "27688:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27688:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8224,
                              "name": "_wantBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8198,
                              "src": "27716:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8216,
                                      "name": "poolInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6479,
                                      "src": "27637:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$13697_storage_$dyn_storage",
                                        "typeString": "struct IZorroControllerBase.PoolInfo storage ref[] storage ref"
                                      }
                                    },
                                    "id": 8218,
                                    "indexExpression": {
                                      "id": 8217,
                                      "name": "_pid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8162,
                                      "src": "27646:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "27637:14:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$13697_storage",
                                      "typeString": "struct IZorroControllerBase.PoolInfo storage ref"
                                    }
                                  },
                                  "id": 8219,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "want",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13686,
                                  "src": "27637:19:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                ],
                                "id": 8215,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2635,
                                "src": "27619:17:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 8220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27619:38:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 8221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2691,
                            "src": "27619:51:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                              "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                            }
                          },
                          "id": 8225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27619:119:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8226,
                        "nodeType": "ExpressionStatement",
                        "src": "27619:119:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8160,
              "nodeType": "StructuredDocumentation",
              "src": "26982:100:35",
              "text": "@notice Withdraw the maximum number of Want tokens from a pool\n @param _pid index of pool"
            },
            "functionSelector": "958e2d31",
            "id": 8230,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8164,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1938,
                  "src": "27129:12:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "27129:12:35"
              }
            ],
            "name": "withdrawAll",
            "nameLocation": "27096:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8162,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "27116:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8230,
                  "src": "27108:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27108:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27107:14:35"
            },
            "returnParameters": {
              "id": 8166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27142:0:35"
            },
            "scope": 8289,
            "src": "27087:668:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13955
            ],
            "body": {
              "id": 8259,
              "nodeType": "Block",
              "src": "28144:388:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8240,
                      "name": "chainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6471,
                      "src": "28201:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 8241,
                      "name": "homeChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6473,
                      "src": "28212:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28201:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8257,
                    "nodeType": "Block",
                    "src": "28388:138:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8253,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8235,
                              "src": "28489:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8254,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8233,
                              "src": "28503:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8250,
                                  "name": "ZORRO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6439,
                                  "src": "28477:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8249,
                                "name": "IZorro",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13666,
                                "src": "28470:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IZorro_$13666_$",
                                  "typeString": "type(contract IZorro)"
                                }
                              },
                              "id": 8251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "28470:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IZorro_$13666",
                                "typeString": "contract IZorro"
                              }
                            },
                            "id": 8252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13658,
                            "src": "28470:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28470:45:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8256,
                        "nodeType": "ExpressionStatement",
                        "src": "28470:45:35"
                      }
                    ]
                  },
                  "id": 8258,
                  "nodeType": "IfStatement",
                  "src": "28197:329:35",
                  "trueBody": {
                    "id": 8248,
                    "nodeType": "Block",
                    "src": "28225:157:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8244,
                              "name": "_rewardsDue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8233,
                              "src": "28345:11:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8245,
                              "name": "_destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8235,
                              "src": "28358:12:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8243,
                            "name": "_fetchFundsFromPublicPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6964,
                            "src": "28319:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 8246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28319:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8247,
                        "nodeType": "ExpressionStatement",
                        "src": "28319:52:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8231,
              "nodeType": "StructuredDocumentation",
              "src": "27799:227:35",
              "text": "@notice Gets rewards and sends to the recipient of a cross chain withdrawal\n @param _rewardsDue The amount of rewards that need to be fetched and sent to the wallet\n @param _destination Wallet to send funds to"
            },
            "functionSelector": "1b8fb692",
            "id": 8260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8237,
                  "name": "onlyZorroXChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7066,
                  "src": "28124:15:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "28124:15:35"
              }
            ],
            "name": "repatriateRewards",
            "nameLocation": "28040:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8233,
                  "mutability": "mutable",
                  "name": "_rewardsDue",
                  "nameLocation": "28066:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "28058:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28058:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8235,
                  "mutability": "mutable",
                  "name": "_destination",
                  "nameLocation": "28087:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "28079:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28079:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28057:43:35"
            },
            "returnParameters": {
              "id": 8239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28144:0:35"
            },
            "scope": 8289,
            "src": "28031:501:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13962
            ],
            "body": {
              "id": 8287,
              "nodeType": "Block",
              "src": "29074:404:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8276,
                        "name": "burnAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6447,
                        "src": "29264:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8277,
                          "name": "_totalMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8263,
                          "src": "29289:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8278,
                          "name": "_totalSlashed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8265,
                          "src": "29304:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "29289:28:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8273,
                            "name": "ZORRO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6439,
                            "src": "29231:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8272,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "29213:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2635_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 8274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29213:24:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$2635",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 8275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2691,
                      "src": "29213:37:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2635_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2635_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 8280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29213:114:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8281,
                  "nodeType": "ExpressionStatement",
                  "src": "29213:114:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8283,
                        "name": "_totalSlashed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8265,
                        "src": "29438:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8284,
                        "name": "zorroStakingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6445,
                        "src": "29453:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8282,
                      "name": "_fetchFundsFromPublicPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6964,
                      "src": "29412:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 8285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29412:59:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8286,
                  "nodeType": "ExpressionStatement",
                  "src": "29412:59:35"
                }
              ]
            },
            "documentation": {
              "id": 8261,
              "nodeType": "StructuredDocumentation",
              "src": "28538:374:35",
              "text": "@notice Called by oracle to account for ZOR rewards that were minted or slashed on other chains\n @dev Caller should call \"reset\" functions so that rewards aren't double-burned/allocated\n @param _totalMinted Total ZOR rewards minted across other chains at this moment\n @param _totalSlashed Total ZOR rewards slashed across other chains at this moment"
            },
            "functionSelector": "c13260a5",
            "id": 8288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8268,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8267,
                  "name": "onlyAllowZorroControllerOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6410,
                  "src": "29017:30:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29017:30:35"
              },
              {
                "id": 8270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8269,
                  "name": "onlyHomeChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6425,
                  "src": "29056:13:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "29056:13:35"
              }
            ],
            "name": "handleAccXChainRewards",
            "nameLocation": "28926:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "_totalMinted",
                  "nameLocation": "28957:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8288,
                  "src": "28949:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28949:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8265,
                  "mutability": "mutable",
                  "name": "_totalSlashed",
                  "nameLocation": "28979:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 8288,
                  "src": "28971:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28971:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28948:45:35"
            },
            "returnParameters": {
              "id": 8271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29074:0:35"
            },
            "scope": 8289,
            "src": "28917:561:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8290,
        "src": "316:29164:35",
        "usedErrors": []
      }
    ],
    "src": "33:29448:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-23T16:17:51.133Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "params": {
          "_pid": "index of pool",
          "_wantAmt": "how much Want token to deposit",
          "_weeksCommitted": "how many weeks the user is committing to on this vault"
        }
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "params": {
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "params": {
          "_account": "address of user on-chain",
          "_foreignAccount": "the cross chain wallet that initiated this call, if applicable.",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_valueUSD": "value in USD (in ether units) to deposit",
          "_vaultEnteredAt": "date that the vault was entered at",
          "_weeksCommitted": "how many weeks to commit to the Pool (can be 0 or any uint)"
        }
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "details": "Caller should call \"reset\" functions so that rewards aren't double-burned/allocated",
        "params": {
          "_totalMinted": "Total ZOR rewards minted across other chains at this moment",
          "_totalSlashed": "Total ZOR rewards slashed across other chains at this moment"
        }
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "details": "Does not permit usage for the Zorro token",
        "params": {
          "_amount": "token quantity",
          "_token": "ERC20 token address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "poolLength()": {
        "returns": {
          "_0": "Number of pools"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repatriateRewards(uint256,address)": {
        "params": {
          "_destination": "Wallet to send funds to",
          "_rewardsDue": "The amount of rewards that need to be fetched and sent to the wallet"
        }
      },
      "resetSyntheticRewardsMinted()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "resetSyntheticRewardsSlashed()": {
        "details": "To be called by Oracle only, when batch burning synthetic minted rewards"
      },
      "setBurnAddress(address)": {
        "params": {
          "_burnAddress": "The burn address on this chain"
        }
      },
      "setIsTimeMultiplierActive(bool)": {
        "params": {
          "_isActive": "Whether it shall be active. If false, timemultiplier will be 1."
        }
      },
      "setKeyAddresses(address,address)": {
        "params": {
          "_ZORRO": "ZOR token address",
          "_defaultStablecoin": "Main stablecoin address (USDC)"
        }
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "details": "NOTE: Must enter all parameters or existing ones will be overwritten!",
        "params": {
          "_baseRewardRateBasisPoints": "Base reward rate factor, in bp",
          "_blocksPerDay": "# of blocks per day for this chain",
          "_chainMultiplier": "Rewards multiplier factor to be applied to this chain",
          "_dailyDistFactors": "Array of [ZORRODailyDistributionFactorBasisPointsMin, ZORRODailyDistributionFactorBasisPointsMax]"
        }
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "params": {
          "_targetTVLCaptureBasisPoints": "Percent of market desired to be captured, in bp. 333 = 3.33%. ONLY to be set on the home chain"
        }
      },
      "setXChainParams(uint256,uint256,address)": {
        "params": {
          "_chainId": "The ind of the chain that this contract is on",
          "_homeChainId": "The chain ID of the home chain",
          "_homeChainZorroController": "The address of the home chain controller"
        }
      },
      "setZorroContracts(address,address)": {
        "params": {
          "_publicPool": "Public pool address (where ZOR minted)",
          "_zorroStakingVault": "Zorro single staking vault address"
        }
      },
      "setZorroControllerOracle(address)": {
        "params": {
          "_zorroControllerOracle": "Address of Chainlink oracle that can interact with this contract"
        }
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Values to be provided by Oracle. Perferable to run daily",
        "params": {
          "_ZorroTotalVaultTVLUSD": "USD value of all TVL locked into the Zorro protocol, across all chains",
          "_publicPoolZORBalance": "Number of ZOR tokens remaining in public pool on home chain",
          "_targetTVLCaptureBasisPoints": "% desired capture of total market TVL, measured in basis points",
          "_totalChainMultipliers": "Sum total of all chain multipliers for each chain",
          "_totalMarketTVLUSD": "Total DeFi market TVL across all chains (measured in USD)"
        }
      },
      "setZorroXChainEndpoint(address)": {
        "params": {
          "_contract": "Contract address of endpoint"
        }
      },
      "trancheLength(uint256,address)": {
        "params": {
          "_pid": "Index of pool",
          "_user": "wallet address of user"
        },
        "returns": {
          "_0": "Number of tranches"
        }
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "params": {
          "_fromPid": "index of pool FROM",
          "_fromTrancheId": "index of tranche FROM",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_toPid": "index of pool TO"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePool(uint256)": {
        "params": {
          "_pid": "index of pool"
        },
        "returns": {
          "mintedZOR": "Amount of ZOR rewards minted (useful for cross chain)"
        }
      },
      "withdraw(uint256,uint256,bool)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_pid": "index of pool",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount of Want token withdrawn"
        }
      },
      "withdrawAll(uint256)": {
        "params": {
          "_pid": "index of pool"
        }
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "params": {
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_0": "Amount (in USD) returned"
        }
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "params": {
          "_account": "address of wallet on-chain",
          "_foreignAccount": "address of wallet cross-chain (that originally made this deposit)",
          "_harvestOnly": "If true, will only harvest Zorro tokens but not do a withdrawal",
          "_maxMarketMovement": "factor to account for max market movement/slippage. The definition varies by Vault, so consult the associated Vault contract for info",
          "_pid": "index of pool to deposit into",
          "_trancheId": "index of tranche"
        },
        "returns": {
          "_amountUSD": "Amount of USD withdrawn",
          "_rewardsDueXChain": "Amount of ZOR rewards due to the origin (cross chain) user"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256,uint256,uint256)": {
        "notice": "Deposit Want tokens to associated Vault"
      },
      "depositFullService(uint256,uint256,uint256,uint256)": {
        "notice": "Deposits funds in a full service manner (performs autoswaps and obtains Want tokens)"
      },
      "depositFullServiceFromXChain(uint256,address,bytes,uint256,uint256,uint256,uint256)": {
        "notice": "Full service deposit function to be called by ZorroControllerXChain only."
      },
      "handleAccXChainRewards(uint256,uint256)": {
        "notice": "Called by oracle to account for ZOR rewards that were minted or slashed on other chains"
      },
      "inCaseTokensGetStuck(address,uint256)": {
        "notice": "For owner to recover ERC20 tokens on this contract if stuck"
      },
      "poolLength()": {
        "notice": "Number of pools in the Zorro protocol"
      },
      "repatriateRewards(uint256,address)": {
        "notice": "Gets rewards and sends to the recipient of a cross chain withdrawal"
      },
      "resetSyntheticRewardsMinted()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "resetSyntheticRewardsSlashed()": {
        "notice": "Resets accumulated synthentic rewards minted"
      },
      "setBurnAddress(address)": {
        "notice": "Setter: Burn address"
      },
      "setIsTimeMultiplierActive(bool)": {
        "notice": "Setter: Set time multiplier"
      },
      "setKeyAddresses(address,address)": {
        "notice": "Setter: Set key token addresses"
      },
      "setRewardsParams(uint256,uint256[],uint256,uint256)": {
        "notice": "Setter: Reward params (See Tokenomics paper for more details)"
      },
      "setStartBlock(uint256)": {
        "notice": "Setter: Start block for rewards"
      },
      "setTargetTVLCaptureBasisPoints(uint256)": {
        "notice": "Setter: TVL capture (See Tokenomics paper)"
      },
      "setXChainParams(uint256,uint256,address)": {
        "notice": "Setter: Cross chain params"
      },
      "setZorroContracts(address,address)": {
        "notice": "Setter: Set key ZOR contract addresses"
      },
      "setZorroControllerOracle(address)": {
        "notice": "Setter: Set Zorro Controller Oracle"
      },
      "setZorroPerBlock(uint256,uint256,uint256,uint256,uint256)": {
        "notice": "Set the number of Zorro to emit per block based on current market parameters"
      },
      "setZorroXChainEndpoint(address)": {
        "notice": "Setter: Cross chain endpoint"
      },
      "trancheLength(uint256,address)": {
        "notice": "Number of tranches invested by a given user into a given pool"
      },
      "transferInvestment(uint256,uint256,uint256,uint256)": {
        "notice": "Transfer all assets from a tranche in one vault to a new vault (works on-chain only)"
      },
      "updatePool(uint256)": {
        "notice": "Update reward variables of the given pool to be up-to-date."
      },
      "withdraw(uint256,uint256,bool)": {
        "notice": "Fully withdraw Want tokens from underlying Vault."
      },
      "withdrawAll(uint256)": {
        "notice": "Withdraw the maximum number of Want tokens from a pool"
      },
      "withdrawalFullService(uint256,uint256,bool,uint256)": {
        "notice": "Withdraws funds from a pool and converts the Want token into USD"
      },
      "withdrawalFullServiceFromXChain(address,bytes,uint256,uint256,bool,uint256)": {
        "notice": "Full service withdrawal to be called from authorized cross chain endpoint"
      }
    },
    "version": 1
  }
}